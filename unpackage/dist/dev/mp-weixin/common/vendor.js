(global["webpackJsonp"] = global["webpackJsonp"] || []).push([["common/vendor"],{

/***/ 1:
/*!*********************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var objectKeys = ['qy', 'env', 'error', 'version', 'lanDebug', 'cloud', 'serviceMarket', 'router', 'worklet', '__webpack_require_UNI_MP_PLUGIN__'];
var singlePageDisableKey = ['lanDebug', 'router', 'worklet'];
var target = typeof globalThis !== 'undefined' ? globalThis : function () {
  return this;
}();
var key = ['w', 'x'].join('');
var oldWx = target[key];
var launchOption = oldWx.getLaunchOptionsSync ? oldWx.getLaunchOptionsSync() : null;
function isWxKey(key) {
  if (launchOption && launchOption.scene === 1154 && singlePageDisableKey.includes(key)) {
    return false;
  }
  return objectKeys.indexOf(key) > -1 || typeof oldWx[key] === 'function';
}
function initWx() {
  var newWx = {};
  for (var _key in oldWx) {
    if (isWxKey(_key)) {
      // TODO wrapper function
      newWx[_key] = oldWx[_key];
    }
  }
  return newWx;
}
target[key] = initWx();
if (!target[key].canIUse('getAppBaseInfo')) {
  target[key].getAppBaseInfo = target[key].getSystemInfoSync;
}
if (!target[key].canIUse('getWindowInfo')) {
  target[key].getWindowInfo = target[key].getSystemInfoSync;
}
if (!target[key].canIUse('getDeviceInfo')) {
  target[key].getDeviceInfo = target[key].getSystemInfoSync;
}
var _default = target[key];
exports.default = _default;

/***/ }),

/***/ 10:
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableRest, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 11:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/defineProperty.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ 12);
function _defineProperty(obj, key, value) {
  key = toPropertyKey(key);
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
module.exports = _defineProperty, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 12:
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPropertyKey.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 13)["default"];
var toPrimitive = __webpack_require__(/*! ./toPrimitive.js */ 14);
function toPropertyKey(t) {
  var i = toPrimitive(t, "string");
  return "symbol" == _typeof(i) ? i : i + "";
}
module.exports = toPropertyKey, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 13:
/*!*******************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/typeof.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _typeof(o) {
  "@babel/helpers - typeof";

  return (module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports), _typeof(o);
}
module.exports = _typeof, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 14:
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toPrimitive.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 13)["default"];
function toPrimitive(t, r) {
  if ("object" != _typeof(t) || !t) return t;
  var e = t[Symbol.toPrimitive];
  if (void 0 !== e) {
    var i = e.call(t, r || "default");
    if ("object" != _typeof(i)) return i;
    throw new TypeError("@@toPrimitive must return a primitive value.");
  }
  return ("string" === r ? String : Number)(t);
}
module.exports = toPrimitive, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 15:
/*!**********************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/construct.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var setPrototypeOf = __webpack_require__(/*! ./setPrototypeOf.js */ 16);
var isNativeReflectConstruct = __webpack_require__(/*! ./isNativeReflectConstruct.js */ 17);
function _construct(t, e, r) {
  if (isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
  var o = [null];
  o.push.apply(o, e);
  var p = new (t.bind.apply(t, o))();
  return r && setPrototypeOf(p, r.prototype), p;
}
module.exports = _construct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 153:
/*!***************************************!*\
  !*** ./node_modules/lodash/lodash.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, module) {var __WEBPACK_AMD_DEFINE_RESULT__;/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */
;(function() {

  /** Used as a safe reference for `undefined` in pre-ES5 environments. */
  var undefined;

  /** Used as the semantic version number. */
  var VERSION = '4.17.21';

  /** Used as the size to enable large array optimizations. */
  var LARGE_ARRAY_SIZE = 200;

  /** Error message constants. */
  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',
      FUNC_ERROR_TEXT = 'Expected a function',
      INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';

  /** Used to stand-in for `undefined` hash values. */
  var HASH_UNDEFINED = '__lodash_hash_undefined__';

  /** Used as the maximum memoize cache size. */
  var MAX_MEMOIZE_SIZE = 500;

  /** Used as the internal argument placeholder. */
  var PLACEHOLDER = '__lodash_placeholder__';

  /** Used to compose bitmasks for cloning. */
  var CLONE_DEEP_FLAG = 1,
      CLONE_FLAT_FLAG = 2,
      CLONE_SYMBOLS_FLAG = 4;

  /** Used to compose bitmasks for value comparisons. */
  var COMPARE_PARTIAL_FLAG = 1,
      COMPARE_UNORDERED_FLAG = 2;

  /** Used to compose bitmasks for function metadata. */
  var WRAP_BIND_FLAG = 1,
      WRAP_BIND_KEY_FLAG = 2,
      WRAP_CURRY_BOUND_FLAG = 4,
      WRAP_CURRY_FLAG = 8,
      WRAP_CURRY_RIGHT_FLAG = 16,
      WRAP_PARTIAL_FLAG = 32,
      WRAP_PARTIAL_RIGHT_FLAG = 64,
      WRAP_ARY_FLAG = 128,
      WRAP_REARG_FLAG = 256,
      WRAP_FLIP_FLAG = 512;

  /** Used as default options for `_.truncate`. */
  var DEFAULT_TRUNC_LENGTH = 30,
      DEFAULT_TRUNC_OMISSION = '...';

  /** Used to detect hot functions by number of calls within a span of milliseconds. */
  var HOT_COUNT = 800,
      HOT_SPAN = 16;

  /** Used to indicate the type of lazy iteratees. */
  var LAZY_FILTER_FLAG = 1,
      LAZY_MAP_FLAG = 2,
      LAZY_WHILE_FLAG = 3;

  /** Used as references for various `Number` constants. */
  var INFINITY = 1 / 0,
      MAX_SAFE_INTEGER = 9007199254740991,
      MAX_INTEGER = 1.7976931348623157e+308,
      NAN = 0 / 0;

  /** Used as references for the maximum length and index of an array. */
  var MAX_ARRAY_LENGTH = 4294967295,
      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,
      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;

  /** Used to associate wrap methods with their bit flags. */
  var wrapFlags = [
    ['ary', WRAP_ARY_FLAG],
    ['bind', WRAP_BIND_FLAG],
    ['bindKey', WRAP_BIND_KEY_FLAG],
    ['curry', WRAP_CURRY_FLAG],
    ['curryRight', WRAP_CURRY_RIGHT_FLAG],
    ['flip', WRAP_FLIP_FLAG],
    ['partial', WRAP_PARTIAL_FLAG],
    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],
    ['rearg', WRAP_REARG_FLAG]
  ];

  /** `Object#toString` result references. */
  var argsTag = '[object Arguments]',
      arrayTag = '[object Array]',
      asyncTag = '[object AsyncFunction]',
      boolTag = '[object Boolean]',
      dateTag = '[object Date]',
      domExcTag = '[object DOMException]',
      errorTag = '[object Error]',
      funcTag = '[object Function]',
      genTag = '[object GeneratorFunction]',
      mapTag = '[object Map]',
      numberTag = '[object Number]',
      nullTag = '[object Null]',
      objectTag = '[object Object]',
      promiseTag = '[object Promise]',
      proxyTag = '[object Proxy]',
      regexpTag = '[object RegExp]',
      setTag = '[object Set]',
      stringTag = '[object String]',
      symbolTag = '[object Symbol]',
      undefinedTag = '[object Undefined]',
      weakMapTag = '[object WeakMap]',
      weakSetTag = '[object WeakSet]';

  var arrayBufferTag = '[object ArrayBuffer]',
      dataViewTag = '[object DataView]',
      float32Tag = '[object Float32Array]',
      float64Tag = '[object Float64Array]',
      int8Tag = '[object Int8Array]',
      int16Tag = '[object Int16Array]',
      int32Tag = '[object Int32Array]',
      uint8Tag = '[object Uint8Array]',
      uint8ClampedTag = '[object Uint8ClampedArray]',
      uint16Tag = '[object Uint16Array]',
      uint32Tag = '[object Uint32Array]';

  /** Used to match empty string literals in compiled template source. */
  var reEmptyStringLeading = /\b__p \+= '';/g,
      reEmptyStringMiddle = /\b(__p \+=) '' \+/g,
      reEmptyStringTrailing = /(__e\(.*?\)|\b__t\)) \+\n'';/g;

  /** Used to match HTML entities and HTML characters. */
  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,
      reUnescapedHtml = /[&<>"']/g,
      reHasEscapedHtml = RegExp(reEscapedHtml.source),
      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);

  /** Used to match template delimiters. */
  var reEscape = /<%-([\s\S]+?)%>/g,
      reEvaluate = /<%([\s\S]+?)%>/g,
      reInterpolate = /<%=([\s\S]+?)%>/g;

  /** Used to match property names within property paths. */
  var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
      reIsPlainProp = /^\w*$/,
      rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

  /**
   * Used to match `RegExp`
   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
   */
  var reRegExpChar = /[\\^$.*+?()[\]{}|]/g,
      reHasRegExpChar = RegExp(reRegExpChar.source);

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/;

  /** Used to match a single whitespace character. */
  var reWhitespace = /\s/;

  /** Used to match wrap detail comments. */
  var reWrapComment = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
      reWrapDetails = /\{\n\/\* \[wrapped with (.+)\] \*/,
      reSplitDetails = /,? & /;

  /** Used to match words composed of alphanumeric characters. */
  var reAsciiWord = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;

  /**
   * Used to validate the `validate` option in `_.template` variable.
   *
   * Forbids characters which could potentially change the meaning of the function argument definition:
   * - "()," (modification of function parameters)
   * - "=" (default value)
   * - "[]{}" (destructuring of function parameters)
   * - "/" (beginning of a comment)
   * - whitespace
   */
  var reForbiddenIdentifierChars = /[()=,{}\[\]\/\s]/;

  /** Used to match backslashes in property paths. */
  var reEscapeChar = /\\(\\)?/g;

  /**
   * Used to match
   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).
   */
  var reEsTemplate = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g;

  /** Used to match `RegExp` flags from their coerced string values. */
  var reFlags = /\w*$/;

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i;

  /** Used to detect host constructors (Safari). */
  var reIsHostCtor = /^\[object .+?Constructor\]$/;

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i;

  /** Used to detect unsigned integer values. */
  var reIsUint = /^(?:0|[1-9]\d*)$/;

  /** Used to match Latin Unicode letters (excluding mathematical operators). */
  var reLatin = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g;

  /** Used to ensure capturing order of template delimiters. */
  var reNoMatch = /($^)/;

  /** Used to match unescaped characters in compiled string literals. */
  var reUnescapedString = /['\n\r\u2028\u2029\\]/g;

  /** Used to compose unicode character classes. */
  var rsAstralRange = '\\ud800-\\udfff',
      rsComboMarksRange = '\\u0300-\\u036f',
      reComboHalfMarksRange = '\\ufe20-\\ufe2f',
      rsComboSymbolsRange = '\\u20d0-\\u20ff',
      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,
      rsDingbatRange = '\\u2700-\\u27bf',
      rsLowerRange = 'a-z\\xdf-\\xf6\\xf8-\\xff',
      rsMathOpRange = '\\xac\\xb1\\xd7\\xf7',
      rsNonCharRange = '\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf',
      rsPunctuationRange = '\\u2000-\\u206f',
      rsSpaceRange = ' \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000',
      rsUpperRange = 'A-Z\\xc0-\\xd6\\xd8-\\xde',
      rsVarRange = '\\ufe0e\\ufe0f',
      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;

  /** Used to compose unicode capture groups. */
  var rsApos = "['\u2019]",
      rsAstral = '[' + rsAstralRange + ']',
      rsBreak = '[' + rsBreakRange + ']',
      rsCombo = '[' + rsComboRange + ']',
      rsDigits = '\\d+',
      rsDingbat = '[' + rsDingbatRange + ']',
      rsLower = '[' + rsLowerRange + ']',
      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',
      rsFitz = '\\ud83c[\\udffb-\\udfff]',
      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',
      rsNonAstral = '[^' + rsAstralRange + ']',
      rsRegional = '(?:\\ud83c[\\udde6-\\uddff]){2}',
      rsSurrPair = '[\\ud800-\\udbff][\\udc00-\\udfff]',
      rsUpper = '[' + rsUpperRange + ']',
      rsZWJ = '\\u200d';

  /** Used to compose unicode regexes. */
  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',
      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',
      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',
      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',
      reOptMod = rsModifier + '?',
      rsOptVar = '[' + rsVarRange + ']?',
      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',
      rsOrdLower = '\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])',
      rsOrdUpper = '\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])',
      rsSeq = rsOptVar + reOptMod + rsOptJoin,
      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,
      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';

  /** Used to match apostrophes. */
  var reApos = RegExp(rsApos, 'g');

  /**
   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and
   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).
   */
  var reComboMark = RegExp(rsCombo, 'g');

  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */
  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');

  /** Used to match complex or compound words. */
  var reUnicodeWord = RegExp([
    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',
    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',
    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,
    rsUpper + '+' + rsOptContrUpper,
    rsOrdUpper,
    rsOrdLower,
    rsDigits,
    rsEmoji
  ].join('|'), 'g');

  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */
  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');

  /** Used to detect strings that need a more robust regexp to match words. */
  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;

  /** Used to assign default `context` object properties. */
  var contextProps = [
    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',
    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',
    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',
    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',
    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'
  ];

  /** Used to make template sourceURLs easier to identify. */
  var templateCounter = -1;

  /** Used to identify `toStringTag` values of typed arrays. */
  var typedArrayTags = {};
  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =
  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =
  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =
  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =
  typedArrayTags[uint32Tag] = true;
  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =
  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =
  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =
  typedArrayTags[errorTag] = typedArrayTags[funcTag] =
  typedArrayTags[mapTag] = typedArrayTags[numberTag] =
  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =
  typedArrayTags[setTag] = typedArrayTags[stringTag] =
  typedArrayTags[weakMapTag] = false;

  /** Used to identify `toStringTag` values supported by `_.clone`. */
  var cloneableTags = {};
  cloneableTags[argsTag] = cloneableTags[arrayTag] =
  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =
  cloneableTags[boolTag] = cloneableTags[dateTag] =
  cloneableTags[float32Tag] = cloneableTags[float64Tag] =
  cloneableTags[int8Tag] = cloneableTags[int16Tag] =
  cloneableTags[int32Tag] = cloneableTags[mapTag] =
  cloneableTags[numberTag] = cloneableTags[objectTag] =
  cloneableTags[regexpTag] = cloneableTags[setTag] =
  cloneableTags[stringTag] = cloneableTags[symbolTag] =
  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =
  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;
  cloneableTags[errorTag] = cloneableTags[funcTag] =
  cloneableTags[weakMapTag] = false;

  /** Used to map Latin Unicode letters to basic Latin letters. */
  var deburredLetters = {
    // Latin-1 Supplement block.
    '\xc0': 'A',  '\xc1': 'A', '\xc2': 'A', '\xc3': 'A', '\xc4': 'A', '\xc5': 'A',
    '\xe0': 'a',  '\xe1': 'a', '\xe2': 'a', '\xe3': 'a', '\xe4': 'a', '\xe5': 'a',
    '\xc7': 'C',  '\xe7': 'c',
    '\xd0': 'D',  '\xf0': 'd',
    '\xc8': 'E',  '\xc9': 'E', '\xca': 'E', '\xcb': 'E',
    '\xe8': 'e',  '\xe9': 'e', '\xea': 'e', '\xeb': 'e',
    '\xcc': 'I',  '\xcd': 'I', '\xce': 'I', '\xcf': 'I',
    '\xec': 'i',  '\xed': 'i', '\xee': 'i', '\xef': 'i',
    '\xd1': 'N',  '\xf1': 'n',
    '\xd2': 'O',  '\xd3': 'O', '\xd4': 'O', '\xd5': 'O', '\xd6': 'O', '\xd8': 'O',
    '\xf2': 'o',  '\xf3': 'o', '\xf4': 'o', '\xf5': 'o', '\xf6': 'o', '\xf8': 'o',
    '\xd9': 'U',  '\xda': 'U', '\xdb': 'U', '\xdc': 'U',
    '\xf9': 'u',  '\xfa': 'u', '\xfb': 'u', '\xfc': 'u',
    '\xdd': 'Y',  '\xfd': 'y', '\xff': 'y',
    '\xc6': 'Ae', '\xe6': 'ae',
    '\xde': 'Th', '\xfe': 'th',
    '\xdf': 'ss',
    // Latin Extended-A block.
    '\u0100': 'A',  '\u0102': 'A', '\u0104': 'A',
    '\u0101': 'a',  '\u0103': 'a', '\u0105': 'a',
    '\u0106': 'C',  '\u0108': 'C', '\u010a': 'C', '\u010c': 'C',
    '\u0107': 'c',  '\u0109': 'c', '\u010b': 'c', '\u010d': 'c',
    '\u010e': 'D',  '\u0110': 'D', '\u010f': 'd', '\u0111': 'd',
    '\u0112': 'E',  '\u0114': 'E', '\u0116': 'E', '\u0118': 'E', '\u011a': 'E',
    '\u0113': 'e',  '\u0115': 'e', '\u0117': 'e', '\u0119': 'e', '\u011b': 'e',
    '\u011c': 'G',  '\u011e': 'G', '\u0120': 'G', '\u0122': 'G',
    '\u011d': 'g',  '\u011f': 'g', '\u0121': 'g', '\u0123': 'g',
    '\u0124': 'H',  '\u0126': 'H', '\u0125': 'h', '\u0127': 'h',
    '\u0128': 'I',  '\u012a': 'I', '\u012c': 'I', '\u012e': 'I', '\u0130': 'I',
    '\u0129': 'i',  '\u012b': 'i', '\u012d': 'i', '\u012f': 'i', '\u0131': 'i',
    '\u0134': 'J',  '\u0135': 'j',
    '\u0136': 'K',  '\u0137': 'k', '\u0138': 'k',
    '\u0139': 'L',  '\u013b': 'L', '\u013d': 'L', '\u013f': 'L', '\u0141': 'L',
    '\u013a': 'l',  '\u013c': 'l', '\u013e': 'l', '\u0140': 'l', '\u0142': 'l',
    '\u0143': 'N',  '\u0145': 'N', '\u0147': 'N', '\u014a': 'N',
    '\u0144': 'n',  '\u0146': 'n', '\u0148': 'n', '\u014b': 'n',
    '\u014c': 'O',  '\u014e': 'O', '\u0150': 'O',
    '\u014d': 'o',  '\u014f': 'o', '\u0151': 'o',
    '\u0154': 'R',  '\u0156': 'R', '\u0158': 'R',
    '\u0155': 'r',  '\u0157': 'r', '\u0159': 'r',
    '\u015a': 'S',  '\u015c': 'S', '\u015e': 'S', '\u0160': 'S',
    '\u015b': 's',  '\u015d': 's', '\u015f': 's', '\u0161': 's',
    '\u0162': 'T',  '\u0164': 'T', '\u0166': 'T',
    '\u0163': 't',  '\u0165': 't', '\u0167': 't',
    '\u0168': 'U',  '\u016a': 'U', '\u016c': 'U', '\u016e': 'U', '\u0170': 'U', '\u0172': 'U',
    '\u0169': 'u',  '\u016b': 'u', '\u016d': 'u', '\u016f': 'u', '\u0171': 'u', '\u0173': 'u',
    '\u0174': 'W',  '\u0175': 'w',
    '\u0176': 'Y',  '\u0177': 'y', '\u0178': 'Y',
    '\u0179': 'Z',  '\u017b': 'Z', '\u017d': 'Z',
    '\u017a': 'z',  '\u017c': 'z', '\u017e': 'z',
    '\u0132': 'IJ', '\u0133': 'ij',
    '\u0152': 'Oe', '\u0153': 'oe',
    '\u0149': "'n", '\u017f': 's'
  };

  /** Used to map characters to HTML entities. */
  var htmlEscapes = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#39;'
  };

  /** Used to map HTML entities to characters. */
  var htmlUnescapes = {
    '&amp;': '&',
    '&lt;': '<',
    '&gt;': '>',
    '&quot;': '"',
    '&#39;': "'"
  };

  /** Used to escape characters for inclusion in compiled string literals. */
  var stringEscapes = {
    '\\': '\\',
    "'": "'",
    '\n': 'n',
    '\r': 'r',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  /** Built-in method references without a dependency on `root`. */
  var freeParseFloat = parseFloat,
      freeParseInt = parseInt;

  /** Detect free variable `global` from Node.js. */
  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

  /** Used as a reference to the global object. */
  var root = freeGlobal || freeSelf || Function('return this')();

  /** Detect free variable `exports`. */
  var freeExports =  true && exports && !exports.nodeType && exports;

  /** Detect free variable `module`. */
  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;

  /** Detect the popular CommonJS extension `module.exports`. */
  var moduleExports = freeModule && freeModule.exports === freeExports;

  /** Detect free variable `process` from Node.js. */
  var freeProcess = moduleExports && freeGlobal.process;

  /** Used to access faster Node.js helpers. */
  var nodeUtil = (function() {
    try {
      // Use `util.types` for Node.js 10+.
      var types = freeModule && freeModule.require && freeModule.require('util').types;

      if (types) {
        return types;
      }

      // Legacy `process.binding('util')` for Node.js < 10.
      return freeProcess && freeProcess.binding && freeProcess.binding('util');
    } catch (e) {}
  }());

  /* Node.js helper references. */
  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,
      nodeIsDate = nodeUtil && nodeUtil.isDate,
      nodeIsMap = nodeUtil && nodeUtil.isMap,
      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,
      nodeIsSet = nodeUtil && nodeUtil.isSet,
      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;

  /*--------------------------------------------------------------------------*/

  /**
   * A faster alternative to `Function#apply`, this function invokes `func`
   * with the `this` binding of `thisArg` and the arguments of `args`.
   *
   * @private
   * @param {Function} func The function to invoke.
   * @param {*} thisArg The `this` binding of `func`.
   * @param {Array} args The arguments to invoke `func` with.
   * @returns {*} Returns the result of `func`.
   */
  function apply(func, thisArg, args) {
    switch (args.length) {
      case 0: return func.call(thisArg);
      case 1: return func.call(thisArg, args[0]);
      case 2: return func.call(thisArg, args[0], args[1]);
      case 3: return func.call(thisArg, args[0], args[1], args[2]);
    }
    return func.apply(thisArg, args);
  }

  /**
   * A specialized version of `baseAggregator` for arrays.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} setter The function to set `accumulator` values.
   * @param {Function} iteratee The iteratee to transform keys.
   * @param {Object} accumulator The initial aggregated object.
   * @returns {Function} Returns `accumulator`.
   */
  function arrayAggregator(array, setter, iteratee, accumulator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      var value = array[index];
      setter(accumulator, value, iteratee(value), array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.forEach` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEach(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (iteratee(array[index], index, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.forEachRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns `array`.
   */
  function arrayEachRight(array, iteratee) {
    var length = array == null ? 0 : array.length;

    while (length--) {
      if (iteratee(array[length], length, array) === false) {
        break;
      }
    }
    return array;
  }

  /**
   * A specialized version of `_.every` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if all elements pass the predicate check,
   *  else `false`.
   */
  function arrayEvery(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (!predicate(array[index], index, array)) {
        return false;
      }
    }
    return true;
  }

  /**
   * A specialized version of `_.filter` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {Array} Returns the new filtered array.
   */
  function arrayFilter(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (predicate(value, index, array)) {
        result[resIndex++] = value;
      }
    }
    return result;
  }

  /**
   * A specialized version of `_.includes` for arrays without support for
   * specifying an index to search from.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludes(array, value) {
    var length = array == null ? 0 : array.length;
    return !!length && baseIndexOf(array, value, 0) > -1;
  }

  /**
   * This function is like `arrayIncludes` except that it accepts a comparator.
   *
   * @private
   * @param {Array} [array] The array to inspect.
   * @param {*} target The value to search for.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {boolean} Returns `true` if `target` is found, else `false`.
   */
  function arrayIncludesWith(array, value, comparator) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (comparator(value, array[index])) {
        return true;
      }
    }
    return false;
  }

  /**
   * A specialized version of `_.map` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the new mapped array.
   */
  function arrayMap(array, iteratee) {
    var index = -1,
        length = array == null ? 0 : array.length,
        result = Array(length);

    while (++index < length) {
      result[index] = iteratee(array[index], index, array);
    }
    return result;
  }

  /**
   * Appends the elements of `values` to `array`.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {Array} values The values to append.
   * @returns {Array} Returns `array`.
   */
  function arrayPush(array, values) {
    var index = -1,
        length = values.length,
        offset = array.length;

    while (++index < length) {
      array[offset + index] = values[index];
    }
    return array;
  }

  /**
   * A specialized version of `_.reduce` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the first element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduce(array, iteratee, accumulator, initAccum) {
    var index = -1,
        length = array == null ? 0 : array.length;

    if (initAccum && length) {
      accumulator = array[++index];
    }
    while (++index < length) {
      accumulator = iteratee(accumulator, array[index], index, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.reduceRight` for arrays without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} [accumulator] The initial value.
   * @param {boolean} [initAccum] Specify using the last element of `array` as
   *  the initial value.
   * @returns {*} Returns the accumulated value.
   */
  function arrayReduceRight(array, iteratee, accumulator, initAccum) {
    var length = array == null ? 0 : array.length;
    if (initAccum && length) {
      accumulator = array[--length];
    }
    while (length--) {
      accumulator = iteratee(accumulator, array[length], length, array);
    }
    return accumulator;
  }

  /**
   * A specialized version of `_.some` for arrays without support for iteratee
   * shorthands.
   *
   * @private
   * @param {Array} [array] The array to iterate over.
   * @param {Function} predicate The function invoked per iteration.
   * @returns {boolean} Returns `true` if any element passes the predicate check,
   *  else `false`.
   */
  function arraySome(array, predicate) {
    var index = -1,
        length = array == null ? 0 : array.length;

    while (++index < length) {
      if (predicate(array[index], index, array)) {
        return true;
      }
    }
    return false;
  }

  /**
   * Gets the size of an ASCII `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  var asciiSize = baseProperty('length');

  /**
   * Converts an ASCII `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function asciiToArray(string) {
    return string.split('');
  }

  /**
   * Splits an ASCII `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function asciiWords(string) {
    return string.match(reAsciiWord) || [];
  }

  /**
   * The base implementation of methods like `_.findKey` and `_.findLastKey`,
   * without support for iteratee shorthands, which iterates over `collection`
   * using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the found element or its key, else `undefined`.
   */
  function baseFindKey(collection, predicate, eachFunc) {
    var result;
    eachFunc(collection, function(value, key, collection) {
      if (predicate(value, key, collection)) {
        result = key;
        return false;
      }
    });
    return result;
  }

  /**
   * The base implementation of `_.findIndex` and `_.findLastIndex` without
   * support for iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {Function} predicate The function invoked per iteration.
   * @param {number} fromIndex The index to search from.
   * @param {boolean} [fromRight] Specify iterating from right to left.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseFindIndex(array, predicate, fromIndex, fromRight) {
    var length = array.length,
        index = fromIndex + (fromRight ? 1 : -1);

    while ((fromRight ? index-- : ++index < length)) {
      if (predicate(array[index], index, array)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOf(array, value, fromIndex) {
    return value === value
      ? strictIndexOf(array, value, fromIndex)
      : baseFindIndex(array, baseIsNaN, fromIndex);
  }

  /**
   * This function is like `baseIndexOf` except that it accepts a comparator.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @param {Function} comparator The comparator invoked per element.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function baseIndexOfWith(array, value, fromIndex, comparator) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (comparator(array[index], value)) {
        return index;
      }
    }
    return -1;
  }

  /**
   * The base implementation of `_.isNaN` without support for number objects.
   *
   * @private
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
   */
  function baseIsNaN(value) {
    return value !== value;
  }

  /**
   * The base implementation of `_.mean` and `_.meanBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the mean.
   */
  function baseMean(array, iteratee) {
    var length = array == null ? 0 : array.length;
    return length ? (baseSum(array, iteratee) / length) : NAN;
  }

  /**
   * The base implementation of `_.property` without support for deep paths.
   *
   * @private
   * @param {string} key The key of the property to get.
   * @returns {Function} Returns the new accessor function.
   */
  function baseProperty(key) {
    return function(object) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.propertyOf` without support for deep paths.
   *
   * @private
   * @param {Object} object The object to query.
   * @returns {Function} Returns the new accessor function.
   */
  function basePropertyOf(object) {
    return function(key) {
      return object == null ? undefined : object[key];
    };
  }

  /**
   * The base implementation of `_.reduce` and `_.reduceRight`, without support
   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.
   *
   * @private
   * @param {Array|Object} collection The collection to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @param {*} accumulator The initial value.
   * @param {boolean} initAccum Specify using the first or last element of
   *  `collection` as the initial value.
   * @param {Function} eachFunc The function to iterate over `collection`.
   * @returns {*} Returns the accumulated value.
   */
  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {
    eachFunc(collection, function(value, index, collection) {
      accumulator = initAccum
        ? (initAccum = false, value)
        : iteratee(accumulator, value, index, collection);
    });
    return accumulator;
  }

  /**
   * The base implementation of `_.sortBy` which uses `comparer` to define the
   * sort order of `array` and replaces criteria objects with their corresponding
   * values.
   *
   * @private
   * @param {Array} array The array to sort.
   * @param {Function} comparer The function to define sort order.
   * @returns {Array} Returns `array`.
   */
  function baseSortBy(array, comparer) {
    var length = array.length;

    array.sort(comparer);
    while (length--) {
      array[length] = array[length].value;
    }
    return array;
  }

  /**
   * The base implementation of `_.sum` and `_.sumBy` without support for
   * iteratee shorthands.
   *
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {number} Returns the sum.
   */
  function baseSum(array, iteratee) {
    var result,
        index = -1,
        length = array.length;

    while (++index < length) {
      var current = iteratee(array[index]);
      if (current !== undefined) {
        result = result === undefined ? current : (result + current);
      }
    }
    return result;
  }

  /**
   * The base implementation of `_.times` without support for iteratee shorthands
   * or max array length checks.
   *
   * @private
   * @param {number} n The number of times to invoke `iteratee`.
   * @param {Function} iteratee The function invoked per iteration.
   * @returns {Array} Returns the array of results.
   */
  function baseTimes(n, iteratee) {
    var index = -1,
        result = Array(n);

    while (++index < n) {
      result[index] = iteratee(index);
    }
    return result;
  }

  /**
   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array
   * of key-value pairs for `object` corresponding to the property names of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the key-value pairs.
   */
  function baseToPairs(object, props) {
    return arrayMap(props, function(key) {
      return [key, object[key]];
    });
  }

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim(string) {
    return string
      ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')
      : string;
  }

  /**
   * The base implementation of `_.unary` without support for storing metadata.
   *
   * @private
   * @param {Function} func The function to cap arguments for.
   * @returns {Function} Returns the new capped function.
   */
  function baseUnary(func) {
    return function(value) {
      return func(value);
    };
  }

  /**
   * The base implementation of `_.values` and `_.valuesIn` which creates an
   * array of `object` property values corresponding to the property names
   * of `props`.
   *
   * @private
   * @param {Object} object The object to query.
   * @param {Array} props The property names to get values for.
   * @returns {Object} Returns the array of property values.
   */
  function baseValues(object, props) {
    return arrayMap(props, function(key) {
      return object[key];
    });
  }

  /**
   * Checks if a `cache` value for `key` exists.
   *
   * @private
   * @param {Object} cache The cache to query.
   * @param {string} key The key of the entry to check.
   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
   */
  function cacheHas(cache, key) {
    return cache.has(key);
  }

  /**
   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the first unmatched string symbol.
   */
  function charsStartIndex(strSymbols, chrSymbols) {
    var index = -1,
        length = strSymbols.length;

    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol
   * that is not found in the character symbols.
   *
   * @private
   * @param {Array} strSymbols The string symbols to inspect.
   * @param {Array} chrSymbols The character symbols to find.
   * @returns {number} Returns the index of the last unmatched string symbol.
   */
  function charsEndIndex(strSymbols, chrSymbols) {
    var index = strSymbols.length;

    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}
    return index;
  }

  /**
   * Gets the number of `placeholder` occurrences in `array`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} placeholder The placeholder to search for.
   * @returns {number} Returns the placeholder count.
   */
  function countHolders(array, placeholder) {
    var length = array.length,
        result = 0;

    while (length--) {
      if (array[length] === placeholder) {
        ++result;
      }
    }
    return result;
  }

  /**
   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A
   * letters to basic Latin letters.
   *
   * @private
   * @param {string} letter The matched letter to deburr.
   * @returns {string} Returns the deburred letter.
   */
  var deburrLetter = basePropertyOf(deburredLetters);

  /**
   * Used by `_.escape` to convert characters to HTML entities.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  var escapeHtmlChar = basePropertyOf(htmlEscapes);

  /**
   * Used by `_.template` to escape characters for inclusion in compiled string literals.
   *
   * @private
   * @param {string} chr The matched character to escape.
   * @returns {string} Returns the escaped character.
   */
  function escapeStringChar(chr) {
    return '\\' + stringEscapes[chr];
  }

  /**
   * Gets the value at `key` of `object`.
   *
   * @private
   * @param {Object} [object] The object to query.
   * @param {string} key The key of the property to get.
   * @returns {*} Returns the property value.
   */
  function getValue(object, key) {
    return object == null ? undefined : object[key];
  }

  /**
   * Checks if `string` contains Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a symbol is found, else `false`.
   */
  function hasUnicode(string) {
    return reHasUnicode.test(string);
  }

  /**
   * Checks if `string` contains a word composed of Unicode symbols.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {boolean} Returns `true` if a word is found, else `false`.
   */
  function hasUnicodeWord(string) {
    return reHasUnicodeWord.test(string);
  }

  /**
   * Converts `iterator` to an array.
   *
   * @private
   * @param {Object} iterator The iterator to convert.
   * @returns {Array} Returns the converted array.
   */
  function iteratorToArray(iterator) {
    var data,
        result = [];

    while (!(data = iterator.next()).done) {
      result.push(data.value);
    }
    return result;
  }

  /**
   * Converts `map` to its key-value pairs.
   *
   * @private
   * @param {Object} map The map to convert.
   * @returns {Array} Returns the key-value pairs.
   */
  function mapToArray(map) {
    var index = -1,
        result = Array(map.size);

    map.forEach(function(value, key) {
      result[++index] = [key, value];
    });
    return result;
  }

  /**
   * Creates a unary function that invokes `func` with its argument transformed.
   *
   * @private
   * @param {Function} func The function to wrap.
   * @param {Function} transform The argument transform.
   * @returns {Function} Returns the new function.
   */
  function overArg(func, transform) {
    return function(arg) {
      return func(transform(arg));
    };
  }

  /**
   * Replaces all `placeholder` elements in `array` with an internal placeholder
   * and returns an array of their indexes.
   *
   * @private
   * @param {Array} array The array to modify.
   * @param {*} placeholder The placeholder to replace.
   * @returns {Array} Returns the new array of placeholder indexes.
   */
  function replaceHolders(array, placeholder) {
    var index = -1,
        length = array.length,
        resIndex = 0,
        result = [];

    while (++index < length) {
      var value = array[index];
      if (value === placeholder || value === PLACEHOLDER) {
        array[index] = PLACEHOLDER;
        result[resIndex++] = index;
      }
    }
    return result;
  }

  /**
   * Converts `set` to an array of its values.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the values.
   */
  function setToArray(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = value;
    });
    return result;
  }

  /**
   * Converts `set` to its value-value pairs.
   *
   * @private
   * @param {Object} set The set to convert.
   * @returns {Array} Returns the value-value pairs.
   */
  function setToPairs(set) {
    var index = -1,
        result = Array(set.size);

    set.forEach(function(value) {
      result[++index] = [value, value];
    });
    return result;
  }

  /**
   * A specialized version of `_.indexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictIndexOf(array, value, fromIndex) {
    var index = fromIndex - 1,
        length = array.length;

    while (++index < length) {
      if (array[index] === value) {
        return index;
      }
    }
    return -1;
  }

  /**
   * A specialized version of `_.lastIndexOf` which performs strict equality
   * comparisons of values, i.e. `===`.
   *
   * @private
   * @param {Array} array The array to inspect.
   * @param {*} value The value to search for.
   * @param {number} fromIndex The index to search from.
   * @returns {number} Returns the index of the matched value, else `-1`.
   */
  function strictLastIndexOf(array, value, fromIndex) {
    var index = fromIndex + 1;
    while (index--) {
      if (array[index] === value) {
        return index;
      }
    }
    return index;
  }

  /**
   * Gets the number of symbols in `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the string size.
   */
  function stringSize(string) {
    return hasUnicode(string)
      ? unicodeSize(string)
      : asciiSize(string);
  }

  /**
   * Converts `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function stringToArray(string) {
    return hasUnicode(string)
      ? unicodeToArray(string)
      : asciiToArray(string);
  }

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex(string) {
    var index = string.length;

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index;
  }

  /**
   * Used by `_.unescape` to convert HTML entities to characters.
   *
   * @private
   * @param {string} chr The matched character to unescape.
   * @returns {string} Returns the unescaped character.
   */
  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);

  /**
   * Gets the size of a Unicode `string`.
   *
   * @private
   * @param {string} string The string inspect.
   * @returns {number} Returns the string size.
   */
  function unicodeSize(string) {
    var result = reUnicode.lastIndex = 0;
    while (reUnicode.test(string)) {
      ++result;
    }
    return result;
  }

  /**
   * Converts a Unicode `string` to an array.
   *
   * @private
   * @param {string} string The string to convert.
   * @returns {Array} Returns the converted array.
   */
  function unicodeToArray(string) {
    return string.match(reUnicode) || [];
  }

  /**
   * Splits a Unicode `string` into an array of its words.
   *
   * @private
   * @param {string} The string to inspect.
   * @returns {Array} Returns the words of `string`.
   */
  function unicodeWords(string) {
    return string.match(reUnicodeWord) || [];
  }

  /*--------------------------------------------------------------------------*/

  /**
   * Create a new pristine `lodash` function using the `context` object.
   *
   * @static
   * @memberOf _
   * @since 1.1.0
   * @category Util
   * @param {Object} [context=root] The context object.
   * @returns {Function} Returns a new `lodash` function.
   * @example
   *
   * _.mixin({ 'foo': _.constant('foo') });
   *
   * var lodash = _.runInContext();
   * lodash.mixin({ 'bar': lodash.constant('bar') });
   *
   * _.isFunction(_.foo);
   * // => true
   * _.isFunction(_.bar);
   * // => false
   *
   * lodash.isFunction(lodash.foo);
   * // => false
   * lodash.isFunction(lodash.bar);
   * // => true
   *
   * // Create a suped-up `defer` in Node.js.
   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;
   */
  var runInContext = (function runInContext(context) {
    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));

    /** Built-in constructor references. */
    var Array = context.Array,
        Date = context.Date,
        Error = context.Error,
        Function = context.Function,
        Math = context.Math,
        Object = context.Object,
        RegExp = context.RegExp,
        String = context.String,
        TypeError = context.TypeError;

    /** Used for built-in method references. */
    var arrayProto = Array.prototype,
        funcProto = Function.prototype,
        objectProto = Object.prototype;

    /** Used to detect overreaching core-js shims. */
    var coreJsData = context['__core-js_shared__'];

    /** Used to resolve the decompiled source of functions. */
    var funcToString = funcProto.toString;

    /** Used to check objects for own properties. */
    var hasOwnProperty = objectProto.hasOwnProperty;

    /** Used to generate unique IDs. */
    var idCounter = 0;

    /** Used to detect methods masquerading as native. */
    var maskSrcKey = (function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
      return uid ? ('Symbol(src)_1.' + uid) : '';
    }());

    /**
     * Used to resolve the
     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
     * of values.
     */
    var nativeObjectToString = objectProto.toString;

    /** Used to infer the `Object` constructor. */
    var objectCtorString = funcToString.call(Object);

    /** Used to restore the original `_` reference in `_.noConflict`. */
    var oldDash = root._;

    /** Used to detect if a method is native. */
    var reIsNative = RegExp('^' +
      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
      .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
    );

    /** Built-in value references. */
    var Buffer = moduleExports ? context.Buffer : undefined,
        Symbol = context.Symbol,
        Uint8Array = context.Uint8Array,
        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,
        getPrototype = overArg(Object.getPrototypeOf, Object),
        objectCreate = Object.create,
        propertyIsEnumerable = objectProto.propertyIsEnumerable,
        splice = arrayProto.splice,
        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,
        symIterator = Symbol ? Symbol.iterator : undefined,
        symToStringTag = Symbol ? Symbol.toStringTag : undefined;

    var defineProperty = (function() {
      try {
        var func = getNative(Object, 'defineProperty');
        func({}, '', {});
        return func;
      } catch (e) {}
    }());

    /** Mocked built-ins. */
    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,
        ctxNow = Date && Date.now !== root.Date.now && Date.now,
        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;

    /* Built-in method references for those with the same name as other `lodash` methods. */
    var nativeCeil = Math.ceil,
        nativeFloor = Math.floor,
        nativeGetSymbols = Object.getOwnPropertySymbols,
        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,
        nativeIsFinite = context.isFinite,
        nativeJoin = arrayProto.join,
        nativeKeys = overArg(Object.keys, Object),
        nativeMax = Math.max,
        nativeMin = Math.min,
        nativeNow = Date.now,
        nativeParseInt = context.parseInt,
        nativeRandom = Math.random,
        nativeReverse = arrayProto.reverse;

    /* Built-in method references that are verified to be native. */
    var DataView = getNative(context, 'DataView'),
        Map = getNative(context, 'Map'),
        Promise = getNative(context, 'Promise'),
        Set = getNative(context, 'Set'),
        WeakMap = getNative(context, 'WeakMap'),
        nativeCreate = getNative(Object, 'create');

    /** Used to store function metadata. */
    var metaMap = WeakMap && new WeakMap;

    /** Used to lookup unminified function names. */
    var realNames = {};

    /** Used to detect maps, sets, and weakmaps. */
    var dataViewCtorString = toSource(DataView),
        mapCtorString = toSource(Map),
        promiseCtorString = toSource(Promise),
        setCtorString = toSource(Set),
        weakMapCtorString = toSource(WeakMap);

    /** Used to convert symbols to primitives and strings. */
    var symbolProto = Symbol ? Symbol.prototype : undefined,
        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,
        symbolToString = symbolProto ? symbolProto.toString : undefined;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` object which wraps `value` to enable implicit method
     * chain sequences. Methods that operate on and return arrays, collections,
     * and functions can be chained together. Methods that retrieve a single value
     * or may return a primitive value will automatically end the chain sequence
     * and return the unwrapped value. Otherwise, the value must be unwrapped
     * with `_#value`.
     *
     * Explicit chain sequences, which must be unwrapped with `_#value`, may be
     * enabled using `_.chain`.
     *
     * The execution of chained methods is lazy, that is, it's deferred until
     * `_#value` is implicitly or explicitly called.
     *
     * Lazy evaluation allows several methods to support shortcut fusion.
     * Shortcut fusion is an optimization to merge iteratee calls; this avoids
     * the creation of intermediate arrays and can greatly reduce the number of
     * iteratee executions. Sections of a chain sequence qualify for shortcut
     * fusion if the section is applied to an array and iteratees accept only
     * one argument. The heuristic for whether a section qualifies for shortcut
     * fusion is subject to change.
     *
     * Chaining is supported in custom builds as long as the `_#value` method is
     * directly or indirectly included in the build.
     *
     * In addition to lodash methods, wrappers have `Array` and `String` methods.
     *
     * The wrapper `Array` methods are:
     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`
     *
     * The wrapper `String` methods are:
     * `replace` and `split`
     *
     * The wrapper methods that support shortcut fusion are:
     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,
     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,
     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`
     *
     * The chainable wrapper methods are:
     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,
     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,
     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,
     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,
     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,
     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,
     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,
     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,
     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,
     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,
     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,
     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,
     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,
     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,
     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,
     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,
     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,
     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,
     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,
     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,
     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,
     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,
     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,
     * `zipObject`, `zipObjectDeep`, and `zipWith`
     *
     * The wrapper methods that are **not** chainable by default are:
     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,
     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,
     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,
     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,
     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,
     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,
     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,
     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,
     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,
     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,
     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,
     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,
     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,
     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,
     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,
     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,
     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,
     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,
     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,
     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,
     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,
     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,
     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,
     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,
     * `upperFirst`, `value`, and `words`
     *
     * @name _
     * @constructor
     * @category Seq
     * @param {*} value The value to wrap in a `lodash` instance.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2, 3]);
     *
     * // Returns an unwrapped value.
     * wrapped.reduce(_.add);
     * // => 6
     *
     * // Returns a wrapped value.
     * var squares = wrapped.map(square);
     *
     * _.isArray(squares);
     * // => false
     *
     * _.isArray(squares.value());
     * // => true
     */
    function lodash(value) {
      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {
        if (value instanceof LodashWrapper) {
          return value;
        }
        if (hasOwnProperty.call(value, '__wrapped__')) {
          return wrapperClone(value);
        }
      }
      return new LodashWrapper(value);
    }

    /**
     * The base implementation of `_.create` without support for assigning
     * properties to the created object.
     *
     * @private
     * @param {Object} proto The object to inherit from.
     * @returns {Object} Returns the new object.
     */
    var baseCreate = (function() {
      function object() {}
      return function(proto) {
        if (!isObject(proto)) {
          return {};
        }
        if (objectCreate) {
          return objectCreate(proto);
        }
        object.prototype = proto;
        var result = new object;
        object.prototype = undefined;
        return result;
      };
    }());

    /**
     * The function whose prototype chain sequence wrappers inherit from.
     *
     * @private
     */
    function baseLodash() {
      // No operation performed.
    }

    /**
     * The base constructor for creating `lodash` wrapper objects.
     *
     * @private
     * @param {*} value The value to wrap.
     * @param {boolean} [chainAll] Enable explicit method chain sequences.
     */
    function LodashWrapper(value, chainAll) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__chain__ = !!chainAll;
      this.__index__ = 0;
      this.__values__ = undefined;
    }

    /**
     * By default, the template delimiters used by lodash are like those in
     * embedded Ruby (ERB) as well as ES2015 template strings. Change the
     * following template settings to use alternative delimiters.
     *
     * @static
     * @memberOf _
     * @type {Object}
     */
    lodash.templateSettings = {

      /**
       * Used to detect `data` property values to be HTML-escaped.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'escape': reEscape,

      /**
       * Used to detect code to be evaluated.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'evaluate': reEvaluate,

      /**
       * Used to detect `data` property values to inject.
       *
       * @memberOf _.templateSettings
       * @type {RegExp}
       */
      'interpolate': reInterpolate,

      /**
       * Used to reference the data object in the template text.
       *
       * @memberOf _.templateSettings
       * @type {string}
       */
      'variable': '',

      /**
       * Used to import variables into the compiled template.
       *
       * @memberOf _.templateSettings
       * @type {Object}
       */
      'imports': {

        /**
         * A reference to the `lodash` function.
         *
         * @memberOf _.templateSettings.imports
         * @type {Function}
         */
        '_': lodash
      }
    };

    // Ensure wrappers are instances of `baseLodash`.
    lodash.prototype = baseLodash.prototype;
    lodash.prototype.constructor = lodash;

    LodashWrapper.prototype = baseCreate(baseLodash.prototype);
    LodashWrapper.prototype.constructor = LodashWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.
     *
     * @private
     * @constructor
     * @param {*} value The value to wrap.
     */
    function LazyWrapper(value) {
      this.__wrapped__ = value;
      this.__actions__ = [];
      this.__dir__ = 1;
      this.__filtered__ = false;
      this.__iteratees__ = [];
      this.__takeCount__ = MAX_ARRAY_LENGTH;
      this.__views__ = [];
    }

    /**
     * Creates a clone of the lazy wrapper object.
     *
     * @private
     * @name clone
     * @memberOf LazyWrapper
     * @returns {Object} Returns the cloned `LazyWrapper` object.
     */
    function lazyClone() {
      var result = new LazyWrapper(this.__wrapped__);
      result.__actions__ = copyArray(this.__actions__);
      result.__dir__ = this.__dir__;
      result.__filtered__ = this.__filtered__;
      result.__iteratees__ = copyArray(this.__iteratees__);
      result.__takeCount__ = this.__takeCount__;
      result.__views__ = copyArray(this.__views__);
      return result;
    }

    /**
     * Reverses the direction of lazy iteration.
     *
     * @private
     * @name reverse
     * @memberOf LazyWrapper
     * @returns {Object} Returns the new reversed `LazyWrapper` object.
     */
    function lazyReverse() {
      if (this.__filtered__) {
        var result = new LazyWrapper(this);
        result.__dir__ = -1;
        result.__filtered__ = true;
      } else {
        result = this.clone();
        result.__dir__ *= -1;
      }
      return result;
    }

    /**
     * Extracts the unwrapped value from its lazy wrapper.
     *
     * @private
     * @name value
     * @memberOf LazyWrapper
     * @returns {*} Returns the unwrapped value.
     */
    function lazyValue() {
      var array = this.__wrapped__.value(),
          dir = this.__dir__,
          isArr = isArray(array),
          isRight = dir < 0,
          arrLength = isArr ? array.length : 0,
          view = getView(0, arrLength, this.__views__),
          start = view.start,
          end = view.end,
          length = end - start,
          index = isRight ? end : (start - 1),
          iteratees = this.__iteratees__,
          iterLength = iteratees.length,
          resIndex = 0,
          takeCount = nativeMin(length, this.__takeCount__);

      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {
        return baseWrapperValue(array, this.__actions__);
      }
      var result = [];

      outer:
      while (length-- && resIndex < takeCount) {
        index += dir;

        var iterIndex = -1,
            value = array[index];

        while (++iterIndex < iterLength) {
          var data = iteratees[iterIndex],
              iteratee = data.iteratee,
              type = data.type,
              computed = iteratee(value);

          if (type == LAZY_MAP_FLAG) {
            value = computed;
          } else if (!computed) {
            if (type == LAZY_FILTER_FLAG) {
              continue outer;
            } else {
              break outer;
            }
          }
        }
        result[resIndex++] = value;
      }
      return result;
    }

    // Ensure `LazyWrapper` is an instance of `baseLodash`.
    LazyWrapper.prototype = baseCreate(baseLodash.prototype);
    LazyWrapper.prototype.constructor = LazyWrapper;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a hash object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Hash(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the hash.
     *
     * @private
     * @name clear
     * @memberOf Hash
     */
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the hash.
     *
     * @private
     * @name delete
     * @memberOf Hash
     * @param {Object} hash The hash to modify.
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the hash value for `key`.
     *
     * @private
     * @name get
     * @memberOf Hash
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? undefined : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : undefined;
    }

    /**
     * Checks if a hash value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Hash
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);
    }

    /**
     * Sets the hash `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Hash
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the hash instance.
     */
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
      return this;
    }

    // Add methods to `Hash`.
    Hash.prototype.clear = hashClear;
    Hash.prototype['delete'] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an list cache object.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function ListCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the list cache.
     *
     * @private
     * @name clear
     * @memberOf ListCache
     */
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the list cache.
     *
     * @private
     * @name delete
     * @memberOf ListCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function listCacheDelete(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }

    /**
     * Gets the list cache value for `key`.
     *
     * @private
     * @name get
     * @memberOf ListCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function listCacheGet(key) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      return index < 0 ? undefined : data[index][1];
    }

    /**
     * Checks if a list cache value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf ListCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }

    /**
     * Sets the list cache `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf ListCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the list cache instance.
     */
    function listCacheSet(key, value) {
      var data = this.__data__,
          index = assocIndexOf(data, key);

      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }

    // Add methods to `ListCache`.
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype['delete'] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a map cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function MapCache(entries) {
      var index = -1,
          length = entries == null ? 0 : entries.length;

      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }

    /**
     * Removes all key-value entries from the map.
     *
     * @private
     * @name clear
     * @memberOf MapCache
     */
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        'hash': new Hash,
        'map': new (Map || ListCache),
        'string': new Hash
      };
    }

    /**
     * Removes `key` and its value from the map.
     *
     * @private
     * @name delete
     * @memberOf MapCache
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function mapCacheDelete(key) {
      var result = getMapData(this, key)['delete'](key);
      this.size -= result ? 1 : 0;
      return result;
    }

    /**
     * Gets the map value for `key`.
     *
     * @private
     * @name get
     * @memberOf MapCache
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }

    /**
     * Checks if a map value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf MapCache
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }

    /**
     * Sets the map `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf MapCache
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the map cache instance.
     */
    function mapCacheSet(key, value) {
      var data = getMapData(this, key),
          size = data.size;

      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }

    // Add methods to `MapCache`.
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype['delete'] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;

    /*------------------------------------------------------------------------*/

    /**
     *
     * Creates an array cache object to store unique values.
     *
     * @private
     * @constructor
     * @param {Array} [values] The values to cache.
     */
    function SetCache(values) {
      var index = -1,
          length = values == null ? 0 : values.length;

      this.__data__ = new MapCache;
      while (++index < length) {
        this.add(values[index]);
      }
    }

    /**
     * Adds `value` to the array cache.
     *
     * @private
     * @name add
     * @memberOf SetCache
     * @alias push
     * @param {*} value The value to cache.
     * @returns {Object} Returns the cache instance.
     */
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }

    /**
     * Checks if `value` is in the array cache.
     *
     * @private
     * @name has
     * @memberOf SetCache
     * @param {*} value The value to search for.
     * @returns {number} Returns `true` if `value` is found, else `false`.
     */
    function setCacheHas(value) {
      return this.__data__.has(value);
    }

    // Add methods to `SetCache`.
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;

    /*------------------------------------------------------------------------*/

    /**
     * Creates a stack cache object to store key-value pairs.
     *
     * @private
     * @constructor
     * @param {Array} [entries] The key-value pairs to cache.
     */
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }

    /**
     * Removes all key-value entries from the stack.
     *
     * @private
     * @name clear
     * @memberOf Stack
     */
    function stackClear() {
      this.__data__ = new ListCache;
      this.size = 0;
    }

    /**
     * Removes `key` and its value from the stack.
     *
     * @private
     * @name delete
     * @memberOf Stack
     * @param {string} key The key of the value to remove.
     * @returns {boolean} Returns `true` if the entry was removed, else `false`.
     */
    function stackDelete(key) {
      var data = this.__data__,
          result = data['delete'](key);

      this.size = data.size;
      return result;
    }

    /**
     * Gets the stack value for `key`.
     *
     * @private
     * @name get
     * @memberOf Stack
     * @param {string} key The key of the value to get.
     * @returns {*} Returns the entry value.
     */
    function stackGet(key) {
      return this.__data__.get(key);
    }

    /**
     * Checks if a stack value for `key` exists.
     *
     * @private
     * @name has
     * @memberOf Stack
     * @param {string} key The key of the entry to check.
     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
     */
    function stackHas(key) {
      return this.__data__.has(key);
    }

    /**
     * Sets the stack `key` to `value`.
     *
     * @private
     * @name set
     * @memberOf Stack
     * @param {string} key The key of the value to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns the stack cache instance.
     */
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }

    // Add methods to `Stack`.
    Stack.prototype.clear = stackClear;
    Stack.prototype['delete'] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of the enumerable property names of the array-like `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @param {boolean} inherited Specify returning inherited property names.
     * @returns {Array} Returns the array of property names.
     */
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value),
          isArg = !isArr && isArguments(value),
          isBuff = !isArr && !isArg && isBuffer(value),
          isType = !isArr && !isArg && !isBuff && isTypedArray(value),
          skipIndexes = isArr || isArg || isBuff || isType,
          result = skipIndexes ? baseTimes(value.length, String) : [],
          length = result.length;

      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) &&
            !(skipIndexes && (
               // Safari 9 has enumerable `arguments.length` in strict mode.
               key == 'length' ||
               // Node.js 0.10 has enumerable non-index properties on buffers.
               (isBuff && (key == 'offset' || key == 'parent')) ||
               // PhantomJS 2 has enumerable non-index properties on typed arrays.
               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||
               // Skip index properties.
               isIndex(key, length)
            ))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * A specialized version of `_.sample` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @returns {*} Returns the random element.
     */
    function arraySample(array) {
      var length = array.length;
      return length ? array[baseRandom(0, length - 1)] : undefined;
    }

    /**
     * A specialized version of `_.sampleSize` for arrays.
     *
     * @private
     * @param {Array} array The array to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function arraySampleSize(array, n) {
      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));
    }

    /**
     * A specialized version of `_.shuffle` for arrays.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function arrayShuffle(array) {
      return shuffleSelf(copyArray(array));
    }

    /**
     * This function is like `assignValue` except that it doesn't assign
     * `undefined` values.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignMergeValue(object, key, value) {
      if ((value !== undefined && !eq(object[key], value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Assigns `value` to `key` of `object` if the existing value is not equivalent
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function assignValue(object, key, value) {
      var objValue = object[key];
      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
          (value === undefined && !(key in object))) {
        baseAssignValue(object, key, value);
      }
    }

    /**
     * Gets the index at which the `key` is found in `array` of key-value pairs.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {*} key The key to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     */
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }

    /**
     * Aggregates elements of `collection` on `accumulator` with keys transformed
     * by `iteratee` and values set by `setter`.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform keys.
     * @param {Object} accumulator The initial aggregated object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseAggregator(collection, setter, iteratee, accumulator) {
      baseEach(collection, function(value, key, collection) {
        setter(accumulator, value, iteratee(value), collection);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.assign` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssign(object, source) {
      return object && copyObject(source, keys(source), object);
    }

    /**
     * The base implementation of `_.assignIn` without support for multiple sources
     * or `customizer` functions.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @returns {Object} Returns `object`.
     */
    function baseAssignIn(object, source) {
      return object && copyObject(source, keysIn(source), object);
    }

    /**
     * The base implementation of `assignValue` and `assignMergeValue` without
     * value checks.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {string} key The key of the property to assign.
     * @param {*} value The value to assign.
     */
    function baseAssignValue(object, key, value) {
      if (key == '__proto__' && defineProperty) {
        defineProperty(object, key, {
          'configurable': true,
          'enumerable': true,
          'value': value,
          'writable': true
        });
      } else {
        object[key] = value;
      }
    }

    /**
     * The base implementation of `_.at` without support for individual paths.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {string[]} paths The property paths to pick.
     * @returns {Array} Returns the picked elements.
     */
    function baseAt(object, paths) {
      var index = -1,
          length = paths.length,
          result = Array(length),
          skip = object == null;

      while (++index < length) {
        result[index] = skip ? undefined : get(object, paths[index]);
      }
      return result;
    }

    /**
     * The base implementation of `_.clamp` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     */
    function baseClamp(number, lower, upper) {
      if (number === number) {
        if (upper !== undefined) {
          number = number <= upper ? number : upper;
        }
        if (lower !== undefined) {
          number = number >= lower ? number : lower;
        }
      }
      return number;
    }

    /**
     * The base implementation of `_.clone` and `_.cloneDeep` which tracks
     * traversed objects.
     *
     * @private
     * @param {*} value The value to clone.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Deep clone
     *  2 - Flatten inherited properties
     *  4 - Clone symbols
     * @param {Function} [customizer] The function to customize cloning.
     * @param {string} [key] The key of `value`.
     * @param {Object} [object] The parent object of `value`.
     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.
     * @returns {*} Returns the cloned value.
     */
    function baseClone(value, bitmask, customizer, key, object, stack) {
      var result,
          isDeep = bitmask & CLONE_DEEP_FLAG,
          isFlat = bitmask & CLONE_FLAT_FLAG,
          isFull = bitmask & CLONE_SYMBOLS_FLAG;

      if (customizer) {
        result = object ? customizer(value, key, object, stack) : customizer(value);
      }
      if (result !== undefined) {
        return result;
      }
      if (!isObject(value)) {
        return value;
      }
      var isArr = isArray(value);
      if (isArr) {
        result = initCloneArray(value);
        if (!isDeep) {
          return copyArray(value, result);
        }
      } else {
        var tag = getTag(value),
            isFunc = tag == funcTag || tag == genTag;

        if (isBuffer(value)) {
          return cloneBuffer(value, isDeep);
        }
        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {
          result = (isFlat || isFunc) ? {} : initCloneObject(value);
          if (!isDeep) {
            return isFlat
              ? copySymbolsIn(value, baseAssignIn(result, value))
              : copySymbols(value, baseAssign(result, value));
          }
        } else {
          if (!cloneableTags[tag]) {
            return object ? value : {};
          }
          result = initCloneByTag(value, tag, isDeep);
        }
      }
      // Check for circular references and return its corresponding clone.
      stack || (stack = new Stack);
      var stacked = stack.get(value);
      if (stacked) {
        return stacked;
      }
      stack.set(value, result);

      if (isSet(value)) {
        value.forEach(function(subValue) {
          result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));
        });
      } else if (isMap(value)) {
        value.forEach(function(subValue, key) {
          result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));
        });
      }

      var keysFunc = isFull
        ? (isFlat ? getAllKeysIn : getAllKeys)
        : (isFlat ? keysIn : keys);

      var props = isArr ? undefined : keysFunc(value);
      arrayEach(props || value, function(subValue, key) {
        if (props) {
          key = subValue;
          subValue = value[key];
        }
        // Recursively populate clone (susceptible to call stack limits).
        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));
      });
      return result;
    }

    /**
     * The base implementation of `_.conforms` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     */
    function baseConforms(source) {
      var props = keys(source);
      return function(object) {
        return baseConformsTo(object, source, props);
      };
    }

    /**
     * The base implementation of `_.conformsTo` which accepts `props` to check.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     */
    function baseConformsTo(object, source, props) {
      var length = props.length;
      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (length--) {
        var key = props[length],
            predicate = source[key],
            value = object[key];

        if ((value === undefined && !(key in object)) || !predicate(value)) {
          return false;
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.delay` and `_.defer` which accepts `args`
     * to provide to `func`.
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {Array} args The arguments to provide to `func`.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    function baseDelay(func, wait, args) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return setTimeout(function() { func.apply(undefined, args); }, wait);
    }

    /**
     * The base implementation of methods like `_.difference` without support
     * for excluding multiple arrays or iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Array} values The values to exclude.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     */
    function baseDifference(array, values, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          isCommon = true,
          length = array.length,
          result = [],
          valuesLength = values.length;

      if (!length) {
        return result;
      }
      if (iteratee) {
        values = arrayMap(values, baseUnary(iteratee));
      }
      if (comparator) {
        includes = arrayIncludesWith;
        isCommon = false;
      }
      else if (values.length >= LARGE_ARRAY_SIZE) {
        includes = cacheHas;
        isCommon = false;
        values = new SetCache(values);
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee == null ? value : iteratee(value);

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var valuesIndex = valuesLength;
          while (valuesIndex--) {
            if (values[valuesIndex] === computed) {
              continue outer;
            }
          }
          result.push(value);
        }
        else if (!includes(values, computed, comparator)) {
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.forEach` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEach = createBaseEach(baseForOwn);

    /**
     * The base implementation of `_.forEachRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     */
    var baseEachRight = createBaseEach(baseForOwnRight, true);

    /**
     * The base implementation of `_.every` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`
     */
    function baseEvery(collection, predicate) {
      var result = true;
      baseEach(collection, function(value, index, collection) {
        result = !!predicate(value, index, collection);
        return result;
      });
      return result;
    }

    /**
     * The base implementation of methods like `_.max` and `_.min` which accepts a
     * `comparator` to determine the extremum value.
     *
     * @private
     * @param {Array} array The array to iterate over.
     * @param {Function} iteratee The iteratee invoked per iteration.
     * @param {Function} comparator The comparator used to compare values.
     * @returns {*} Returns the extremum value.
     */
    function baseExtremum(array, iteratee, comparator) {
      var index = -1,
          length = array.length;

      while (++index < length) {
        var value = array[index],
            current = iteratee(value);

        if (current != null && (computed === undefined
              ? (current === current && !isSymbol(current))
              : comparator(current, computed)
            )) {
          var computed = current,
              result = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.fill` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     */
    function baseFill(array, value, start, end) {
      var length = array.length;

      start = toInteger(start);
      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = (end === undefined || end > length) ? length : toInteger(end);
      if (end < 0) {
        end += length;
      }
      end = start > end ? 0 : toLength(end);
      while (start < end) {
        array[start++] = value;
      }
      return array;
    }

    /**
     * The base implementation of `_.filter` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     */
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index, collection) {
        if (predicate(value, index, collection)) {
          result.push(value);
        }
      });
      return result;
    }

    /**
     * The base implementation of `_.flatten` with support for restricting flattening.
     *
     * @private
     * @param {Array} array The array to flatten.
     * @param {number} depth The maximum recursion depth.
     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
     * @param {Array} [result=[]] The initial result value.
     * @returns {Array} Returns the new flattened array.
     */
    function baseFlatten(array, depth, predicate, isStrict, result) {
      var index = -1,
          length = array.length;

      predicate || (predicate = isFlattenable);
      result || (result = []);

      while (++index < length) {
        var value = array[index];
        if (depth > 0 && predicate(value)) {
          if (depth > 1) {
            // Recursively flatten arrays (susceptible to call stack limits).
            baseFlatten(value, depth - 1, predicate, isStrict, result);
          } else {
            arrayPush(result, value);
          }
        } else if (!isStrict) {
          result[result.length] = value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `baseForOwn` which iterates over `object`
     * properties returned by `keysFunc` and invokes `iteratee` for each property.
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseFor = createBaseFor();

    /**
     * This function is like `baseFor` except that it iterates over properties
     * in the opposite order.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @returns {Object} Returns `object`.
     */
    var baseForRight = createBaseFor(true);

    /**
     * The base implementation of `_.forOwn` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwn(object, iteratee) {
      return object && baseFor(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Object} Returns `object`.
     */
    function baseForOwnRight(object, iteratee) {
      return object && baseForRight(object, iteratee, keys);
    }

    /**
     * The base implementation of `_.functions` which creates an array of
     * `object` function property names filtered from `props`.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Array} props The property names to filter.
     * @returns {Array} Returns the function names.
     */
    function baseFunctions(object, props) {
      return arrayFilter(props, function(key) {
        return isFunction(object[key]);
      });
    }

    /**
     * The base implementation of `_.get` without support for default values.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @returns {*} Returns the resolved value.
     */
    function baseGet(object, path) {
      path = castPath(path, object);

      var index = 0,
          length = path.length;

      while (object != null && index < length) {
        object = object[toKey(path[index++])];
      }
      return (index && index == length) ? object : undefined;
    }

    /**
     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses
     * `keysFunc` and `symbolsFunc` to get the enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Function} keysFunc The function to get the keys of `object`.
     * @param {Function} symbolsFunc The function to get the symbols of `object`.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }

    /**
     * The base implementation of `getTag` without fallbacks for buggy environments.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    function baseGetTag(value) {
      if (value == null) {
        return value === undefined ? undefinedTag : nullTag;
      }
      return (symToStringTag && symToStringTag in Object(value))
        ? getRawTag(value)
        : objectToString(value);
    }

    /**
     * The base implementation of `_.gt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     */
    function baseGt(value, other) {
      return value > other;
    }

    /**
     * The base implementation of `_.has` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHas(object, key) {
      return object != null && hasOwnProperty.call(object, key);
    }

    /**
     * The base implementation of `_.hasIn` without support for deep paths.
     *
     * @private
     * @param {Object} [object] The object to query.
     * @param {Array|string} key The key to check.
     * @returns {boolean} Returns `true` if `key` exists, else `false`.
     */
    function baseHasIn(object, key) {
      return object != null && key in Object(object);
    }

    /**
     * The base implementation of `_.inRange` which doesn't coerce arguments.
     *
     * @private
     * @param {number} number The number to check.
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     */
    function baseInRange(number, start, end) {
      return number >= nativeMin(start, end) && number < nativeMax(start, end);
    }

    /**
     * The base implementation of methods like `_.intersection`, without support
     * for iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of shared values.
     */
    function baseIntersection(arrays, iteratee, comparator) {
      var includes = comparator ? arrayIncludesWith : arrayIncludes,
          length = arrays[0].length,
          othLength = arrays.length,
          othIndex = othLength,
          caches = Array(othLength),
          maxLength = Infinity,
          result = [];

      while (othIndex--) {
        var array = arrays[othIndex];
        if (othIndex && iteratee) {
          array = arrayMap(array, baseUnary(iteratee));
        }
        maxLength = nativeMin(array.length, maxLength);
        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))
          ? new SetCache(othIndex && array)
          : undefined;
      }
      array = arrays[0];

      var index = -1,
          seen = caches[0];

      outer:
      while (++index < length && result.length < maxLength) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (!(seen
              ? cacheHas(seen, computed)
              : includes(result, computed, comparator)
            )) {
          othIndex = othLength;
          while (--othIndex) {
            var cache = caches[othIndex];
            if (!(cache
                  ? cacheHas(cache, computed)
                  : includes(arrays[othIndex], computed, comparator))
                ) {
              continue outer;
            }
          }
          if (seen) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.invert` and `_.invertBy` which inverts
     * `object` with values transformed by `iteratee` and set by `setter`.
     *
     * @private
     * @param {Object} object The object to iterate over.
     * @param {Function} setter The function to set `accumulator` values.
     * @param {Function} iteratee The iteratee to transform values.
     * @param {Object} accumulator The initial inverted object.
     * @returns {Function} Returns `accumulator`.
     */
    function baseInverter(object, setter, iteratee, accumulator) {
      baseForOwn(object, function(value, key, object) {
        setter(accumulator, iteratee(value), key, object);
      });
      return accumulator;
    }

    /**
     * The base implementation of `_.invoke` without support for individual
     * method arguments.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {Array} args The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     */
    function baseInvoke(object, path, args) {
      path = castPath(path, object);
      object = parent(object, path);
      var func = object == null ? object : object[toKey(last(path))];
      return func == null ? undefined : apply(func, object, args);
    }

    /**
     * The base implementation of `_.isArguments`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     */
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }

    /**
     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     */
    function baseIsArrayBuffer(value) {
      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;
    }

    /**
     * The base implementation of `_.isDate` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     */
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }

    /**
     * The base implementation of `_.isEqual` which supports partial comparisons
     * and tracks traversed objects.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {boolean} bitmask The bitmask flags.
     *  1 - Unordered comparison
     *  2 - Partial comparison
     * @param {Function} [customizer] The function to customize comparisons.
     * @param {Object} [stack] Tracks traversed `value` and `other` objects.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     */
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }

    /**
     * A specialized version of `baseIsEqual` for arrays and objects which performs
     * deep comparisons and tracks traversed objects enabling objects with circular
     * references to be compared.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} [stack] Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object),
          othIsArr = isArray(other),
          objTag = objIsArr ? arrayTag : getTag(object),
          othTag = othIsArr ? arrayTag : getTag(other);

      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;

      var objIsObj = objTag == objectTag,
          othIsObj = othTag == objectTag,
          isSameTag = objTag == othTag;

      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack);
        return (objIsArr || isTypedArray(object))
          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)
          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),
            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');

        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object,
              othUnwrapped = othIsWrapped ? other.value() : other;

          stack || (stack = new Stack);
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack);
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }

    /**
     * The base implementation of `_.isMap` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     */
    function baseIsMap(value) {
      return isObjectLike(value) && getTag(value) == mapTag;
    }

    /**
     * The base implementation of `_.isMatch` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Array} matchData The property names, values, and compare flags to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     */
    function baseIsMatch(object, source, matchData, customizer) {
      var index = matchData.length,
          length = index,
          noCustomizer = !customizer;

      if (object == null) {
        return !length;
      }
      object = Object(object);
      while (index--) {
        var data = matchData[index];
        if ((noCustomizer && data[2])
              ? data[1] !== object[data[0]]
              : !(data[0] in object)
            ) {
          return false;
        }
      }
      while (++index < length) {
        data = matchData[index];
        var key = data[0],
            objValue = object[key],
            srcValue = data[1];

        if (noCustomizer && data[2]) {
          if (objValue === undefined && !(key in object)) {
            return false;
          }
        } else {
          var stack = new Stack;
          if (customizer) {
            var result = customizer(objValue, srcValue, key, object, source, stack);
          }
          if (!(result === undefined
                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)
                : result
              )) {
            return false;
          }
        }
      }
      return true;
    }

    /**
     * The base implementation of `_.isNative` without bad shim checks.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     */
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }

    /**
     * The base implementation of `_.isRegExp` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     */
    function baseIsRegExp(value) {
      return isObjectLike(value) && baseGetTag(value) == regexpTag;
    }

    /**
     * The base implementation of `_.isSet` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     */
    function baseIsSet(value) {
      return isObjectLike(value) && getTag(value) == setTag;
    }

    /**
     * The base implementation of `_.isTypedArray` without Node.js optimizations.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     */
    function baseIsTypedArray(value) {
      return isObjectLike(value) &&
        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }

    /**
     * The base implementation of `_.iteratee`.
     *
     * @private
     * @param {*} [value=_.identity] The value to convert to an iteratee.
     * @returns {Function} Returns the iteratee.
     */
    function baseIteratee(value) {
      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.
      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.
      if (typeof value == 'function') {
        return value;
      }
      if (value == null) {
        return identity;
      }
      if (typeof value == 'object') {
        return isArray(value)
          ? baseMatchesProperty(value[0], value[1])
          : baseMatches(value);
      }
      return property(value);
    }

    /**
     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != 'constructor') {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function baseKeysIn(object) {
      if (!isObject(object)) {
        return nativeKeysIn(object);
      }
      var isProto = isPrototype(object),
          result = [];

      for (var key in object) {
        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.lt` which doesn't coerce arguments.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     */
    function baseLt(value, other) {
      return value < other;
    }

    /**
     * The base implementation of `_.map` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} iteratee The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     */
    function baseMap(collection, iteratee) {
      var index = -1,
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value, key, collection) {
        result[++index] = iteratee(value, key, collection);
      });
      return result;
    }

    /**
     * The base implementation of `_.matches` which doesn't clone `source`.
     *
     * @private
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatches(source) {
      var matchData = getMatchData(source);
      if (matchData.length == 1 && matchData[0][2]) {
        return matchesStrictComparable(matchData[0][0], matchData[0][1]);
      }
      return function(object) {
        return object === source || baseIsMatch(object, source, matchData);
      };
    }

    /**
     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.
     *
     * @private
     * @param {string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function baseMatchesProperty(path, srcValue) {
      if (isKey(path) && isStrictComparable(srcValue)) {
        return matchesStrictComparable(toKey(path), srcValue);
      }
      return function(object) {
        var objValue = get(object, path);
        return (objValue === undefined && objValue === srcValue)
          ? hasIn(object, path)
          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);
      };
    }

    /**
     * The base implementation of `_.merge` without support for multiple sources.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} [customizer] The function to customize merged values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMerge(object, source, srcIndex, customizer, stack) {
      if (object === source) {
        return;
      }
      baseFor(source, function(srcValue, key) {
        stack || (stack = new Stack);
        if (isObject(srcValue)) {
          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);
        }
        else {
          var newValue = customizer
            ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)
            : undefined;

          if (newValue === undefined) {
            newValue = srcValue;
          }
          assignMergeValue(object, key, newValue);
        }
      }, keysIn);
    }

    /**
     * A specialized version of `baseMerge` for arrays and objects which performs
     * deep merges and tracks traversed objects enabling objects with circular
     * references to be merged.
     *
     * @private
     * @param {Object} object The destination object.
     * @param {Object} source The source object.
     * @param {string} key The key of the value to merge.
     * @param {number} srcIndex The index of `source`.
     * @param {Function} mergeFunc The function to merge values.
     * @param {Function} [customizer] The function to customize assigned values.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     */
    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {
      var objValue = safeGet(object, key),
          srcValue = safeGet(source, key),
          stacked = stack.get(srcValue);

      if (stacked) {
        assignMergeValue(object, key, stacked);
        return;
      }
      var newValue = customizer
        ? customizer(objValue, srcValue, (key + ''), object, source, stack)
        : undefined;

      var isCommon = newValue === undefined;

      if (isCommon) {
        var isArr = isArray(srcValue),
            isBuff = !isArr && isBuffer(srcValue),
            isTyped = !isArr && !isBuff && isTypedArray(srcValue);

        newValue = srcValue;
        if (isArr || isBuff || isTyped) {
          if (isArray(objValue)) {
            newValue = objValue;
          }
          else if (isArrayLikeObject(objValue)) {
            newValue = copyArray(objValue);
          }
          else if (isBuff) {
            isCommon = false;
            newValue = cloneBuffer(srcValue, true);
          }
          else if (isTyped) {
            isCommon = false;
            newValue = cloneTypedArray(srcValue, true);
          }
          else {
            newValue = [];
          }
        }
        else if (isPlainObject(srcValue) || isArguments(srcValue)) {
          newValue = objValue;
          if (isArguments(objValue)) {
            newValue = toPlainObject(objValue);
          }
          else if (!isObject(objValue) || isFunction(objValue)) {
            newValue = initCloneObject(srcValue);
          }
        }
        else {
          isCommon = false;
        }
      }
      if (isCommon) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, newValue);
        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);
        stack['delete'](srcValue);
      }
      assignMergeValue(object, key, newValue);
    }

    /**
     * The base implementation of `_.nth` which doesn't coerce arguments.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {number} n The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     */
    function baseNth(array, n) {
      var length = array.length;
      if (!length) {
        return;
      }
      n += n < 0 ? length : 0;
      return isIndex(n, length) ? array[n] : undefined;
    }

    /**
     * The base implementation of `_.orderBy` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.
     * @param {string[]} orders The sort orders of `iteratees`.
     * @returns {Array} Returns the new sorted array.
     */
    function baseOrderBy(collection, iteratees, orders) {
      if (iteratees.length) {
        iteratees = arrayMap(iteratees, function(iteratee) {
          if (isArray(iteratee)) {
            return function(value) {
              return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);
            }
          }
          return iteratee;
        });
      } else {
        iteratees = [identity];
      }

      var index = -1;
      iteratees = arrayMap(iteratees, baseUnary(getIteratee()));

      var result = baseMap(collection, function(value, key, collection) {
        var criteria = arrayMap(iteratees, function(iteratee) {
          return iteratee(value);
        });
        return { 'criteria': criteria, 'index': ++index, 'value': value };
      });

      return baseSortBy(result, function(object, other) {
        return compareMultiple(object, other, orders);
      });
    }

    /**
     * The base implementation of `_.pick` without support for individual
     * property identifiers.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @returns {Object} Returns the new object.
     */
    function basePick(object, paths) {
      return basePickBy(object, paths, function(value, path) {
        return hasIn(object, path);
      });
    }

    /**
     * The base implementation of  `_.pickBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Object} object The source object.
     * @param {string[]} paths The property paths to pick.
     * @param {Function} predicate The function invoked per property.
     * @returns {Object} Returns the new object.
     */
    function basePickBy(object, paths, predicate) {
      var index = -1,
          length = paths.length,
          result = {};

      while (++index < length) {
        var path = paths[index],
            value = baseGet(object, path);

        if (predicate(value, path)) {
          baseSet(result, castPath(path, object), value);
        }
      }
      return result;
    }

    /**
     * A specialized version of `baseProperty` which supports deep paths.
     *
     * @private
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     */
    function basePropertyDeep(path) {
      return function(object) {
        return baseGet(object, path);
      };
    }

    /**
     * The base implementation of `_.pullAllBy` without support for iteratee
     * shorthands.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     */
    function basePullAll(array, values, iteratee, comparator) {
      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,
          index = -1,
          length = values.length,
          seen = array;

      if (array === values) {
        values = copyArray(values);
      }
      if (iteratee) {
        seen = arrayMap(array, baseUnary(iteratee));
      }
      while (++index < length) {
        var fromIndex = 0,
            value = values[index],
            computed = iteratee ? iteratee(value) : value;

        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {
          if (seen !== array) {
            splice.call(seen, fromIndex, 1);
          }
          splice.call(array, fromIndex, 1);
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.pullAt` without support for individual
     * indexes or capturing the removed elements.
     *
     * @private
     * @param {Array} array The array to modify.
     * @param {number[]} indexes The indexes of elements to remove.
     * @returns {Array} Returns `array`.
     */
    function basePullAt(array, indexes) {
      var length = array ? indexes.length : 0,
          lastIndex = length - 1;

      while (length--) {
        var index = indexes[length];
        if (length == lastIndex || index !== previous) {
          var previous = index;
          if (isIndex(index)) {
            splice.call(array, index, 1);
          } else {
            baseUnset(array, index);
          }
        }
      }
      return array;
    }

    /**
     * The base implementation of `_.random` without support for returning
     * floating-point numbers.
     *
     * @private
     * @param {number} lower The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the random number.
     */
    function baseRandom(lower, upper) {
      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));
    }

    /**
     * The base implementation of `_.range` and `_.rangeRight` which doesn't
     * coerce arguments.
     *
     * @private
     * @param {number} start The start of the range.
     * @param {number} end The end of the range.
     * @param {number} step The value to increment or decrement by.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the range of numbers.
     */
    function baseRange(start, end, step, fromRight) {
      var index = -1,
          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),
          result = Array(length);

      while (length--) {
        result[fromRight ? length : ++index] = start;
        start += step;
      }
      return result;
    }

    /**
     * The base implementation of `_.repeat` which doesn't coerce arguments.
     *
     * @private
     * @param {string} string The string to repeat.
     * @param {number} n The number of times to repeat the string.
     * @returns {string} Returns the repeated string.
     */
    function baseRepeat(string, n) {
      var result = '';
      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {
        return result;
      }
      // Leverage the exponentiation by squaring algorithm for a faster repeat.
      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.
      do {
        if (n % 2) {
          result += string;
        }
        n = nativeFloor(n / 2);
        if (n) {
          string += string;
        }
      } while (n);

      return result;
    }

    /**
     * The base implementation of `_.rest` which doesn't validate or coerce arguments.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     */
    function baseRest(func, start) {
      return setToString(overRest(func, start, identity), func + '');
    }

    /**
     * The base implementation of `_.sample`.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     */
    function baseSample(collection) {
      return arraySample(values(collection));
    }

    /**
     * The base implementation of `_.sampleSize` without param guards.
     *
     * @private
     * @param {Array|Object} collection The collection to sample.
     * @param {number} n The number of elements to sample.
     * @returns {Array} Returns the random elements.
     */
    function baseSampleSize(collection, n) {
      var array = values(collection);
      return shuffleSelf(array, baseClamp(n, 0, array.length));
    }

    /**
     * The base implementation of `_.set`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseSet(object, path, value, customizer) {
      if (!isObject(object)) {
        return object;
      }
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          lastIndex = length - 1,
          nested = object;

      while (nested != null && ++index < length) {
        var key = toKey(path[index]),
            newValue = value;

        if (key === '__proto__' || key === 'constructor' || key === 'prototype') {
          return object;
        }

        if (index != lastIndex) {
          var objValue = nested[key];
          newValue = customizer ? customizer(objValue, key, nested) : undefined;
          if (newValue === undefined) {
            newValue = isObject(objValue)
              ? objValue
              : (isIndex(path[index + 1]) ? [] : {});
          }
        }
        assignValue(nested, key, newValue);
        nested = nested[key];
      }
      return object;
    }

    /**
     * The base implementation of `setData` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var baseSetData = !metaMap ? identity : function(func, data) {
      metaMap.set(func, data);
      return func;
    };

    /**
     * The base implementation of `setToString` without support for hot loop shorting.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var baseSetToString = !defineProperty ? identity : function(func, string) {
      return defineProperty(func, 'toString', {
        'configurable': true,
        'enumerable': false,
        'value': constant(string),
        'writable': true
      });
    };

    /**
     * The base implementation of `_.shuffle`.
     *
     * @private
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     */
    function baseShuffle(collection) {
      return shuffleSelf(values(collection));
    }

    /**
     * The base implementation of `_.slice` without an iteratee call guard.
     *
     * @private
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseSlice(array, start, end) {
      var index = -1,
          length = array.length;

      if (start < 0) {
        start = -start > length ? 0 : (length + start);
      }
      end = end > length ? length : end;
      if (end < 0) {
        end += length;
      }
      length = start > end ? 0 : ((end - start) >>> 0);
      start >>>= 0;

      var result = Array(length);
      while (++index < length) {
        result[index] = array[index + start];
      }
      return result;
    }

    /**
     * The base implementation of `_.some` without support for iteratee shorthands.
     *
     * @private
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} predicate The function invoked per iteration.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     */
    function baseSome(collection, predicate) {
      var result;

      baseEach(collection, function(value, index, collection) {
        result = predicate(value, index, collection);
        return !result;
      });
      return !!result;
    }

    /**
     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which
     * performs a binary search of `array` to determine the index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndex(array, value, retHighest) {
      var low = 0,
          high = array == null ? low : array.length;

      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {
        while (low < high) {
          var mid = (low + high) >>> 1,
              computed = array[mid];

          if (computed !== null && !isSymbol(computed) &&
              (retHighest ? (computed <= value) : (computed < value))) {
            low = mid + 1;
          } else {
            high = mid;
          }
        }
        return high;
      }
      return baseSortedIndexBy(array, value, identity, retHighest);
    }

    /**
     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`
     * which invokes `iteratee` for `value` and each element of `array` to compute
     * their sort ranking. The iteratee is invoked with one argument; (value).
     *
     * @private
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} iteratee The iteratee invoked per element.
     * @param {boolean} [retHighest] Specify returning the highest qualified index.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     */
    function baseSortedIndexBy(array, value, iteratee, retHighest) {
      var low = 0,
          high = array == null ? 0 : array.length;
      if (high === 0) {
        return 0;
      }

      value = iteratee(value);
      var valIsNaN = value !== value,
          valIsNull = value === null,
          valIsSymbol = isSymbol(value),
          valIsUndefined = value === undefined;

      while (low < high) {
        var mid = nativeFloor((low + high) / 2),
            computed = iteratee(array[mid]),
            othIsDefined = computed !== undefined,
            othIsNull = computed === null,
            othIsReflexive = computed === computed,
            othIsSymbol = isSymbol(computed);

        if (valIsNaN) {
          var setLow = retHighest || othIsReflexive;
        } else if (valIsUndefined) {
          setLow = othIsReflexive && (retHighest || othIsDefined);
        } else if (valIsNull) {
          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);
        } else if (valIsSymbol) {
          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);
        } else if (othIsNull || othIsSymbol) {
          setLow = false;
        } else {
          setLow = retHighest ? (computed <= value) : (computed < value);
        }
        if (setLow) {
          low = mid + 1;
        } else {
          high = mid;
        }
      }
      return nativeMin(high, MAX_ARRAY_INDEX);
    }

    /**
     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without
     * support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseSortedUniq(array, iteratee) {
      var index = -1,
          length = array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        if (!index || !eq(computed, seen)) {
          var seen = computed;
          result[resIndex++] = value === 0 ? 0 : value;
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.toNumber` which doesn't ensure correct
     * conversions of binary, hexadecimal, or octal string values.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     */
    function baseToNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      return +value;
    }

    /**
     * The base implementation of `_.toString` which doesn't convert nullish
     * values to empty strings.
     *
     * @private
     * @param {*} value The value to process.
     * @returns {string} Returns the string.
     */
    function baseToString(value) {
      // Exit early for strings to avoid a performance hit in some environments.
      if (typeof value == 'string') {
        return value;
      }
      if (isArray(value)) {
        // Recursively convert values (susceptible to call stack limits).
        return arrayMap(value, baseToString) + '';
      }
      if (isSymbol(value)) {
        return symbolToString ? symbolToString.call(value) : '';
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * The base implementation of `_.uniqBy` without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     */
    function baseUniq(array, iteratee, comparator) {
      var index = -1,
          includes = arrayIncludes,
          length = array.length,
          isCommon = true,
          result = [],
          seen = result;

      if (comparator) {
        isCommon = false;
        includes = arrayIncludesWith;
      }
      else if (length >= LARGE_ARRAY_SIZE) {
        var set = iteratee ? null : createSet(array);
        if (set) {
          return setToArray(set);
        }
        isCommon = false;
        includes = cacheHas;
        seen = new SetCache;
      }
      else {
        seen = iteratee ? [] : result;
      }
      outer:
      while (++index < length) {
        var value = array[index],
            computed = iteratee ? iteratee(value) : value;

        value = (comparator || value !== 0) ? value : 0;
        if (isCommon && computed === computed) {
          var seenIndex = seen.length;
          while (seenIndex--) {
            if (seen[seenIndex] === computed) {
              continue outer;
            }
          }
          if (iteratee) {
            seen.push(computed);
          }
          result.push(value);
        }
        else if (!includes(seen, computed, comparator)) {
          if (seen !== result) {
            seen.push(computed);
          }
          result.push(value);
        }
      }
      return result;
    }

    /**
     * The base implementation of `_.unset`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The property path to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     */
    function baseUnset(object, path) {
      path = castPath(path, object);
      object = parent(object, path);
      return object == null || delete object[toKey(last(path))];
    }

    /**
     * The base implementation of `_.update`.
     *
     * @private
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to update.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize path creation.
     * @returns {Object} Returns `object`.
     */
    function baseUpdate(object, path, updater, customizer) {
      return baseSet(object, path, updater(baseGet(object, path)), customizer);
    }

    /**
     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`
     * without support for iteratee shorthands.
     *
     * @private
     * @param {Array} array The array to query.
     * @param {Function} predicate The function invoked per iteration.
     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Array} Returns the slice of `array`.
     */
    function baseWhile(array, predicate, isDrop, fromRight) {
      var length = array.length,
          index = fromRight ? length : -1;

      while ((fromRight ? index-- : ++index < length) &&
        predicate(array[index], index, array)) {}

      return isDrop
        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))
        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));
    }

    /**
     * The base implementation of `wrapperValue` which returns the result of
     * performing a sequence of actions on the unwrapped `value`, where each
     * successive action is supplied the return value of the previous.
     *
     * @private
     * @param {*} value The unwrapped value.
     * @param {Array} actions Actions to perform to resolve the unwrapped value.
     * @returns {*} Returns the resolved value.
     */
    function baseWrapperValue(value, actions) {
      var result = value;
      if (result instanceof LazyWrapper) {
        result = result.value();
      }
      return arrayReduce(actions, function(result, action) {
        return action.func.apply(action.thisArg, arrayPush([result], action.args));
      }, result);
    }

    /**
     * The base implementation of methods like `_.xor`, without support for
     * iteratee shorthands, that accepts an array of arrays to inspect.
     *
     * @private
     * @param {Array} arrays The arrays to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of values.
     */
    function baseXor(arrays, iteratee, comparator) {
      var length = arrays.length;
      if (length < 2) {
        return length ? baseUniq(arrays[0]) : [];
      }
      var index = -1,
          result = Array(length);

      while (++index < length) {
        var array = arrays[index],
            othIndex = -1;

        while (++othIndex < length) {
          if (othIndex != index) {
            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);
          }
        }
      }
      return baseUniq(baseFlatten(result, 1), iteratee, comparator);
    }

    /**
     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.
     *
     * @private
     * @param {Array} props The property identifiers.
     * @param {Array} values The property values.
     * @param {Function} assignFunc The function to assign values.
     * @returns {Object} Returns the new object.
     */
    function baseZipObject(props, values, assignFunc) {
      var index = -1,
          length = props.length,
          valsLength = values.length,
          result = {};

      while (++index < length) {
        var value = index < valsLength ? values[index] : undefined;
        assignFunc(result, props[index], value);
      }
      return result;
    }

    /**
     * Casts `value` to an empty array if it's not an array like object.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Array|Object} Returns the cast array-like object.
     */
    function castArrayLikeObject(value) {
      return isArrayLikeObject(value) ? value : [];
    }

    /**
     * Casts `value` to `identity` if it's not a function.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {Function} Returns cast function.
     */
    function castFunction(value) {
      return typeof value == 'function' ? value : identity;
    }

    /**
     * Casts `value` to a path array if it's not one.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {Object} [object] The object to query keys on.
     * @returns {Array} Returns the cast property path array.
     */
    function castPath(value, object) {
      if (isArray(value)) {
        return value;
      }
      return isKey(value, object) ? [value] : stringToPath(toString(value));
    }

    /**
     * A `baseRest` alias which can be replaced with `identity` by module
     * replacement plugins.
     *
     * @private
     * @type {Function}
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    var castRest = baseRest;

    /**
     * Casts `array` to a slice if it's needed.
     *
     * @private
     * @param {Array} array The array to inspect.
     * @param {number} start The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the cast slice.
     */
    function castSlice(array, start, end) {
      var length = array.length;
      end = end === undefined ? length : end;
      return (!start && end >= length) ? array : baseSlice(array, start, end);
    }

    /**
     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).
     *
     * @private
     * @param {number|Object} id The timer id or timeout object of the timer to clear.
     */
    var clearTimeout = ctxClearTimeout || function(id) {
      return root.clearTimeout(id);
    };

    /**
     * Creates a clone of  `buffer`.
     *
     * @private
     * @param {Buffer} buffer The buffer to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Buffer} Returns the cloned buffer.
     */
    function cloneBuffer(buffer, isDeep) {
      if (isDeep) {
        return buffer.slice();
      }
      var length = buffer.length,
          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);

      buffer.copy(result);
      return result;
    }

    /**
     * Creates a clone of `arrayBuffer`.
     *
     * @private
     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.
     * @returns {ArrayBuffer} Returns the cloned array buffer.
     */
    function cloneArrayBuffer(arrayBuffer) {
      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);
      new Uint8Array(result).set(new Uint8Array(arrayBuffer));
      return result;
    }

    /**
     * Creates a clone of `dataView`.
     *
     * @private
     * @param {Object} dataView The data view to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned data view.
     */
    function cloneDataView(dataView, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;
      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);
    }

    /**
     * Creates a clone of `regexp`.
     *
     * @private
     * @param {Object} regexp The regexp to clone.
     * @returns {Object} Returns the cloned regexp.
     */
    function cloneRegExp(regexp) {
      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));
      result.lastIndex = regexp.lastIndex;
      return result;
    }

    /**
     * Creates a clone of the `symbol` object.
     *
     * @private
     * @param {Object} symbol The symbol object to clone.
     * @returns {Object} Returns the cloned symbol object.
     */
    function cloneSymbol(symbol) {
      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};
    }

    /**
     * Creates a clone of `typedArray`.
     *
     * @private
     * @param {Object} typedArray The typed array to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the cloned typed array.
     */
    function cloneTypedArray(typedArray, isDeep) {
      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;
      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);
    }

    /**
     * Compares values to sort them in ascending order.
     *
     * @private
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {number} Returns the sort order indicator for `value`.
     */
    function compareAscending(value, other) {
      if (value !== other) {
        var valIsDefined = value !== undefined,
            valIsNull = value === null,
            valIsReflexive = value === value,
            valIsSymbol = isSymbol(value);

        var othIsDefined = other !== undefined,
            othIsNull = other === null,
            othIsReflexive = other === other,
            othIsSymbol = isSymbol(other);

        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||
            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||
            (valIsNull && othIsDefined && othIsReflexive) ||
            (!valIsDefined && othIsReflexive) ||
            !valIsReflexive) {
          return 1;
        }
        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||
            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||
            (othIsNull && valIsDefined && valIsReflexive) ||
            (!othIsDefined && valIsReflexive) ||
            !othIsReflexive) {
          return -1;
        }
      }
      return 0;
    }

    /**
     * Used by `_.orderBy` to compare multiple properties of a value to another
     * and stable sort them.
     *
     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,
     * specify an order of "desc" for descending or "asc" for ascending sort order
     * of corresponding values.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {boolean[]|string[]} orders The order to sort by for each property.
     * @returns {number} Returns the sort order indicator for `object`.
     */
    function compareMultiple(object, other, orders) {
      var index = -1,
          objCriteria = object.criteria,
          othCriteria = other.criteria,
          length = objCriteria.length,
          ordersLength = orders.length;

      while (++index < length) {
        var result = compareAscending(objCriteria[index], othCriteria[index]);
        if (result) {
          if (index >= ordersLength) {
            return result;
          }
          var order = orders[index];
          return result * (order == 'desc' ? -1 : 1);
        }
      }
      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications
      // that causes it, under certain circumstances, to provide the same value for
      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247
      // for more details.
      //
      // This also ensures a stable sort in V8 and other engines.
      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.
      return object.index - other.index;
    }

    /**
     * Creates an array that is the composition of partially applied arguments,
     * placeholders, and provided arguments into a single array of arguments.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to prepend to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgs(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersLength = holders.length,
          leftIndex = -1,
          leftLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(leftLength + rangeLength),
          isUncurried = !isCurried;

      while (++leftIndex < leftLength) {
        result[leftIndex] = partials[leftIndex];
      }
      while (++argsIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[holders[argsIndex]] = args[argsIndex];
        }
      }
      while (rangeLength--) {
        result[leftIndex++] = args[argsIndex++];
      }
      return result;
    }

    /**
     * This function is like `composeArgs` except that the arguments composition
     * is tailored for `_.partialRight`.
     *
     * @private
     * @param {Array} args The provided arguments.
     * @param {Array} partials The arguments to append to those provided.
     * @param {Array} holders The `partials` placeholder indexes.
     * @params {boolean} [isCurried] Specify composing for a curried function.
     * @returns {Array} Returns the new array of composed arguments.
     */
    function composeArgsRight(args, partials, holders, isCurried) {
      var argsIndex = -1,
          argsLength = args.length,
          holdersIndex = -1,
          holdersLength = holders.length,
          rightIndex = -1,
          rightLength = partials.length,
          rangeLength = nativeMax(argsLength - holdersLength, 0),
          result = Array(rangeLength + rightLength),
          isUncurried = !isCurried;

      while (++argsIndex < rangeLength) {
        result[argsIndex] = args[argsIndex];
      }
      var offset = argsIndex;
      while (++rightIndex < rightLength) {
        result[offset + rightIndex] = partials[rightIndex];
      }
      while (++holdersIndex < holdersLength) {
        if (isUncurried || argsIndex < argsLength) {
          result[offset + holders[holdersIndex]] = args[argsIndex++];
        }
      }
      return result;
    }

    /**
     * Copies the values of `source` to `array`.
     *
     * @private
     * @param {Array} source The array to copy values from.
     * @param {Array} [array=[]] The array to copy values to.
     * @returns {Array} Returns `array`.
     */
    function copyArray(source, array) {
      var index = -1,
          length = source.length;

      array || (array = Array(length));
      while (++index < length) {
        array[index] = source[index];
      }
      return array;
    }

    /**
     * Copies properties of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy properties from.
     * @param {Array} props The property identifiers to copy.
     * @param {Object} [object={}] The object to copy properties to.
     * @param {Function} [customizer] The function to customize copied values.
     * @returns {Object} Returns `object`.
     */
    function copyObject(source, props, object, customizer) {
      var isNew = !object;
      object || (object = {});

      var index = -1,
          length = props.length;

      while (++index < length) {
        var key = props[index];

        var newValue = customizer
          ? customizer(object[key], source[key], key, object, source)
          : undefined;

        if (newValue === undefined) {
          newValue = source[key];
        }
        if (isNew) {
          baseAssignValue(object, key, newValue);
        } else {
          assignValue(object, key, newValue);
        }
      }
      return object;
    }

    /**
     * Copies own symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbols(source, object) {
      return copyObject(source, getSymbols(source), object);
    }

    /**
     * Copies own and inherited symbols of `source` to `object`.
     *
     * @private
     * @param {Object} source The object to copy symbols from.
     * @param {Object} [object={}] The object to copy symbols to.
     * @returns {Object} Returns `object`.
     */
    function copySymbolsIn(source, object) {
      return copyObject(source, getSymbolsIn(source), object);
    }

    /**
     * Creates a function like `_.groupBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} [initializer] The accumulator object initializer.
     * @returns {Function} Returns the new aggregator function.
     */
    function createAggregator(setter, initializer) {
      return function(collection, iteratee) {
        var func = isArray(collection) ? arrayAggregator : baseAggregator,
            accumulator = initializer ? initializer() : {};

        return func(collection, setter, getIteratee(iteratee, 2), accumulator);
      };
    }

    /**
     * Creates a function like `_.assign`.
     *
     * @private
     * @param {Function} assigner The function to assign values.
     * @returns {Function} Returns the new assigner function.
     */
    function createAssigner(assigner) {
      return baseRest(function(object, sources) {
        var index = -1,
            length = sources.length,
            customizer = length > 1 ? sources[length - 1] : undefined,
            guard = length > 2 ? sources[2] : undefined;

        customizer = (assigner.length > 3 && typeof customizer == 'function')
          ? (length--, customizer)
          : undefined;

        if (guard && isIterateeCall(sources[0], sources[1], guard)) {
          customizer = length < 3 ? undefined : customizer;
          length = 1;
        }
        object = Object(object);
        while (++index < length) {
          var source = sources[index];
          if (source) {
            assigner(object, source, index, customizer);
          }
        }
        return object;
      });
    }

    /**
     * Creates a `baseEach` or `baseEachRight` function.
     *
     * @private
     * @param {Function} eachFunc The function to iterate over a collection.
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseEach(eachFunc, fromRight) {
      return function(collection, iteratee) {
        if (collection == null) {
          return collection;
        }
        if (!isArrayLike(collection)) {
          return eachFunc(collection, iteratee);
        }
        var length = collection.length,
            index = fromRight ? length : -1,
            iterable = Object(collection);

        while ((fromRight ? index-- : ++index < length)) {
          if (iteratee(iterable[index], index, iterable) === false) {
            break;
          }
        }
        return collection;
      };
    }

    /**
     * Creates a base function for methods like `_.forIn` and `_.forOwn`.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new base function.
     */
    function createBaseFor(fromRight) {
      return function(object, iteratee, keysFunc) {
        var index = -1,
            iterable = Object(object),
            props = keysFunc(object),
            length = props.length;

        while (length--) {
          var key = props[fromRight ? length : ++index];
          if (iteratee(iterable[key], key, iterable) === false) {
            break;
          }
        }
        return object;
      };
    }

    /**
     * Creates a function that wraps `func` to invoke it with the optional `this`
     * binding of `thisArg`.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createBind(func, bitmask, thisArg) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return fn.apply(isBind ? thisArg : this, arguments);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.lowerFirst`.
     *
     * @private
     * @param {string} methodName The name of the `String` case method to use.
     * @returns {Function} Returns the new case function.
     */
    function createCaseFirst(methodName) {
      return function(string) {
        string = toString(string);

        var strSymbols = hasUnicode(string)
          ? stringToArray(string)
          : undefined;

        var chr = strSymbols
          ? strSymbols[0]
          : string.charAt(0);

        var trailing = strSymbols
          ? castSlice(strSymbols, 1).join('')
          : string.slice(1);

        return chr[methodName]() + trailing;
      };
    }

    /**
     * Creates a function like `_.camelCase`.
     *
     * @private
     * @param {Function} callback The function to combine each word.
     * @returns {Function} Returns the new compounder function.
     */
    function createCompounder(callback) {
      return function(string) {
        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');
      };
    }

    /**
     * Creates a function that produces an instance of `Ctor` regardless of
     * whether it was invoked as part of a `new` expression or by `call` or `apply`.
     *
     * @private
     * @param {Function} Ctor The constructor to wrap.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCtor(Ctor) {
      return function() {
        // Use a `switch` statement to work with class constructors. See
        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist
        // for more details.
        var args = arguments;
        switch (args.length) {
          case 0: return new Ctor;
          case 1: return new Ctor(args[0]);
          case 2: return new Ctor(args[0], args[1]);
          case 3: return new Ctor(args[0], args[1], args[2]);
          case 4: return new Ctor(args[0], args[1], args[2], args[3]);
          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);
          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);
          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);
        }
        var thisBinding = baseCreate(Ctor.prototype),
            result = Ctor.apply(thisBinding, args);

        // Mimic the constructor's `return` behavior.
        // See https://es5.github.io/#x13.2.2 for more details.
        return isObject(result) ? result : thisBinding;
      };
    }

    /**
     * Creates a function that wraps `func` to enable currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {number} arity The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createCurry(func, bitmask, arity) {
      var Ctor = createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length,
            placeholder = getHolder(wrapper);

        while (index--) {
          args[index] = arguments[index];
        }
        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)
          ? []
          : replaceHolders(args, placeholder);

        length -= holders.length;
        if (length < arity) {
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, undefined,
            args, holders, undefined, undefined, arity - length);
        }
        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;
        return apply(fn, this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.find` or `_.findLast` function.
     *
     * @private
     * @param {Function} findIndexFunc The function to find the collection index.
     * @returns {Function} Returns the new find function.
     */
    function createFind(findIndexFunc) {
      return function(collection, predicate, fromIndex) {
        var iterable = Object(collection);
        if (!isArrayLike(collection)) {
          var iteratee = getIteratee(predicate, 3);
          collection = keys(collection);
          predicate = function(key) { return iteratee(iterable[key], key, iterable); };
        }
        var index = findIndexFunc(collection, predicate, fromIndex);
        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;
      };
    }

    /**
     * Creates a `_.flow` or `_.flowRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new flow function.
     */
    function createFlow(fromRight) {
      return flatRest(function(funcs) {
        var length = funcs.length,
            index = length,
            prereq = LodashWrapper.prototype.thru;

        if (fromRight) {
          funcs.reverse();
        }
        while (index--) {
          var func = funcs[index];
          if (typeof func != 'function') {
            throw new TypeError(FUNC_ERROR_TEXT);
          }
          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {
            var wrapper = new LodashWrapper([], true);
          }
        }
        index = wrapper ? index : length;
        while (++index < length) {
          func = funcs[index];

          var funcName = getFuncName(func),
              data = funcName == 'wrapper' ? getData(func) : undefined;

          if (data && isLaziable(data[0]) &&
                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&
                !data[4].length && data[9] == 1
              ) {
            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);
          } else {
            wrapper = (func.length == 1 && isLaziable(func))
              ? wrapper[funcName]()
              : wrapper.thru(func);
          }
        }
        return function() {
          var args = arguments,
              value = args[0];

          if (wrapper && args.length == 1 && isArray(value)) {
            return wrapper.plant(value).value();
          }
          var index = 0,
              result = length ? funcs[index].apply(this, args) : value;

          while (++index < length) {
            result = funcs[index].call(this, result);
          }
          return result;
        };
      });
    }

    /**
     * Creates a function that wraps `func` to invoke it with optional `this`
     * binding of `thisArg`, partial application, and currying.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [partialsRight] The arguments to append to those provided
     *  to the new function.
     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {
      var isAry = bitmask & WRAP_ARY_FLAG,
          isBind = bitmask & WRAP_BIND_FLAG,
          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,
          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),
          isFlip = bitmask & WRAP_FLIP_FLAG,
          Ctor = isBindKey ? undefined : createCtor(func);

      function wrapper() {
        var length = arguments.length,
            args = Array(length),
            index = length;

        while (index--) {
          args[index] = arguments[index];
        }
        if (isCurried) {
          var placeholder = getHolder(wrapper),
              holdersCount = countHolders(args, placeholder);
        }
        if (partials) {
          args = composeArgs(args, partials, holders, isCurried);
        }
        if (partialsRight) {
          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);
        }
        length -= holdersCount;
        if (isCurried && length < arity) {
          var newHolders = replaceHolders(args, placeholder);
          return createRecurry(
            func, bitmask, createHybrid, wrapper.placeholder, thisArg,
            args, newHolders, argPos, ary, arity - length
          );
        }
        var thisBinding = isBind ? thisArg : this,
            fn = isBindKey ? thisBinding[func] : func;

        length = args.length;
        if (argPos) {
          args = reorder(args, argPos);
        } else if (isFlip && length > 1) {
          args.reverse();
        }
        if (isAry && ary < length) {
          args.length = ary;
        }
        if (this && this !== root && this instanceof wrapper) {
          fn = Ctor || createCtor(fn);
        }
        return fn.apply(thisBinding, args);
      }
      return wrapper;
    }

    /**
     * Creates a function like `_.invertBy`.
     *
     * @private
     * @param {Function} setter The function to set accumulator values.
     * @param {Function} toIteratee The function to resolve iteratees.
     * @returns {Function} Returns the new inverter function.
     */
    function createInverter(setter, toIteratee) {
      return function(object, iteratee) {
        return baseInverter(object, setter, toIteratee(iteratee), {});
      };
    }

    /**
     * Creates a function that performs a mathematical operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @param {number} [defaultValue] The value used for `undefined` arguments.
     * @returns {Function} Returns the new mathematical operation function.
     */
    function createMathOperation(operator, defaultValue) {
      return function(value, other) {
        var result;
        if (value === undefined && other === undefined) {
          return defaultValue;
        }
        if (value !== undefined) {
          result = value;
        }
        if (other !== undefined) {
          if (result === undefined) {
            return other;
          }
          if (typeof value == 'string' || typeof other == 'string') {
            value = baseToString(value);
            other = baseToString(other);
          } else {
            value = baseToNumber(value);
            other = baseToNumber(other);
          }
          result = operator(value, other);
        }
        return result;
      };
    }

    /**
     * Creates a function like `_.over`.
     *
     * @private
     * @param {Function} arrayFunc The function to iterate over iteratees.
     * @returns {Function} Returns the new over function.
     */
    function createOver(arrayFunc) {
      return flatRest(function(iteratees) {
        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));
        return baseRest(function(args) {
          var thisArg = this;
          return arrayFunc(iteratees, function(iteratee) {
            return apply(iteratee, thisArg, args);
          });
        });
      });
    }

    /**
     * Creates the padding for `string` based on `length`. The `chars` string
     * is truncated if the number of characters exceeds `length`.
     *
     * @private
     * @param {number} length The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padding for `string`.
     */
    function createPadding(length, chars) {
      chars = chars === undefined ? ' ' : baseToString(chars);

      var charsLength = chars.length;
      if (charsLength < 2) {
        return charsLength ? baseRepeat(chars, length) : chars;
      }
      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));
      return hasUnicode(chars)
        ? castSlice(stringToArray(result), 0, length).join('')
        : result.slice(0, length);
    }

    /**
     * Creates a function that wraps `func` to invoke it with the `this` binding
     * of `thisArg` and `partials` prepended to the arguments it receives.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {Array} partials The arguments to prepend to those provided to
     *  the new function.
     * @returns {Function} Returns the new wrapped function.
     */
    function createPartial(func, bitmask, thisArg, partials) {
      var isBind = bitmask & WRAP_BIND_FLAG,
          Ctor = createCtor(func);

      function wrapper() {
        var argsIndex = -1,
            argsLength = arguments.length,
            leftIndex = -1,
            leftLength = partials.length,
            args = Array(leftLength + argsLength),
            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;

        while (++leftIndex < leftLength) {
          args[leftIndex] = partials[leftIndex];
        }
        while (argsLength--) {
          args[leftIndex++] = arguments[++argsIndex];
        }
        return apply(fn, isBind ? thisArg : this, args);
      }
      return wrapper;
    }

    /**
     * Creates a `_.range` or `_.rangeRight` function.
     *
     * @private
     * @param {boolean} [fromRight] Specify iterating from right to left.
     * @returns {Function} Returns the new range function.
     */
    function createRange(fromRight) {
      return function(start, end, step) {
        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {
          end = step = undefined;
        }
        // Ensure the sign of `-0` is preserved.
        start = toFinite(start);
        if (end === undefined) {
          end = start;
          start = 0;
        } else {
          end = toFinite(end);
        }
        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);
        return baseRange(start, end, step, fromRight);
      };
    }

    /**
     * Creates a function that performs a relational operation on two values.
     *
     * @private
     * @param {Function} operator The function to perform the operation.
     * @returns {Function} Returns the new relational operation function.
     */
    function createRelationalOperation(operator) {
      return function(value, other) {
        if (!(typeof value == 'string' && typeof other == 'string')) {
          value = toNumber(value);
          other = toNumber(other);
        }
        return operator(value, other);
      };
    }

    /**
     * Creates a function that wraps `func` to continue currying.
     *
     * @private
     * @param {Function} func The function to wrap.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @param {Function} wrapFunc The function to create the `func` wrapper.
     * @param {*} placeholder The placeholder value.
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to prepend to those provided to
     *  the new function.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {
      var isCurry = bitmask & WRAP_CURRY_FLAG,
          newHolders = isCurry ? holders : undefined,
          newHoldersRight = isCurry ? undefined : holders,
          newPartials = isCurry ? partials : undefined,
          newPartialsRight = isCurry ? undefined : partials;

      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);
      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);

      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {
        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);
      }
      var newData = [
        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,
        newHoldersRight, argPos, ary, arity
      ];

      var result = wrapFunc.apply(undefined, newData);
      if (isLaziable(func)) {
        setData(result, newData);
      }
      result.placeholder = placeholder;
      return setWrapToString(result, func, bitmask);
    }

    /**
     * Creates a function like `_.round`.
     *
     * @private
     * @param {string} methodName The name of the `Math` method to use when rounding.
     * @returns {Function} Returns the new round function.
     */
    function createRound(methodName) {
      var func = Math[methodName];
      return function(number, precision) {
        number = toNumber(number);
        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);
        if (precision && nativeIsFinite(number)) {
          // Shift with exponential notation to avoid floating-point issues.
          // See [MDN](https://mdn.io/round#Examples) for more details.
          var pair = (toString(number) + 'e').split('e'),
              value = func(pair[0] + 'e' + (+pair[1] + precision));

          pair = (toString(value) + 'e').split('e');
          return +(pair[0] + 'e' + (+pair[1] - precision));
        }
        return func(number);
      };
    }

    /**
     * Creates a set object of `values`.
     *
     * @private
     * @param {Array} values The values to add to the set.
     * @returns {Object} Returns the new set.
     */
    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
      return new Set(values);
    };

    /**
     * Creates a `_.toPairs` or `_.toPairsIn` function.
     *
     * @private
     * @param {Function} keysFunc The function to get the keys of a given object.
     * @returns {Function} Returns the new pairs function.
     */
    function createToPairs(keysFunc) {
      return function(object) {
        var tag = getTag(object);
        if (tag == mapTag) {
          return mapToArray(object);
        }
        if (tag == setTag) {
          return setToPairs(object);
        }
        return baseToPairs(object, keysFunc(object));
      };
    }

    /**
     * Creates a function that either curries or invokes `func` with optional
     * `this` binding and partially applied arguments.
     *
     * @private
     * @param {Function|string} func The function or method name to wrap.
     * @param {number} bitmask The bitmask flags.
     *    1 - `_.bind`
     *    2 - `_.bindKey`
     *    4 - `_.curry` or `_.curryRight` of a bound function
     *    8 - `_.curry`
     *   16 - `_.curryRight`
     *   32 - `_.partial`
     *   64 - `_.partialRight`
     *  128 - `_.rearg`
     *  256 - `_.ary`
     *  512 - `_.flip`
     * @param {*} [thisArg] The `this` binding of `func`.
     * @param {Array} [partials] The arguments to be partially applied.
     * @param {Array} [holders] The `partials` placeholder indexes.
     * @param {Array} [argPos] The argument positions of the new function.
     * @param {number} [ary] The arity cap of `func`.
     * @param {number} [arity] The arity of `func`.
     * @returns {Function} Returns the new wrapped function.
     */
    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {
      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;
      if (!isBindKey && typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var length = partials ? partials.length : 0;
      if (!length) {
        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);
        partials = holders = undefined;
      }
      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);
      arity = arity === undefined ? arity : toInteger(arity);
      length -= holders ? holders.length : 0;

      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {
        var partialsRight = partials,
            holdersRight = holders;

        partials = holders = undefined;
      }
      var data = isBindKey ? undefined : getData(func);

      var newData = [
        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,
        argPos, ary, arity
      ];

      if (data) {
        mergeData(newData, data);
      }
      func = newData[0];
      bitmask = newData[1];
      thisArg = newData[2];
      partials = newData[3];
      holders = newData[4];
      arity = newData[9] = newData[9] === undefined
        ? (isBindKey ? 0 : func.length)
        : nativeMax(newData[9] - length, 0);

      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {
        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);
      }
      if (!bitmask || bitmask == WRAP_BIND_FLAG) {
        var result = createBind(func, bitmask, thisArg);
      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {
        result = createCurry(func, bitmask, arity);
      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {
        result = createPartial(func, bitmask, thisArg, partials);
      } else {
        result = createHybrid.apply(undefined, newData);
      }
      var setter = data ? baseSetData : setData;
      return setWrapToString(setter(result, newData), func, bitmask);
    }

    /**
     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties
     * of source objects to the destination object for all destination properties
     * that resolve to `undefined`.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to assign.
     * @param {Object} object The parent object of `objValue`.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsAssignIn(objValue, srcValue, key, object) {
      if (objValue === undefined ||
          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {
        return srcValue;
      }
      return objValue;
    }

    /**
     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source
     * objects into destination objects that are passed thru.
     *
     * @private
     * @param {*} objValue The destination value.
     * @param {*} srcValue The source value.
     * @param {string} key The key of the property to merge.
     * @param {Object} object The parent object of `objValue`.
     * @param {Object} source The parent object of `srcValue`.
     * @param {Object} [stack] Tracks traversed source values and their merged
     *  counterparts.
     * @returns {*} Returns the value to assign.
     */
    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {
      if (isObject(objValue) && isObject(srcValue)) {
        // Recursively merge objects and arrays (susceptible to call stack limits).
        stack.set(srcValue, objValue);
        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);
        stack['delete'](srcValue);
      }
      return objValue;
    }

    /**
     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain
     * objects.
     *
     * @private
     * @param {*} value The value to inspect.
     * @param {string} key The key of the property to inspect.
     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.
     */
    function customOmitClone(value) {
      return isPlainObject(value) ? undefined : value;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for arrays with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Array} array The array to compare.
     * @param {Array} other The other array to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `array` and `other` objects.
     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.
     */
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          arrLength = array.length,
          othLength = other.length;

      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      // Check that cyclic values are equal.
      var arrStacked = stack.get(array);
      var othStacked = stack.get(other);
      if (arrStacked && othStacked) {
        return arrStacked == other && othStacked == array;
      }
      var index = -1,
          result = true,
          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;

      stack.set(array, other);
      stack.set(other, array);

      // Ignore non-index properties.
      while (++index < arrLength) {
        var arrValue = array[index],
            othValue = other[index];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, arrValue, index, other, array, stack)
            : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== undefined) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        // Recursively compare arrays (susceptible to call stack limits).
        if (seen) {
          if (!arraySome(other, function(othValue, othIndex) {
                if (!cacheHas(seen, othIndex) &&
                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
                  return seen.push(othIndex);
                }
              })) {
            result = false;
            break;
          }
        } else if (!(
              arrValue === othValue ||
                equalFunc(arrValue, othValue, bitmask, customizer, stack)
            )) {
          result = false;
          break;
        }
      }
      stack['delete'](array);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for comparing objects of
     * the same `toStringTag`.
     *
     * **Note:** This function only supports comparing values with tags of
     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {string} tag The `toStringTag` of the objects to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if ((object.byteLength != other.byteLength) ||
              (object.byteOffset != other.byteOffset)) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;

        case arrayBufferTag:
          if ((object.byteLength != other.byteLength) ||
              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {
            return false;
          }
          return true;

        case boolTag:
        case dateTag:
        case numberTag:
          // Coerce booleans to `1` or `0` and dates to milliseconds.
          // Invalid dates are coerced to `NaN`.
          return eq(+object, +other);

        case errorTag:
          return object.name == other.name && object.message == other.message;

        case regexpTag:
        case stringTag:
          // Coerce regexes to strings and treat strings, primitives and objects,
          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring
          // for more details.
          return object == (other + '');

        case mapTag:
          var convert = mapToArray;

        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);

          if (object.size != other.size && !isPartial) {
            return false;
          }
          // Assume cyclic values are equal.
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;

          // Recursively compare objects (susceptible to call stack limits).
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack['delete'](object);
          return result;

        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }

    /**
     * A specialized version of `baseIsEqualDeep` for objects with support for
     * partial deep comparisons.
     *
     * @private
     * @param {Object} object The object to compare.
     * @param {Object} other The other object to compare.
     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.
     * @param {Function} customizer The function to customize comparisons.
     * @param {Function} equalFunc The function to determine equivalents of values.
     * @param {Object} stack Tracks traversed `object` and `other` objects.
     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.
     */
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,
          objProps = getAllKeys(object),
          objLength = objProps.length,
          othProps = getAllKeys(other),
          othLength = othProps.length;

      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      // Check that cyclic values are equal.
      var objStacked = stack.get(object);
      var othStacked = stack.get(other);
      if (objStacked && othStacked) {
        return objStacked == other && othStacked == object;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);

      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key],
            othValue = other[key];

        if (customizer) {
          var compared = isPartial
            ? customizer(othValue, objValue, key, other, object, stack)
            : customizer(objValue, othValue, key, object, other, stack);
        }
        // Recursively compare objects (susceptible to call stack limits).
        if (!(compared === undefined
              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))
              : compared
            )) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == 'constructor');
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor,
            othCtor = other.constructor;

        // Non `Object` object instances with different constructors are not equal.
        if (objCtor != othCtor &&
            ('constructor' in object && 'constructor' in other) &&
            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&
              typeof othCtor == 'function' && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack['delete'](object);
      stack['delete'](other);
      return result;
    }

    /**
     * A specialized version of `baseRest` which flattens the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @returns {Function} Returns the new function.
     */
    function flatRest(func) {
      return setToString(overRest(func, undefined, flatten), func + '');
    }

    /**
     * Creates an array of own enumerable property names and symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys, getSymbols);
    }

    /**
     * Creates an array of own and inherited enumerable property names and
     * symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names and symbols.
     */
    function getAllKeysIn(object) {
      return baseGetAllKeys(object, keysIn, getSymbolsIn);
    }

    /**
     * Gets metadata for `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {*} Returns the metadata for `func`.
     */
    var getData = !metaMap ? noop : function(func) {
      return metaMap.get(func);
    };

    /**
     * Gets the name of `func`.
     *
     * @private
     * @param {Function} func The function to query.
     * @returns {string} Returns the function name.
     */
    function getFuncName(func) {
      var result = (func.name + ''),
          array = realNames[result],
          length = hasOwnProperty.call(realNames, result) ? array.length : 0;

      while (length--) {
        var data = array[length],
            otherFunc = data.func;
        if (otherFunc == null || otherFunc == func) {
          return data.name;
        }
      }
      return result;
    }

    /**
     * Gets the argument placeholder value for `func`.
     *
     * @private
     * @param {Function} func The function to inspect.
     * @returns {*} Returns the placeholder value.
     */
    function getHolder(func) {
      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;
      return object.placeholder;
    }

    /**
     * Gets the appropriate "iteratee" function. If `_.iteratee` is customized,
     * this function returns the custom method, otherwise it returns `baseIteratee`.
     * If arguments are provided, the chosen function is invoked with them and
     * its result is returned.
     *
     * @private
     * @param {*} [value] The value to convert to an iteratee.
     * @param {number} [arity] The arity of the created iteratee.
     * @returns {Function} Returns the chosen function or its result.
     */
    function getIteratee() {
      var result = lodash.iteratee || iteratee;
      result = result === iteratee ? baseIteratee : result;
      return arguments.length ? result(arguments[0], arguments[1]) : result;
    }

    /**
     * Gets the data for `map`.
     *
     * @private
     * @param {Object} map The map to query.
     * @param {string} key The reference key.
     * @returns {*} Returns the map data.
     */
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key)
        ? data[typeof key == 'string' ? 'string' : 'hash']
        : data.map;
    }

    /**
     * Gets the property names, values, and compare flags of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the match data of `object`.
     */
    function getMatchData(object) {
      var result = keys(object),
          length = result.length;

      while (length--) {
        var key = result[length],
            value = object[key];

        result[length] = [key, value, isStrictComparable(value)];
      }
      return result;
    }

    /**
     * Gets the native function at `key` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the method to get.
     * @returns {*} Returns the function if it's native, else `undefined`.
     */
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : undefined;
    }

    /**
     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the raw `toStringTag`.
     */
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag),
          tag = value[symToStringTag];

      try {
        value[symToStringTag] = undefined;
        var unmasked = true;
      } catch (e) {}

      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }

    /**
     * Creates an array of the own enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };

    /**
     * Creates an array of the own and inherited enumerable symbols of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of symbols.
     */
    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {
      var result = [];
      while (object) {
        arrayPush(result, getSymbols(object));
        object = getPrototype(object);
      }
      return result;
    };

    /**
     * Gets the `toStringTag` of `value`.
     *
     * @private
     * @param {*} value The value to query.
     * @returns {string} Returns the `toStringTag`.
     */
    var getTag = baseGetTag;

    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.
    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||
        (Map && getTag(new Map) != mapTag) ||
        (Promise && getTag(Promise.resolve()) != promiseTag) ||
        (Set && getTag(new Set) != setTag) ||
        (WeakMap && getTag(new WeakMap) != weakMapTag)) {
      getTag = function(value) {
        var result = baseGetTag(value),
            Ctor = result == objectTag ? value.constructor : undefined,
            ctorString = Ctor ? toSource(Ctor) : '';

        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString: return dataViewTag;
            case mapCtorString: return mapTag;
            case promiseCtorString: return promiseTag;
            case setCtorString: return setTag;
            case weakMapCtorString: return weakMapTag;
          }
        }
        return result;
      };
    }

    /**
     * Gets the view, applying any `transforms` to the `start` and `end` positions.
     *
     * @private
     * @param {number} start The start of the view.
     * @param {number} end The end of the view.
     * @param {Array} transforms The transformations to apply to the view.
     * @returns {Object} Returns an object containing the `start` and `end`
     *  positions of the view.
     */
    function getView(start, end, transforms) {
      var index = -1,
          length = transforms.length;

      while (++index < length) {
        var data = transforms[index],
            size = data.size;

        switch (data.type) {
          case 'drop':      start += size; break;
          case 'dropRight': end -= size; break;
          case 'take':      end = nativeMin(end, start + size); break;
          case 'takeRight': start = nativeMax(start, end - size); break;
        }
      }
      return { 'start': start, 'end': end };
    }

    /**
     * Extracts wrapper details from the `source` body comment.
     *
     * @private
     * @param {string} source The source to inspect.
     * @returns {Array} Returns the wrapper details.
     */
    function getWrapDetails(source) {
      var match = source.match(reWrapDetails);
      return match ? match[1].split(reSplitDetails) : [];
    }

    /**
     * Checks if `path` exists on `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @param {Function} hasFunc The function to check properties.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     */
    function hasPath(object, path, hasFunc) {
      path = castPath(path, object);

      var index = -1,
          length = path.length,
          result = false;

      while (++index < length) {
        var key = toKey(path[index]);
        if (!(result = object != null && hasFunc(object, key))) {
          break;
        }
        object = object[key];
      }
      if (result || ++index != length) {
        return result;
      }
      length = object == null ? 0 : object.length;
      return !!length && isLength(length) && isIndex(key, length) &&
        (isArray(object) || isArguments(object));
    }

    /**
     * Initializes an array clone.
     *
     * @private
     * @param {Array} array The array to clone.
     * @returns {Array} Returns the initialized clone.
     */
    function initCloneArray(array) {
      var length = array.length,
          result = new array.constructor(length);

      // Add properties assigned by `RegExp#exec`.
      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {
        result.index = array.index;
        result.input = array.input;
      }
      return result;
    }

    /**
     * Initializes an object clone.
     *
     * @private
     * @param {Object} object The object to clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneObject(object) {
      return (typeof object.constructor == 'function' && !isPrototype(object))
        ? baseCreate(getPrototype(object))
        : {};
    }

    /**
     * Initializes an object clone based on its `toStringTag`.
     *
     * **Note:** This function only supports cloning values with tags of
     * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.
     *
     * @private
     * @param {Object} object The object to clone.
     * @param {string} tag The `toStringTag` of the object to clone.
     * @param {boolean} [isDeep] Specify a deep clone.
     * @returns {Object} Returns the initialized clone.
     */
    function initCloneByTag(object, tag, isDeep) {
      var Ctor = object.constructor;
      switch (tag) {
        case arrayBufferTag:
          return cloneArrayBuffer(object);

        case boolTag:
        case dateTag:
          return new Ctor(+object);

        case dataViewTag:
          return cloneDataView(object, isDeep);

        case float32Tag: case float64Tag:
        case int8Tag: case int16Tag: case int32Tag:
        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:
          return cloneTypedArray(object, isDeep);

        case mapTag:
          return new Ctor;

        case numberTag:
        case stringTag:
          return new Ctor(object);

        case regexpTag:
          return cloneRegExp(object);

        case setTag:
          return new Ctor;

        case symbolTag:
          return cloneSymbol(object);
      }
    }

    /**
     * Inserts wrapper `details` in a comment at the top of the `source` body.
     *
     * @private
     * @param {string} source The source to modify.
     * @returns {Array} details The details to insert.
     * @returns {string} Returns the modified source.
     */
    function insertWrapDetails(source, details) {
      var length = details.length;
      if (!length) {
        return source;
      }
      var lastIndex = length - 1;
      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];
      details = details.join(length > 2 ? ', ' : ' ');
      return source.replace(reWrapComment, '{\n/* [wrapped with ' + details + '] */\n');
    }

    /**
     * Checks if `value` is a flattenable `arguments` object or array.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
     */
    function isFlattenable(value) {
      return isArray(value) || isArguments(value) ||
        !!(spreadableSymbol && value && value[spreadableSymbol]);
    }

    /**
     * Checks if `value` is a valid array-like index.
     *
     * @private
     * @param {*} value The value to check.
     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
     */
    function isIndex(value, length) {
      var type = typeof value;
      length = length == null ? MAX_SAFE_INTEGER : length;

      return !!length &&
        (type == 'number' ||
          (type != 'symbol' && reIsUint.test(value))) &&
            (value > -1 && value % 1 == 0 && value < length);
    }

    /**
     * Checks if the given arguments are from an iteratee call.
     *
     * @private
     * @param {*} value The potential iteratee value argument.
     * @param {*} index The potential iteratee index or key argument.
     * @param {*} object The potential iteratee object argument.
     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,
     *  else `false`.
     */
    function isIterateeCall(value, index, object) {
      if (!isObject(object)) {
        return false;
      }
      var type = typeof index;
      if (type == 'number'
            ? (isArrayLike(object) && isIndex(index, object.length))
            : (type == 'string' && index in object)
          ) {
        return eq(object[index], value);
      }
      return false;
    }

    /**
     * Checks if `value` is a property name and not a property path.
     *
     * @private
     * @param {*} value The value to check.
     * @param {Object} [object] The object to query keys on.
     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
     */
    function isKey(value, object) {
      if (isArray(value)) {
        return false;
      }
      var type = typeof value;
      if (type == 'number' || type == 'symbol' || type == 'boolean' ||
          value == null || isSymbol(value)) {
        return true;
      }
      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
        (object != null && value in Object(object));
    }

    /**
     * Checks if `value` is suitable for use as unique object key.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
     */
    function isKeyable(value) {
      var type = typeof value;
      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
        ? (value !== '__proto__')
        : (value === null);
    }

    /**
     * Checks if `func` has a lazy counterpart.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,
     *  else `false`.
     */
    function isLaziable(func) {
      var funcName = getFuncName(func),
          other = lodash[funcName];

      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {
        return false;
      }
      if (func === other) {
        return true;
      }
      var data = getData(other);
      return !!data && func === data[0];
    }

    /**
     * Checks if `func` has its source masked.
     *
     * @private
     * @param {Function} func The function to check.
     * @returns {boolean} Returns `true` if `func` is masked, else `false`.
     */
    function isMasked(func) {
      return !!maskSrcKey && (maskSrcKey in func);
    }

    /**
     * Checks if `func` is capable of being masked.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.
     */
    var isMaskable = coreJsData ? isFunction : stubFalse;

    /**
     * Checks if `value` is likely a prototype object.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.
     */
    function isPrototype(value) {
      var Ctor = value && value.constructor,
          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;

      return value === proto;
    }

    /**
     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` if suitable for strict
     *  equality comparisons, else `false`.
     */
    function isStrictComparable(value) {
      return value === value && !isObject(value);
    }

    /**
     * A specialized version of `matchesProperty` for source values suitable
     * for strict equality comparisons, i.e. `===`.
     *
     * @private
     * @param {string} key The key of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     */
    function matchesStrictComparable(key, srcValue) {
      return function(object) {
        if (object == null) {
          return false;
        }
        return object[key] === srcValue &&
          (srcValue !== undefined || (key in Object(object)));
      };
    }

    /**
     * A specialized version of `_.memoize` which clears the memoized function's
     * cache when it exceeds `MAX_MEMOIZE_SIZE`.
     *
     * @private
     * @param {Function} func The function to have its output memoized.
     * @returns {Function} Returns the new memoized function.
     */
    function memoizeCapped(func) {
      var result = memoize(func, function(key) {
        if (cache.size === MAX_MEMOIZE_SIZE) {
          cache.clear();
        }
        return key;
      });

      var cache = result.cache;
      return result;
    }

    /**
     * Merges the function metadata of `source` into `data`.
     *
     * Merging metadata reduces the number of wrappers used to invoke a function.
     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`
     * may be applied regardless of execution order. Methods like `_.ary` and
     * `_.rearg` modify function arguments, making the order in which they are
     * executed important, preventing the merging of metadata. However, we make
     * an exception for a safe combined case where curried functions have `_.ary`
     * and or `_.rearg` applied.
     *
     * @private
     * @param {Array} data The destination metadata.
     * @param {Array} source The source metadata.
     * @returns {Array} Returns `data`.
     */
    function mergeData(data, source) {
      var bitmask = data[1],
          srcBitmask = source[1],
          newBitmask = bitmask | srcBitmask,
          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);

      var isCombo =
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||
        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||
        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));

      // Exit early if metadata can't be merged.
      if (!(isCommon || isCombo)) {
        return data;
      }
      // Use source `thisArg` if available.
      if (srcBitmask & WRAP_BIND_FLAG) {
        data[2] = source[2];
        // Set when currying a bound function.
        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;
      }
      // Compose partial arguments.
      var value = source[3];
      if (value) {
        var partials = data[3];
        data[3] = partials ? composeArgs(partials, value, source[4]) : value;
        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];
      }
      // Compose partial right arguments.
      value = source[5];
      if (value) {
        partials = data[5];
        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;
        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];
      }
      // Use source `argPos` if available.
      value = source[7];
      if (value) {
        data[7] = value;
      }
      // Use source `ary` if it's smaller.
      if (srcBitmask & WRAP_ARY_FLAG) {
        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);
      }
      // Use source `arity` if one is not provided.
      if (data[9] == null) {
        data[9] = source[9];
      }
      // Use source `func` and merge bitmasks.
      data[0] = source[0];
      data[1] = newBitmask;

      return data;
    }

    /**
     * This function is like
     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * except that it includes inherited enumerable properties.
     *
     * @private
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     */
    function nativeKeysIn(object) {
      var result = [];
      if (object != null) {
        for (var key in Object(object)) {
          result.push(key);
        }
      }
      return result;
    }

    /**
     * Converts `value` to a string using `Object.prototype.toString`.
     *
     * @private
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     */
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }

    /**
     * A specialized version of `baseRest` which transforms the rest array.
     *
     * @private
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @param {Function} transform The rest array transform.
     * @returns {Function} Returns the new function.
     */
    function overRest(func, start, transform) {
      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);
      return function() {
        var args = arguments,
            index = -1,
            length = nativeMax(args.length - start, 0),
            array = Array(length);

        while (++index < length) {
          array[index] = args[start + index];
        }
        index = -1;
        var otherArgs = Array(start + 1);
        while (++index < start) {
          otherArgs[index] = args[index];
        }
        otherArgs[start] = transform(array);
        return apply(func, this, otherArgs);
      };
    }

    /**
     * Gets the parent value at `path` of `object`.
     *
     * @private
     * @param {Object} object The object to query.
     * @param {Array} path The path to get the parent value of.
     * @returns {*} Returns the parent value.
     */
    function parent(object, path) {
      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));
    }

    /**
     * Reorder `array` according to the specified indexes where the element at
     * the first index is assigned as the first element, the element at
     * the second index is assigned as the second element, and so on.
     *
     * @private
     * @param {Array} array The array to reorder.
     * @param {Array} indexes The arranged array indexes.
     * @returns {Array} Returns `array`.
     */
    function reorder(array, indexes) {
      var arrLength = array.length,
          length = nativeMin(indexes.length, arrLength),
          oldArray = copyArray(array);

      while (length--) {
        var index = indexes[length];
        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;
      }
      return array;
    }

    /**
     * Gets the value at `key`, unless `key` is "__proto__" or "constructor".
     *
     * @private
     * @param {Object} object The object to query.
     * @param {string} key The key of the property to get.
     * @returns {*} Returns the property value.
     */
    function safeGet(object, key) {
      if (key === 'constructor' && typeof object[key] === 'function') {
        return;
      }

      if (key == '__proto__') {
        return;
      }

      return object[key];
    }

    /**
     * Sets metadata for `func`.
     *
     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short
     * period of time, it will trip its breaker and transition to an identity
     * function to avoid garbage collection pauses in V8. See
     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)
     * for more details.
     *
     * @private
     * @param {Function} func The function to associate metadata with.
     * @param {*} data The metadata.
     * @returns {Function} Returns `func`.
     */
    var setData = shortOut(baseSetData);

    /**
     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).
     *
     * @private
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @returns {number|Object} Returns the timer id or timeout object.
     */
    var setTimeout = ctxSetTimeout || function(func, wait) {
      return root.setTimeout(func, wait);
    };

    /**
     * Sets the `toString` method of `func` to return `string`.
     *
     * @private
     * @param {Function} func The function to modify.
     * @param {Function} string The `toString` result.
     * @returns {Function} Returns `func`.
     */
    var setToString = shortOut(baseSetToString);

    /**
     * Sets the `toString` method of `wrapper` to mimic the source of `reference`
     * with wrapper details in a comment at the top of the source body.
     *
     * @private
     * @param {Function} wrapper The function to modify.
     * @param {Function} reference The reference function.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Function} Returns `wrapper`.
     */
    function setWrapToString(wrapper, reference, bitmask) {
      var source = (reference + '');
      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));
    }

    /**
     * Creates a function that'll short out and invoke `identity` instead
     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`
     * milliseconds.
     *
     * @private
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new shortable function.
     */
    function shortOut(func) {
      var count = 0,
          lastCalled = 0;

      return function() {
        var stamp = nativeNow(),
            remaining = HOT_SPAN - (stamp - lastCalled);

        lastCalled = stamp;
        if (remaining > 0) {
          if (++count >= HOT_COUNT) {
            return arguments[0];
          }
        } else {
          count = 0;
        }
        return func.apply(undefined, arguments);
      };
    }

    /**
     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.
     *
     * @private
     * @param {Array} array The array to shuffle.
     * @param {number} [size=array.length] The size of `array`.
     * @returns {Array} Returns `array`.
     */
    function shuffleSelf(array, size) {
      var index = -1,
          length = array.length,
          lastIndex = length - 1;

      size = size === undefined ? length : size;
      while (++index < size) {
        var rand = baseRandom(index, lastIndex),
            value = array[rand];

        array[rand] = array[index];
        array[index] = value;
      }
      array.length = size;
      return array;
    }

    /**
     * Converts `string` to a property path array.
     *
     * @private
     * @param {string} string The string to convert.
     * @returns {Array} Returns the property path array.
     */
    var stringToPath = memoizeCapped(function(string) {
      var result = [];
      if (string.charCodeAt(0) === 46 /* . */) {
        result.push('');
      }
      string.replace(rePropName, function(match, number, quote, subString) {
        result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));
      });
      return result;
    });

    /**
     * Converts `value` to a string key if it's not a string or symbol.
     *
     * @private
     * @param {*} value The value to inspect.
     * @returns {string|symbol} Returns the key.
     */
    function toKey(value) {
      if (typeof value == 'string' || isSymbol(value)) {
        return value;
      }
      var result = (value + '');
      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
    }

    /**
     * Converts `func` to its source code.
     *
     * @private
     * @param {Function} func The function to convert.
     * @returns {string} Returns the source code.
     */
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {}
        try {
          return (func + '');
        } catch (e) {}
      }
      return '';
    }

    /**
     * Updates wrapper `details` based on `bitmask` flags.
     *
     * @private
     * @returns {Array} details The details to modify.
     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.
     * @returns {Array} Returns `details`.
     */
    function updateWrapDetails(details, bitmask) {
      arrayEach(wrapFlags, function(pair) {
        var value = '_.' + pair[0];
        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {
          details.push(value);
        }
      });
      return details.sort();
    }

    /**
     * Creates a clone of `wrapper`.
     *
     * @private
     * @param {Object} wrapper The wrapper to clone.
     * @returns {Object} Returns the cloned wrapper.
     */
    function wrapperClone(wrapper) {
      if (wrapper instanceof LazyWrapper) {
        return wrapper.clone();
      }
      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);
      result.__actions__ = copyArray(wrapper.__actions__);
      result.__index__  = wrapper.__index__;
      result.__values__ = wrapper.__values__;
      return result;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an array of elements split into groups the length of `size`.
     * If `array` can't be split evenly, the final chunk will be the remaining
     * elements.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to process.
     * @param {number} [size=1] The length of each chunk
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the new array of chunks.
     * @example
     *
     * _.chunk(['a', 'b', 'c', 'd'], 2);
     * // => [['a', 'b'], ['c', 'd']]
     *
     * _.chunk(['a', 'b', 'c', 'd'], 3);
     * // => [['a', 'b', 'c'], ['d']]
     */
    function chunk(array, size, guard) {
      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {
        size = 1;
      } else {
        size = nativeMax(toInteger(size), 0);
      }
      var length = array == null ? 0 : array.length;
      if (!length || size < 1) {
        return [];
      }
      var index = 0,
          resIndex = 0,
          result = Array(nativeCeil(length / size));

      while (index < length) {
        result[resIndex++] = baseSlice(array, index, (index += size));
      }
      return result;
    }

    /**
     * Creates an array with all falsey values removed. The values `false`, `null`,
     * `0`, `""`, `undefined`, and `NaN` are falsey.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to compact.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.compact([0, 1, false, 2, '', 3]);
     * // => [1, 2, 3]
     */
    function compact(array) {
      var index = -1,
          length = array == null ? 0 : array.length,
          resIndex = 0,
          result = [];

      while (++index < length) {
        var value = array[index];
        if (value) {
          result[resIndex++] = value;
        }
      }
      return result;
    }

    /**
     * Creates a new array concatenating `array` with any additional arrays
     * and/or values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to concatenate.
     * @param {...*} [values] The values to concatenate.
     * @returns {Array} Returns the new concatenated array.
     * @example
     *
     * var array = [1];
     * var other = _.concat(array, 2, [3], [[4]]);
     *
     * console.log(other);
     * // => [1, 2, 3, [4]]
     *
     * console.log(array);
     * // => [1]
     */
    function concat() {
      var length = arguments.length;
      if (!length) {
        return [];
      }
      var args = Array(length - 1),
          array = arguments[0],
          index = length;

      while (index--) {
        args[index - 1] = arguments[index];
      }
      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));
    }

    /**
     * Creates an array of `array` values not included in the other given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * **Note:** Unlike `_.pullAll`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.without, _.xor
     * @example
     *
     * _.difference([2, 1], [2, 3]);
     * // => [1]
     */
    var difference = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `iteratee` which
     * is invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var differenceBy = baseRest(function(array, values) {
      var iteratee = last(values);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.difference` except that it accepts `comparator`
     * which is invoked to compare elements of `array` to `values`. The order and
     * references of result values are determined by the first array. The comparator
     * is invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...Array} [values] The values to exclude.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     *
     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }]
     */
    var differenceWith = baseRest(function(array, values) {
      var comparator = last(values);
      if (isArrayLikeObject(comparator)) {
        comparator = undefined;
      }
      return isArrayLikeObject(array)
        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)
        : [];
    });

    /**
     * Creates a slice of `array` with `n` elements dropped from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.drop([1, 2, 3]);
     * // => [2, 3]
     *
     * _.drop([1, 2, 3], 2);
     * // => [3]
     *
     * _.drop([1, 2, 3], 5);
     * // => []
     *
     * _.drop([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function drop(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with `n` elements dropped from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to drop.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.dropRight([1, 2, 3]);
     * // => [1, 2]
     *
     * _.dropRight([1, 2, 3], 2);
     * // => [1]
     *
     * _.dropRight([1, 2, 3], 5);
     * // => []
     *
     * _.dropRight([1, 2, 3], 0);
     * // => [1, 2, 3]
     */
    function dropRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the end.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.dropRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropRightWhile(users, ['active', false]);
     * // => objects for ['barney']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropRightWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true, true)
        : [];
    }

    /**
     * Creates a slice of `array` excluding elements dropped from the beginning.
     * Elements are dropped until `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.dropWhile(users, function(o) { return !o.active; });
     * // => objects for ['pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.dropWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.dropWhile(users, ['active', false]);
     * // => objects for ['pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.dropWhile(users, 'active');
     * // => objects for ['barney', 'fred', 'pebbles']
     */
    function dropWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), true)
        : [];
    }

    /**
     * Fills elements of `array` with `value` from `start` up to, but not
     * including, `end`.
     *
     * **Note:** This method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Array
     * @param {Array} array The array to fill.
     * @param {*} value The value to fill `array` with.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.fill(array, 'a');
     * console.log(array);
     * // => ['a', 'a', 'a']
     *
     * _.fill(Array(3), 2);
     * // => [2, 2, 2]
     *
     * _.fill([4, 6, 8, 10], '*', 1, 3);
     * // => [4, '*', '*', 10]
     */
    function fill(array, value, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {
        start = 0;
        end = length;
      }
      return baseFill(array, value, start, end);
    }

    /**
     * This method is like `_.find` except that it returns the index of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.findIndex(users, function(o) { return o.user == 'barney'; });
     * // => 0
     *
     * // The `_.matches` iteratee shorthand.
     * _.findIndex(users, { 'user': 'fred', 'active': false });
     * // => 1
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findIndex(users, ['active', false]);
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.findIndex(users, 'active');
     * // => 2
     */
    function findIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index);
    }

    /**
     * This method is like `_.findIndex` except that it iterates over elements
     * of `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the found element, else `-1`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });
     * // => 2
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastIndex(users, { 'user': 'barney', 'active': true });
     * // => 0
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastIndex(users, ['active', false]);
     * // => 2
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastIndex(users, 'active');
     * // => 0
     */
    function findLastIndex(array, predicate, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length - 1;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = fromIndex < 0
          ? nativeMax(length + index, 0)
          : nativeMin(index, length - 1);
      }
      return baseFindIndex(array, getIteratee(predicate, 3), index, true);
    }

    /**
     * Flattens `array` a single level deep.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flatten([1, [2, [3, [4]], 5]]);
     * // => [1, 2, [3, [4]], 5]
     */
    function flatten(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, 1) : [];
    }

    /**
     * Recursively flattens `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * _.flattenDeep([1, [2, [3, [4]], 5]]);
     * // => [1, 2, 3, 4, 5]
     */
    function flattenDeep(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseFlatten(array, INFINITY) : [];
    }

    /**
     * Recursively flatten `array` up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Array
     * @param {Array} array The array to flatten.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * var array = [1, [2, [3, [4]], 5]];
     *
     * _.flattenDepth(array, 1);
     * // => [1, 2, [3, [4]], 5]
     *
     * _.flattenDepth(array, 2);
     * // => [1, 2, 3, [4], 5]
     */
    function flattenDepth(array, depth) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(array, depth);
    }

    /**
     * The inverse of `_.toPairs`; this method returns an object composed
     * from key-value `pairs`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} pairs The key-value pairs.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.fromPairs([['a', 1], ['b', 2]]);
     * // => { 'a': 1, 'b': 2 }
     */
    function fromPairs(pairs) {
      var index = -1,
          length = pairs == null ? 0 : pairs.length,
          result = {};

      while (++index < length) {
        var pair = pairs[index];
        result[pair[0]] = pair[1];
      }
      return result;
    }

    /**
     * Gets the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias first
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the first element of `array`.
     * @example
     *
     * _.head([1, 2, 3]);
     * // => 1
     *
     * _.head([]);
     * // => undefined
     */
    function head(array) {
      return (array && array.length) ? array[0] : undefined;
    }

    /**
     * Gets the index at which the first occurrence of `value` is found in `array`
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. If `fromIndex` is negative, it's used as the
     * offset from the end of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.indexOf([1, 2, 1, 2], 2);
     * // => 1
     *
     * // Search from the `fromIndex`.
     * _.indexOf([1, 2, 1, 2], 2, 2);
     * // => 3
     */
    function indexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = fromIndex == null ? 0 : toInteger(fromIndex);
      if (index < 0) {
        index = nativeMax(length + index, 0);
      }
      return baseIndexOf(array, value, index);
    }

    /**
     * Gets all but the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.initial([1, 2, 3]);
     * // => [1, 2]
     */
    function initial(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 0, -1) : [];
    }

    /**
     * Creates an array of unique values that are included in all given arrays
     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons. The order and references of result values are
     * determined by the first array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersection([2, 1], [2, 3]);
     * // => [2]
     */
    var intersection = baseRest(function(arrays) {
      var mapped = arrayMap(arrays, castArrayLikeObject);
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped)
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `iteratee`
     * which is invoked for each element of each `arrays` to generate the criterion
     * by which they're compared. The order and references of result values are
     * determined by the first array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [2.1]
     *
     * // The `_.property` iteratee shorthand.
     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }]
     */
    var intersectionBy = baseRest(function(arrays) {
      var iteratee = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      if (iteratee === last(mapped)) {
        iteratee = undefined;
      } else {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, getIteratee(iteratee, 2))
        : [];
    });

    /**
     * This method is like `_.intersection` except that it accepts `comparator`
     * which is invoked to compare elements of `arrays`. The order and references
     * of result values are determined by the first array. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of intersecting values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.intersectionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }]
     */
    var intersectionWith = baseRest(function(arrays) {
      var comparator = last(arrays),
          mapped = arrayMap(arrays, castArrayLikeObject);

      comparator = typeof comparator == 'function' ? comparator : undefined;
      if (comparator) {
        mapped.pop();
      }
      return (mapped.length && mapped[0] === arrays[0])
        ? baseIntersection(mapped, undefined, comparator)
        : [];
    });

    /**
     * Converts all elements in `array` into a string separated by `separator`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to convert.
     * @param {string} [separator=','] The element separator.
     * @returns {string} Returns the joined string.
     * @example
     *
     * _.join(['a', 'b', 'c'], '~');
     * // => 'a~b~c'
     */
    function join(array, separator) {
      return array == null ? '' : nativeJoin.call(array, separator);
    }

    /**
     * Gets the last element of `array`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {*} Returns the last element of `array`.
     * @example
     *
     * _.last([1, 2, 3]);
     * // => 3
     */
    function last(array) {
      var length = array == null ? 0 : array.length;
      return length ? array[length - 1] : undefined;
    }

    /**
     * This method is like `_.indexOf` except that it iterates over elements of
     * `array` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=array.length-1] The index to search from.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.lastIndexOf([1, 2, 1, 2], 2);
     * // => 3
     *
     * // Search from the `fromIndex`.
     * _.lastIndexOf([1, 2, 1, 2], 2, 2);
     * // => 1
     */
    function lastIndexOf(array, value, fromIndex) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return -1;
      }
      var index = length;
      if (fromIndex !== undefined) {
        index = toInteger(fromIndex);
        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);
      }
      return value === value
        ? strictLastIndexOf(array, value, index)
        : baseFindIndex(array, baseIsNaN, index, true);
    }

    /**
     * Gets the element at index `n` of `array`. If `n` is negative, the nth
     * element from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.11.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=0] The index of the element to return.
     * @returns {*} Returns the nth element of `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     *
     * _.nth(array, 1);
     * // => 'b'
     *
     * _.nth(array, -2);
     * // => 'c';
     */
    function nth(array, n) {
      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;
    }

    /**
     * Removes all given values from `array` using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`
     * to remove elements from an array by predicate.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...*} [values] The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pull(array, 'a', 'c');
     * console.log(array);
     * // => ['b', 'b']
     */
    var pull = baseRest(pullAll);

    /**
     * This method is like `_.pull` except that it accepts an array of values to remove.
     *
     * **Note:** Unlike `_.difference`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];
     *
     * _.pullAll(array, ['a', 'c']);
     * console.log(array);
     * // => ['b', 'b']
     */
    function pullAll(array, values) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values)
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `iteratee` which is
     * invoked for each element of `array` and `values` to generate the criterion
     * by which they're compared. The iteratee is invoked with one argument: (value).
     *
     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];
     *
     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');
     * console.log(array);
     * // => [{ 'x': 2 }]
     */
    function pullAllBy(array, values, iteratee) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, getIteratee(iteratee, 2))
        : array;
    }

    /**
     * This method is like `_.pullAll` except that it accepts `comparator` which
     * is invoked to compare elements of `array` to `values`. The comparator is
     * invoked with two arguments: (arrVal, othVal).
     *
     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Array} values The values to remove.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];
     *
     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);
     * console.log(array);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]
     */
    function pullAllWith(array, values, comparator) {
      return (array && array.length && values && values.length)
        ? basePullAll(array, values, undefined, comparator)
        : array;
    }

    /**
     * Removes elements from `array` corresponding to `indexes` and returns an
     * array of removed elements.
     *
     * **Note:** Unlike `_.at`, this method mutates `array`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {...(number|number[])} [indexes] The indexes of elements to remove.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = ['a', 'b', 'c', 'd'];
     * var pulled = _.pullAt(array, [1, 3]);
     *
     * console.log(array);
     * // => ['a', 'c']
     *
     * console.log(pulled);
     * // => ['b', 'd']
     */
    var pullAt = flatRest(function(array, indexes) {
      var length = array == null ? 0 : array.length,
          result = baseAt(array, indexes);

      basePullAt(array, arrayMap(indexes, function(index) {
        return isIndex(index, length) ? +index : index;
      }).sort(compareAscending));

      return result;
    });

    /**
     * Removes all elements from `array` that `predicate` returns truthy for
     * and returns an array of the removed elements. The predicate is invoked
     * with three arguments: (value, index, array).
     *
     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`
     * to pull elements from an array by value.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new array of removed elements.
     * @example
     *
     * var array = [1, 2, 3, 4];
     * var evens = _.remove(array, function(n) {
     *   return n % 2 == 0;
     * });
     *
     * console.log(array);
     * // => [1, 3]
     *
     * console.log(evens);
     * // => [2, 4]
     */
    function remove(array, predicate) {
      var result = [];
      if (!(array && array.length)) {
        return result;
      }
      var index = -1,
          indexes = [],
          length = array.length;

      predicate = getIteratee(predicate, 3);
      while (++index < length) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result.push(value);
          indexes.push(index);
        }
      }
      basePullAt(array, indexes);
      return result;
    }

    /**
     * Reverses `array` so that the first element becomes the last, the second
     * element becomes the second to last, and so on.
     *
     * **Note:** This method mutates `array` and is based on
     * [`Array#reverse`](https://mdn.io/Array/reverse).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to modify.
     * @returns {Array} Returns `array`.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _.reverse(array);
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function reverse(array) {
      return array == null ? array : nativeReverse.call(array);
    }

    /**
     * Creates a slice of `array` from `start` up to, but not including, `end`.
     *
     * **Note:** This method is used instead of
     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are
     * returned.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to slice.
     * @param {number} [start=0] The start position.
     * @param {number} [end=array.length] The end position.
     * @returns {Array} Returns the slice of `array`.
     */
    function slice(array, start, end) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {
        start = 0;
        end = length;
      }
      else {
        start = start == null ? 0 : toInteger(start);
        end = end === undefined ? length : toInteger(end);
      }
      return baseSlice(array, start, end);
    }

    /**
     * Uses a binary search to determine the lowest index at which `value`
     * should be inserted into `array` in order to maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedIndex([30, 50], 40);
     * // => 1
     */
    function sortedIndex(array, value) {
      return baseSortedIndex(array, value);
    }

    /**
     * This method is like `_.sortedIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 0
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');
     * // => 0
     */
    function sortedIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));
    }

    /**
     * This method is like `_.indexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);
     * // => 1
     */
    function sortedIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value);
        if (index < length && eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.sortedIndex` except that it returns the highest
     * index at which `value` should be inserted into `array` in order to
     * maintain its sort order.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);
     * // => 4
     */
    function sortedLastIndex(array, value) {
      return baseSortedIndex(array, value, true);
    }

    /**
     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`
     * which is invoked for `value` and each element of `array` to compute their
     * sort ranking. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The sorted array to inspect.
     * @param {*} value The value to evaluate.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the index at which `value` should be inserted
     *  into `array`.
     * @example
     *
     * var objects = [{ 'x': 4 }, { 'x': 5 }];
     *
     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });
     * // => 1
     *
     * // The `_.property` iteratee shorthand.
     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');
     * // => 1
     */
    function sortedLastIndexBy(array, value, iteratee) {
      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);
    }

    /**
     * This method is like `_.lastIndexOf` except that it performs a binary
     * search on a sorted `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {*} value The value to search for.
     * @returns {number} Returns the index of the matched value, else `-1`.
     * @example
     *
     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);
     * // => 3
     */
    function sortedLastIndexOf(array, value) {
      var length = array == null ? 0 : array.length;
      if (length) {
        var index = baseSortedIndex(array, value, true) - 1;
        if (eq(array[index], value)) {
          return index;
        }
      }
      return -1;
    }

    /**
     * This method is like `_.uniq` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniq([1, 1, 2]);
     * // => [1, 2]
     */
    function sortedUniq(array) {
      return (array && array.length)
        ? baseSortedUniq(array)
        : [];
    }

    /**
     * This method is like `_.uniqBy` except that it's designed and optimized
     * for sorted arrays.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);
     * // => [1.1, 2.3]
     */
    function sortedUniqBy(array, iteratee) {
      return (array && array.length)
        ? baseSortedUniq(array, getIteratee(iteratee, 2))
        : [];
    }

    /**
     * Gets all but the first element of `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.tail([1, 2, 3]);
     * // => [2, 3]
     */
    function tail(array) {
      var length = array == null ? 0 : array.length;
      return length ? baseSlice(array, 1, length) : [];
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the beginning.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.take([1, 2, 3]);
     * // => [1]
     *
     * _.take([1, 2, 3], 2);
     * // => [1, 2]
     *
     * _.take([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.take([1, 2, 3], 0);
     * // => []
     */
    function take(array, n, guard) {
      if (!(array && array.length)) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      return baseSlice(array, 0, n < 0 ? 0 : n);
    }

    /**
     * Creates a slice of `array` with `n` elements taken from the end.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {number} [n=1] The number of elements to take.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * _.takeRight([1, 2, 3]);
     * // => [3]
     *
     * _.takeRight([1, 2, 3], 2);
     * // => [2, 3]
     *
     * _.takeRight([1, 2, 3], 5);
     * // => [1, 2, 3]
     *
     * _.takeRight([1, 2, 3], 0);
     * // => []
     */
    function takeRight(array, n, guard) {
      var length = array == null ? 0 : array.length;
      if (!length) {
        return [];
      }
      n = (guard || n === undefined) ? 1 : toInteger(n);
      n = length - n;
      return baseSlice(array, n < 0 ? 0 : n, length);
    }

    /**
     * Creates a slice of `array` with elements taken from the end. Elements are
     * taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': true },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': false }
     * ];
     *
     * _.takeRightWhile(users, function(o) { return !o.active; });
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });
     * // => objects for ['pebbles']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeRightWhile(users, ['active', false]);
     * // => objects for ['fred', 'pebbles']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeRightWhile(users, 'active');
     * // => []
     */
    function takeRightWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3), false, true)
        : [];
    }

    /**
     * Creates a slice of `array` with elements taken from the beginning. Elements
     * are taken until `predicate` returns falsey. The predicate is invoked with
     * three arguments: (value, index, array).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Array
     * @param {Array} array The array to query.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the slice of `array`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'active': false },
     *   { 'user': 'fred',    'active': false },
     *   { 'user': 'pebbles', 'active': true }
     * ];
     *
     * _.takeWhile(users, function(o) { return !o.active; });
     * // => objects for ['barney', 'fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.takeWhile(users, { 'user': 'barney', 'active': false });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.takeWhile(users, ['active', false]);
     * // => objects for ['barney', 'fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.takeWhile(users, 'active');
     * // => []
     */
    function takeWhile(array, predicate) {
      return (array && array.length)
        ? baseWhile(array, getIteratee(predicate, 3))
        : [];
    }

    /**
     * Creates an array of unique values, in order, from all given arrays using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.union([2], [1, 2]);
     * // => [2, 1]
     */
    var union = baseRest(function(arrays) {
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));
    });

    /**
     * This method is like `_.union` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which uniqueness is computed. Result values are chosen from the first
     * array in which the value occurs. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * _.unionBy([2.1], [1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    var unionBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.union` except that it accepts `comparator` which
     * is invoked to compare elements of `arrays`. Result values are chosen from
     * the first array in which the value occurs. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of combined values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.unionWith(objects, others, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var unionWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);
    });

    /**
     * Creates a duplicate-free version of an array, using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons, in which only the first occurrence of each element
     * is kept. The order of result values is determined by the order they occur
     * in the array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniq([2, 1, 2]);
     * // => [2, 1]
     */
    function uniq(array) {
      return (array && array.length) ? baseUniq(array) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * uniqueness is computed. The order of result values is determined by the
     * order they occur in the array. The iteratee is invoked with one argument:
     * (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);
     * // => [2.1, 1.2]
     *
     * // The `_.property` iteratee shorthand.
     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 1 }, { 'x': 2 }]
     */
    function uniqBy(array, iteratee) {
      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];
    }

    /**
     * This method is like `_.uniq` except that it accepts `comparator` which
     * is invoked to compare elements of `array`. The order of result values is
     * determined by the order they occur in the array.The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new duplicate free array.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.uniqWith(objects, _.isEqual);
     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]
     */
    function uniqWith(array, comparator) {
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];
    }

    /**
     * This method is like `_.zip` except that it accepts an array of grouped
     * elements and creates an array regrouping the elements to their pre-zip
     * configuration.
     *
     * @static
     * @memberOf _
     * @since 1.2.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     *
     * _.unzip(zipped);
     * // => [['a', 'b'], [1, 2], [true, false]]
     */
    function unzip(array) {
      if (!(array && array.length)) {
        return [];
      }
      var length = 0;
      array = arrayFilter(array, function(group) {
        if (isArrayLikeObject(group)) {
          length = nativeMax(group.length, length);
          return true;
        }
      });
      return baseTimes(length, function(index) {
        return arrayMap(array, baseProperty(index));
      });
    }

    /**
     * This method is like `_.unzip` except that it accepts `iteratee` to specify
     * how regrouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {Array} array The array of grouped elements to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  regrouped values.
     * @returns {Array} Returns the new array of regrouped elements.
     * @example
     *
     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);
     * // => [[1, 10, 100], [2, 20, 200]]
     *
     * _.unzipWith(zipped, _.add);
     * // => [3, 30, 300]
     */
    function unzipWith(array, iteratee) {
      if (!(array && array.length)) {
        return [];
      }
      var result = unzip(array);
      if (iteratee == null) {
        return result;
      }
      return arrayMap(result, function(group) {
        return apply(iteratee, undefined, group);
      });
    }

    /**
     * Creates an array excluding all given values using
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * for equality comparisons.
     *
     * **Note:** Unlike `_.pull`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {Array} array The array to inspect.
     * @param {...*} [values] The values to exclude.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.xor
     * @example
     *
     * _.without([2, 1, 2, 3], 1, 2);
     * // => [3]
     */
    var without = baseRest(function(array, values) {
      return isArrayLikeObject(array)
        ? baseDifference(array, values)
        : [];
    });

    /**
     * Creates an array of unique values that is the
     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)
     * of the given arrays. The order of result values is determined by the order
     * they occur in the arrays.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @returns {Array} Returns the new array of filtered values.
     * @see _.difference, _.without
     * @example
     *
     * _.xor([2, 1], [2, 3]);
     * // => [1, 3]
     */
    var xor = baseRest(function(arrays) {
      return baseXor(arrayFilter(arrays, isArrayLikeObject));
    });

    /**
     * This method is like `_.xor` except that it accepts `iteratee` which is
     * invoked for each element of each `arrays` to generate the criterion by
     * which by which they're compared. The order of result values is determined
     * by the order they occur in the arrays. The iteratee is invoked with one
     * argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);
     * // => [1.2, 3.4]
     *
     * // The `_.property` iteratee shorthand.
     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');
     * // => [{ 'x': 2 }]
     */
    var xorBy = baseRest(function(arrays) {
      var iteratee = last(arrays);
      if (isArrayLikeObject(iteratee)) {
        iteratee = undefined;
      }
      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));
    });

    /**
     * This method is like `_.xor` except that it accepts `comparator` which is
     * invoked to compare elements of `arrays`. The order of result values is
     * determined by the order they occur in the arrays. The comparator is invoked
     * with two arguments: (arrVal, othVal).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Array
     * @param {...Array} [arrays] The arrays to inspect.
     * @param {Function} [comparator] The comparator invoked per element.
     * @returns {Array} Returns the new array of filtered values.
     * @example
     *
     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];
     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];
     *
     * _.xorWith(objects, others, _.isEqual);
     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]
     */
    var xorWith = baseRest(function(arrays) {
      var comparator = last(arrays);
      comparator = typeof comparator == 'function' ? comparator : undefined;
      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);
    });

    /**
     * Creates an array of grouped elements, the first of which contains the
     * first elements of the given arrays, the second of which contains the
     * second elements of the given arrays, and so on.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zip(['a', 'b'], [1, 2], [true, false]);
     * // => [['a', 1, true], ['b', 2, false]]
     */
    var zip = baseRest(unzip);

    /**
     * This method is like `_.fromPairs` except that it accepts two arrays,
     * one of property identifiers and one of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 0.4.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObject(['a', 'b'], [1, 2]);
     * // => { 'a': 1, 'b': 2 }
     */
    function zipObject(props, values) {
      return baseZipObject(props || [], values || [], assignValue);
    }

    /**
     * This method is like `_.zipObject` except that it supports property paths.
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Array
     * @param {Array} [props=[]] The property identifiers.
     * @param {Array} [values=[]] The property values.
     * @returns {Object} Returns the new object.
     * @example
     *
     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);
     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }
     */
    function zipObjectDeep(props, values) {
      return baseZipObject(props || [], values || [], baseSet);
    }

    /**
     * This method is like `_.zip` except that it accepts `iteratee` to specify
     * how grouped values should be combined. The iteratee is invoked with the
     * elements of each group: (...group).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Array
     * @param {...Array} [arrays] The arrays to process.
     * @param {Function} [iteratee=_.identity] The function to combine
     *  grouped values.
     * @returns {Array} Returns the new array of grouped elements.
     * @example
     *
     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {
     *   return a + b + c;
     * });
     * // => [111, 222]
     */
    var zipWith = baseRest(function(arrays) {
      var length = arrays.length,
          iteratee = length > 1 ? arrays[length - 1] : undefined;

      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;
      return unzipWith(arrays, iteratee);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Creates a `lodash` wrapper instance that wraps `value` with explicit method
     * chain sequences enabled. The result of such sequences must be unwrapped
     * with `_#value`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Seq
     * @param {*} value The value to wrap.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36 },
     *   { 'user': 'fred',    'age': 40 },
     *   { 'user': 'pebbles', 'age': 1 }
     * ];
     *
     * var youngest = _
     *   .chain(users)
     *   .sortBy('age')
     *   .map(function(o) {
     *     return o.user + ' is ' + o.age;
     *   })
     *   .head()
     *   .value();
     * // => 'pebbles is 1'
     */
    function chain(value) {
      var result = lodash(value);
      result.__chain__ = true;
      return result;
    }

    /**
     * This method invokes `interceptor` and returns `value`. The interceptor
     * is invoked with one argument; (value). The purpose of this method is to
     * "tap into" a method chain sequence in order to modify intermediate results.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns `value`.
     * @example
     *
     * _([1, 2, 3])
     *  .tap(function(array) {
     *    // Mutate input array.
     *    array.pop();
     *  })
     *  .reverse()
     *  .value();
     * // => [2, 1]
     */
    function tap(value, interceptor) {
      interceptor(value);
      return value;
    }

    /**
     * This method is like `_.tap` except that it returns the result of `interceptor`.
     * The purpose of this method is to "pass thru" values replacing intermediate
     * results in a method chain sequence.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Seq
     * @param {*} value The value to provide to `interceptor`.
     * @param {Function} interceptor The function to invoke.
     * @returns {*} Returns the result of `interceptor`.
     * @example
     *
     * _('  abc  ')
     *  .chain()
     *  .trim()
     *  .thru(function(value) {
     *    return [value];
     *  })
     *  .value();
     * // => ['abc']
     */
    function thru(value, interceptor) {
      return interceptor(value);
    }

    /**
     * This method is the wrapper version of `_.at`.
     *
     * @name at
     * @memberOf _
     * @since 1.0.0
     * @category Seq
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _(object).at(['a[0].b.c', 'a[1]']).value();
     * // => [3, 4]
     */
    var wrapperAt = flatRest(function(paths) {
      var length = paths.length,
          start = length ? paths[0] : 0,
          value = this.__wrapped__,
          interceptor = function(object) { return baseAt(object, paths); };

      if (length > 1 || this.__actions__.length ||
          !(value instanceof LazyWrapper) || !isIndex(start)) {
        return this.thru(interceptor);
      }
      value = value.slice(start, +start + (length ? 1 : 0));
      value.__actions__.push({
        'func': thru,
        'args': [interceptor],
        'thisArg': undefined
      });
      return new LodashWrapper(value, this.__chain__).thru(function(array) {
        if (length && !array.length) {
          array.push(undefined);
        }
        return array;
      });
    });

    /**
     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.
     *
     * @name chain
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 40 }
     * ];
     *
     * // A sequence without explicit chaining.
     * _(users).head();
     * // => { 'user': 'barney', 'age': 36 }
     *
     * // A sequence with explicit chaining.
     * _(users)
     *   .chain()
     *   .head()
     *   .pick('user')
     *   .value();
     * // => { 'user': 'barney' }
     */
    function wrapperChain() {
      return chain(this);
    }

    /**
     * Executes the chain sequence and returns the wrapped result.
     *
     * @name commit
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2];
     * var wrapped = _(array).push(3);
     *
     * console.log(array);
     * // => [1, 2]
     *
     * wrapped = wrapped.commit();
     * console.log(array);
     * // => [1, 2, 3]
     *
     * wrapped.last();
     * // => 3
     *
     * console.log(array);
     * // => [1, 2, 3]
     */
    function wrapperCommit() {
      return new LodashWrapper(this.value(), this.__chain__);
    }

    /**
     * Gets the next value on a wrapped object following the
     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).
     *
     * @name next
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the next iterator value.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 1 }
     *
     * wrapped.next();
     * // => { 'done': false, 'value': 2 }
     *
     * wrapped.next();
     * // => { 'done': true, 'value': undefined }
     */
    function wrapperNext() {
      if (this.__values__ === undefined) {
        this.__values__ = toArray(this.value());
      }
      var done = this.__index__ >= this.__values__.length,
          value = done ? undefined : this.__values__[this.__index__++];

      return { 'done': done, 'value': value };
    }

    /**
     * Enables the wrapper to be iterable.
     *
     * @name Symbol.iterator
     * @memberOf _
     * @since 4.0.0
     * @category Seq
     * @returns {Object} Returns the wrapper object.
     * @example
     *
     * var wrapped = _([1, 2]);
     *
     * wrapped[Symbol.iterator]() === wrapped;
     * // => true
     *
     * Array.from(wrapped);
     * // => [1, 2]
     */
    function wrapperToIterator() {
      return this;
    }

    /**
     * Creates a clone of the chain sequence planting `value` as the wrapped value.
     *
     * @name plant
     * @memberOf _
     * @since 3.2.0
     * @category Seq
     * @param {*} value The value to plant.
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var wrapped = _([1, 2]).map(square);
     * var other = wrapped.plant([3, 4]);
     *
     * other.value();
     * // => [9, 16]
     *
     * wrapped.value();
     * // => [1, 4]
     */
    function wrapperPlant(value) {
      var result,
          parent = this;

      while (parent instanceof baseLodash) {
        var clone = wrapperClone(parent);
        clone.__index__ = 0;
        clone.__values__ = undefined;
        if (result) {
          previous.__wrapped__ = clone;
        } else {
          result = clone;
        }
        var previous = clone;
        parent = parent.__wrapped__;
      }
      previous.__wrapped__ = value;
      return result;
    }

    /**
     * This method is the wrapper version of `_.reverse`.
     *
     * **Note:** This method mutates the wrapped array.
     *
     * @name reverse
     * @memberOf _
     * @since 0.1.0
     * @category Seq
     * @returns {Object} Returns the new `lodash` wrapper instance.
     * @example
     *
     * var array = [1, 2, 3];
     *
     * _(array).reverse().value()
     * // => [3, 2, 1]
     *
     * console.log(array);
     * // => [3, 2, 1]
     */
    function wrapperReverse() {
      var value = this.__wrapped__;
      if (value instanceof LazyWrapper) {
        var wrapped = value;
        if (this.__actions__.length) {
          wrapped = new LazyWrapper(this);
        }
        wrapped = wrapped.reverse();
        wrapped.__actions__.push({
          'func': thru,
          'args': [reverse],
          'thisArg': undefined
        });
        return new LodashWrapper(wrapped, this.__chain__);
      }
      return this.thru(reverse);
    }

    /**
     * Executes the chain sequence to resolve the unwrapped value.
     *
     * @name value
     * @memberOf _
     * @since 0.1.0
     * @alias toJSON, valueOf
     * @category Seq
     * @returns {*} Returns the resolved unwrapped value.
     * @example
     *
     * _([1, 2, 3]).value();
     * // => [1, 2, 3]
     */
    function wrapperValue() {
      return baseWrapperValue(this.__wrapped__, this.__actions__);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the number of times the key was returned by `iteratee`. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.countBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': 1, '6': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.countBy(['one', 'two', 'three'], 'length');
     * // => { '3': 2, '5': 1 }
     */
    var countBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        ++result[key];
      } else {
        baseAssignValue(result, key, 1);
      }
    });

    /**
     * Checks if `predicate` returns truthy for **all** elements of `collection`.
     * Iteration is stopped once `predicate` returns falsey. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * **Note:** This method returns `true` for
     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because
     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of
     * elements of empty collections.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if all elements pass the predicate check,
     *  else `false`.
     * @example
     *
     * _.every([true, 1, null, 'yes'], Boolean);
     * // => false
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.every(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.every(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.every(users, 'active');
     * // => false
     */
    function every(collection, predicate, guard) {
      var func = isArray(collection) ? arrayEvery : baseEvery;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning an array of all elements
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * **Note:** Unlike `_.remove`, this method returns a new array.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.reject
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * _.filter(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, { 'age': 36, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.filter(users, 'active');
     * // => objects for ['barney']
     *
     * // Combining several predicates using `_.overEvery` or `_.overSome`.
     * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));
     * // => objects for ['fred', 'barney']
     */
    function filter(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Iterates over elements of `collection`, returning the first element
     * `predicate` returns truthy for. The predicate is invoked with three
     * arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=0] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': true },
     *   { 'user': 'fred',    'age': 40, 'active': false },
     *   { 'user': 'pebbles', 'age': 1,  'active': true }
     * ];
     *
     * _.find(users, function(o) { return o.age < 40; });
     * // => object for 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.find(users, { 'age': 1, 'active': true });
     * // => object for 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.find(users, ['active', false]);
     * // => object for 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.find(users, 'active');
     * // => object for 'barney'
     */
    var find = createFind(findIndex);

    /**
     * This method is like `_.find` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param {number} [fromIndex=collection.length-1] The index to search from.
     * @returns {*} Returns the matched element, else `undefined`.
     * @example
     *
     * _.findLast([1, 2, 3, 4], function(n) {
     *   return n % 2 == 1;
     * });
     * // => 3
     */
    var findLast = createFind(findLastIndex);

    /**
     * Creates a flattened array of values by running each element in `collection`
     * thru `iteratee` and flattening the mapped results. The iteratee is invoked
     * with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [n, n];
     * }
     *
     * _.flatMap([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMap(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), 1);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDeep([1, 2], duplicate);
     * // => [1, 1, 2, 2]
     */
    function flatMapDeep(collection, iteratee) {
      return baseFlatten(map(collection, iteratee), INFINITY);
    }

    /**
     * This method is like `_.flatMap` except that it recursively flattens the
     * mapped results up to `depth` times.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {number} [depth=1] The maximum recursion depth.
     * @returns {Array} Returns the new flattened array.
     * @example
     *
     * function duplicate(n) {
     *   return [[[n, n]]];
     * }
     *
     * _.flatMapDepth([1, 2], duplicate, 2);
     * // => [[1, 1], [2, 2]]
     */
    function flatMapDepth(collection, iteratee, depth) {
      depth = depth === undefined ? 1 : toInteger(depth);
      return baseFlatten(map(collection, iteratee), depth);
    }

    /**
     * Iterates over elements of `collection` and invokes `iteratee` for each element.
     * The iteratee is invoked with three arguments: (value, index|key, collection).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * **Note:** As with other "Collections" methods, objects with a "length"
     * property are iterated like arrays. To avoid this behavior use `_.forIn`
     * or `_.forOwn` for object iteration.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @alias each
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEachRight
     * @example
     *
     * _.forEach([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `1` then `2`.
     *
     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forEach(collection, iteratee) {
      var func = isArray(collection) ? arrayEach : baseEach;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forEach` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @alias eachRight
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array|Object} Returns `collection`.
     * @see _.forEach
     * @example
     *
     * _.forEachRight([1, 2], function(value) {
     *   console.log(value);
     * });
     * // => Logs `2` then `1`.
     */
    function forEachRight(collection, iteratee) {
      var func = isArray(collection) ? arrayEachRight : baseEachRight;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The order of grouped values
     * is determined by the order they occur in `collection`. The corresponding
     * value of each key is an array of elements responsible for generating the
     * key. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * _.groupBy([6.1, 4.2, 6.3], Math.floor);
     * // => { '4': [4.2], '6': [6.1, 6.3] }
     *
     * // The `_.property` iteratee shorthand.
     * _.groupBy(['one', 'two', 'three'], 'length');
     * // => { '3': ['one', 'two'], '5': ['three'] }
     */
    var groupBy = createAggregator(function(result, value, key) {
      if (hasOwnProperty.call(result, key)) {
        result[key].push(value);
      } else {
        baseAssignValue(result, key, [value]);
      }
    });

    /**
     * Checks if `value` is in `collection`. If `collection` is a string, it's
     * checked for a substring of `value`, otherwise
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * is used for equality comparisons. If `fromIndex` is negative, it's used as
     * the offset from the end of `collection`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @param {*} value The value to search for.
     * @param {number} [fromIndex=0] The index to search from.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {boolean} Returns `true` if `value` is found, else `false`.
     * @example
     *
     * _.includes([1, 2, 3], 1);
     * // => true
     *
     * _.includes([1, 2, 3], 1, 2);
     * // => false
     *
     * _.includes({ 'a': 1, 'b': 2 }, 1);
     * // => true
     *
     * _.includes('abcd', 'bc');
     * // => true
     */
    function includes(collection, value, fromIndex, guard) {
      collection = isArrayLike(collection) ? collection : values(collection);
      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;

      var length = collection.length;
      if (fromIndex < 0) {
        fromIndex = nativeMax(length + fromIndex, 0);
      }
      return isString(collection)
        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)
        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);
    }

    /**
     * Invokes the method at `path` of each element in `collection`, returning
     * an array of the results of each invoked method. Any additional arguments
     * are provided to each invoked method. If `path` is a function, it's invoked
     * for, and `this` bound to, each element in `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array|Function|string} path The path of the method to invoke or
     *  the function invoked per iteration.
     * @param {...*} [args] The arguments to invoke each method with.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');
     * // => [[1, 5, 7], [1, 2, 3]]
     *
     * _.invokeMap([123, 456], String.prototype.split, '');
     * // => [['1', '2', '3'], ['4', '5', '6']]
     */
    var invokeMap = baseRest(function(collection, path, args) {
      var index = -1,
          isFunc = typeof path == 'function',
          result = isArrayLike(collection) ? Array(collection.length) : [];

      baseEach(collection, function(value) {
        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);
      });
      return result;
    });

    /**
     * Creates an object composed of keys generated from the results of running
     * each element of `collection` thru `iteratee`. The corresponding value of
     * each key is the last element responsible for generating the key. The
     * iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.
     * @returns {Object} Returns the composed aggregate object.
     * @example
     *
     * var array = [
     *   { 'dir': 'left', 'code': 97 },
     *   { 'dir': 'right', 'code': 100 }
     * ];
     *
     * _.keyBy(array, function(o) {
     *   return String.fromCharCode(o.code);
     * });
     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }
     *
     * _.keyBy(array, 'dir');
     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }
     */
    var keyBy = createAggregator(function(result, value, key) {
      baseAssignValue(result, key, value);
    });

    /**
     * Creates an array of values by running each element in `collection` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.
     *
     * The guarded methods are:
     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,
     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,
     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,
     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new mapped array.
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * _.map([4, 8], square);
     * // => [16, 64]
     *
     * _.map({ 'a': 4, 'b': 8 }, square);
     * // => [16, 64] (iteration order is not guaranteed)
     *
     * var users = [
     *   { 'user': 'barney' },
     *   { 'user': 'fred' }
     * ];
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, 'user');
     * // => ['barney', 'fred']
     */
    function map(collection, iteratee) {
      var func = isArray(collection) ? arrayMap : baseMap;
      return func(collection, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.sortBy` except that it allows specifying the sort
     * orders of the iteratees to sort by. If `orders` is unspecified, all values
     * are sorted in ascending order. Otherwise, specify an order of "desc" for
     * descending or "asc" for ascending sort order of corresponding values.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @param {string[]} [orders] The sort orders of `iteratees`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 34 },
     *   { 'user': 'fred',   'age': 40 },
     *   { 'user': 'barney', 'age': 36 }
     * ];
     *
     * // Sort by `user` in ascending order and by `age` in descending order.
     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]
     */
    function orderBy(collection, iteratees, orders, guard) {
      if (collection == null) {
        return [];
      }
      if (!isArray(iteratees)) {
        iteratees = iteratees == null ? [] : [iteratees];
      }
      orders = guard ? undefined : orders;
      if (!isArray(orders)) {
        orders = orders == null ? [] : [orders];
      }
      return baseOrderBy(collection, iteratees, orders);
    }

    /**
     * Creates an array of elements split into two groups, the first of which
     * contains elements `predicate` returns truthy for, the second of which
     * contains elements `predicate` returns falsey for. The predicate is
     * invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of grouped elements.
     * @example
     *
     * var users = [
     *   { 'user': 'barney',  'age': 36, 'active': false },
     *   { 'user': 'fred',    'age': 40, 'active': true },
     *   { 'user': 'pebbles', 'age': 1,  'active': false }
     * ];
     *
     * _.partition(users, function(o) { return o.active; });
     * // => objects for [['fred'], ['barney', 'pebbles']]
     *
     * // The `_.matches` iteratee shorthand.
     * _.partition(users, { 'age': 1, 'active': false });
     * // => objects for [['pebbles'], ['barney', 'fred']]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.partition(users, ['active', false]);
     * // => objects for [['barney', 'pebbles'], ['fred']]
     *
     * // The `_.property` iteratee shorthand.
     * _.partition(users, 'active');
     * // => objects for [['fred'], ['barney', 'pebbles']]
     */
    var partition = createAggregator(function(result, value, key) {
      result[key ? 0 : 1].push(value);
    }, function() { return [[], []]; });

    /**
     * Reduces `collection` to a value which is the accumulated result of running
     * each element in `collection` thru `iteratee`, where each successive
     * invocation is supplied the return value of the previous. If `accumulator`
     * is not given, the first element of `collection` is used as the initial
     * value. The iteratee is invoked with four arguments:
     * (accumulator, value, index|key, collection).
     *
     * Many lodash methods are guarded to work as iteratees for methods like
     * `_.reduce`, `_.reduceRight`, and `_.transform`.
     *
     * The guarded methods are:
     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,
     * and `sortBy`
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduceRight
     * @example
     *
     * _.reduce([1, 2], function(sum, n) {
     *   return sum + n;
     * }, 0);
     * // => 3
     *
     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     *   return result;
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)
     */
    function reduce(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduce : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);
    }

    /**
     * This method is like `_.reduce` except that it iterates over elements of
     * `collection` from right to left.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The initial value.
     * @returns {*} Returns the accumulated value.
     * @see _.reduce
     * @example
     *
     * var array = [[0, 1], [2, 3], [4, 5]];
     *
     * _.reduceRight(array, function(flattened, other) {
     *   return flattened.concat(other);
     * }, []);
     * // => [4, 5, 2, 3, 0, 1]
     */
    function reduceRight(collection, iteratee, accumulator) {
      var func = isArray(collection) ? arrayReduceRight : baseReduce,
          initAccum = arguments.length < 3;

      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);
    }

    /**
     * The opposite of `_.filter`; this method returns the elements of `collection`
     * that `predicate` does **not** return truthy for.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the new filtered array.
     * @see _.filter
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': false },
     *   { 'user': 'fred',   'age': 40, 'active': true }
     * ];
     *
     * _.reject(users, function(o) { return !o.active; });
     * // => objects for ['fred']
     *
     * // The `_.matches` iteratee shorthand.
     * _.reject(users, { 'age': 40, 'active': true });
     * // => objects for ['barney']
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.reject(users, ['active', false]);
     * // => objects for ['fred']
     *
     * // The `_.property` iteratee shorthand.
     * _.reject(users, 'active');
     * // => objects for ['barney']
     */
    function reject(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, negate(getIteratee(predicate, 3)));
    }

    /**
     * Gets a random element from `collection`.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @returns {*} Returns the random element.
     * @example
     *
     * _.sample([1, 2, 3, 4]);
     * // => 2
     */
    function sample(collection) {
      var func = isArray(collection) ? arraySample : baseSample;
      return func(collection);
    }

    /**
     * Gets `n` random elements at unique keys from `collection` up to the
     * size of `collection`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Collection
     * @param {Array|Object} collection The collection to sample.
     * @param {number} [n=1] The number of elements to sample.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the random elements.
     * @example
     *
     * _.sampleSize([1, 2, 3], 2);
     * // => [3, 1]
     *
     * _.sampleSize([1, 2, 3], 4);
     * // => [2, 3, 1]
     */
    function sampleSize(collection, n, guard) {
      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      var func = isArray(collection) ? arraySampleSize : baseSampleSize;
      return func(collection, n);
    }

    /**
     * Creates an array of shuffled values, using a version of the
     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to shuffle.
     * @returns {Array} Returns the new shuffled array.
     * @example
     *
     * _.shuffle([1, 2, 3, 4]);
     * // => [4, 1, 3, 2]
     */
    function shuffle(collection) {
      var func = isArray(collection) ? arrayShuffle : baseShuffle;
      return func(collection);
    }

    /**
     * Gets the size of `collection` by returning its length for array-like
     * values or the number of own enumerable string keyed properties for objects.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object|string} collection The collection to inspect.
     * @returns {number} Returns the collection size.
     * @example
     *
     * _.size([1, 2, 3]);
     * // => 3
     *
     * _.size({ 'a': 1, 'b': 2 });
     * // => 2
     *
     * _.size('pebbles');
     * // => 7
     */
    function size(collection) {
      if (collection == null) {
        return 0;
      }
      if (isArrayLike(collection)) {
        return isString(collection) ? stringSize(collection) : collection.length;
      }
      var tag = getTag(collection);
      if (tag == mapTag || tag == setTag) {
        return collection.size;
      }
      return baseKeys(collection).length;
    }

    /**
     * Checks if `predicate` returns truthy for **any** element of `collection`.
     * Iteration is stopped once `predicate` returns truthy. The predicate is
     * invoked with three arguments: (value, index|key, collection).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {boolean} Returns `true` if any element passes the predicate check,
     *  else `false`.
     * @example
     *
     * _.some([null, 0, 'yes', false], Boolean);
     * // => true
     *
     * var users = [
     *   { 'user': 'barney', 'active': true },
     *   { 'user': 'fred',   'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.some(users, { 'user': 'barney', 'active': false });
     * // => false
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.some(users, ['active', false]);
     * // => true
     *
     * // The `_.property` iteratee shorthand.
     * _.some(users, 'active');
     * // => true
     */
    function some(collection, predicate, guard) {
      var func = isArray(collection) ? arraySome : baseSome;
      if (guard && isIterateeCall(collection, predicate, guard)) {
        predicate = undefined;
      }
      return func(collection, getIteratee(predicate, 3));
    }

    /**
     * Creates an array of elements, sorted in ascending order by the results of
     * running each element in a collection thru each iteratee. This method
     * performs a stable sort, that is, it preserves the original sort order of
     * equal elements. The iteratees are invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Collection
     * @param {Array|Object} collection The collection to iterate over.
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to sort by.
     * @returns {Array} Returns the new sorted array.
     * @example
     *
     * var users = [
     *   { 'user': 'fred',   'age': 48 },
     *   { 'user': 'barney', 'age': 36 },
     *   { 'user': 'fred',   'age': 30 },
     *   { 'user': 'barney', 'age': 34 }
     * ];
     *
     * _.sortBy(users, [function(o) { return o.user; }]);
     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]
     *
     * _.sortBy(users, ['user', 'age']);
     * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]
     */
    var sortBy = baseRest(function(collection, iteratees) {
      if (collection == null) {
        return [];
      }
      var length = iteratees.length;
      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {
        iteratees = [];
      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {
        iteratees = [iteratees[0]];
      }
      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);
    });

    /*------------------------------------------------------------------------*/

    /**
     * Gets the timestamp of the number of milliseconds that have elapsed since
     * the Unix epoch (1 January 1970 00:00:00 UTC).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Date
     * @returns {number} Returns the timestamp.
     * @example
     *
     * _.defer(function(stamp) {
     *   console.log(_.now() - stamp);
     * }, _.now());
     * // => Logs the number of milliseconds it took for the deferred invocation.
     */
    var now = ctxNow || function() {
      return root.Date.now();
    };

    /*------------------------------------------------------------------------*/

    /**
     * The opposite of `_.before`; this method creates a function that invokes
     * `func` once it's called `n` or more times.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {number} n The number of calls before `func` is invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var saves = ['profile', 'settings'];
     *
     * var done = _.after(saves.length, function() {
     *   console.log('done saving!');
     * });
     *
     * _.forEach(saves, function(type) {
     *   asyncSave({ 'type': type, 'complete': done });
     * });
     * // => Logs 'done saving!' after the two async saves have completed.
     */
    function after(n, func) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n < 1) {
          return func.apply(this, arguments);
        }
      };
    }

    /**
     * Creates a function that invokes `func`, with up to `n` arguments,
     * ignoring any additional arguments.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @param {number} [n=func.length] The arity cap.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.ary(parseInt, 1));
     * // => [6, 8, 10]
     */
    function ary(func, n, guard) {
      n = guard ? undefined : n;
      n = (func && n == null) ? func.length : n;
      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);
    }

    /**
     * Creates a function that invokes `func`, with the `this` binding and arguments
     * of the created function, while it's called less than `n` times. Subsequent
     * calls to the created function return the result of the last `func` invocation.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {number} n The number of calls at which `func` is no longer invoked.
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * jQuery(element).on('click', _.before(5, addContactToList));
     * // => Allows adding up to 4 contacts to the list.
     */
    function before(n, func) {
      var result;
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      n = toInteger(n);
      return function() {
        if (--n > 0) {
          result = func.apply(this, arguments);
        }
        if (n <= 1) {
          func = undefined;
        }
        return result;
      };
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of `thisArg`
     * and `partials` prepended to the arguments it receives.
     *
     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for partially applied arguments.
     *
     * **Note:** Unlike native `Function#bind`, this method doesn't set the "length"
     * property of bound functions.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to bind.
     * @param {*} thisArg The `this` binding of `func`.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * function greet(greeting, punctuation) {
     *   return greeting + ' ' + this.user + punctuation;
     * }
     *
     * var object = { 'user': 'fred' };
     *
     * var bound = _.bind(greet, object, 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bind(greet, object, _, '!');
     * bound('hi');
     * // => 'hi fred!'
     */
    var bind = baseRest(function(func, thisArg, partials) {
      var bitmask = WRAP_BIND_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bind));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(func, bitmask, thisArg, partials, holders);
    });

    /**
     * Creates a function that invokes the method at `object[key]` with `partials`
     * prepended to the arguments it receives.
     *
     * This method differs from `_.bind` by allowing bound functions to reference
     * methods that may be redefined or don't yet exist. See
     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)
     * for more details.
     *
     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Function
     * @param {Object} object The object to invoke the method on.
     * @param {string} key The key of the method.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new bound function.
     * @example
     *
     * var object = {
     *   'user': 'fred',
     *   'greet': function(greeting, punctuation) {
     *     return greeting + ' ' + this.user + punctuation;
     *   }
     * };
     *
     * var bound = _.bindKey(object, 'greet', 'hi');
     * bound('!');
     * // => 'hi fred!'
     *
     * object.greet = function(greeting, punctuation) {
     *   return greeting + 'ya ' + this.user + punctuation;
     * };
     *
     * bound('!');
     * // => 'hiya fred!'
     *
     * // Bound with placeholders.
     * var bound = _.bindKey(object, 'greet', _, '!');
     * bound('hi');
     * // => 'hiya fred!'
     */
    var bindKey = baseRest(function(object, key, partials) {
      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;
      if (partials.length) {
        var holders = replaceHolders(partials, getHolder(bindKey));
        bitmask |= WRAP_PARTIAL_FLAG;
      }
      return createWrap(key, bitmask, object, partials, holders);
    });

    /**
     * Creates a function that accepts arguments of `func` and either invokes
     * `func` returning its result, if at least `arity` number of arguments have
     * been provided, or returns a function that accepts the remaining `func`
     * arguments, and so on. The arity of `func` may be specified if `func.length`
     * is not sufficient.
     *
     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,
     * may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curry(abc);
     *
     * curried(1)(2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2)(3);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(1)(_, 3)(2);
     * // => [1, 2, 3]
     */
    function curry(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curry.placeholder;
      return result;
    }

    /**
     * This method is like `_.curry` except that arguments are applied to `func`
     * in the manner of `_.partialRight` instead of `_.partial`.
     *
     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for provided arguments.
     *
     * **Note:** This method doesn't set the "length" property of curried functions.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to curry.
     * @param {number} [arity=func.length] The arity of `func`.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the new curried function.
     * @example
     *
     * var abc = function(a, b, c) {
     *   return [a, b, c];
     * };
     *
     * var curried = _.curryRight(abc);
     *
     * curried(3)(2)(1);
     * // => [1, 2, 3]
     *
     * curried(2, 3)(1);
     * // => [1, 2, 3]
     *
     * curried(1, 2, 3);
     * // => [1, 2, 3]
     *
     * // Curried with placeholders.
     * curried(3)(1, _)(2);
     * // => [1, 2, 3]
     */
    function curryRight(func, arity, guard) {
      arity = guard ? undefined : arity;
      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);
      result.placeholder = curryRight.placeholder;
      return result;
    }

    /**
     * Creates a debounced function that delays invoking `func` until after `wait`
     * milliseconds have elapsed since the last time the debounced function was
     * invoked. The debounced function comes with a `cancel` method to cancel
     * delayed `func` invocations and a `flush` method to immediately invoke them.
     * Provide `options` to indicate whether `func` should be invoked on the
     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
     * with the last arguments provided to the debounced function. Subsequent
     * calls to the debounced function return the result of the last `func`
     * invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the debounced function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.debounce` and `_.throttle`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to debounce.
     * @param {number} [wait=0] The number of milliseconds to delay.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=false]
     *  Specify invoking on the leading edge of the timeout.
     * @param {number} [options.maxWait]
     *  The maximum time `func` is allowed to be delayed before it's invoked.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new debounced function.
     * @example
     *
     * // Avoid costly calculations while the window size is in flux.
     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
     *
     * // Invoke `sendMail` when clicked, debouncing subsequent calls.
     * jQuery(element).on('click', _.debounce(sendMail, 300, {
     *   'leading': true,
     *   'trailing': false
     * }));
     *
     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
     * var source = new EventSource('/stream');
     * jQuery(source).on('message', debounced);
     *
     * // Cancel the trailing debounced invocation.
     * jQuery(window).on('popstate', debounced.cancel);
     */
    function debounce(func, wait, options) {
      var lastArgs,
          lastThis,
          maxWait,
          result,
          timerId,
          lastCallTime,
          lastInvokeTime = 0,
          leading = false,
          maxing = false,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject(options)) {
        leading = !!options.leading;
        maxing = 'maxWait' in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }

      function invokeFunc(time) {
        var args = lastArgs,
            thisArg = lastThis;

        lastArgs = lastThis = undefined;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }

      function leadingEdge(time) {
        // Reset any `maxWait` timer.
        lastInvokeTime = time;
        // Start the timer for the trailing edge.
        timerId = setTimeout(timerExpired, wait);
        // Invoke the leading edge.
        return leading ? invokeFunc(time) : result;
      }

      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime,
            timeWaiting = wait - timeSinceLastCall;

        return maxing
          ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)
          : timeWaiting;
      }

      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime,
            timeSinceLastInvoke = time - lastInvokeTime;

        // Either this is the first call, activity has stopped and we're at the
        // trailing edge, the system time has gone backwards and we're treating
        // it as the trailing edge, or we've hit the `maxWait` limit.
        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||
          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));
      }

      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        // Restart the timer.
        timerId = setTimeout(timerExpired, remainingWait(time));
      }

      function trailingEdge(time) {
        timerId = undefined;

        // Only invoke if we have `lastArgs` which means `func` has been
        // debounced at least once.
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = undefined;
        return result;
      }

      function cancel() {
        if (timerId !== undefined) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = undefined;
      }

      function flush() {
        return timerId === undefined ? result : trailingEdge(now());
      }

      function debounced() {
        var time = now(),
            isInvoking = shouldInvoke(time);

        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;

        if (isInvoking) {
          if (timerId === undefined) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            // Handle invocations in a tight loop.
            clearTimeout(timerId);
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === undefined) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }

    /**
     * Defers invoking the `func` until the current call stack has cleared. Any
     * additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to defer.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.defer(function(text) {
     *   console.log(text);
     * }, 'deferred');
     * // => Logs 'deferred' after one millisecond.
     */
    var defer = baseRest(function(func, args) {
      return baseDelay(func, 1, args);
    });

    /**
     * Invokes `func` after `wait` milliseconds. Any additional arguments are
     * provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to delay.
     * @param {number} wait The number of milliseconds to delay invocation.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {number} Returns the timer id.
     * @example
     *
     * _.delay(function(text) {
     *   console.log(text);
     * }, 1000, 'later');
     * // => Logs 'later' after one second.
     */
    var delay = baseRest(function(func, wait, args) {
      return baseDelay(func, toNumber(wait) || 0, args);
    });

    /**
     * Creates a function that invokes `func` with arguments reversed.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to flip arguments for.
     * @returns {Function} Returns the new flipped function.
     * @example
     *
     * var flipped = _.flip(function() {
     *   return _.toArray(arguments);
     * });
     *
     * flipped('a', 'b', 'c', 'd');
     * // => ['d', 'c', 'b', 'a']
     */
    function flip(func) {
      return createWrap(func, WRAP_FLIP_FLAG);
    }

    /**
     * Creates a function that memoizes the result of `func`. If `resolver` is
     * provided, it determines the cache key for storing the result based on the
     * arguments provided to the memoized function. By default, the first argument
     * provided to the memoized function is used as the map cache key. The `func`
     * is invoked with the `this` binding of the memoized function.
     *
     * **Note:** The cache is exposed as the `cache` property on the memoized
     * function. Its creation may be customized by replacing the `_.memoize.Cache`
     * constructor with one whose instances implement the
     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
     * method interface of `clear`, `delete`, `get`, `has`, and `set`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to have its output memoized.
     * @param {Function} [resolver] The function to resolve the cache key.
     * @returns {Function} Returns the new memoized function.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     * var other = { 'c': 3, 'd': 4 };
     *
     * var values = _.memoize(_.values);
     * values(object);
     * // => [1, 2]
     *
     * values(other);
     * // => [3, 4]
     *
     * object.a = 2;
     * values(object);
     * // => [1, 2]
     *
     * // Modify the result cache.
     * values.cache.set(object, ['a', 'b']);
     * values(object);
     * // => ['a', 'b']
     *
     * // Replace `_.memoize.Cache`.
     * _.memoize.Cache = WeakMap;
     */
    function memoize(func, resolver) {
      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments,
            key = resolver ? resolver.apply(this, args) : args[0],
            cache = memoized.cache;

        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result) || cache;
        return result;
      };
      memoized.cache = new (memoize.Cache || MapCache);
      return memoized;
    }

    // Expose `MapCache`.
    memoize.Cache = MapCache;

    /**
     * Creates a function that negates the result of the predicate `func`. The
     * `func` predicate is invoked with the `this` binding and arguments of the
     * created function.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} predicate The predicate to negate.
     * @returns {Function} Returns the new negated function.
     * @example
     *
     * function isEven(n) {
     *   return n % 2 == 0;
     * }
     *
     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));
     * // => [1, 3, 5]
     */
    function negate(predicate) {
      if (typeof predicate != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      return function() {
        var args = arguments;
        switch (args.length) {
          case 0: return !predicate.call(this);
          case 1: return !predicate.call(this, args[0]);
          case 2: return !predicate.call(this, args[0], args[1]);
          case 3: return !predicate.call(this, args[0], args[1], args[2]);
        }
        return !predicate.apply(this, args);
      };
    }

    /**
     * Creates a function that is restricted to invoking `func` once. Repeat calls
     * to the function return the value of the first invocation. The `func` is
     * invoked with the `this` binding and arguments of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to restrict.
     * @returns {Function} Returns the new restricted function.
     * @example
     *
     * var initialize = _.once(createApplication);
     * initialize();
     * initialize();
     * // => `createApplication` is invoked once
     */
    function once(func) {
      return before(2, func);
    }

    /**
     * Creates a function that invokes `func` with its arguments transformed.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Function
     * @param {Function} func The function to wrap.
     * @param {...(Function|Function[])} [transforms=[_.identity]]
     *  The argument transforms.
     * @returns {Function} Returns the new function.
     * @example
     *
     * function doubled(n) {
     *   return n * 2;
     * }
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var func = _.overArgs(function(x, y) {
     *   return [x, y];
     * }, [square, doubled]);
     *
     * func(9, 3);
     * // => [81, 6]
     *
     * func(10, 5);
     * // => [100, 10]
     */
    var overArgs = castRest(function(func, transforms) {
      transforms = (transforms.length == 1 && isArray(transforms[0]))
        ? arrayMap(transforms[0], baseUnary(getIteratee()))
        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));

      var funcsLength = transforms.length;
      return baseRest(function(args) {
        var index = -1,
            length = nativeMin(args.length, funcsLength);

        while (++index < length) {
          args[index] = transforms[index].call(this, args[index]);
        }
        return apply(func, this, args);
      });
    });

    /**
     * Creates a function that invokes `func` with `partials` prepended to the
     * arguments it receives. This method is like `_.bind` except it does **not**
     * alter the `this` binding.
     *
     * The `_.partial.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 0.2.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var sayHelloTo = _.partial(greet, 'hello');
     * sayHelloTo('fred');
     * // => 'hello fred'
     *
     * // Partially applied with placeholders.
     * var greetFred = _.partial(greet, _, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     */
    var partial = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partial));
      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);
    });

    /**
     * This method is like `_.partial` except that partially applied arguments
     * are appended to the arguments it receives.
     *
     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic
     * builds, may be used as a placeholder for partially applied arguments.
     *
     * **Note:** This method doesn't set the "length" property of partially
     * applied functions.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Function
     * @param {Function} func The function to partially apply arguments to.
     * @param {...*} [partials] The arguments to be partially applied.
     * @returns {Function} Returns the new partially applied function.
     * @example
     *
     * function greet(greeting, name) {
     *   return greeting + ' ' + name;
     * }
     *
     * var greetFred = _.partialRight(greet, 'fred');
     * greetFred('hi');
     * // => 'hi fred'
     *
     * // Partially applied with placeholders.
     * var sayHelloTo = _.partialRight(greet, 'hello', _);
     * sayHelloTo('fred');
     * // => 'hello fred'
     */
    var partialRight = baseRest(function(func, partials) {
      var holders = replaceHolders(partials, getHolder(partialRight));
      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);
    });

    /**
     * Creates a function that invokes `func` with arguments arranged according
     * to the specified `indexes` where the argument value at the first index is
     * provided as the first argument, the argument value at the second index is
     * provided as the second argument, and so on.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Function
     * @param {Function} func The function to rearrange arguments for.
     * @param {...(number|number[])} indexes The arranged argument indexes.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var rearged = _.rearg(function(a, b, c) {
     *   return [a, b, c];
     * }, [2, 0, 1]);
     *
     * rearged('b', 'c', 'a')
     * // => ['a', 'b', 'c']
     */
    var rearg = flatRest(function(func, indexes) {
      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);
    });

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * created function and arguments from `start` and beyond provided as
     * an array.
     *
     * **Note:** This method is based on the
     * [rest parameter](https://mdn.io/rest_parameters).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to apply a rest parameter to.
     * @param {number} [start=func.length-1] The start position of the rest parameter.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.rest(function(what, names) {
     *   return what + ' ' + _.initial(names).join(', ') +
     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);
     * });
     *
     * say('hello', 'fred', 'barney', 'pebbles');
     * // => 'hello fred, barney, & pebbles'
     */
    function rest(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start === undefined ? start : toInteger(start);
      return baseRest(func, start);
    }

    /**
     * Creates a function that invokes `func` with the `this` binding of the
     * create function and an array of arguments much like
     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).
     *
     * **Note:** This method is based on the
     * [spread operator](https://mdn.io/spread_operator).
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Function
     * @param {Function} func The function to spread arguments over.
     * @param {number} [start=0] The start position of the spread.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var say = _.spread(function(who, what) {
     *   return who + ' says ' + what;
     * });
     *
     * say(['fred', 'hello']);
     * // => 'fred says hello'
     *
     * var numbers = Promise.all([
     *   Promise.resolve(40),
     *   Promise.resolve(36)
     * ]);
     *
     * numbers.then(_.spread(function(x, y) {
     *   return x + y;
     * }));
     * // => a Promise of 76
     */
    function spread(func, start) {
      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      start = start == null ? 0 : nativeMax(toInteger(start), 0);
      return baseRest(function(args) {
        var array = args[start],
            otherArgs = castSlice(args, 0, start);

        if (array) {
          arrayPush(otherArgs, array);
        }
        return apply(func, this, otherArgs);
      });
    }

    /**
     * Creates a throttled function that only invokes `func` at most once per
     * every `wait` milliseconds. The throttled function comes with a `cancel`
     * method to cancel delayed `func` invocations and a `flush` method to
     * immediately invoke them. Provide `options` to indicate whether `func`
     * should be invoked on the leading and/or trailing edge of the `wait`
     * timeout. The `func` is invoked with the last arguments provided to the
     * throttled function. Subsequent calls to the throttled function return the
     * result of the last `func` invocation.
     *
     * **Note:** If `leading` and `trailing` options are `true`, `func` is
     * invoked on the trailing edge of the timeout only if the throttled function
     * is invoked more than once during the `wait` timeout.
     *
     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
     * until to the next tick, similar to `setTimeout` with a timeout of `0`.
     *
     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
     * for details over the differences between `_.throttle` and `_.debounce`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {Function} func The function to throttle.
     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.leading=true]
     *  Specify invoking on the leading edge of the timeout.
     * @param {boolean} [options.trailing=true]
     *  Specify invoking on the trailing edge of the timeout.
     * @returns {Function} Returns the new throttled function.
     * @example
     *
     * // Avoid excessively updating the position while scrolling.
     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));
     *
     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.
     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });
     * jQuery(element).on('click', throttled);
     *
     * // Cancel the trailing throttled invocation.
     * jQuery(window).on('popstate', throttled.cancel);
     */
    function throttle(func, wait, options) {
      var leading = true,
          trailing = true;

      if (typeof func != 'function') {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject(options)) {
        leading = 'leading' in options ? !!options.leading : leading;
        trailing = 'trailing' in options ? !!options.trailing : trailing;
      }
      return debounce(func, wait, {
        'leading': leading,
        'maxWait': wait,
        'trailing': trailing
      });
    }

    /**
     * Creates a function that accepts up to one argument, ignoring any
     * additional arguments.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Function
     * @param {Function} func The function to cap arguments for.
     * @returns {Function} Returns the new capped function.
     * @example
     *
     * _.map(['6', '8', '10'], _.unary(parseInt));
     * // => [6, 8, 10]
     */
    function unary(func) {
      return ary(func, 1);
    }

    /**
     * Creates a function that provides `value` to `wrapper` as its first
     * argument. Any additional arguments provided to the function are appended
     * to those provided to the `wrapper`. The wrapper is invoked with the `this`
     * binding of the created function.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Function
     * @param {*} value The value to wrap.
     * @param {Function} [wrapper=identity] The wrapper function.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var p = _.wrap(_.escape, function(func, text) {
     *   return '<p>' + func(text) + '</p>';
     * });
     *
     * p('fred, barney, & pebbles');
     * // => '<p>fred, barney, &amp; pebbles</p>'
     */
    function wrap(value, wrapper) {
      return partial(castFunction(wrapper), value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Casts `value` as an array if it's not one.
     *
     * @static
     * @memberOf _
     * @since 4.4.0
     * @category Lang
     * @param {*} value The value to inspect.
     * @returns {Array} Returns the cast array.
     * @example
     *
     * _.castArray(1);
     * // => [1]
     *
     * _.castArray({ 'a': 1 });
     * // => [{ 'a': 1 }]
     *
     * _.castArray('abc');
     * // => ['abc']
     *
     * _.castArray(null);
     * // => [null]
     *
     * _.castArray(undefined);
     * // => [undefined]
     *
     * _.castArray();
     * // => []
     *
     * var array = [1, 2, 3];
     * console.log(_.castArray(array) === array);
     * // => true
     */
    function castArray() {
      if (!arguments.length) {
        return [];
      }
      var value = arguments[0];
      return isArray(value) ? value : [value];
    }

    /**
     * Creates a shallow clone of `value`.
     *
     * **Note:** This method is loosely based on the
     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)
     * and supports cloning arrays, array buffers, booleans, date objects, maps,
     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed
     * arrays. The own enumerable properties of `arguments` objects are cloned
     * as plain objects. An empty object is returned for uncloneable values such
     * as error objects, functions, DOM nodes, and WeakMaps.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to clone.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeep
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var shallow = _.clone(objects);
     * console.log(shallow[0] === objects[0]);
     * // => true
     */
    function clone(value) {
      return baseClone(value, CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.clone` except that it accepts `customizer` which
     * is invoked to produce the cloned value. If `customizer` returns `undefined`,
     * cloning is handled by the method instead. The `customizer` is invoked with
     * up to four arguments; (value [, index|key, object, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the cloned value.
     * @see _.cloneDeepWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(false);
     *   }
     * }
     *
     * var el = _.cloneWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 0
     */
    function cloneWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * This method is like `_.clone` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @returns {*} Returns the deep cloned value.
     * @see _.clone
     * @example
     *
     * var objects = [{ 'a': 1 }, { 'b': 2 }];
     *
     * var deep = _.cloneDeep(objects);
     * console.log(deep[0] === objects[0]);
     * // => false
     */
    function cloneDeep(value) {
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);
    }

    /**
     * This method is like `_.cloneWith` except that it recursively clones `value`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to recursively clone.
     * @param {Function} [customizer] The function to customize cloning.
     * @returns {*} Returns the deep cloned value.
     * @see _.cloneWith
     * @example
     *
     * function customizer(value) {
     *   if (_.isElement(value)) {
     *     return value.cloneNode(true);
     *   }
     * }
     *
     * var el = _.cloneDeepWith(document.body, customizer);
     *
     * console.log(el === document.body);
     * // => false
     * console.log(el.nodeName);
     * // => 'BODY'
     * console.log(el.childNodes.length);
     * // => 20
     */
    function cloneDeepWith(value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);
    }

    /**
     * Checks if `object` conforms to `source` by invoking the predicate
     * properties of `source` with the corresponding property values of `object`.
     *
     * **Note:** This method is equivalent to `_.conforms` when `source` is
     * partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property predicates to conform to.
     * @returns {boolean} Returns `true` if `object` conforms, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });
     * // => true
     *
     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });
     * // => false
     */
    function conformsTo(object, source) {
      return source == null || baseConformsTo(object, source, keys(source));
    }

    /**
     * Performs a
     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
     * comparison between two values to determine if they are equivalent.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.eq(object, object);
     * // => true
     *
     * _.eq(object, other);
     * // => false
     *
     * _.eq('a', 'a');
     * // => true
     *
     * _.eq('a', Object('a'));
     * // => false
     *
     * _.eq(NaN, NaN);
     * // => true
     */
    function eq(value, other) {
      return value === other || (value !== value && other !== other);
    }

    /**
     * Checks if `value` is greater than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than `other`,
     *  else `false`.
     * @see _.lt
     * @example
     *
     * _.gt(3, 1);
     * // => true
     *
     * _.gt(3, 3);
     * // => false
     *
     * _.gt(1, 3);
     * // => false
     */
    var gt = createRelationalOperation(baseGt);

    /**
     * Checks if `value` is greater than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is greater than or equal to
     *  `other`, else `false`.
     * @see _.lte
     * @example
     *
     * _.gte(3, 1);
     * // => true
     *
     * _.gte(3, 3);
     * // => true
     *
     * _.gte(1, 3);
     * // => false
     */
    var gte = createRelationalOperation(function(value, other) {
      return value >= other;
    });

    /**
     * Checks if `value` is likely an `arguments` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an `arguments` object,
     *  else `false`.
     * @example
     *
     * _.isArguments(function() { return arguments; }());
     * // => true
     *
     * _.isArguments([1, 2, 3]);
     * // => false
     */
    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&
        !propertyIsEnumerable.call(value, 'callee');
    };

    /**
     * Checks if `value` is classified as an `Array` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array, else `false`.
     * @example
     *
     * _.isArray([1, 2, 3]);
     * // => true
     *
     * _.isArray(document.body.children);
     * // => false
     *
     * _.isArray('abc');
     * // => false
     *
     * _.isArray(_.noop);
     * // => false
     */
    var isArray = Array.isArray;

    /**
     * Checks if `value` is classified as an `ArrayBuffer` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.
     * @example
     *
     * _.isArrayBuffer(new ArrayBuffer(2));
     * // => true
     *
     * _.isArrayBuffer(new Array(2));
     * // => false
     */
    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;

    /**
     * Checks if `value` is array-like. A value is considered array-like if it's
     * not a function and has a `value.length` that's an integer greater than or
     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
     * @example
     *
     * _.isArrayLike([1, 2, 3]);
     * // => true
     *
     * _.isArrayLike(document.body.children);
     * // => true
     *
     * _.isArrayLike('abc');
     * // => true
     *
     * _.isArrayLike(_.noop);
     * // => false
     */
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }

    /**
     * This method is like `_.isArrayLike` except that it also checks if `value`
     * is an object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an array-like object,
     *  else `false`.
     * @example
     *
     * _.isArrayLikeObject([1, 2, 3]);
     * // => true
     *
     * _.isArrayLikeObject(document.body.children);
     * // => true
     *
     * _.isArrayLikeObject('abc');
     * // => false
     *
     * _.isArrayLikeObject(_.noop);
     * // => false
     */
    function isArrayLikeObject(value) {
      return isObjectLike(value) && isArrayLike(value);
    }

    /**
     * Checks if `value` is classified as a boolean primitive or object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.
     * @example
     *
     * _.isBoolean(false);
     * // => true
     *
     * _.isBoolean(null);
     * // => false
     */
    function isBoolean(value) {
      return value === true || value === false ||
        (isObjectLike(value) && baseGetTag(value) == boolTag);
    }

    /**
     * Checks if `value` is a buffer.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.
     * @example
     *
     * _.isBuffer(new Buffer(2));
     * // => true
     *
     * _.isBuffer(new Uint8Array(2));
     * // => false
     */
    var isBuffer = nativeIsBuffer || stubFalse;

    /**
     * Checks if `value` is classified as a `Date` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.
     * @example
     *
     * _.isDate(new Date);
     * // => true
     *
     * _.isDate('Mon April 23 2012');
     * // => false
     */
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;

    /**
     * Checks if `value` is likely a DOM element.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.
     * @example
     *
     * _.isElement(document.body);
     * // => true
     *
     * _.isElement('<body>');
     * // => false
     */
    function isElement(value) {
      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);
    }

    /**
     * Checks if `value` is an empty object, collection, map, or set.
     *
     * Objects are considered empty if they have no own enumerable string keyed
     * properties.
     *
     * Array-like values such as `arguments` objects, arrays, buffers, strings, or
     * jQuery-like collections are considered empty if they have a `length` of `0`.
     * Similarly, maps and sets are considered empty if they have a `size` of `0`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is empty, else `false`.
     * @example
     *
     * _.isEmpty(null);
     * // => true
     *
     * _.isEmpty(true);
     * // => true
     *
     * _.isEmpty(1);
     * // => true
     *
     * _.isEmpty([1, 2, 3]);
     * // => false
     *
     * _.isEmpty({ 'a': 1 });
     * // => false
     */
    function isEmpty(value) {
      if (value == null) {
        return true;
      }
      if (isArrayLike(value) &&
          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||
            isBuffer(value) || isTypedArray(value) || isArguments(value))) {
        return !value.length;
      }
      var tag = getTag(value);
      if (tag == mapTag || tag == setTag) {
        return !value.size;
      }
      if (isPrototype(value)) {
        return !baseKeys(value).length;
      }
      for (var key in value) {
        if (hasOwnProperty.call(value, key)) {
          return false;
        }
      }
      return true;
    }

    /**
     * Performs a deep comparison between two values to determine if they are
     * equivalent.
     *
     * **Note:** This method supports comparing arrays, array buffers, booleans,
     * date objects, error objects, maps, numbers, `Object` objects, regexes,
     * sets, strings, symbols, and typed arrays. `Object` objects are compared
     * by their own, not inherited, enumerable properties. Functions and DOM
     * nodes are compared by strict equality, i.e. `===`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * var object = { 'a': 1 };
     * var other = { 'a': 1 };
     *
     * _.isEqual(object, other);
     * // => true
     *
     * object === other;
     * // => false
     */
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }

    /**
     * This method is like `_.isEqual` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with up to
     * six arguments: (objValue, othValue [, index|key, object, other, stack]).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, othValue) {
     *   if (isGreeting(objValue) && isGreeting(othValue)) {
     *     return true;
     *   }
     * }
     *
     * var array = ['hello', 'goodbye'];
     * var other = ['hi', 'goodbye'];
     *
     * _.isEqualWith(array, other, customizer);
     * // => true
     */
    function isEqualWith(value, other, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      var result = customizer ? customizer(value, other) : undefined;
      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;
    }

    /**
     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,
     * `SyntaxError`, `TypeError`, or `URIError` object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.
     * @example
     *
     * _.isError(new Error);
     * // => true
     *
     * _.isError(Error);
     * // => false
     */
    function isError(value) {
      if (!isObjectLike(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == errorTag || tag == domExcTag ||
        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));
    }

    /**
     * Checks if `value` is a finite primitive number.
     *
     * **Note:** This method is based on
     * [`Number.isFinite`](https://mdn.io/Number/isFinite).
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.
     * @example
     *
     * _.isFinite(3);
     * // => true
     *
     * _.isFinite(Number.MIN_VALUE);
     * // => true
     *
     * _.isFinite(Infinity);
     * // => false
     *
     * _.isFinite('3');
     * // => false
     */
    function isFinite(value) {
      return typeof value == 'number' && nativeIsFinite(value);
    }

    /**
     * Checks if `value` is classified as a `Function` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a function, else `false`.
     * @example
     *
     * _.isFunction(_);
     * // => true
     *
     * _.isFunction(/abc/);
     * // => false
     */
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      // The use of `Object#toString` avoids issues with the `typeof` operator
      // in Safari 9 which returns 'object' for typed arrays and other constructors.
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }

    /**
     * Checks if `value` is an integer.
     *
     * **Note:** This method is based on
     * [`Number.isInteger`](https://mdn.io/Number/isInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.
     * @example
     *
     * _.isInteger(3);
     * // => true
     *
     * _.isInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isInteger(Infinity);
     * // => false
     *
     * _.isInteger('3');
     * // => false
     */
    function isInteger(value) {
      return typeof value == 'number' && value == toInteger(value);
    }

    /**
     * Checks if `value` is a valid array-like length.
     *
     * **Note:** This method is loosely based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
     * @example
     *
     * _.isLength(3);
     * // => true
     *
     * _.isLength(Number.MIN_VALUE);
     * // => false
     *
     * _.isLength(Infinity);
     * // => false
     *
     * _.isLength('3');
     * // => false
     */
    function isLength(value) {
      return typeof value == 'number' &&
        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is the
     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is an object, else `false`.
     * @example
     *
     * _.isObject({});
     * // => true
     *
     * _.isObject([1, 2, 3]);
     * // => true
     *
     * _.isObject(_.noop);
     * // => true
     *
     * _.isObject(null);
     * // => false
     */
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == 'object' || type == 'function');
    }

    /**
     * Checks if `value` is object-like. A value is object-like if it's not `null`
     * and has a `typeof` result of "object".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
     * @example
     *
     * _.isObjectLike({});
     * // => true
     *
     * _.isObjectLike([1, 2, 3]);
     * // => true
     *
     * _.isObjectLike(_.noop);
     * // => false
     *
     * _.isObjectLike(null);
     * // => false
     */
    function isObjectLike(value) {
      return value != null && typeof value == 'object';
    }

    /**
     * Checks if `value` is classified as a `Map` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a map, else `false`.
     * @example
     *
     * _.isMap(new Map);
     * // => true
     *
     * _.isMap(new WeakMap);
     * // => false
     */
    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;

    /**
     * Performs a partial deep comparison between `object` and `source` to
     * determine if `object` contains equivalent property values.
     *
     * **Note:** This method is equivalent to `_.matches` when `source` is
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * var object = { 'a': 1, 'b': 2 };
     *
     * _.isMatch(object, { 'b': 2 });
     * // => true
     *
     * _.isMatch(object, { 'b': 1 });
     * // => false
     */
    function isMatch(object, source) {
      return object === source || baseIsMatch(object, source, getMatchData(source));
    }

    /**
     * This method is like `_.isMatch` except that it accepts `customizer` which
     * is invoked to compare values. If `customizer` returns `undefined`, comparisons
     * are handled by the method instead. The `customizer` is invoked with five
     * arguments: (objValue, srcValue, index|key, object, source).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {Object} object The object to inspect.
     * @param {Object} source The object of property values to match.
     * @param {Function} [customizer] The function to customize comparisons.
     * @returns {boolean} Returns `true` if `object` is a match, else `false`.
     * @example
     *
     * function isGreeting(value) {
     *   return /^h(?:i|ello)$/.test(value);
     * }
     *
     * function customizer(objValue, srcValue) {
     *   if (isGreeting(objValue) && isGreeting(srcValue)) {
     *     return true;
     *   }
     * }
     *
     * var object = { 'greeting': 'hello' };
     * var source = { 'greeting': 'hi' };
     *
     * _.isMatchWith(object, source, customizer);
     * // => true
     */
    function isMatchWith(object, source, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return baseIsMatch(object, source, getMatchData(source), customizer);
    }

    /**
     * Checks if `value` is `NaN`.
     *
     * **Note:** This method is based on
     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as
     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for
     * `undefined` and other non-number values.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
     * @example
     *
     * _.isNaN(NaN);
     * // => true
     *
     * _.isNaN(new Number(NaN));
     * // => true
     *
     * isNaN(undefined);
     * // => true
     *
     * _.isNaN(undefined);
     * // => false
     */
    function isNaN(value) {
      // An `NaN` primitive is the only value that is not equal to itself.
      // Perform the `toStringTag` check first to avoid errors with some
      // ActiveX objects in IE.
      return isNumber(value) && value != +value;
    }

    /**
     * Checks if `value` is a pristine native function.
     *
     * **Note:** This method can't reliably detect native functions in the presence
     * of the core-js package because core-js circumvents this kind of detection.
     * Despite multiple requests, the core-js maintainer has made it clear: any
     * attempt to fix the detection will be obstructed. As a result, we're left
     * with little choice but to throw an error. Unfortunately, this also affects
     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),
     * which rely on core-js.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a native function,
     *  else `false`.
     * @example
     *
     * _.isNative(Array.prototype.push);
     * // => true
     *
     * _.isNative(_);
     * // => false
     */
    function isNative(value) {
      if (isMaskable(value)) {
        throw new Error(CORE_ERROR_TEXT);
      }
      return baseIsNative(value);
    }

    /**
     * Checks if `value` is `null`.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.
     * @example
     *
     * _.isNull(null);
     * // => true
     *
     * _.isNull(void 0);
     * // => false
     */
    function isNull(value) {
      return value === null;
    }

    /**
     * Checks if `value` is `null` or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.
     * @example
     *
     * _.isNil(null);
     * // => true
     *
     * _.isNil(void 0);
     * // => true
     *
     * _.isNil(NaN);
     * // => false
     */
    function isNil(value) {
      return value == null;
    }

    /**
     * Checks if `value` is classified as a `Number` primitive or object.
     *
     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are
     * classified as numbers, use the `_.isFinite` method.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a number, else `false`.
     * @example
     *
     * _.isNumber(3);
     * // => true
     *
     * _.isNumber(Number.MIN_VALUE);
     * // => true
     *
     * _.isNumber(Infinity);
     * // => true
     *
     * _.isNumber('3');
     * // => false
     */
    function isNumber(value) {
      return typeof value == 'number' ||
        (isObjectLike(value) && baseGetTag(value) == numberTag);
    }

    /**
     * Checks if `value` is a plain object, that is, an object created by the
     * `Object` constructor or one with a `[[Prototype]]` of `null`.
     *
     * @static
     * @memberOf _
     * @since 0.8.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * _.isPlainObject(new Foo);
     * // => false
     *
     * _.isPlainObject([1, 2, 3]);
     * // => false
     *
     * _.isPlainObject({ 'x': 0, 'y': 0 });
     * // => true
     *
     * _.isPlainObject(Object.create(null));
     * // => true
     */
    function isPlainObject(value) {
      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {
        return false;
      }
      var proto = getPrototype(value);
      if (proto === null) {
        return true;
      }
      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;
      return typeof Ctor == 'function' && Ctor instanceof Ctor &&
        funcToString.call(Ctor) == objectCtorString;
    }

    /**
     * Checks if `value` is classified as a `RegExp` object.
     *
     * @static
     * @memberOf _
     * @since 0.1.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.
     * @example
     *
     * _.isRegExp(/abc/);
     * // => true
     *
     * _.isRegExp('/abc/');
     * // => false
     */
    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;

    /**
     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754
     * double precision number which isn't the result of a rounded unsafe integer.
     *
     * **Note:** This method is based on
     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.
     * @example
     *
     * _.isSafeInteger(3);
     * // => true
     *
     * _.isSafeInteger(Number.MIN_VALUE);
     * // => false
     *
     * _.isSafeInteger(Infinity);
     * // => false
     *
     * _.isSafeInteger('3');
     * // => false
     */
    function isSafeInteger(value) {
      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;
    }

    /**
     * Checks if `value` is classified as a `Set` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a set, else `false`.
     * @example
     *
     * _.isSet(new Set);
     * // => true
     *
     * _.isSet(new WeakSet);
     * // => false
     */
    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;

    /**
     * Checks if `value` is classified as a `String` primitive or object.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a string, else `false`.
     * @example
     *
     * _.isString('abc');
     * // => true
     *
     * _.isString(1);
     * // => false
     */
    function isString(value) {
      return typeof value == 'string' ||
        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);
    }

    /**
     * Checks if `value` is classified as a `Symbol` primitive or object.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
     * @example
     *
     * _.isSymbol(Symbol.iterator);
     * // => true
     *
     * _.isSymbol('abc');
     * // => false
     */
    function isSymbol(value) {
      return typeof value == 'symbol' ||
        (isObjectLike(value) && baseGetTag(value) == symbolTag);
    }

    /**
     * Checks if `value` is classified as a typed array.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.
     * @example
     *
     * _.isTypedArray(new Uint8Array);
     * // => true
     *
     * _.isTypedArray([]);
     * // => false
     */
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;

    /**
     * Checks if `value` is `undefined`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.
     * @example
     *
     * _.isUndefined(void 0);
     * // => true
     *
     * _.isUndefined(null);
     * // => false
     */
    function isUndefined(value) {
      return value === undefined;
    }

    /**
     * Checks if `value` is classified as a `WeakMap` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.
     * @example
     *
     * _.isWeakMap(new WeakMap);
     * // => true
     *
     * _.isWeakMap(new Map);
     * // => false
     */
    function isWeakMap(value) {
      return isObjectLike(value) && getTag(value) == weakMapTag;
    }

    /**
     * Checks if `value` is classified as a `WeakSet` object.
     *
     * @static
     * @memberOf _
     * @since 4.3.0
     * @category Lang
     * @param {*} value The value to check.
     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.
     * @example
     *
     * _.isWeakSet(new WeakSet);
     * // => true
     *
     * _.isWeakSet(new Set);
     * // => false
     */
    function isWeakSet(value) {
      return isObjectLike(value) && baseGetTag(value) == weakSetTag;
    }

    /**
     * Checks if `value` is less than `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than `other`,
     *  else `false`.
     * @see _.gt
     * @example
     *
     * _.lt(1, 3);
     * // => true
     *
     * _.lt(3, 3);
     * // => false
     *
     * _.lt(3, 1);
     * // => false
     */
    var lt = createRelationalOperation(baseLt);

    /**
     * Checks if `value` is less than or equal to `other`.
     *
     * @static
     * @memberOf _
     * @since 3.9.0
     * @category Lang
     * @param {*} value The value to compare.
     * @param {*} other The other value to compare.
     * @returns {boolean} Returns `true` if `value` is less than or equal to
     *  `other`, else `false`.
     * @see _.gte
     * @example
     *
     * _.lte(1, 3);
     * // => true
     *
     * _.lte(3, 3);
     * // => true
     *
     * _.lte(3, 1);
     * // => false
     */
    var lte = createRelationalOperation(function(value, other) {
      return value <= other;
    });

    /**
     * Converts `value` to an array.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Array} Returns the converted array.
     * @example
     *
     * _.toArray({ 'a': 1, 'b': 2 });
     * // => [1, 2]
     *
     * _.toArray('abc');
     * // => ['a', 'b', 'c']
     *
     * _.toArray(1);
     * // => []
     *
     * _.toArray(null);
     * // => []
     */
    function toArray(value) {
      if (!value) {
        return [];
      }
      if (isArrayLike(value)) {
        return isString(value) ? stringToArray(value) : copyArray(value);
      }
      if (symIterator && value[symIterator]) {
        return iteratorToArray(value[symIterator]());
      }
      var tag = getTag(value),
          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);

      return func(value);
    }

    /**
     * Converts `value` to a finite number.
     *
     * @static
     * @memberOf _
     * @since 4.12.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted number.
     * @example
     *
     * _.toFinite(3.2);
     * // => 3.2
     *
     * _.toFinite(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toFinite(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toFinite('3.2');
     * // => 3.2
     */
    function toFinite(value) {
      if (!value) {
        return value === 0 ? value : 0;
      }
      value = toNumber(value);
      if (value === INFINITY || value === -INFINITY) {
        var sign = (value < 0 ? -1 : 1);
        return sign * MAX_INTEGER;
      }
      return value === value ? value : 0;
    }

    /**
     * Converts `value` to an integer.
     *
     * **Note:** This method is loosely based on
     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toInteger(3.2);
     * // => 3
     *
     * _.toInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toInteger(Infinity);
     * // => 1.7976931348623157e+308
     *
     * _.toInteger('3.2');
     * // => 3
     */
    function toInteger(value) {
      var result = toFinite(value),
          remainder = result % 1;

      return result === result ? (remainder ? result - remainder : result) : 0;
    }

    /**
     * Converts `value` to an integer suitable for use as the length of an
     * array-like object.
     *
     * **Note:** This method is based on
     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toLength(3.2);
     * // => 3
     *
     * _.toLength(Number.MIN_VALUE);
     * // => 0
     *
     * _.toLength(Infinity);
     * // => 4294967295
     *
     * _.toLength('3.2');
     * // => 3
     */
    function toLength(value) {
      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;
    }

    /**
     * Converts `value` to a number.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to process.
     * @returns {number} Returns the number.
     * @example
     *
     * _.toNumber(3.2);
     * // => 3.2
     *
     * _.toNumber(Number.MIN_VALUE);
     * // => 5e-324
     *
     * _.toNumber(Infinity);
     * // => Infinity
     *
     * _.toNumber('3.2');
     * // => 3.2
     */
    function toNumber(value) {
      if (typeof value == 'number') {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject(value)) {
        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;
        value = isObject(other) ? (other + '') : other;
      }
      if (typeof value != 'string') {
        return value === 0 ? value : +value;
      }
      value = baseTrim(value);
      var isBinary = reIsBinary.test(value);
      return (isBinary || reIsOctal.test(value))
        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)
        : (reIsBadHex.test(value) ? NAN : +value);
    }

    /**
     * Converts `value` to a plain object flattening inherited enumerable string
     * keyed properties of `value` to own properties of the plain object.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {Object} Returns the converted plain object.
     * @example
     *
     * function Foo() {
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.assign({ 'a': 1 }, new Foo);
     * // => { 'a': 1, 'b': 2 }
     *
     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));
     * // => { 'a': 1, 'b': 2, 'c': 3 }
     */
    function toPlainObject(value) {
      return copyObject(value, keysIn(value));
    }

    /**
     * Converts `value` to a safe integer. A safe integer can be compared and
     * represented correctly.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.toSafeInteger(3.2);
     * // => 3
     *
     * _.toSafeInteger(Number.MIN_VALUE);
     * // => 0
     *
     * _.toSafeInteger(Infinity);
     * // => 9007199254740991
     *
     * _.toSafeInteger('3.2');
     * // => 3
     */
    function toSafeInteger(value) {
      return value
        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)
        : (value === 0 ? value : 0);
    }

    /**
     * Converts `value` to a string. An empty string is returned for `null`
     * and `undefined` values. The sign of `-0` is preserved.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Lang
     * @param {*} value The value to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.toString(null);
     * // => ''
     *
     * _.toString(-0);
     * // => '-0'
     *
     * _.toString([1, 2, 3]);
     * // => '1,2,3'
     */
    function toString(value) {
      return value == null ? '' : baseToString(value);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Assigns own enumerable string keyed properties of source objects to the
     * destination object. Source objects are applied from left to right.
     * Subsequent sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object` and is loosely based on
     * [`Object.assign`](https://mdn.io/Object/assign).
     *
     * @static
     * @memberOf _
     * @since 0.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assignIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assign({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'c': 3 }
     */
    var assign = createAssigner(function(object, source) {
      if (isPrototype(source) || isArrayLike(source)) {
        copyObject(source, keys(source), object);
        return;
      }
      for (var key in source) {
        if (hasOwnProperty.call(source, key)) {
          assignValue(object, key, source[key]);
        }
      }
    });

    /**
     * This method is like `_.assign` except that it iterates over own and
     * inherited source properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extend
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.assign
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     * }
     *
     * function Bar() {
     *   this.c = 3;
     * }
     *
     * Foo.prototype.b = 2;
     * Bar.prototype.d = 4;
     *
     * _.assignIn({ 'a': 0 }, new Foo, new Bar);
     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }
     */
    var assignIn = createAssigner(function(object, source) {
      copyObject(source, keysIn(source), object);
    });

    /**
     * This method is like `_.assignIn` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias extendWith
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignInWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keysIn(source), object, customizer);
    });

    /**
     * This method is like `_.assign` except that it accepts `customizer`
     * which is invoked to produce the assigned values. If `customizer` returns
     * `undefined`, assignment is handled by the method instead. The `customizer`
     * is invoked with five arguments: (objValue, srcValue, key, object, source).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @see _.assignInWith
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   return _.isUndefined(objValue) ? srcValue : objValue;
     * }
     *
     * var defaults = _.partialRight(_.assignWith, customizer);
     *
     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {
      copyObject(source, keys(source), object, customizer);
    });

    /**
     * Creates an array of values corresponding to `paths` of `object`.
     *
     * @static
     * @memberOf _
     * @since 1.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Array} Returns the picked values.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };
     *
     * _.at(object, ['a[0].b.c', 'a[1]']);
     * // => [3, 4]
     */
    var at = flatRest(baseAt);

    /**
     * Creates an object that inherits from the `prototype` object. If a
     * `properties` object is given, its own enumerable string keyed properties
     * are assigned to the created object.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Object
     * @param {Object} prototype The object to inherit from.
     * @param {Object} [properties] The properties to assign to the object.
     * @returns {Object} Returns the new object.
     * @example
     *
     * function Shape() {
     *   this.x = 0;
     *   this.y = 0;
     * }
     *
     * function Circle() {
     *   Shape.call(this);
     * }
     *
     * Circle.prototype = _.create(Shape.prototype, {
     *   'constructor': Circle
     * });
     *
     * var circle = new Circle;
     * circle instanceof Circle;
     * // => true
     *
     * circle instanceof Shape;
     * // => true
     */
    function create(prototype, properties) {
      var result = baseCreate(prototype);
      return properties == null ? result : baseAssign(result, properties);
    }

    /**
     * Assigns own and inherited enumerable string keyed properties of source
     * objects to the destination object for all destination properties that
     * resolve to `undefined`. Source objects are applied from left to right.
     * Once a property is set, additional values of the same property are ignored.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaultsDeep
     * @example
     *
     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });
     * // => { 'a': 1, 'b': 2 }
     */
    var defaults = baseRest(function(object, sources) {
      object = Object(object);

      var index = -1;
      var length = sources.length;
      var guard = length > 2 ? sources[2] : undefined;

      if (guard && isIterateeCall(sources[0], sources[1], guard)) {
        length = 1;
      }

      while (++index < length) {
        var source = sources[index];
        var props = keysIn(source);
        var propsIndex = -1;
        var propsLength = props.length;

        while (++propsIndex < propsLength) {
          var key = props[propsIndex];
          var value = object[key];

          if (value === undefined ||
              (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {
            object[key] = source[key];
          }
        }
      }

      return object;
    });

    /**
     * This method is like `_.defaults` except that it recursively assigns
     * default properties.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @see _.defaults
     * @example
     *
     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });
     * // => { 'a': { 'b': 2, 'c': 3 } }
     */
    var defaultsDeep = baseRest(function(args) {
      args.push(undefined, customDefaultsMerge);
      return apply(mergeWith, undefined, args);
    });

    /**
     * This method is like `_.find` except that it returns the key of the first
     * element `predicate` returns truthy for instead of the element itself.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findKey(users, function(o) { return o.age < 40; });
     * // => 'barney' (iteration order is not guaranteed)
     *
     * // The `_.matches` iteratee shorthand.
     * _.findKey(users, { 'age': 1, 'active': true });
     * // => 'pebbles'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findKey(users, 'active');
     * // => 'barney'
     */
    function findKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);
    }

    /**
     * This method is like `_.findKey` except that it iterates over elements of
     * a collection in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @param {Function} [predicate=_.identity] The function invoked per iteration.
     * @returns {string|undefined} Returns the key of the matched element,
     *  else `undefined`.
     * @example
     *
     * var users = {
     *   'barney':  { 'age': 36, 'active': true },
     *   'fred':    { 'age': 40, 'active': false },
     *   'pebbles': { 'age': 1,  'active': true }
     * };
     *
     * _.findLastKey(users, function(o) { return o.age < 40; });
     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'
     *
     * // The `_.matches` iteratee shorthand.
     * _.findLastKey(users, { 'age': 36, 'active': true });
     * // => 'barney'
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.findLastKey(users, ['active', false]);
     * // => 'fred'
     *
     * // The `_.property` iteratee shorthand.
     * _.findLastKey(users, 'active');
     * // => 'pebbles'
     */
    function findLastKey(object, predicate) {
      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);
    }

    /**
     * Iterates over own and inherited enumerable string keyed properties of an
     * object and invokes `iteratee` for each property. The iteratee is invoked
     * with three arguments: (value, key, object). Iteratee functions may exit
     * iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forInRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forIn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).
     */
    function forIn(object, iteratee) {
      return object == null
        ? object
        : baseFor(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * This method is like `_.forIn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forIn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forInRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.
     */
    function forInRight(object, iteratee) {
      return object == null
        ? object
        : baseForRight(object, getIteratee(iteratee, 3), keysIn);
    }

    /**
     * Iterates over own enumerable string keyed properties of an object and
     * invokes `iteratee` for each property. The iteratee is invoked with three
     * arguments: (value, key, object). Iteratee functions may exit iteration
     * early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 0.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwnRight
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwn(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'a' then 'b' (iteration order is not guaranteed).
     */
    function forOwn(object, iteratee) {
      return object && baseForOwn(object, getIteratee(iteratee, 3));
    }

    /**
     * This method is like `_.forOwn` except that it iterates over properties of
     * `object` in the opposite order.
     *
     * @static
     * @memberOf _
     * @since 2.0.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns `object`.
     * @see _.forOwn
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.forOwnRight(new Foo, function(value, key) {
     *   console.log(key);
     * });
     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.
     */
    function forOwnRight(object, iteratee) {
      return object && baseForOwnRight(object, getIteratee(iteratee, 3));
    }

    /**
     * Creates an array of function property names from own enumerable properties
     * of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functionsIn
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functions(new Foo);
     * // => ['a', 'b']
     */
    function functions(object) {
      return object == null ? [] : baseFunctions(object, keys(object));
    }

    /**
     * Creates an array of function property names from own and inherited
     * enumerable properties of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to inspect.
     * @returns {Array} Returns the function names.
     * @see _.functions
     * @example
     *
     * function Foo() {
     *   this.a = _.constant('a');
     *   this.b = _.constant('b');
     * }
     *
     * Foo.prototype.c = _.constant('c');
     *
     * _.functionsIn(new Foo);
     * // => ['a', 'b', 'c']
     */
    function functionsIn(object) {
      return object == null ? [] : baseFunctions(object, keysIn(object));
    }

    /**
     * Gets the value at `path` of `object`. If the resolved value is
     * `undefined`, the `defaultValue` is returned in its place.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to get.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.get(object, 'a[0].b.c');
     * // => 3
     *
     * _.get(object, ['a', '0', 'b', 'c']);
     * // => 3
     *
     * _.get(object, 'a.b.c', 'default');
     * // => 'default'
     */
    function get(object, path, defaultValue) {
      var result = object == null ? undefined : baseGet(object, path);
      return result === undefined ? defaultValue : result;
    }

    /**
     * Checks if `path` is a direct property of `object`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = { 'a': { 'b': 2 } };
     * var other = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.has(object, 'a');
     * // => true
     *
     * _.has(object, 'a.b');
     * // => true
     *
     * _.has(object, ['a', 'b']);
     * // => true
     *
     * _.has(other, 'a');
     * // => false
     */
    function has(object, path) {
      return object != null && hasPath(object, path, baseHas);
    }

    /**
     * Checks if `path` is a direct or inherited property of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path to check.
     * @returns {boolean} Returns `true` if `path` exists, else `false`.
     * @example
     *
     * var object = _.create({ 'a': _.create({ 'b': 2 }) });
     *
     * _.hasIn(object, 'a');
     * // => true
     *
     * _.hasIn(object, 'a.b');
     * // => true
     *
     * _.hasIn(object, ['a', 'b']);
     * // => true
     *
     * _.hasIn(object, 'b');
     * // => false
     */
    function hasIn(object, path) {
      return object != null && hasPath(object, path, baseHasIn);
    }

    /**
     * Creates an object composed of the inverted keys and values of `object`.
     * If `object` contains duplicate values, subsequent values overwrite
     * property assignments of previous values.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Object
     * @param {Object} object The object to invert.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invert(object);
     * // => { '1': 'c', '2': 'b' }
     */
    var invert = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      result[value] = key;
    }, constant(identity));

    /**
     * This method is like `_.invert` except that the inverted object is generated
     * from the results of running each element of `object` thru `iteratee`. The
     * corresponding inverted value of each inverted key is an array of keys
     * responsible for generating the inverted value. The iteratee is invoked
     * with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.1.0
     * @category Object
     * @param {Object} object The object to invert.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {Object} Returns the new inverted object.
     * @example
     *
     * var object = { 'a': 1, 'b': 2, 'c': 1 };
     *
     * _.invertBy(object);
     * // => { '1': ['a', 'c'], '2': ['b'] }
     *
     * _.invertBy(object, function(value) {
     *   return 'group' + value;
     * });
     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }
     */
    var invertBy = createInverter(function(result, value, key) {
      if (value != null &&
          typeof value.toString != 'function') {
        value = nativeObjectToString.call(value);
      }

      if (hasOwnProperty.call(result, value)) {
        result[value].push(key);
      } else {
        result[value] = [key];
      }
    }, getIteratee);

    /**
     * Invokes the method at `path` of `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {*} Returns the result of the invoked method.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };
     *
     * _.invoke(object, 'a[0].b.c.slice', 1, 3);
     * // => [2, 3]
     */
    var invoke = baseRest(baseInvoke);

    /**
     * Creates an array of the own enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects. See the
     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)
     * for more details.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keys(new Foo);
     * // => ['a', 'b'] (iteration order is not guaranteed)
     *
     * _.keys('hi');
     * // => ['0', '1']
     */
    function keys(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }

    /**
     * Creates an array of the own and inherited enumerable property names of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property names.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.keysIn(new Foo);
     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)
     */
    function keysIn(object) {
      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);
    }

    /**
     * The opposite of `_.mapValues`; this method creates an object with the
     * same values as `object` and keys generated by running each own enumerable
     * string keyed property of `object` thru `iteratee`. The iteratee is invoked
     * with three arguments: (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 3.8.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapValues
     * @example
     *
     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {
     *   return key + value;
     * });
     * // => { 'a1': 1, 'b2': 2 }
     */
    function mapKeys(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, iteratee(value, key, object), value);
      });
      return result;
    }

    /**
     * Creates an object with the same keys as `object` and values generated
     * by running each own enumerable string keyed property of `object` thru
     * `iteratee`. The iteratee is invoked with three arguments:
     * (value, key, object).
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Object} Returns the new mapped object.
     * @see _.mapKeys
     * @example
     *
     * var users = {
     *   'fred':    { 'user': 'fred',    'age': 40 },
     *   'pebbles': { 'user': 'pebbles', 'age': 1 }
     * };
     *
     * _.mapValues(users, function(o) { return o.age; });
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     *
     * // The `_.property` iteratee shorthand.
     * _.mapValues(users, 'age');
     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)
     */
    function mapValues(object, iteratee) {
      var result = {};
      iteratee = getIteratee(iteratee, 3);

      baseForOwn(object, function(value, key, object) {
        baseAssignValue(result, key, iteratee(value, key, object));
      });
      return result;
    }

    /**
     * This method is like `_.assign` except that it recursively merges own and
     * inherited enumerable string keyed properties of source objects into the
     * destination object. Source properties that resolve to `undefined` are
     * skipped if a destination value exists. Array and plain object properties
     * are merged recursively. Other objects and value types are overridden by
     * assignment. Source objects are applied from left to right. Subsequent
     * sources overwrite property assignments of previous sources.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 0.5.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} [sources] The source objects.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {
     *   'a': [{ 'b': 2 }, { 'd': 4 }]
     * };
     *
     * var other = {
     *   'a': [{ 'c': 3 }, { 'e': 5 }]
     * };
     *
     * _.merge(object, other);
     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }
     */
    var merge = createAssigner(function(object, source, srcIndex) {
      baseMerge(object, source, srcIndex);
    });

    /**
     * This method is like `_.merge` except that it accepts `customizer` which
     * is invoked to produce the merged values of the destination and source
     * properties. If `customizer` returns `undefined`, merging is handled by the
     * method instead. The `customizer` is invoked with six arguments:
     * (objValue, srcValue, key, object, source, stack).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The destination object.
     * @param {...Object} sources The source objects.
     * @param {Function} customizer The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * function customizer(objValue, srcValue) {
     *   if (_.isArray(objValue)) {
     *     return objValue.concat(srcValue);
     *   }
     * }
     *
     * var object = { 'a': [1], 'b': [2] };
     * var other = { 'a': [3], 'b': [4] };
     *
     * _.mergeWith(object, other, customizer);
     * // => { 'a': [1, 3], 'b': [2, 4] }
     */
    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {
      baseMerge(object, source, srcIndex, customizer);
    });

    /**
     * The opposite of `_.pick`; this method creates an object composed of the
     * own and inherited enumerable property paths of `object` that are not omitted.
     *
     * **Note:** This method is considerably slower than `_.pick`.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to omit.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omit(object, ['a', 'c']);
     * // => { 'b': '2' }
     */
    var omit = flatRest(function(object, paths) {
      var result = {};
      if (object == null) {
        return result;
      }
      var isDeep = false;
      paths = arrayMap(paths, function(path) {
        path = castPath(path, object);
        isDeep || (isDeep = path.length > 1);
        return path;
      });
      copyObject(object, getAllKeysIn(object), result);
      if (isDeep) {
        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);
      }
      var length = paths.length;
      while (length--) {
        baseUnset(result, paths[length]);
      }
      return result;
    });

    /**
     * The opposite of `_.pickBy`; this method creates an object composed of
     * the own and inherited enumerable string keyed properties of `object` that
     * `predicate` doesn't return truthy for. The predicate is invoked with two
     * arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.omitBy(object, _.isNumber);
     * // => { 'b': '2' }
     */
    function omitBy(object, predicate) {
      return pickBy(object, negate(getIteratee(predicate)));
    }

    /**
     * Creates an object composed of the picked `object` properties.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The source object.
     * @param {...(string|string[])} [paths] The property paths to pick.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pick(object, ['a', 'c']);
     * // => { 'a': 1, 'c': 3 }
     */
    var pick = flatRest(function(object, paths) {
      return object == null ? {} : basePick(object, paths);
    });

    /**
     * Creates an object composed of the `object` properties `predicate` returns
     * truthy for. The predicate is invoked with two arguments: (value, key).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The source object.
     * @param {Function} [predicate=_.identity] The function invoked per property.
     * @returns {Object} Returns the new object.
     * @example
     *
     * var object = { 'a': 1, 'b': '2', 'c': 3 };
     *
     * _.pickBy(object, _.isNumber);
     * // => { 'a': 1, 'c': 3 }
     */
    function pickBy(object, predicate) {
      if (object == null) {
        return {};
      }
      var props = arrayMap(getAllKeysIn(object), function(prop) {
        return [prop];
      });
      predicate = getIteratee(predicate);
      return basePickBy(object, props, function(value, path) {
        return predicate(value, path[0]);
      });
    }

    /**
     * This method is like `_.get` except that if the resolved value is a
     * function it's invoked with the `this` binding of its parent object and
     * its result is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @param {Array|string} path The path of the property to resolve.
     * @param {*} [defaultValue] The value returned for `undefined` resolved values.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };
     *
     * _.result(object, 'a[0].b.c1');
     * // => 3
     *
     * _.result(object, 'a[0].b.c2');
     * // => 4
     *
     * _.result(object, 'a[0].b.c3', 'default');
     * // => 'default'
     *
     * _.result(object, 'a[0].b.c3', _.constant('default'));
     * // => 'default'
     */
    function result(object, path, defaultValue) {
      path = castPath(path, object);

      var index = -1,
          length = path.length;

      // Ensure the loop is entered when path is empty.
      if (!length) {
        length = 1;
        object = undefined;
      }
      while (++index < length) {
        var value = object == null ? undefined : object[toKey(path[index])];
        if (value === undefined) {
          index = length;
          value = defaultValue;
        }
        object = isFunction(value) ? value.call(object) : value;
      }
      return object;
    }

    /**
     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
     * it's created. Arrays are created for missing index properties while objects
     * are created for all other missing properties. Use `_.setWith` to customize
     * `path` creation.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.set(object, 'a[0].b.c', 4);
     * console.log(object.a[0].b.c);
     * // => 4
     *
     * _.set(object, ['x', '0', 'y', 'z'], 5);
     * console.log(object.x[0].y.z);
     * // => 5
     */
    function set(object, path, value) {
      return object == null ? object : baseSet(object, path, value);
    }

    /**
     * This method is like `_.set` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {*} value The value to set.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.setWith(object, '[0][1]', 'a', Object);
     * // => { '0': { '1': 'a' } }
     */
    function setWith(object, path, value, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseSet(object, path, value, customizer);
    }

    /**
     * Creates an array of own enumerable string keyed-value pairs for `object`
     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its
     * entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entries
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairs(new Foo);
     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)
     */
    var toPairs = createToPairs(keys);

    /**
     * Creates an array of own and inherited enumerable string keyed-value pairs
     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map
     * or set, its entries are returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @alias entriesIn
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the key-value pairs.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.toPairsIn(new Foo);
     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)
     */
    var toPairsIn = createToPairs(keysIn);

    /**
     * An alternative to `_.reduce`; this method transforms `object` to a new
     * `accumulator` object which is the result of running each of its own
     * enumerable string keyed properties thru `iteratee`, with each invocation
     * potentially mutating the `accumulator` object. If `accumulator` is not
     * provided, a new object with the same `[[Prototype]]` will be used. The
     * iteratee is invoked with four arguments: (accumulator, value, key, object).
     * Iteratee functions may exit iteration early by explicitly returning `false`.
     *
     * @static
     * @memberOf _
     * @since 1.3.0
     * @category Object
     * @param {Object} object The object to iterate over.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @param {*} [accumulator] The custom accumulator value.
     * @returns {*} Returns the accumulated value.
     * @example
     *
     * _.transform([2, 3, 4], function(result, n) {
     *   result.push(n *= n);
     *   return n % 2 == 0;
     * }, []);
     * // => [4, 9]
     *
     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {
     *   (result[value] || (result[value] = [])).push(key);
     * }, {});
     * // => { '1': ['a', 'c'], '2': ['b'] }
     */
    function transform(object, iteratee, accumulator) {
      var isArr = isArray(object),
          isArrLike = isArr || isBuffer(object) || isTypedArray(object);

      iteratee = getIteratee(iteratee, 4);
      if (accumulator == null) {
        var Ctor = object && object.constructor;
        if (isArrLike) {
          accumulator = isArr ? new Ctor : [];
        }
        else if (isObject(object)) {
          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};
        }
        else {
          accumulator = {};
        }
      }
      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {
        return iteratee(accumulator, value, index, object);
      });
      return accumulator;
    }

    /**
     * Removes the property at `path` of `object`.
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to unset.
     * @returns {boolean} Returns `true` if the property is deleted, else `false`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 7 } }] };
     * _.unset(object, 'a[0].b.c');
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     *
     * _.unset(object, ['a', '0', 'b', 'c']);
     * // => true
     *
     * console.log(object);
     * // => { 'a': [{ 'b': {} }] };
     */
    function unset(object, path) {
      return object == null ? true : baseUnset(object, path);
    }

    /**
     * This method is like `_.set` except that accepts `updater` to produce the
     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`
     * is invoked with one argument: (value).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = { 'a': [{ 'b': { 'c': 3 } }] };
     *
     * _.update(object, 'a[0].b.c', function(n) { return n * n; });
     * console.log(object.a[0].b.c);
     * // => 9
     *
     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });
     * console.log(object.x[0].y.z);
     * // => 0
     */
    function update(object, path, updater) {
      return object == null ? object : baseUpdate(object, path, castFunction(updater));
    }

    /**
     * This method is like `_.update` except that it accepts `customizer` which is
     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`
     * path creation is handled by the method instead. The `customizer` is invoked
     * with three arguments: (nsValue, key, nsObject).
     *
     * **Note:** This method mutates `object`.
     *
     * @static
     * @memberOf _
     * @since 4.6.0
     * @category Object
     * @param {Object} object The object to modify.
     * @param {Array|string} path The path of the property to set.
     * @param {Function} updater The function to produce the updated value.
     * @param {Function} [customizer] The function to customize assigned values.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var object = {};
     *
     * _.updateWith(object, '[0][1]', _.constant('a'), Object);
     * // => { '0': { '1': 'a' } }
     */
    function updateWith(object, path, updater, customizer) {
      customizer = typeof customizer == 'function' ? customizer : undefined;
      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);
    }

    /**
     * Creates an array of the own enumerable string keyed property values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.values(new Foo);
     * // => [1, 2] (iteration order is not guaranteed)
     *
     * _.values('hi');
     * // => ['h', 'i']
     */
    function values(object) {
      return object == null ? [] : baseValues(object, keys(object));
    }

    /**
     * Creates an array of the own and inherited enumerable string keyed property
     * values of `object`.
     *
     * **Note:** Non-object values are coerced to objects.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Object
     * @param {Object} object The object to query.
     * @returns {Array} Returns the array of property values.
     * @example
     *
     * function Foo() {
     *   this.a = 1;
     *   this.b = 2;
     * }
     *
     * Foo.prototype.c = 3;
     *
     * _.valuesIn(new Foo);
     * // => [1, 2, 3] (iteration order is not guaranteed)
     */
    function valuesIn(object) {
      return object == null ? [] : baseValues(object, keysIn(object));
    }

    /*------------------------------------------------------------------------*/

    /**
     * Clamps `number` within the inclusive `lower` and `upper` bounds.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Number
     * @param {number} number The number to clamp.
     * @param {number} [lower] The lower bound.
     * @param {number} upper The upper bound.
     * @returns {number} Returns the clamped number.
     * @example
     *
     * _.clamp(-10, -5, 5);
     * // => -5
     *
     * _.clamp(10, -5, 5);
     * // => 5
     */
    function clamp(number, lower, upper) {
      if (upper === undefined) {
        upper = lower;
        lower = undefined;
      }
      if (upper !== undefined) {
        upper = toNumber(upper);
        upper = upper === upper ? upper : 0;
      }
      if (lower !== undefined) {
        lower = toNumber(lower);
        lower = lower === lower ? lower : 0;
      }
      return baseClamp(toNumber(number), lower, upper);
    }

    /**
     * Checks if `n` is between `start` and up to, but not including, `end`. If
     * `end` is not specified, it's set to `start` with `start` then set to `0`.
     * If `start` is greater than `end` the params are swapped to support
     * negative ranges.
     *
     * @static
     * @memberOf _
     * @since 3.3.0
     * @category Number
     * @param {number} number The number to check.
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.
     * @see _.range, _.rangeRight
     * @example
     *
     * _.inRange(3, 2, 4);
     * // => true
     *
     * _.inRange(4, 8);
     * // => true
     *
     * _.inRange(4, 2);
     * // => false
     *
     * _.inRange(2, 2);
     * // => false
     *
     * _.inRange(1.2, 2);
     * // => true
     *
     * _.inRange(5.2, 4);
     * // => false
     *
     * _.inRange(-3, -2, -6);
     * // => true
     */
    function inRange(number, start, end) {
      start = toFinite(start);
      if (end === undefined) {
        end = start;
        start = 0;
      } else {
        end = toFinite(end);
      }
      number = toNumber(number);
      return baseInRange(number, start, end);
    }

    /**
     * Produces a random number between the inclusive `lower` and `upper` bounds.
     * If only one argument is provided a number between `0` and the given number
     * is returned. If `floating` is `true`, or either `lower` or `upper` are
     * floats, a floating-point number is returned instead of an integer.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @memberOf _
     * @since 0.7.0
     * @category Number
     * @param {number} [lower=0] The lower bound.
     * @param {number} [upper=1] The upper bound.
     * @param {boolean} [floating] Specify returning a floating-point number.
     * @returns {number} Returns the random number.
     * @example
     *
     * _.random(0, 5);
     * // => an integer between 0 and 5
     *
     * _.random(5);
     * // => also an integer between 0 and 5
     *
     * _.random(5, true);
     * // => a floating-point number between 0 and 5
     *
     * _.random(1.2, 5.2);
     * // => a floating-point number between 1.2 and 5.2
     */
    function random(lower, upper, floating) {
      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {
        upper = floating = undefined;
      }
      if (floating === undefined) {
        if (typeof upper == 'boolean') {
          floating = upper;
          upper = undefined;
        }
        else if (typeof lower == 'boolean') {
          floating = lower;
          lower = undefined;
        }
      }
      if (lower === undefined && upper === undefined) {
        lower = 0;
        upper = 1;
      }
      else {
        lower = toFinite(lower);
        if (upper === undefined) {
          upper = lower;
          lower = 0;
        } else {
          upper = toFinite(upper);
        }
      }
      if (lower > upper) {
        var temp = lower;
        lower = upper;
        upper = temp;
      }
      if (floating || lower % 1 || upper % 1) {
        var rand = nativeRandom();
        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);
      }
      return baseRandom(lower, upper);
    }

    /*------------------------------------------------------------------------*/

    /**
     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the camel cased string.
     * @example
     *
     * _.camelCase('Foo Bar');
     * // => 'fooBar'
     *
     * _.camelCase('--foo-bar--');
     * // => 'fooBar'
     *
     * _.camelCase('__FOO_BAR__');
     * // => 'fooBar'
     */
    var camelCase = createCompounder(function(result, word, index) {
      word = word.toLowerCase();
      return result + (index ? capitalize(word) : word);
    });

    /**
     * Converts the first character of `string` to upper case and the remaining
     * to lower case.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to capitalize.
     * @returns {string} Returns the capitalized string.
     * @example
     *
     * _.capitalize('FRED');
     * // => 'Fred'
     */
    function capitalize(string) {
      return upperFirst(toString(string).toLowerCase());
    }

    /**
     * Deburrs `string` by converting
     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)
     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)
     * letters to basic Latin letters and removing
     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to deburr.
     * @returns {string} Returns the deburred string.
     * @example
     *
     * _.deburr('déjà vu');
     * // => 'deja vu'
     */
    function deburr(string) {
      string = toString(string);
      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');
    }

    /**
     * Checks if `string` ends with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=string.length] The position to search up to.
     * @returns {boolean} Returns `true` if `string` ends with `target`,
     *  else `false`.
     * @example
     *
     * _.endsWith('abc', 'c');
     * // => true
     *
     * _.endsWith('abc', 'b');
     * // => false
     *
     * _.endsWith('abc', 'b', 2);
     * // => true
     */
    function endsWith(string, target, position) {
      string = toString(string);
      target = baseToString(target);

      var length = string.length;
      position = position === undefined
        ? length
        : baseClamp(toInteger(position), 0, length);

      var end = position;
      position -= target.length;
      return position >= 0 && string.slice(position, end) == target;
    }

    /**
     * Converts the characters "&", "<", ">", '"', and "'" in `string` to their
     * corresponding HTML entities.
     *
     * **Note:** No other characters are escaped. To escape additional
     * characters use a third-party library like [_he_](https://mths.be/he).
     *
     * Though the ">" character is escaped for symmetry, characters like
     * ">" and "/" don't need escaping in HTML and have no special meaning
     * unless they're part of a tag or unquoted attribute value. See
     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)
     * (under "semi-related fun fact") for more details.
     *
     * When working with HTML you should always
     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce
     * XSS vectors.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escape('fred, barney, & pebbles');
     * // => 'fred, barney, &amp; pebbles'
     */
    function escape(string) {
      string = toString(string);
      return (string && reHasUnescapedHtml.test(string))
        ? string.replace(reUnescapedHtml, escapeHtmlChar)
        : string;
    }

    /**
     * Escapes the `RegExp` special characters "^", "$", "\", ".", "*", "+",
     * "?", "(", ")", "[", "]", "{", "}", and "|" in `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to escape.
     * @returns {string} Returns the escaped string.
     * @example
     *
     * _.escapeRegExp('[lodash](https://lodash.com/)');
     * // => '\[lodash\]\(https://lodash\.com/\)'
     */
    function escapeRegExp(string) {
      string = toString(string);
      return (string && reHasRegExpChar.test(string))
        ? string.replace(reRegExpChar, '\\$&')
        : string;
    }

    /**
     * Converts `string` to
     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the kebab cased string.
     * @example
     *
     * _.kebabCase('Foo Bar');
     * // => 'foo-bar'
     *
     * _.kebabCase('fooBar');
     * // => 'foo-bar'
     *
     * _.kebabCase('__FOO_BAR__');
     * // => 'foo-bar'
     */
    var kebabCase = createCompounder(function(result, word, index) {
      return result + (index ? '-' : '') + word.toLowerCase();
    });

    /**
     * Converts `string`, as space separated words, to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.lowerCase('--Foo-Bar--');
     * // => 'foo bar'
     *
     * _.lowerCase('fooBar');
     * // => 'foo bar'
     *
     * _.lowerCase('__FOO_BAR__');
     * // => 'foo bar'
     */
    var lowerCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toLowerCase();
    });

    /**
     * Converts the first character of `string` to lower case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.lowerFirst('Fred');
     * // => 'fred'
     *
     * _.lowerFirst('FRED');
     * // => 'fRED'
     */
    var lowerFirst = createCaseFirst('toLowerCase');

    /**
     * Pads `string` on the left and right sides if it's shorter than `length`.
     * Padding characters are truncated if they can't be evenly divided by `length`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.pad('abc', 8);
     * // => '  abc   '
     *
     * _.pad('abc', 8, '_-');
     * // => '_-abc_-_'
     *
     * _.pad('abc', 3);
     * // => 'abc'
     */
    function pad(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      if (!length || strLength >= length) {
        return string;
      }
      var mid = (length - strLength) / 2;
      return (
        createPadding(nativeFloor(mid), chars) +
        string +
        createPadding(nativeCeil(mid), chars)
      );
    }

    /**
     * Pads `string` on the right side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padEnd('abc', 6);
     * // => 'abc   '
     *
     * _.padEnd('abc', 6, '_-');
     * // => 'abc_-_'
     *
     * _.padEnd('abc', 3);
     * // => 'abc'
     */
    function padEnd(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (string + createPadding(length - strLength, chars))
        : string;
    }

    /**
     * Pads `string` on the left side if it's shorter than `length`. Padding
     * characters are truncated if they exceed `length`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to pad.
     * @param {number} [length=0] The padding length.
     * @param {string} [chars=' '] The string used as padding.
     * @returns {string} Returns the padded string.
     * @example
     *
     * _.padStart('abc', 6);
     * // => '   abc'
     *
     * _.padStart('abc', 6, '_-');
     * // => '_-_abc'
     *
     * _.padStart('abc', 3);
     * // => 'abc'
     */
    function padStart(string, length, chars) {
      string = toString(string);
      length = toInteger(length);

      var strLength = length ? stringSize(string) : 0;
      return (length && strLength < length)
        ? (createPadding(length - strLength, chars) + string)
        : string;
    }

    /**
     * Converts `string` to an integer of the specified radix. If `radix` is
     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a
     * hexadecimal, in which case a `radix` of `16` is used.
     *
     * **Note:** This method aligns with the
     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.
     *
     * @static
     * @memberOf _
     * @since 1.1.0
     * @category String
     * @param {string} string The string to convert.
     * @param {number} [radix=10] The radix to interpret `value` by.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {number} Returns the converted integer.
     * @example
     *
     * _.parseInt('08');
     * // => 8
     *
     * _.map(['6', '08', '10'], _.parseInt);
     * // => [6, 8, 10]
     */
    function parseInt(string, radix, guard) {
      if (guard || radix == null) {
        radix = 0;
      } else if (radix) {
        radix = +radix;
      }
      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);
    }

    /**
     * Repeats the given string `n` times.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to repeat.
     * @param {number} [n=1] The number of times to repeat the string.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the repeated string.
     * @example
     *
     * _.repeat('*', 3);
     * // => '***'
     *
     * _.repeat('abc', 2);
     * // => 'abcabc'
     *
     * _.repeat('abc', 0);
     * // => ''
     */
    function repeat(string, n, guard) {
      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {
        n = 1;
      } else {
        n = toInteger(n);
      }
      return baseRepeat(toString(string), n);
    }

    /**
     * Replaces matches for `pattern` in `string` with `replacement`.
     *
     * **Note:** This method is based on
     * [`String#replace`](https://mdn.io/String/replace).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to modify.
     * @param {RegExp|string} pattern The pattern to replace.
     * @param {Function|string} replacement The match replacement.
     * @returns {string} Returns the modified string.
     * @example
     *
     * _.replace('Hi Fred', 'Fred', 'Barney');
     * // => 'Hi Barney'
     */
    function replace() {
      var args = arguments,
          string = toString(args[0]);

      return args.length < 3 ? string : string.replace(args[1], args[2]);
    }

    /**
     * Converts `string` to
     * [snake case](https://en.wikipedia.org/wiki/Snake_case).
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the snake cased string.
     * @example
     *
     * _.snakeCase('Foo Bar');
     * // => 'foo_bar'
     *
     * _.snakeCase('fooBar');
     * // => 'foo_bar'
     *
     * _.snakeCase('--FOO-BAR--');
     * // => 'foo_bar'
     */
    var snakeCase = createCompounder(function(result, word, index) {
      return result + (index ? '_' : '') + word.toLowerCase();
    });

    /**
     * Splits `string` by `separator`.
     *
     * **Note:** This method is based on
     * [`String#split`](https://mdn.io/String/split).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to split.
     * @param {RegExp|string} separator The separator pattern to split by.
     * @param {number} [limit] The length to truncate results to.
     * @returns {Array} Returns the string segments.
     * @example
     *
     * _.split('a-b-c', '-', 2);
     * // => ['a', 'b']
     */
    function split(string, separator, limit) {
      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {
        separator = limit = undefined;
      }
      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;
      if (!limit) {
        return [];
      }
      string = toString(string);
      if (string && (
            typeof separator == 'string' ||
            (separator != null && !isRegExp(separator))
          )) {
        separator = baseToString(separator);
        if (!separator && hasUnicode(string)) {
          return castSlice(stringToArray(string), 0, limit);
        }
      }
      return string.split(separator, limit);
    }

    /**
     * Converts `string` to
     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).
     *
     * @static
     * @memberOf _
     * @since 3.1.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the start cased string.
     * @example
     *
     * _.startCase('--foo-bar--');
     * // => 'Foo Bar'
     *
     * _.startCase('fooBar');
     * // => 'Foo Bar'
     *
     * _.startCase('__FOO_BAR__');
     * // => 'FOO BAR'
     */
    var startCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + upperFirst(word);
    });

    /**
     * Checks if `string` starts with the given target string.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {string} [target] The string to search for.
     * @param {number} [position=0] The position to search from.
     * @returns {boolean} Returns `true` if `string` starts with `target`,
     *  else `false`.
     * @example
     *
     * _.startsWith('abc', 'a');
     * // => true
     *
     * _.startsWith('abc', 'b');
     * // => false
     *
     * _.startsWith('abc', 'b', 1);
     * // => true
     */
    function startsWith(string, target, position) {
      string = toString(string);
      position = position == null
        ? 0
        : baseClamp(toInteger(position), 0, string.length);

      target = baseToString(target);
      return string.slice(position, position + target.length) == target;
    }

    /**
     * Creates a compiled template function that can interpolate data properties
     * in "interpolate" delimiters, HTML-escape interpolated data properties in
     * "escape" delimiters, and execute JavaScript in "evaluate" delimiters. Data
     * properties may be accessed as free variables in the template. If a setting
     * object is given, it takes precedence over `_.templateSettings` values.
     *
     * **Note:** In the development build `_.template` utilizes
     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)
     * for easier debugging.
     *
     * For more information on precompiling templates see
     * [lodash's custom builds documentation](https://lodash.com/custom-builds).
     *
     * For more information on Chrome extension sandboxes see
     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category String
     * @param {string} [string=''] The template string.
     * @param {Object} [options={}] The options object.
     * @param {RegExp} [options.escape=_.templateSettings.escape]
     *  The HTML "escape" delimiter.
     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]
     *  The "evaluate" delimiter.
     * @param {Object} [options.imports=_.templateSettings.imports]
     *  An object to import into the template as free variables.
     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]
     *  The "interpolate" delimiter.
     * @param {string} [options.sourceURL='lodash.templateSources[n]']
     *  The sourceURL of the compiled template.
     * @param {string} [options.variable='obj']
     *  The data object variable name.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Function} Returns the compiled template function.
     * @example
     *
     * // Use the "interpolate" delimiter to create a compiled template.
     * var compiled = _.template('hello <%= user %>!');
     * compiled({ 'user': 'fred' });
     * // => 'hello fred!'
     *
     * // Use the HTML "escape" delimiter to escape data property values.
     * var compiled = _.template('<b><%- value %></b>');
     * compiled({ 'value': '<script>' });
     * // => '<b>&lt;script&gt;</b>'
     *
     * // Use the "evaluate" delimiter to execute JavaScript and generate HTML.
     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the internal `print` function in "evaluate" delimiters.
     * var compiled = _.template('<% print("hello " + user); %>!');
     * compiled({ 'user': 'barney' });
     * // => 'hello barney!'
     *
     * // Use the ES template literal delimiter as an "interpolate" delimiter.
     * // Disable support by replacing the "interpolate" delimiter.
     * var compiled = _.template('hello ${ user }!');
     * compiled({ 'user': 'pebbles' });
     * // => 'hello pebbles!'
     *
     * // Use backslashes to treat delimiters as plain text.
     * var compiled = _.template('<%= "\\<%- value %\\>" %>');
     * compiled({ 'value': 'ignored' });
     * // => '<%- value %>'
     *
     * // Use the `imports` option to import `jQuery` as `jq`.
     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';
     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });
     * compiled({ 'users': ['fred', 'barney'] });
     * // => '<li>fred</li><li>barney</li>'
     *
     * // Use the `sourceURL` option to specify a custom sourceURL for the template.
     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });
     * compiled(data);
     * // => Find the source of "greeting.jst" under the Sources tab or Resources panel of the web inspector.
     *
     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.
     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });
     * compiled.source;
     * // => function(data) {
     * //   var __t, __p = '';
     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';
     * //   return __p;
     * // }
     *
     * // Use custom template delimiters.
     * _.templateSettings.interpolate = /{{([\s\S]+?)}}/g;
     * var compiled = _.template('hello {{ user }}!');
     * compiled({ 'user': 'mustache' });
     * // => 'hello mustache!'
     *
     * // Use the `source` property to inline compiled templates for meaningful
     * // line numbers in error messages and stack traces.
     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\
     *   var JST = {\
     *     "main": ' + _.template(mainText).source + '\
     *   };\
     * ');
     */
    function template(string, options, guard) {
      // Based on John Resig's `tmpl` implementation
      // (http://ejohn.org/blog/javascript-micro-templating/)
      // and Laura Doktorova's doT.js (https://github.com/olado/doT).
      var settings = lodash.templateSettings;

      if (guard && isIterateeCall(string, options, guard)) {
        options = undefined;
      }
      string = toString(string);
      options = assignInWith({}, options, settings, customDefaultsAssignIn);

      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),
          importsKeys = keys(imports),
          importsValues = baseValues(imports, importsKeys);

      var isEscaping,
          isEvaluating,
          index = 0,
          interpolate = options.interpolate || reNoMatch,
          source = "__p += '";

      // Compile the regexp to match each delimiter.
      var reDelimiters = RegExp(
        (options.escape || reNoMatch).source + '|' +
        interpolate.source + '|' +
        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +
        (options.evaluate || reNoMatch).source + '|$'
      , 'g');

      // Use a sourceURL for easier debugging.
      // The sourceURL gets injected into the source that's eval-ed, so be careful
      // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in
      // and escape the comment, thus injecting code that gets evaled.
      var sourceURL = '//# sourceURL=' +
        (hasOwnProperty.call(options, 'sourceURL')
          ? (options.sourceURL + '').replace(/\s/g, ' ')
          : ('lodash.templateSources[' + (++templateCounter) + ']')
        ) + '\n';

      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {
        interpolateValue || (interpolateValue = esTemplateValue);

        // Escape characters that can't be included in string literals.
        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);

        // Replace delimiters with snippets.
        if (escapeValue) {
          isEscaping = true;
          source += "' +\n__e(" + escapeValue + ") +\n'";
        }
        if (evaluateValue) {
          isEvaluating = true;
          source += "';\n" + evaluateValue + ";\n__p += '";
        }
        if (interpolateValue) {
          source += "' +\n((__t = (" + interpolateValue + ")) == null ? '' : __t) +\n'";
        }
        index = offset + match.length;

        // The JS engine embedded in Adobe products needs `match` returned in
        // order to produce the correct `offset` value.
        return match;
      });

      source += "';\n";

      // If `variable` is not specified wrap a with-statement around the generated
      // code to add the data object to the top of the scope chain.
      var variable = hasOwnProperty.call(options, 'variable') && options.variable;
      if (!variable) {
        source = 'with (obj) {\n' + source + '\n}\n';
      }
      // Throw an error if a forbidden character was found in `variable`, to prevent
      // potential command injection attacks.
      else if (reForbiddenIdentifierChars.test(variable)) {
        throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);
      }

      // Cleanup code by stripping empty strings.
      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)
        .replace(reEmptyStringMiddle, '$1')
        .replace(reEmptyStringTrailing, '$1;');

      // Frame code as the function body.
      source = 'function(' + (variable || 'obj') + ') {\n' +
        (variable
          ? ''
          : 'obj || (obj = {});\n'
        ) +
        "var __t, __p = ''" +
        (isEscaping
           ? ', __e = _.escape'
           : ''
        ) +
        (isEvaluating
          ? ', __j = Array.prototype.join;\n' +
            "function print() { __p += __j.call(arguments, '') }\n"
          : ';\n'
        ) +
        source +
        'return __p\n}';

      var result = attempt(function() {
        return Function(importsKeys, sourceURL + 'return ' + source)
          .apply(undefined, importsValues);
      });

      // Provide the compiled function's source by its `toString` method or
      // the `source` property as a convenience for inlining compiled templates.
      result.source = source;
      if (isError(result)) {
        throw result;
      }
      return result;
    }

    /**
     * Converts `string`, as a whole, to lower case just like
     * [String#toLowerCase](https://mdn.io/toLowerCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the lower cased string.
     * @example
     *
     * _.toLower('--Foo-Bar--');
     * // => '--foo-bar--'
     *
     * _.toLower('fooBar');
     * // => 'foobar'
     *
     * _.toLower('__FOO_BAR__');
     * // => '__foo_bar__'
     */
    function toLower(value) {
      return toString(value).toLowerCase();
    }

    /**
     * Converts `string`, as a whole, to upper case just like
     * [String#toUpperCase](https://mdn.io/toUpperCase).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.toUpper('--foo-bar--');
     * // => '--FOO-BAR--'
     *
     * _.toUpper('fooBar');
     * // => 'FOOBAR'
     *
     * _.toUpper('__foo_bar__');
     * // => '__FOO_BAR__'
     */
    function toUpper(value) {
      return toString(value).toUpperCase();
    }

    /**
     * Removes leading and trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trim('  abc  ');
     * // => 'abc'
     *
     * _.trim('-_-abc-_-', '_-');
     * // => 'abc'
     *
     * _.map(['  foo  ', '  bar  '], _.trim);
     * // => ['foo', 'bar']
     */
    function trim(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return baseTrim(string);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          chrSymbols = stringToArray(chars),
          start = charsStartIndex(strSymbols, chrSymbols),
          end = charsEndIndex(strSymbols, chrSymbols) + 1;

      return castSlice(strSymbols, start, end).join('');
    }

    /**
     * Removes trailing whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimEnd('  abc  ');
     * // => '  abc'
     *
     * _.trimEnd('-_-abc-_-', '_-');
     * // => '-_-abc'
     */
    function trimEnd(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.slice(0, trimmedEndIndex(string) + 1);
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;

      return castSlice(strSymbols, 0, end).join('');
    }

    /**
     * Removes leading whitespace or specified characters from `string`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to trim.
     * @param {string} [chars=whitespace] The characters to trim.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {string} Returns the trimmed string.
     * @example
     *
     * _.trimStart('  abc  ');
     * // => 'abc  '
     *
     * _.trimStart('-_-abc-_-', '_-');
     * // => 'abc-_-'
     */
    function trimStart(string, chars, guard) {
      string = toString(string);
      if (string && (guard || chars === undefined)) {
        return string.replace(reTrimStart, '');
      }
      if (!string || !(chars = baseToString(chars))) {
        return string;
      }
      var strSymbols = stringToArray(string),
          start = charsStartIndex(strSymbols, stringToArray(chars));

      return castSlice(strSymbols, start).join('');
    }

    /**
     * Truncates `string` if it's longer than the given maximum string length.
     * The last characters of the truncated string are replaced with the omission
     * string which defaults to "...".
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to truncate.
     * @param {Object} [options={}] The options object.
     * @param {number} [options.length=30] The maximum string length.
     * @param {string} [options.omission='...'] The string to indicate text is omitted.
     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.
     * @returns {string} Returns the truncated string.
     * @example
     *
     * _.truncate('hi-diddly-ho there, neighborino');
     * // => 'hi-diddly-ho there, neighbo...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': ' '
     * });
     * // => 'hi-diddly-ho there,...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'length': 24,
     *   'separator': /,? +/
     * });
     * // => 'hi-diddly-ho there...'
     *
     * _.truncate('hi-diddly-ho there, neighborino', {
     *   'omission': ' [...]'
     * });
     * // => 'hi-diddly-ho there, neig [...]'
     */
    function truncate(string, options) {
      var length = DEFAULT_TRUNC_LENGTH,
          omission = DEFAULT_TRUNC_OMISSION;

      if (isObject(options)) {
        var separator = 'separator' in options ? options.separator : separator;
        length = 'length' in options ? toInteger(options.length) : length;
        omission = 'omission' in options ? baseToString(options.omission) : omission;
      }
      string = toString(string);

      var strLength = string.length;
      if (hasUnicode(string)) {
        var strSymbols = stringToArray(string);
        strLength = strSymbols.length;
      }
      if (length >= strLength) {
        return string;
      }
      var end = length - stringSize(omission);
      if (end < 1) {
        return omission;
      }
      var result = strSymbols
        ? castSlice(strSymbols, 0, end).join('')
        : string.slice(0, end);

      if (separator === undefined) {
        return result + omission;
      }
      if (strSymbols) {
        end += (result.length - end);
      }
      if (isRegExp(separator)) {
        if (string.slice(end).search(separator)) {
          var match,
              substring = result;

          if (!separator.global) {
            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');
          }
          separator.lastIndex = 0;
          while ((match = separator.exec(substring))) {
            var newEnd = match.index;
          }
          result = result.slice(0, newEnd === undefined ? end : newEnd);
        }
      } else if (string.indexOf(baseToString(separator), end) != end) {
        var index = result.lastIndexOf(separator);
        if (index > -1) {
          result = result.slice(0, index);
        }
      }
      return result + omission;
    }

    /**
     * The inverse of `_.escape`; this method converts the HTML entities
     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to
     * their corresponding characters.
     *
     * **Note:** No other HTML entities are unescaped. To unescape additional
     * HTML entities use a third-party library like [_he_](https://mths.be/he).
     *
     * @static
     * @memberOf _
     * @since 0.6.0
     * @category String
     * @param {string} [string=''] The string to unescape.
     * @returns {string} Returns the unescaped string.
     * @example
     *
     * _.unescape('fred, barney, &amp; pebbles');
     * // => 'fred, barney, & pebbles'
     */
    function unescape(string) {
      string = toString(string);
      return (string && reHasEscapedHtml.test(string))
        ? string.replace(reEscapedHtml, unescapeHtmlChar)
        : string;
    }

    /**
     * Converts `string`, as space separated words, to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the upper cased string.
     * @example
     *
     * _.upperCase('--foo-bar');
     * // => 'FOO BAR'
     *
     * _.upperCase('fooBar');
     * // => 'FOO BAR'
     *
     * _.upperCase('__foo_bar__');
     * // => 'FOO BAR'
     */
    var upperCase = createCompounder(function(result, word, index) {
      return result + (index ? ' ' : '') + word.toUpperCase();
    });

    /**
     * Converts the first character of `string` to upper case.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category String
     * @param {string} [string=''] The string to convert.
     * @returns {string} Returns the converted string.
     * @example
     *
     * _.upperFirst('fred');
     * // => 'Fred'
     *
     * _.upperFirst('FRED');
     * // => 'FRED'
     */
    var upperFirst = createCaseFirst('toUpperCase');

    /**
     * Splits `string` into an array of its words.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category String
     * @param {string} [string=''] The string to inspect.
     * @param {RegExp|string} [pattern] The pattern to match words.
     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.
     * @returns {Array} Returns the words of `string`.
     * @example
     *
     * _.words('fred, barney, & pebbles');
     * // => ['fred', 'barney', 'pebbles']
     *
     * _.words('fred, barney, & pebbles', /[^, ]+/g);
     * // => ['fred', 'barney', '&', 'pebbles']
     */
    function words(string, pattern, guard) {
      string = toString(string);
      pattern = guard ? undefined : pattern;

      if (pattern === undefined) {
        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);
      }
      return string.match(pattern) || [];
    }

    /*------------------------------------------------------------------------*/

    /**
     * Attempts to invoke `func`, returning either the result or the caught error
     * object. Any additional arguments are provided to `func` when it's invoked.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Function} func The function to attempt.
     * @param {...*} [args] The arguments to invoke `func` with.
     * @returns {*} Returns the `func` result or error object.
     * @example
     *
     * // Avoid throwing errors for invalid selectors.
     * var elements = _.attempt(function(selector) {
     *   return document.querySelectorAll(selector);
     * }, '>_>');
     *
     * if (_.isError(elements)) {
     *   elements = [];
     * }
     */
    var attempt = baseRest(function(func, args) {
      try {
        return apply(func, undefined, args);
      } catch (e) {
        return isError(e) ? e : new Error(e);
      }
    });

    /**
     * Binds methods of an object to the object itself, overwriting the existing
     * method.
     *
     * **Note:** This method doesn't set the "length" property of bound functions.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Object} object The object to bind and assign the bound methods to.
     * @param {...(string|string[])} methodNames The object method names to bind.
     * @returns {Object} Returns `object`.
     * @example
     *
     * var view = {
     *   'label': 'docs',
     *   'click': function() {
     *     console.log('clicked ' + this.label);
     *   }
     * };
     *
     * _.bindAll(view, ['click']);
     * jQuery(element).on('click', view.click);
     * // => Logs 'clicked docs' when clicked.
     */
    var bindAll = flatRest(function(object, methodNames) {
      arrayEach(methodNames, function(key) {
        key = toKey(key);
        baseAssignValue(object, key, bind(object[key], object));
      });
      return object;
    });

    /**
     * Creates a function that iterates over `pairs` and invokes the corresponding
     * function of the first predicate to return truthy. The predicate-function
     * pairs are invoked with the `this` binding and arguments of the created
     * function.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Array} pairs The predicate-function pairs.
     * @returns {Function} Returns the new composite function.
     * @example
     *
     * var func = _.cond([
     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],
     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],
     *   [_.stubTrue,                      _.constant('no match')]
     * ]);
     *
     * func({ 'a': 1, 'b': 2 });
     * // => 'matches A'
     *
     * func({ 'a': 0, 'b': 1 });
     * // => 'matches B'
     *
     * func({ 'a': '1', 'b': '2' });
     * // => 'no match'
     */
    function cond(pairs) {
      var length = pairs == null ? 0 : pairs.length,
          toIteratee = getIteratee();

      pairs = !length ? [] : arrayMap(pairs, function(pair) {
        if (typeof pair[1] != 'function') {
          throw new TypeError(FUNC_ERROR_TEXT);
        }
        return [toIteratee(pair[0]), pair[1]];
      });

      return baseRest(function(args) {
        var index = -1;
        while (++index < length) {
          var pair = pairs[index];
          if (apply(pair[0], this, args)) {
            return apply(pair[1], this, args);
          }
        }
      });
    }

    /**
     * Creates a function that invokes the predicate properties of `source` with
     * the corresponding property values of a given object, returning `true` if
     * all predicates return truthy, else `false`.
     *
     * **Note:** The created function is equivalent to `_.conformsTo` with
     * `source` partially applied.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {Object} source The object of property predicates to conform to.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 2, 'b': 1 },
     *   { 'a': 1, 'b': 2 }
     * ];
     *
     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));
     * // => [{ 'a': 1, 'b': 2 }]
     */
    function conforms(source) {
      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that returns `value`.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {*} value The value to return from the new function.
     * @returns {Function} Returns the new constant function.
     * @example
     *
     * var objects = _.times(2, _.constant({ 'a': 1 }));
     *
     * console.log(objects);
     * // => [{ 'a': 1 }, { 'a': 1 }]
     *
     * console.log(objects[0] === objects[1]);
     * // => true
     */
    function constant(value) {
      return function() {
        return value;
      };
    }

    /**
     * Checks `value` to determine whether a default value should be returned in
     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,
     * or `undefined`.
     *
     * @static
     * @memberOf _
     * @since 4.14.0
     * @category Util
     * @param {*} value The value to check.
     * @param {*} defaultValue The default value.
     * @returns {*} Returns the resolved value.
     * @example
     *
     * _.defaultTo(1, 10);
     * // => 1
     *
     * _.defaultTo(undefined, 10);
     * // => 10
     */
    function defaultTo(value, defaultValue) {
      return (value == null || value !== value) ? defaultValue : value;
    }

    /**
     * Creates a function that returns the result of invoking the given functions
     * with the `this` binding of the created function, where each successive
     * invocation is supplied the return value of the previous.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flowRight
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flow([_.add, square]);
     * addSquare(1, 2);
     * // => 9
     */
    var flow = createFlow();

    /**
     * This method is like `_.flow` except that it creates a function that
     * invokes the given functions from right to left.
     *
     * @static
     * @since 3.0.0
     * @memberOf _
     * @category Util
     * @param {...(Function|Function[])} [funcs] The functions to invoke.
     * @returns {Function} Returns the new composite function.
     * @see _.flow
     * @example
     *
     * function square(n) {
     *   return n * n;
     * }
     *
     * var addSquare = _.flowRight([square, _.add]);
     * addSquare(1, 2);
     * // => 9
     */
    var flowRight = createFlow(true);

    /**
     * This method returns the first argument it receives.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {*} value Any value.
     * @returns {*} Returns `value`.
     * @example
     *
     * var object = { 'a': 1 };
     *
     * console.log(_.identity(object) === object);
     * // => true
     */
    function identity(value) {
      return value;
    }

    /**
     * Creates a function that invokes `func` with the arguments of the created
     * function. If `func` is a property name, the created function returns the
     * property value for a given element. If `func` is an array or object, the
     * created function returns `true` for elements that contain the equivalent
     * source properties, otherwise it returns `false`.
     *
     * @static
     * @since 4.0.0
     * @memberOf _
     * @category Util
     * @param {*} [func=_.identity] The value to convert to a callback.
     * @returns {Function} Returns the callback.
     * @example
     *
     * var users = [
     *   { 'user': 'barney', 'age': 36, 'active': true },
     *   { 'user': 'fred',   'age': 40, 'active': false }
     * ];
     *
     * // The `_.matches` iteratee shorthand.
     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));
     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]
     *
     * // The `_.matchesProperty` iteratee shorthand.
     * _.filter(users, _.iteratee(['user', 'fred']));
     * // => [{ 'user': 'fred', 'age': 40 }]
     *
     * // The `_.property` iteratee shorthand.
     * _.map(users, _.iteratee('user'));
     * // => ['barney', 'fred']
     *
     * // Create custom iteratee shorthands.
     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {
     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {
     *     return func.test(string);
     *   };
     * });
     *
     * _.filter(['abc', 'def'], /ef/);
     * // => ['def']
     */
    function iteratee(func) {
      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between a given
     * object and `source`, returning `true` if the given object has equivalent
     * property values, else `false`.
     *
     * **Note:** The created function is equivalent to `_.isMatch` with `source`
     * partially applied.
     *
     * Partial comparisons will match empty array and empty object `source`
     * values against any array or object value, respectively. See `_.isEqual`
     * for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} source The object of property values to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));
     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matches(source) {
      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that performs a partial deep comparison between the
     * value at `path` of a given object to `srcValue`, returning `true` if the
     * object value is equivalent, else `false`.
     *
     * **Note:** Partial comparisons will match empty array and empty object
     * `srcValue` values against any array or object value, respectively. See
     * `_.isEqual` for a list of supported value comparisons.
     *
     * **Note:** Multiple values can be checked by combining several matchers
     * using `_.overSome`
     *
     * @static
     * @memberOf _
     * @since 3.2.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @param {*} srcValue The value to match.
     * @returns {Function} Returns the new spec function.
     * @example
     *
     * var objects = [
     *   { 'a': 1, 'b': 2, 'c': 3 },
     *   { 'a': 4, 'b': 5, 'c': 6 }
     * ];
     *
     * _.find(objects, _.matchesProperty('a', 4));
     * // => { 'a': 4, 'b': 5, 'c': 6 }
     *
     * // Checking for several possible values
     * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));
     * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]
     */
    function matchesProperty(path, srcValue) {
      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));
    }

    /**
     * Creates a function that invokes the method at `path` of a given object.
     * Any additional arguments are provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Array|string} path The path of the method to invoke.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': _.constant(2) } },
     *   { 'a': { 'b': _.constant(1) } }
     * ];
     *
     * _.map(objects, _.method('a.b'));
     * // => [2, 1]
     *
     * _.map(objects, _.method(['a', 'b']));
     * // => [2, 1]
     */
    var method = baseRest(function(path, args) {
      return function(object) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * The opposite of `_.method`; this method creates a function that invokes
     * the method at a given path of `object`. Any additional arguments are
     * provided to the invoked method.
     *
     * @static
     * @memberOf _
     * @since 3.7.0
     * @category Util
     * @param {Object} object The object to query.
     * @param {...*} [args] The arguments to invoke the method with.
     * @returns {Function} Returns the new invoker function.
     * @example
     *
     * var array = _.times(3, _.constant),
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.methodOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));
     * // => [2, 0]
     */
    var methodOf = baseRest(function(object, args) {
      return function(path) {
        return baseInvoke(object, path, args);
      };
    });

    /**
     * Adds all own enumerable string keyed function properties of a source
     * object to the destination object. If `object` is a function, then methods
     * are added to its prototype as well.
     *
     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to
     * avoid conflicts caused by modifying the original.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {Function|Object} [object=lodash] The destination object.
     * @param {Object} source The object of functions to add.
     * @param {Object} [options={}] The options object.
     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.
     * @returns {Function|Object} Returns `object`.
     * @example
     *
     * function vowels(string) {
     *   return _.filter(string, function(v) {
     *     return /[aeiou]/i.test(v);
     *   });
     * }
     *
     * _.mixin({ 'vowels': vowels });
     * _.vowels('fred');
     * // => ['e']
     *
     * _('fred').vowels().value();
     * // => ['e']
     *
     * _.mixin({ 'vowels': vowels }, { 'chain': false });
     * _('fred').vowels();
     * // => ['e']
     */
    function mixin(object, source, options) {
      var props = keys(source),
          methodNames = baseFunctions(source, props);

      if (options == null &&
          !(isObject(source) && (methodNames.length || !props.length))) {
        options = source;
        source = object;
        object = this;
        methodNames = baseFunctions(source, keys(source));
      }
      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,
          isFunc = isFunction(object);

      arrayEach(methodNames, function(methodName) {
        var func = source[methodName];
        object[methodName] = func;
        if (isFunc) {
          object.prototype[methodName] = function() {
            var chainAll = this.__chain__;
            if (chain || chainAll) {
              var result = object(this.__wrapped__),
                  actions = result.__actions__ = copyArray(this.__actions__);

              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });
              result.__chain__ = chainAll;
              return result;
            }
            return func.apply(object, arrayPush([this.value()], arguments));
          };
        }
      });

      return object;
    }

    /**
     * Reverts the `_` variable to its previous value and returns a reference to
     * the `lodash` function.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @returns {Function} Returns the `lodash` function.
     * @example
     *
     * var lodash = _.noConflict();
     */
    function noConflict() {
      if (root._ === this) {
        root._ = oldDash;
      }
      return this;
    }

    /**
     * This method returns `undefined`.
     *
     * @static
     * @memberOf _
     * @since 2.3.0
     * @category Util
     * @example
     *
     * _.times(2, _.noop);
     * // => [undefined, undefined]
     */
    function noop() {
      // No operation performed.
    }

    /**
     * Creates a function that gets the argument at index `n`. If `n` is negative,
     * the nth argument from the end is returned.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [n=0] The index of the argument to return.
     * @returns {Function} Returns the new pass-thru function.
     * @example
     *
     * var func = _.nthArg(1);
     * func('a', 'b', 'c', 'd');
     * // => 'b'
     *
     * var func = _.nthArg(-2);
     * func('a', 'b', 'c', 'd');
     * // => 'c'
     */
    function nthArg(n) {
      n = toInteger(n);
      return baseRest(function(args) {
        return baseNth(args, n);
      });
    }

    /**
     * Creates a function that invokes `iteratees` with the arguments it receives
     * and returns their results.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [iteratees=[_.identity]]
     *  The iteratees to invoke.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.over([Math.max, Math.min]);
     *
     * func(1, 2, 3, 4);
     * // => [4, 1]
     */
    var over = createOver(arrayMap);

    /**
     * Creates a function that checks if **all** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overEvery([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => false
     *
     * func(NaN);
     * // => false
     */
    var overEvery = createOver(arrayEvery);

    /**
     * Creates a function that checks if **any** of the `predicates` return
     * truthy when invoked with the arguments it receives.
     *
     * Following shorthands are possible for providing predicates.
     * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.
     * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {...(Function|Function[])} [predicates=[_.identity]]
     *  The predicates to check.
     * @returns {Function} Returns the new function.
     * @example
     *
     * var func = _.overSome([Boolean, isFinite]);
     *
     * func('1');
     * // => true
     *
     * func(null);
     * // => true
     *
     * func(NaN);
     * // => false
     *
     * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])
     * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])
     */
    var overSome = createOver(arraySome);

    /**
     * Creates a function that returns the value at `path` of a given object.
     *
     * @static
     * @memberOf _
     * @since 2.4.0
     * @category Util
     * @param {Array|string} path The path of the property to get.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var objects = [
     *   { 'a': { 'b': 2 } },
     *   { 'a': { 'b': 1 } }
     * ];
     *
     * _.map(objects, _.property('a.b'));
     * // => [2, 1]
     *
     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');
     * // => [1, 2]
     */
    function property(path) {
      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);
    }

    /**
     * The opposite of `_.property`; this method creates a function that returns
     * the value at a given path of `object`.
     *
     * @static
     * @memberOf _
     * @since 3.0.0
     * @category Util
     * @param {Object} object The object to query.
     * @returns {Function} Returns the new accessor function.
     * @example
     *
     * var array = [0, 1, 2],
     *     object = { 'a': array, 'b': array, 'c': array };
     *
     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));
     * // => [2, 0]
     *
     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));
     * // => [2, 0]
     */
    function propertyOf(object) {
      return function(path) {
        return object == null ? undefined : baseGet(object, path);
      };
    }

    /**
     * Creates an array of numbers (positive and/or negative) progressing from
     * `start` up to, but not including, `end`. A step of `-1` is used if a negative
     * `start` is specified without an `end` or `step`. If `end` is not specified,
     * it's set to `start` with `start` then set to `0`.
     *
     * **Note:** JavaScript follows the IEEE-754 standard for resolving
     * floating-point values which can produce unexpected results.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.rangeRight
     * @example
     *
     * _.range(4);
     * // => [0, 1, 2, 3]
     *
     * _.range(-4);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 5);
     * // => [1, 2, 3, 4]
     *
     * _.range(0, 20, 5);
     * // => [0, 5, 10, 15]
     *
     * _.range(0, -4, -1);
     * // => [0, -1, -2, -3]
     *
     * _.range(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.range(0);
     * // => []
     */
    var range = createRange();

    /**
     * This method is like `_.range` except that it populates values in
     * descending order.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {number} [start=0] The start of the range.
     * @param {number} end The end of the range.
     * @param {number} [step=1] The value to increment or decrement by.
     * @returns {Array} Returns the range of numbers.
     * @see _.inRange, _.range
     * @example
     *
     * _.rangeRight(4);
     * // => [3, 2, 1, 0]
     *
     * _.rangeRight(-4);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 5);
     * // => [4, 3, 2, 1]
     *
     * _.rangeRight(0, 20, 5);
     * // => [15, 10, 5, 0]
     *
     * _.rangeRight(0, -4, -1);
     * // => [-3, -2, -1, 0]
     *
     * _.rangeRight(1, 4, 0);
     * // => [1, 1, 1]
     *
     * _.rangeRight(0);
     * // => []
     */
    var rangeRight = createRange(true);

    /**
     * This method returns a new empty array.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Array} Returns the new empty array.
     * @example
     *
     * var arrays = _.times(2, _.stubArray);
     *
     * console.log(arrays);
     * // => [[], []]
     *
     * console.log(arrays[0] === arrays[1]);
     * // => false
     */
    function stubArray() {
      return [];
    }

    /**
     * This method returns `false`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `false`.
     * @example
     *
     * _.times(2, _.stubFalse);
     * // => [false, false]
     */
    function stubFalse() {
      return false;
    }

    /**
     * This method returns a new empty object.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {Object} Returns the new empty object.
     * @example
     *
     * var objects = _.times(2, _.stubObject);
     *
     * console.log(objects);
     * // => [{}, {}]
     *
     * console.log(objects[0] === objects[1]);
     * // => false
     */
    function stubObject() {
      return {};
    }

    /**
     * This method returns an empty string.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {string} Returns the empty string.
     * @example
     *
     * _.times(2, _.stubString);
     * // => ['', '']
     */
    function stubString() {
      return '';
    }

    /**
     * This method returns `true`.
     *
     * @static
     * @memberOf _
     * @since 4.13.0
     * @category Util
     * @returns {boolean} Returns `true`.
     * @example
     *
     * _.times(2, _.stubTrue);
     * // => [true, true]
     */
    function stubTrue() {
      return true;
    }

    /**
     * Invokes the iteratee `n` times, returning an array of the results of
     * each invocation. The iteratee is invoked with one argument; (index).
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {number} n The number of times to invoke `iteratee`.
     * @param {Function} [iteratee=_.identity] The function invoked per iteration.
     * @returns {Array} Returns the array of results.
     * @example
     *
     * _.times(3, String);
     * // => ['0', '1', '2']
     *
     *  _.times(4, _.constant(0));
     * // => [0, 0, 0, 0]
     */
    function times(n, iteratee) {
      n = toInteger(n);
      if (n < 1 || n > MAX_SAFE_INTEGER) {
        return [];
      }
      var index = MAX_ARRAY_LENGTH,
          length = nativeMin(n, MAX_ARRAY_LENGTH);

      iteratee = getIteratee(iteratee);
      n -= MAX_ARRAY_LENGTH;

      var result = baseTimes(length, iteratee);
      while (++index < n) {
        iteratee(index);
      }
      return result;
    }

    /**
     * Converts `value` to a property path array.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Util
     * @param {*} value The value to convert.
     * @returns {Array} Returns the new property path array.
     * @example
     *
     * _.toPath('a.b.c');
     * // => ['a', 'b', 'c']
     *
     * _.toPath('a[0].b.c');
     * // => ['a', '0', 'b', 'c']
     */
    function toPath(value) {
      if (isArray(value)) {
        return arrayMap(value, toKey);
      }
      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));
    }

    /**
     * Generates a unique ID. If `prefix` is given, the ID is appended to it.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Util
     * @param {string} [prefix=''] The value to prefix the ID with.
     * @returns {string} Returns the unique ID.
     * @example
     *
     * _.uniqueId('contact_');
     * // => 'contact_104'
     *
     * _.uniqueId();
     * // => '105'
     */
    function uniqueId(prefix) {
      var id = ++idCounter;
      return toString(prefix) + id;
    }

    /*------------------------------------------------------------------------*/

    /**
     * Adds two numbers.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {number} augend The first number in an addition.
     * @param {number} addend The second number in an addition.
     * @returns {number} Returns the total.
     * @example
     *
     * _.add(6, 4);
     * // => 10
     */
    var add = createMathOperation(function(augend, addend) {
      return augend + addend;
    }, 0);

    /**
     * Computes `number` rounded up to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round up.
     * @param {number} [precision=0] The precision to round up to.
     * @returns {number} Returns the rounded up number.
     * @example
     *
     * _.ceil(4.006);
     * // => 5
     *
     * _.ceil(6.004, 2);
     * // => 6.01
     *
     * _.ceil(6040, -2);
     * // => 6100
     */
    var ceil = createRound('ceil');

    /**
     * Divide two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} dividend The first number in a division.
     * @param {number} divisor The second number in a division.
     * @returns {number} Returns the quotient.
     * @example
     *
     * _.divide(6, 4);
     * // => 1.5
     */
    var divide = createMathOperation(function(dividend, divisor) {
      return dividend / divisor;
    }, 1);

    /**
     * Computes `number` rounded down to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round down.
     * @param {number} [precision=0] The precision to round down to.
     * @returns {number} Returns the rounded down number.
     * @example
     *
     * _.floor(4.006);
     * // => 4
     *
     * _.floor(0.046, 2);
     * // => 0.04
     *
     * _.floor(4060, -2);
     * // => 4000
     */
    var floor = createRound('floor');

    /**
     * Computes the maximum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * _.max([4, 2, 8, 6]);
     * // => 8
     *
     * _.max([]);
     * // => undefined
     */
    function max(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseGt)
        : undefined;
    }

    /**
     * This method is like `_.max` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the maximum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.maxBy(objects, function(o) { return o.n; });
     * // => { 'n': 2 }
     *
     * // The `_.property` iteratee shorthand.
     * _.maxBy(objects, 'n');
     * // => { 'n': 2 }
     */
    function maxBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)
        : undefined;
    }

    /**
     * Computes the mean of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the mean.
     * @example
     *
     * _.mean([4, 2, 8, 6]);
     * // => 5
     */
    function mean(array) {
      return baseMean(array, identity);
    }

    /**
     * This method is like `_.mean` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be averaged.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the mean.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.meanBy(objects, function(o) { return o.n; });
     * // => 5
     *
     * // The `_.property` iteratee shorthand.
     * _.meanBy(objects, 'n');
     * // => 5
     */
    function meanBy(array, iteratee) {
      return baseMean(array, getIteratee(iteratee, 2));
    }

    /**
     * Computes the minimum value of `array`. If `array` is empty or falsey,
     * `undefined` is returned.
     *
     * @static
     * @since 0.1.0
     * @memberOf _
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * _.min([4, 2, 8, 6]);
     * // => 2
     *
     * _.min([]);
     * // => undefined
     */
    function min(array) {
      return (array && array.length)
        ? baseExtremum(array, identity, baseLt)
        : undefined;
    }

    /**
     * This method is like `_.min` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the criterion by which
     * the value is ranked. The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {*} Returns the minimum value.
     * @example
     *
     * var objects = [{ 'n': 1 }, { 'n': 2 }];
     *
     * _.minBy(objects, function(o) { return o.n; });
     * // => { 'n': 1 }
     *
     * // The `_.property` iteratee shorthand.
     * _.minBy(objects, 'n');
     * // => { 'n': 1 }
     */
    function minBy(array, iteratee) {
      return (array && array.length)
        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)
        : undefined;
    }

    /**
     * Multiply two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.7.0
     * @category Math
     * @param {number} multiplier The first number in a multiplication.
     * @param {number} multiplicand The second number in a multiplication.
     * @returns {number} Returns the product.
     * @example
     *
     * _.multiply(6, 4);
     * // => 24
     */
    var multiply = createMathOperation(function(multiplier, multiplicand) {
      return multiplier * multiplicand;
    }, 1);

    /**
     * Computes `number` rounded to `precision`.
     *
     * @static
     * @memberOf _
     * @since 3.10.0
     * @category Math
     * @param {number} number The number to round.
     * @param {number} [precision=0] The precision to round to.
     * @returns {number} Returns the rounded number.
     * @example
     *
     * _.round(4.006);
     * // => 4
     *
     * _.round(4.006, 2);
     * // => 4.01
     *
     * _.round(4060, -2);
     * // => 4100
     */
    var round = createRound('round');

    /**
     * Subtract two numbers.
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {number} minuend The first number in a subtraction.
     * @param {number} subtrahend The second number in a subtraction.
     * @returns {number} Returns the difference.
     * @example
     *
     * _.subtract(6, 4);
     * // => 2
     */
    var subtract = createMathOperation(function(minuend, subtrahend) {
      return minuend - subtrahend;
    }, 0);

    /**
     * Computes the sum of the values in `array`.
     *
     * @static
     * @memberOf _
     * @since 3.4.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @returns {number} Returns the sum.
     * @example
     *
     * _.sum([4, 2, 8, 6]);
     * // => 20
     */
    function sum(array) {
      return (array && array.length)
        ? baseSum(array, identity)
        : 0;
    }

    /**
     * This method is like `_.sum` except that it accepts `iteratee` which is
     * invoked for each element in `array` to generate the value to be summed.
     * The iteratee is invoked with one argument: (value).
     *
     * @static
     * @memberOf _
     * @since 4.0.0
     * @category Math
     * @param {Array} array The array to iterate over.
     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.
     * @returns {number} Returns the sum.
     * @example
     *
     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];
     *
     * _.sumBy(objects, function(o) { return o.n; });
     * // => 20
     *
     * // The `_.property` iteratee shorthand.
     * _.sumBy(objects, 'n');
     * // => 20
     */
    function sumBy(array, iteratee) {
      return (array && array.length)
        ? baseSum(array, getIteratee(iteratee, 2))
        : 0;
    }

    /*------------------------------------------------------------------------*/

    // Add methods that return wrapped values in chain sequences.
    lodash.after = after;
    lodash.ary = ary;
    lodash.assign = assign;
    lodash.assignIn = assignIn;
    lodash.assignInWith = assignInWith;
    lodash.assignWith = assignWith;
    lodash.at = at;
    lodash.before = before;
    lodash.bind = bind;
    lodash.bindAll = bindAll;
    lodash.bindKey = bindKey;
    lodash.castArray = castArray;
    lodash.chain = chain;
    lodash.chunk = chunk;
    lodash.compact = compact;
    lodash.concat = concat;
    lodash.cond = cond;
    lodash.conforms = conforms;
    lodash.constant = constant;
    lodash.countBy = countBy;
    lodash.create = create;
    lodash.curry = curry;
    lodash.curryRight = curryRight;
    lodash.debounce = debounce;
    lodash.defaults = defaults;
    lodash.defaultsDeep = defaultsDeep;
    lodash.defer = defer;
    lodash.delay = delay;
    lodash.difference = difference;
    lodash.differenceBy = differenceBy;
    lodash.differenceWith = differenceWith;
    lodash.drop = drop;
    lodash.dropRight = dropRight;
    lodash.dropRightWhile = dropRightWhile;
    lodash.dropWhile = dropWhile;
    lodash.fill = fill;
    lodash.filter = filter;
    lodash.flatMap = flatMap;
    lodash.flatMapDeep = flatMapDeep;
    lodash.flatMapDepth = flatMapDepth;
    lodash.flatten = flatten;
    lodash.flattenDeep = flattenDeep;
    lodash.flattenDepth = flattenDepth;
    lodash.flip = flip;
    lodash.flow = flow;
    lodash.flowRight = flowRight;
    lodash.fromPairs = fromPairs;
    lodash.functions = functions;
    lodash.functionsIn = functionsIn;
    lodash.groupBy = groupBy;
    lodash.initial = initial;
    lodash.intersection = intersection;
    lodash.intersectionBy = intersectionBy;
    lodash.intersectionWith = intersectionWith;
    lodash.invert = invert;
    lodash.invertBy = invertBy;
    lodash.invokeMap = invokeMap;
    lodash.iteratee = iteratee;
    lodash.keyBy = keyBy;
    lodash.keys = keys;
    lodash.keysIn = keysIn;
    lodash.map = map;
    lodash.mapKeys = mapKeys;
    lodash.mapValues = mapValues;
    lodash.matches = matches;
    lodash.matchesProperty = matchesProperty;
    lodash.memoize = memoize;
    lodash.merge = merge;
    lodash.mergeWith = mergeWith;
    lodash.method = method;
    lodash.methodOf = methodOf;
    lodash.mixin = mixin;
    lodash.negate = negate;
    lodash.nthArg = nthArg;
    lodash.omit = omit;
    lodash.omitBy = omitBy;
    lodash.once = once;
    lodash.orderBy = orderBy;
    lodash.over = over;
    lodash.overArgs = overArgs;
    lodash.overEvery = overEvery;
    lodash.overSome = overSome;
    lodash.partial = partial;
    lodash.partialRight = partialRight;
    lodash.partition = partition;
    lodash.pick = pick;
    lodash.pickBy = pickBy;
    lodash.property = property;
    lodash.propertyOf = propertyOf;
    lodash.pull = pull;
    lodash.pullAll = pullAll;
    lodash.pullAllBy = pullAllBy;
    lodash.pullAllWith = pullAllWith;
    lodash.pullAt = pullAt;
    lodash.range = range;
    lodash.rangeRight = rangeRight;
    lodash.rearg = rearg;
    lodash.reject = reject;
    lodash.remove = remove;
    lodash.rest = rest;
    lodash.reverse = reverse;
    lodash.sampleSize = sampleSize;
    lodash.set = set;
    lodash.setWith = setWith;
    lodash.shuffle = shuffle;
    lodash.slice = slice;
    lodash.sortBy = sortBy;
    lodash.sortedUniq = sortedUniq;
    lodash.sortedUniqBy = sortedUniqBy;
    lodash.split = split;
    lodash.spread = spread;
    lodash.tail = tail;
    lodash.take = take;
    lodash.takeRight = takeRight;
    lodash.takeRightWhile = takeRightWhile;
    lodash.takeWhile = takeWhile;
    lodash.tap = tap;
    lodash.throttle = throttle;
    lodash.thru = thru;
    lodash.toArray = toArray;
    lodash.toPairs = toPairs;
    lodash.toPairsIn = toPairsIn;
    lodash.toPath = toPath;
    lodash.toPlainObject = toPlainObject;
    lodash.transform = transform;
    lodash.unary = unary;
    lodash.union = union;
    lodash.unionBy = unionBy;
    lodash.unionWith = unionWith;
    lodash.uniq = uniq;
    lodash.uniqBy = uniqBy;
    lodash.uniqWith = uniqWith;
    lodash.unset = unset;
    lodash.unzip = unzip;
    lodash.unzipWith = unzipWith;
    lodash.update = update;
    lodash.updateWith = updateWith;
    lodash.values = values;
    lodash.valuesIn = valuesIn;
    lodash.without = without;
    lodash.words = words;
    lodash.wrap = wrap;
    lodash.xor = xor;
    lodash.xorBy = xorBy;
    lodash.xorWith = xorWith;
    lodash.zip = zip;
    lodash.zipObject = zipObject;
    lodash.zipObjectDeep = zipObjectDeep;
    lodash.zipWith = zipWith;

    // Add aliases.
    lodash.entries = toPairs;
    lodash.entriesIn = toPairsIn;
    lodash.extend = assignIn;
    lodash.extendWith = assignInWith;

    // Add methods to `lodash.prototype`.
    mixin(lodash, lodash);

    /*------------------------------------------------------------------------*/

    // Add methods that return unwrapped values in chain sequences.
    lodash.add = add;
    lodash.attempt = attempt;
    lodash.camelCase = camelCase;
    lodash.capitalize = capitalize;
    lodash.ceil = ceil;
    lodash.clamp = clamp;
    lodash.clone = clone;
    lodash.cloneDeep = cloneDeep;
    lodash.cloneDeepWith = cloneDeepWith;
    lodash.cloneWith = cloneWith;
    lodash.conformsTo = conformsTo;
    lodash.deburr = deburr;
    lodash.defaultTo = defaultTo;
    lodash.divide = divide;
    lodash.endsWith = endsWith;
    lodash.eq = eq;
    lodash.escape = escape;
    lodash.escapeRegExp = escapeRegExp;
    lodash.every = every;
    lodash.find = find;
    lodash.findIndex = findIndex;
    lodash.findKey = findKey;
    lodash.findLast = findLast;
    lodash.findLastIndex = findLastIndex;
    lodash.findLastKey = findLastKey;
    lodash.floor = floor;
    lodash.forEach = forEach;
    lodash.forEachRight = forEachRight;
    lodash.forIn = forIn;
    lodash.forInRight = forInRight;
    lodash.forOwn = forOwn;
    lodash.forOwnRight = forOwnRight;
    lodash.get = get;
    lodash.gt = gt;
    lodash.gte = gte;
    lodash.has = has;
    lodash.hasIn = hasIn;
    lodash.head = head;
    lodash.identity = identity;
    lodash.includes = includes;
    lodash.indexOf = indexOf;
    lodash.inRange = inRange;
    lodash.invoke = invoke;
    lodash.isArguments = isArguments;
    lodash.isArray = isArray;
    lodash.isArrayBuffer = isArrayBuffer;
    lodash.isArrayLike = isArrayLike;
    lodash.isArrayLikeObject = isArrayLikeObject;
    lodash.isBoolean = isBoolean;
    lodash.isBuffer = isBuffer;
    lodash.isDate = isDate;
    lodash.isElement = isElement;
    lodash.isEmpty = isEmpty;
    lodash.isEqual = isEqual;
    lodash.isEqualWith = isEqualWith;
    lodash.isError = isError;
    lodash.isFinite = isFinite;
    lodash.isFunction = isFunction;
    lodash.isInteger = isInteger;
    lodash.isLength = isLength;
    lodash.isMap = isMap;
    lodash.isMatch = isMatch;
    lodash.isMatchWith = isMatchWith;
    lodash.isNaN = isNaN;
    lodash.isNative = isNative;
    lodash.isNil = isNil;
    lodash.isNull = isNull;
    lodash.isNumber = isNumber;
    lodash.isObject = isObject;
    lodash.isObjectLike = isObjectLike;
    lodash.isPlainObject = isPlainObject;
    lodash.isRegExp = isRegExp;
    lodash.isSafeInteger = isSafeInteger;
    lodash.isSet = isSet;
    lodash.isString = isString;
    lodash.isSymbol = isSymbol;
    lodash.isTypedArray = isTypedArray;
    lodash.isUndefined = isUndefined;
    lodash.isWeakMap = isWeakMap;
    lodash.isWeakSet = isWeakSet;
    lodash.join = join;
    lodash.kebabCase = kebabCase;
    lodash.last = last;
    lodash.lastIndexOf = lastIndexOf;
    lodash.lowerCase = lowerCase;
    lodash.lowerFirst = lowerFirst;
    lodash.lt = lt;
    lodash.lte = lte;
    lodash.max = max;
    lodash.maxBy = maxBy;
    lodash.mean = mean;
    lodash.meanBy = meanBy;
    lodash.min = min;
    lodash.minBy = minBy;
    lodash.stubArray = stubArray;
    lodash.stubFalse = stubFalse;
    lodash.stubObject = stubObject;
    lodash.stubString = stubString;
    lodash.stubTrue = stubTrue;
    lodash.multiply = multiply;
    lodash.nth = nth;
    lodash.noConflict = noConflict;
    lodash.noop = noop;
    lodash.now = now;
    lodash.pad = pad;
    lodash.padEnd = padEnd;
    lodash.padStart = padStart;
    lodash.parseInt = parseInt;
    lodash.random = random;
    lodash.reduce = reduce;
    lodash.reduceRight = reduceRight;
    lodash.repeat = repeat;
    lodash.replace = replace;
    lodash.result = result;
    lodash.round = round;
    lodash.runInContext = runInContext;
    lodash.sample = sample;
    lodash.size = size;
    lodash.snakeCase = snakeCase;
    lodash.some = some;
    lodash.sortedIndex = sortedIndex;
    lodash.sortedIndexBy = sortedIndexBy;
    lodash.sortedIndexOf = sortedIndexOf;
    lodash.sortedLastIndex = sortedLastIndex;
    lodash.sortedLastIndexBy = sortedLastIndexBy;
    lodash.sortedLastIndexOf = sortedLastIndexOf;
    lodash.startCase = startCase;
    lodash.startsWith = startsWith;
    lodash.subtract = subtract;
    lodash.sum = sum;
    lodash.sumBy = sumBy;
    lodash.template = template;
    lodash.times = times;
    lodash.toFinite = toFinite;
    lodash.toInteger = toInteger;
    lodash.toLength = toLength;
    lodash.toLower = toLower;
    lodash.toNumber = toNumber;
    lodash.toSafeInteger = toSafeInteger;
    lodash.toString = toString;
    lodash.toUpper = toUpper;
    lodash.trim = trim;
    lodash.trimEnd = trimEnd;
    lodash.trimStart = trimStart;
    lodash.truncate = truncate;
    lodash.unescape = unescape;
    lodash.uniqueId = uniqueId;
    lodash.upperCase = upperCase;
    lodash.upperFirst = upperFirst;

    // Add aliases.
    lodash.each = forEach;
    lodash.eachRight = forEachRight;
    lodash.first = head;

    mixin(lodash, (function() {
      var source = {};
      baseForOwn(lodash, function(func, methodName) {
        if (!hasOwnProperty.call(lodash.prototype, methodName)) {
          source[methodName] = func;
        }
      });
      return source;
    }()), { 'chain': false });

    /*------------------------------------------------------------------------*/

    /**
     * The semantic version number.
     *
     * @static
     * @memberOf _
     * @type {string}
     */
    lodash.VERSION = VERSION;

    // Assign default placeholders.
    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {
      lodash[methodName].placeholder = lodash;
    });

    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.
    arrayEach(['drop', 'take'], function(methodName, index) {
      LazyWrapper.prototype[methodName] = function(n) {
        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);

        var result = (this.__filtered__ && !index)
          ? new LazyWrapper(this)
          : this.clone();

        if (result.__filtered__) {
          result.__takeCount__ = nativeMin(n, result.__takeCount__);
        } else {
          result.__views__.push({
            'size': nativeMin(n, MAX_ARRAY_LENGTH),
            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')
          });
        }
        return result;
      };

      LazyWrapper.prototype[methodName + 'Right'] = function(n) {
        return this.reverse()[methodName](n).reverse();
      };
    });

    // Add `LazyWrapper` methods that accept an `iteratee` value.
    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {
      var type = index + 1,
          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;

      LazyWrapper.prototype[methodName] = function(iteratee) {
        var result = this.clone();
        result.__iteratees__.push({
          'iteratee': getIteratee(iteratee, 3),
          'type': type
        });
        result.__filtered__ = result.__filtered__ || isFilter;
        return result;
      };
    });

    // Add `LazyWrapper` methods for `_.head` and `_.last`.
    arrayEach(['head', 'last'], function(methodName, index) {
      var takeName = 'take' + (index ? 'Right' : '');

      LazyWrapper.prototype[methodName] = function() {
        return this[takeName](1).value()[0];
      };
    });

    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.
    arrayEach(['initial', 'tail'], function(methodName, index) {
      var dropName = 'drop' + (index ? '' : 'Right');

      LazyWrapper.prototype[methodName] = function() {
        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);
      };
    });

    LazyWrapper.prototype.compact = function() {
      return this.filter(identity);
    };

    LazyWrapper.prototype.find = function(predicate) {
      return this.filter(predicate).head();
    };

    LazyWrapper.prototype.findLast = function(predicate) {
      return this.reverse().find(predicate);
    };

    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {
      if (typeof path == 'function') {
        return new LazyWrapper(this);
      }
      return this.map(function(value) {
        return baseInvoke(value, path, args);
      });
    });

    LazyWrapper.prototype.reject = function(predicate) {
      return this.filter(negate(getIteratee(predicate)));
    };

    LazyWrapper.prototype.slice = function(start, end) {
      start = toInteger(start);

      var result = this;
      if (result.__filtered__ && (start > 0 || end < 0)) {
        return new LazyWrapper(result);
      }
      if (start < 0) {
        result = result.takeRight(-start);
      } else if (start) {
        result = result.drop(start);
      }
      if (end !== undefined) {
        end = toInteger(end);
        result = end < 0 ? result.dropRight(-end) : result.take(end - start);
      }
      return result;
    };

    LazyWrapper.prototype.takeRightWhile = function(predicate) {
      return this.reverse().takeWhile(predicate).reverse();
    };

    LazyWrapper.prototype.toArray = function() {
      return this.take(MAX_ARRAY_LENGTH);
    };

    // Add `LazyWrapper` methods to `lodash.prototype`.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),
          isTaker = /^(?:head|last)$/.test(methodName),
          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],
          retUnwrapped = isTaker || /^find/.test(methodName);

      if (!lodashFunc) {
        return;
      }
      lodash.prototype[methodName] = function() {
        var value = this.__wrapped__,
            args = isTaker ? [1] : arguments,
            isLazy = value instanceof LazyWrapper,
            iteratee = args[0],
            useLazy = isLazy || isArray(value);

        var interceptor = function(value) {
          var result = lodashFunc.apply(lodash, arrayPush([value], args));
          return (isTaker && chainAll) ? result[0] : result;
        };

        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {
          // Avoid lazy use if the iteratee has a "length" value other than `1`.
          isLazy = useLazy = false;
        }
        var chainAll = this.__chain__,
            isHybrid = !!this.__actions__.length,
            isUnwrapped = retUnwrapped && !chainAll,
            onlyLazy = isLazy && !isHybrid;

        if (!retUnwrapped && useLazy) {
          value = onlyLazy ? value : new LazyWrapper(this);
          var result = func.apply(value, args);
          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });
          return new LodashWrapper(result, chainAll);
        }
        if (isUnwrapped && onlyLazy) {
          return func.apply(this, args);
        }
        result = this.thru(interceptor);
        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;
      };
    });

    // Add `Array` methods to `lodash.prototype`.
    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {
      var func = arrayProto[methodName],
          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',
          retUnwrapped = /^(?:pop|shift)$/.test(methodName);

      lodash.prototype[methodName] = function() {
        var args = arguments;
        if (retUnwrapped && !this.__chain__) {
          var value = this.value();
          return func.apply(isArray(value) ? value : [], args);
        }
        return this[chainName](function(value) {
          return func.apply(isArray(value) ? value : [], args);
        });
      };
    });

    // Map minified method names to their real names.
    baseForOwn(LazyWrapper.prototype, function(func, methodName) {
      var lodashFunc = lodash[methodName];
      if (lodashFunc) {
        var key = lodashFunc.name + '';
        if (!hasOwnProperty.call(realNames, key)) {
          realNames[key] = [];
        }
        realNames[key].push({ 'name': methodName, 'func': lodashFunc });
      }
    });

    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{
      'name': 'wrapper',
      'func': undefined
    }];

    // Add methods to `LazyWrapper`.
    LazyWrapper.prototype.clone = lazyClone;
    LazyWrapper.prototype.reverse = lazyReverse;
    LazyWrapper.prototype.value = lazyValue;

    // Add chain sequence methods to the `lodash` wrapper.
    lodash.prototype.at = wrapperAt;
    lodash.prototype.chain = wrapperChain;
    lodash.prototype.commit = wrapperCommit;
    lodash.prototype.next = wrapperNext;
    lodash.prototype.plant = wrapperPlant;
    lodash.prototype.reverse = wrapperReverse;
    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;

    // Add lazy aliases.
    lodash.prototype.first = lodash.prototype.head;

    if (symIterator) {
      lodash.prototype[symIterator] = wrapperToIterator;
    }
    return lodash;
  });

  /*--------------------------------------------------------------------------*/

  // Export lodash.
  var _ = runInContext();

  // Some AMD build optimizers, like r.js, check for condition patterns like:
  if (true) {
    // Expose Lodash on the global object to prevent errors when Lodash is
    // loaded by a script tag in the presence of an AMD loader.
    // See http://requirejs.org/docs/errors.html#mismatch for more details.
    // Use `_.noConflict` to remove Lodash from the global object.
    root._ = _;

    // Define as an anonymous module so, through path mapping, it can be
    // referenced as the "underscore" module.
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
      return _;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
  // Check for `exports` after `define` in case a build optimizer adds it.
  else {}
}.call(this));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ 3), __webpack_require__(/*! ./../webpack/buildin/module.js */ 154)(module)))

/***/ }),

/***/ 154:
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ 16:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/setPrototypeOf.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _setPrototypeOf(o, p) {
  module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  return _setPrototypeOf(o, p);
}
module.exports = _setPrototypeOf, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 17:
/*!*************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _isNativeReflectConstruct() {
  try {
    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
  } catch (t) {}
  return (module.exports = _isNativeReflectConstruct = function _isNativeReflectConstruct() {
    return !!t;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports)();
}
module.exports = _isNativeReflectConstruct, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 18:
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/toConsumableArray.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithoutHoles = __webpack_require__(/*! ./arrayWithoutHoles.js */ 19);
var iterableToArray = __webpack_require__(/*! ./iterableToArray.js */ 20);
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 8);
var nonIterableSpread = __webpack_require__(/*! ./nonIterableSpread.js */ 21);
function _toConsumableArray(arr) {
  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();
}
module.exports = _toConsumableArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 19:
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ 9);
function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return arrayLikeToArray(arr);
}
module.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 2:
/*!************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(wx, global) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createApp = createApp;
exports.createComponent = createComponent;
exports.createPage = createPage;
exports.createPlugin = createPlugin;
exports.createSubpackageApp = createSubpackageApp;
exports.default = void 0;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 5));
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11));
var _construct2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/construct */ 15));
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 18));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var _uniI18n = __webpack_require__(/*! @dcloudio/uni-i18n */ 22);
var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 25));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var realAtob;
var b64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
var b64re = /^(?:[A-Za-z\d+/]{4})*?(?:[A-Za-z\d+/]{2}(?:==)?|[A-Za-z\d+/]{3}=?)?$/;
if (typeof atob !== 'function') {
  realAtob = function realAtob(str) {
    str = String(str).replace(/[\t\n\f\r ]+/g, '');
    if (!b64re.test(str)) {
      throw new Error("Failed to execute 'atob' on 'Window': The string to be decoded is not correctly encoded.");
    }

    // Adding the padding if missing, for semplicity
    str += '=='.slice(2 - (str.length & 3));
    var bitmap;
    var result = '';
    var r1;
    var r2;
    var i = 0;
    for (; i < str.length;) {
      bitmap = b64.indexOf(str.charAt(i++)) << 18 | b64.indexOf(str.charAt(i++)) << 12 | (r1 = b64.indexOf(str.charAt(i++))) << 6 | (r2 = b64.indexOf(str.charAt(i++)));
      result += r1 === 64 ? String.fromCharCode(bitmap >> 16 & 255) : r2 === 64 ? String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255) : String.fromCharCode(bitmap >> 16 & 255, bitmap >> 8 & 255, bitmap & 255);
    }
    return result;
  };
} else {
  // 注意atob只能在全局对象上调用，例如：`const Base64 = {atob};Base64.atob('xxxx')`是错误的用法
  realAtob = atob;
}
function b64DecodeUnicode(str) {
  return decodeURIComponent(realAtob(str).split('').map(function (c) {
    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
  }).join(''));
}
function getCurrentUserInfo() {
  var token = wx.getStorageSync('uni_id_token') || '';
  var tokenArr = token.split('.');
  if (!token || tokenArr.length !== 3) {
    return {
      uid: null,
      role: [],
      permission: [],
      tokenExpired: 0
    };
  }
  var userInfo;
  try {
    userInfo = JSON.parse(b64DecodeUnicode(tokenArr[1]));
  } catch (error) {
    throw new Error('获取当前用户信息出错，详细错误信息为：' + error.message);
  }
  userInfo.tokenExpired = userInfo.exp * 1000;
  delete userInfo.exp;
  delete userInfo.iat;
  return userInfo;
}
function uniIdMixin(Vue) {
  Vue.prototype.uniIDHasRole = function (roleId) {
    var _getCurrentUserInfo = getCurrentUserInfo(),
      role = _getCurrentUserInfo.role;
    return role.indexOf(roleId) > -1;
  };
  Vue.prototype.uniIDHasPermission = function (permissionId) {
    var _getCurrentUserInfo2 = getCurrentUserInfo(),
      permission = _getCurrentUserInfo2.permission;
    return this.uniIDHasRole('admin') || permission.indexOf(permissionId) > -1;
  };
  Vue.prototype.uniIDTokenValid = function () {
    var _getCurrentUserInfo3 = getCurrentUserInfo(),
      tokenExpired = _getCurrentUserInfo3.tokenExpired;
    return tokenExpired > Date.now();
  };
}
var _toString = Object.prototype.toString;
var hasOwnProperty = Object.prototype.hasOwnProperty;
function isFn(fn) {
  return typeof fn === 'function';
}
function isStr(str) {
  return typeof str === 'string';
}
function isObject(obj) {
  return obj !== null && (0, _typeof2.default)(obj) === 'object';
}
function isPlainObject(obj) {
  return _toString.call(obj) === '[object Object]';
}
function hasOwn(obj, key) {
  return hasOwnProperty.call(obj, key);
}
function noop() {}

/**
 * Create a cached version of a pure function.
 */
function cached(fn) {
  var cache = Object.create(null);
  return function cachedFn(str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str));
  };
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) {
    return c ? c.toUpperCase() : '';
  });
});
function sortObject(obj) {
  var sortObj = {};
  if (isPlainObject(obj)) {
    Object.keys(obj).sort().forEach(function (key) {
      sortObj[key] = obj[key];
    });
  }
  return !Object.keys(sortObj) ? obj : sortObj;
}
var HOOKS = ['invoke', 'success', 'fail', 'complete', 'returnValue'];
var globalInterceptors = {};
var scopedInterceptors = {};
function mergeHook(parentVal, childVal) {
  var res = childVal ? parentVal ? parentVal.concat(childVal) : Array.isArray(childVal) ? childVal : [childVal] : parentVal;
  return res ? dedupeHooks(res) : res;
}
function dedupeHooks(hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res;
}
function removeHook(hooks, hook) {
  var index = hooks.indexOf(hook);
  if (index !== -1) {
    hooks.splice(index, 1);
  }
}
function mergeInterceptorHook(interceptor, option) {
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      interceptor[hook] = mergeHook(interceptor[hook], option[hook]);
    }
  });
}
function removeInterceptorHook(interceptor, option) {
  if (!interceptor || !option) {
    return;
  }
  Object.keys(option).forEach(function (hook) {
    if (HOOKS.indexOf(hook) !== -1 && isFn(option[hook])) {
      removeHook(interceptor[hook], option[hook]);
    }
  });
}
function addInterceptor(method, option) {
  if (typeof method === 'string' && isPlainObject(option)) {
    mergeInterceptorHook(scopedInterceptors[method] || (scopedInterceptors[method] = {}), option);
  } else if (isPlainObject(method)) {
    mergeInterceptorHook(globalInterceptors, method);
  }
}
function removeInterceptor(method, option) {
  if (typeof method === 'string') {
    if (isPlainObject(option)) {
      removeInterceptorHook(scopedInterceptors[method], option);
    } else {
      delete scopedInterceptors[method];
    }
  } else if (isPlainObject(method)) {
    removeInterceptorHook(globalInterceptors, method);
  }
}
function wrapperHook(hook, params) {
  return function (data) {
    return hook(data, params) || data;
  };
}
function isPromise(obj) {
  return !!obj && ((0, _typeof2.default)(obj) === 'object' || typeof obj === 'function') && typeof obj.then === 'function';
}
function queue(hooks, data, params) {
  var promise = false;
  for (var i = 0; i < hooks.length; i++) {
    var hook = hooks[i];
    if (promise) {
      promise = Promise.resolve(wrapperHook(hook, params));
    } else {
      var res = hook(data, params);
      if (isPromise(res)) {
        promise = Promise.resolve(res);
      }
      if (res === false) {
        return {
          then: function then() {}
        };
      }
    }
  }
  return promise || {
    then: function then(callback) {
      return callback(data);
    }
  };
}
function wrapperOptions(interceptor) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  ['success', 'fail', 'complete'].forEach(function (name) {
    if (Array.isArray(interceptor[name])) {
      var oldCallback = options[name];
      options[name] = function callbackInterceptor(res) {
        queue(interceptor[name], res, options).then(function (res) {
          /* eslint-disable no-mixed-operators */
          return isFn(oldCallback) && oldCallback(res) || res;
        });
      };
    }
  });
  return options;
}
function wrapperReturnValue(method, returnValue) {
  var returnValueHooks = [];
  if (Array.isArray(globalInterceptors.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, (0, _toConsumableArray2.default)(globalInterceptors.returnValue));
  }
  var interceptor = scopedInterceptors[method];
  if (interceptor && Array.isArray(interceptor.returnValue)) {
    returnValueHooks.push.apply(returnValueHooks, (0, _toConsumableArray2.default)(interceptor.returnValue));
  }
  returnValueHooks.forEach(function (hook) {
    returnValue = hook(returnValue) || returnValue;
  });
  return returnValue;
}
function getApiInterceptorHooks(method) {
  var interceptor = Object.create(null);
  Object.keys(globalInterceptors).forEach(function (hook) {
    if (hook !== 'returnValue') {
      interceptor[hook] = globalInterceptors[hook].slice();
    }
  });
  var scopedInterceptor = scopedInterceptors[method];
  if (scopedInterceptor) {
    Object.keys(scopedInterceptor).forEach(function (hook) {
      if (hook !== 'returnValue') {
        interceptor[hook] = (interceptor[hook] || []).concat(scopedInterceptor[hook]);
      }
    });
  }
  return interceptor;
}
function invokeApi(method, api, options) {
  for (var _len = arguments.length, params = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {
    params[_key - 3] = arguments[_key];
  }
  var interceptor = getApiInterceptorHooks(method);
  if (interceptor && Object.keys(interceptor).length) {
    if (Array.isArray(interceptor.invoke)) {
      var res = queue(interceptor.invoke, options);
      return res.then(function (options) {
        // 重新访问 getApiInterceptorHooks, 允许 invoke 中再次调用 addInterceptor,removeInterceptor
        return api.apply(void 0, [wrapperOptions(getApiInterceptorHooks(method), options)].concat(params));
      });
    } else {
      return api.apply(void 0, [wrapperOptions(interceptor, options)].concat(params));
    }
  }
  return api.apply(void 0, [options].concat(params));
}
var promiseInterceptor = {
  returnValue: function returnValue(res) {
    if (!isPromise(res)) {
      return res;
    }
    return new Promise(function (resolve, reject) {
      res.then(function (res) {
        if (!res) {
          resolve(res);
          return;
        }
        if (res[0]) {
          reject(res[0]);
        } else {
          resolve(res[1]);
        }
      });
    });
  }
};
var SYNC_API_RE = /^\$|__f__|Window$|WindowStyle$|sendHostEvent|sendNativeEvent|restoreGlobal|requireGlobal|getCurrentSubNVue|getMenuButtonBoundingClientRect|^report|interceptors|Interceptor$|getSubNVueById|requireNativePlugin|rpx2px|upx2px|hideKeyboard|canIUse|^create|Sync$|Manager$|base64ToArrayBuffer|arrayBufferToBase64|getLocale|setLocale|invokePushCallback|getWindowInfo|getDeviceInfo|getAppBaseInfo|getSystemSetting|getAppAuthorizeSetting|initUTS|requireUTS|registerUTS/;
var CONTEXT_API_RE = /^create|Manager$/;

// Context例外情况
var CONTEXT_API_RE_EXC = ['createBLEConnection'];

// 同步例外情况
var ASYNC_API = ['createBLEConnection', 'createPushMessage'];
var CALLBACK_API_RE = /^on|^off/;
function isContextApi(name) {
  return CONTEXT_API_RE.test(name) && CONTEXT_API_RE_EXC.indexOf(name) === -1;
}
function isSyncApi(name) {
  return SYNC_API_RE.test(name) && ASYNC_API.indexOf(name) === -1;
}
function isCallbackApi(name) {
  return CALLBACK_API_RE.test(name) && name !== 'onPush';
}
function handlePromise(promise) {
  return promise.then(function (data) {
    return [null, data];
  }).catch(function (err) {
    return [err];
  });
}
function shouldPromise(name) {
  if (isContextApi(name) || isSyncApi(name) || isCallbackApi(name)) {
    return false;
  }
  return true;
}

/* eslint-disable no-extend-native */
if (!Promise.prototype.finally) {
  Promise.prototype.finally = function (callback) {
    var promise = this.constructor;
    return this.then(function (value) {
      return promise.resolve(callback()).then(function () {
        return value;
      });
    }, function (reason) {
      return promise.resolve(callback()).then(function () {
        throw reason;
      });
    });
  };
}
function promisify(name, api) {
  if (!shouldPromise(name) || !isFn(api)) {
    return api;
  }
  return function promiseApi() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    for (var _len2 = arguments.length, params = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      params[_key2 - 1] = arguments[_key2];
    }
    if (isFn(options.success) || isFn(options.fail) || isFn(options.complete)) {
      return wrapperReturnValue(name, invokeApi.apply(void 0, [name, api, options].concat(params)));
    }
    return wrapperReturnValue(name, handlePromise(new Promise(function (resolve, reject) {
      invokeApi.apply(void 0, [name, api, Object.assign({}, options, {
        success: resolve,
        fail: reject
      })].concat(params));
    })));
  };
}
var EPS = 1e-4;
var BASE_DEVICE_WIDTH = 750;
var isIOS = false;
var deviceWidth = 0;
var deviceDPR = 0;
function checkDeviceWidth() {
  var _Object$assign = Object.assign({}, wx.getWindowInfo(), {
      platform: wx.getDeviceInfo().platform
    }),
    windowWidth = _Object$assign.windowWidth,
    pixelRatio = _Object$assign.pixelRatio,
    platform = _Object$assign.platform; // uni=>wx runtime 编译目标是 uni 对象，内部不允许直接使用 uni

  deviceWidth = windowWidth;
  deviceDPR = pixelRatio;
  isIOS = platform === 'ios';
}
function upx2px(number, newDeviceWidth) {
  if (deviceWidth === 0) {
    checkDeviceWidth();
  }
  number = Number(number);
  if (number === 0) {
    return 0;
  }
  var result = number / BASE_DEVICE_WIDTH * (newDeviceWidth || deviceWidth);
  if (result < 0) {
    result = -result;
  }
  result = Math.floor(result + EPS);
  if (result === 0) {
    if (deviceDPR === 1 || !isIOS) {
      result = 1;
    } else {
      result = 0.5;
    }
  }
  return number < 0 ? -result : result;
}
var LOCALE_ZH_HANS = 'zh-Hans';
var LOCALE_ZH_HANT = 'zh-Hant';
var LOCALE_EN = 'en';
var LOCALE_FR = 'fr';
var LOCALE_ES = 'es';
var messages = {};
function getLocaleLanguage() {
  var localeLanguage = '';
  {
    var appBaseInfo = wx.getAppBaseInfo();
    var language = appBaseInfo && appBaseInfo.language ? appBaseInfo.language : LOCALE_EN;
    localeLanguage = normalizeLocale(language) || LOCALE_EN;
  }
  return localeLanguage;
}
var locale;
{
  locale = getLocaleLanguage();
}
function initI18nMessages() {
  if (!isEnableLocale()) {
    return;
  }
  var localeKeys = Object.keys(__uniConfig.locales);
  if (localeKeys.length) {
    localeKeys.forEach(function (locale) {
      var curMessages = messages[locale];
      var userMessages = __uniConfig.locales[locale];
      if (curMessages) {
        Object.assign(curMessages, userMessages);
      } else {
        messages[locale] = userMessages;
      }
    });
  }
}
initI18nMessages();
var i18n = (0, _uniI18n.initVueI18n)(locale, {});
var t = i18n.t;
var i18nMixin = i18n.mixin = {
  beforeCreate: function beforeCreate() {
    var _this = this;
    var unwatch = i18n.i18n.watchLocale(function () {
      _this.$forceUpdate();
    });
    this.$once('hook:beforeDestroy', function () {
      unwatch();
    });
  },
  methods: {
    $$t: function $$t(key, values) {
      return t(key, values);
    }
  }
};
var setLocale = i18n.setLocale;
var getLocale = i18n.getLocale;
function initAppLocale(Vue, appVm, locale) {
  var state = Vue.observable({
    locale: locale || i18n.getLocale()
  });
  var localeWatchers = [];
  appVm.$watchLocale = function (fn) {
    localeWatchers.push(fn);
  };
  Object.defineProperty(appVm, '$locale', {
    get: function get() {
      return state.locale;
    },
    set: function set(v) {
      state.locale = v;
      localeWatchers.forEach(function (watch) {
        return watch(v);
      });
    }
  });
}
function isEnableLocale() {
  return typeof __uniConfig !== 'undefined' && __uniConfig.locales && !!Object.keys(__uniConfig.locales).length;
}
function include(str, parts) {
  return !!parts.find(function (part) {
    return str.indexOf(part) !== -1;
  });
}
function startsWith(str, parts) {
  return parts.find(function (part) {
    return str.indexOf(part) === 0;
  });
}
function normalizeLocale(locale, messages) {
  if (!locale) {
    return;
  }
  locale = locale.trim().replace(/_/g, '-');
  if (messages && messages[locale]) {
    return locale;
  }
  locale = locale.toLowerCase();
  if (locale === 'chinese') {
    // 支付宝
    return LOCALE_ZH_HANS;
  }
  if (locale.indexOf('zh') === 0) {
    if (locale.indexOf('-hans') > -1) {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf('-hant') > -1) {
      return LOCALE_ZH_HANT;
    }
    if (include(locale, ['-tw', '-hk', '-mo', '-cht'])) {
      return LOCALE_ZH_HANT;
    }
    return LOCALE_ZH_HANS;
  }
  var lang = startsWith(locale, [LOCALE_EN, LOCALE_FR, LOCALE_ES]);
  if (lang) {
    return lang;
  }
}
// export function initI18n() {
//   const localeKeys = Object.keys(__uniConfig.locales || {})
//   if (localeKeys.length) {
//     localeKeys.forEach((locale) =>
//       i18n.add(locale, __uniConfig.locales[locale])
//     )
//   }
// }

function getLocale$1() {
  // 优先使用 $locale
  if (isFn(getApp)) {
    var app = getApp({
      allowDefault: true
    });
    if (app && app.$vm) {
      return app.$vm.$locale;
    }
  }
  return getLocaleLanguage();
}
function setLocale$1(locale) {
  var app = isFn(getApp) ? getApp() : false;
  if (!app) {
    return false;
  }
  var oldLocale = app.$vm.$locale;
  if (oldLocale !== locale) {
    app.$vm.$locale = locale;
    onLocaleChangeCallbacks.forEach(function (fn) {
      return fn({
        locale: locale
      });
    });
    return true;
  }
  return false;
}
var onLocaleChangeCallbacks = [];
function onLocaleChange(fn) {
  if (onLocaleChangeCallbacks.indexOf(fn) === -1) {
    onLocaleChangeCallbacks.push(fn);
  }
}
if (typeof global !== 'undefined') {
  global.getLocale = getLocale$1;
}
var interceptors = {
  promiseInterceptor: promiseInterceptor
};
var baseApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  upx2px: upx2px,
  rpx2px: upx2px,
  getLocale: getLocale$1,
  setLocale: setLocale$1,
  onLocaleChange: onLocaleChange,
  addInterceptor: addInterceptor,
  removeInterceptor: removeInterceptor,
  interceptors: interceptors
});
function findExistsPageIndex(url) {
  var pages = getCurrentPages();
  var len = pages.length;
  while (len--) {
    var page = pages[len];
    if (page.$page && page.$page.fullPath === url) {
      return len;
    }
  }
  return -1;
}
var redirectTo = {
  name: function name(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.delta) {
      return 'navigateBack';
    }
    return 'redirectTo';
  },
  args: function args(fromArgs) {
    if (fromArgs.exists === 'back' && fromArgs.url) {
      var existsPageIndex = findExistsPageIndex(fromArgs.url);
      if (existsPageIndex !== -1) {
        var delta = getCurrentPages().length - 1 - existsPageIndex;
        if (delta > 0) {
          fromArgs.delta = delta;
        }
      }
    }
  }
};
var previewImage = {
  args: function args(fromArgs) {
    var currentIndex = parseInt(fromArgs.current);
    if (isNaN(currentIndex)) {
      return;
    }
    var urls = fromArgs.urls;
    if (!Array.isArray(urls)) {
      return;
    }
    var len = urls.length;
    if (!len) {
      return;
    }
    if (currentIndex < 0) {
      currentIndex = 0;
    } else if (currentIndex >= len) {
      currentIndex = len - 1;
    }
    if (currentIndex > 0) {
      fromArgs.current = urls[currentIndex];
      fromArgs.urls = urls.filter(function (item, index) {
        return index < currentIndex ? item !== urls[currentIndex] : true;
      });
    } else {
      fromArgs.current = urls[0];
    }
    return {
      indicator: false,
      loop: false
    };
  }
};
var UUID_KEY = '__DC_STAT_UUID';
var deviceId;
function useDeviceId(result) {
  deviceId = deviceId || wx.getStorageSync(UUID_KEY);
  if (!deviceId) {
    deviceId = Date.now() + '' + Math.floor(Math.random() * 1e7);
    wx.setStorage({
      key: UUID_KEY,
      data: deviceId
    });
  }
  result.deviceId = deviceId;
}
function addSafeAreaInsets(result) {
  if (result.safeArea) {
    var safeArea = result.safeArea;
    result.safeAreaInsets = {
      top: safeArea.top,
      left: safeArea.left,
      right: result.windowWidth - safeArea.right,
      bottom: result.screenHeight - safeArea.bottom
    };
  }
}
function populateParameters(result) {
  var _result$brand = result.brand,
    brand = _result$brand === void 0 ? '' : _result$brand,
    _result$model = result.model,
    model = _result$model === void 0 ? '' : _result$model,
    _result$system = result.system,
    system = _result$system === void 0 ? '' : _result$system,
    _result$language = result.language,
    language = _result$language === void 0 ? '' : _result$language,
    theme = result.theme,
    version = result.version,
    platform = result.platform,
    fontSizeSetting = result.fontSizeSetting,
    SDKVersion = result.SDKVersion,
    pixelRatio = result.pixelRatio,
    deviceOrientation = result.deviceOrientation;
  // const isQuickApp = "mp-weixin".indexOf('quickapp-webview') !== -1

  var extraParam = {};

  // osName osVersion
  var osName = '';
  var osVersion = '';
  {
    osName = system.split(' ')[0] || '';
    osVersion = system.split(' ')[1] || '';
  }
  var hostVersion = version;

  // deviceType
  var deviceType = getGetDeviceType(result, model);

  // deviceModel
  var deviceBrand = getDeviceBrand(brand);

  // hostName
  var _hostName = getHostName(result);

  // deviceOrientation
  var _deviceOrientation = deviceOrientation; // 仅 微信 百度 支持

  // devicePixelRatio
  var _devicePixelRatio = pixelRatio;

  // SDKVersion
  var _SDKVersion = SDKVersion;

  // hostLanguage
  var hostLanguage = (language || '').replace(/_/g, '-');

  // wx.getAccountInfoSync

  var parameters = {
    appId: "__UNI__8252119",
    appName: "AI",
    appVersion: "1.0.0",
    appVersionCode: "100",
    appLanguage: getAppLanguage(hostLanguage),
    uniCompileVersion: "4.57",
    uniCompilerVersion: "4.57",
    uniRuntimeVersion: "4.57",
    uniPlatform: undefined || "mp-weixin",
    deviceBrand: deviceBrand,
    deviceModel: model,
    deviceType: deviceType,
    devicePixelRatio: _devicePixelRatio,
    deviceOrientation: _deviceOrientation,
    osName: osName.toLocaleLowerCase(),
    osVersion: osVersion,
    hostTheme: theme,
    hostVersion: hostVersion,
    hostLanguage: hostLanguage,
    hostName: _hostName,
    hostSDKVersion: _SDKVersion,
    hostFontSizeSetting: fontSizeSetting,
    windowTop: 0,
    windowBottom: 0,
    // TODO
    osLanguage: undefined,
    osTheme: undefined,
    ua: undefined,
    hostPackageName: undefined,
    browserName: undefined,
    browserVersion: undefined,
    isUniAppX: false
  };
  Object.assign(result, parameters, extraParam);
}
function getGetDeviceType(result, model) {
  var deviceType = result.deviceType || 'phone';
  {
    var deviceTypeMaps = {
      ipad: 'pad',
      windows: 'pc',
      mac: 'pc'
    };
    var deviceTypeMapsKeys = Object.keys(deviceTypeMaps);
    var _model = model.toLocaleLowerCase();
    for (var index = 0; index < deviceTypeMapsKeys.length; index++) {
      var _m = deviceTypeMapsKeys[index];
      if (_model.indexOf(_m) !== -1) {
        deviceType = deviceTypeMaps[_m];
        break;
      }
    }
  }
  return deviceType;
}
function getDeviceBrand(brand) {
  var deviceBrand = brand;
  if (deviceBrand) {
    deviceBrand = brand.toLocaleLowerCase();
  }
  return deviceBrand;
}
function getAppLanguage(defaultLanguage) {
  return getLocale$1 ? getLocale$1() : defaultLanguage;
}
function getHostName(result) {
  var _platform = 'WeChat';
  var _hostName = result.hostName || _platform; // mp-jd
  {
    if (result.environment) {
      _hostName = result.environment;
    } else if (result.host && result.host.env) {
      _hostName = result.host.env;
    }
  }
  return _hostName;
}
var getSystemInfo = {
  returnValue: function returnValue(result) {
    useDeviceId(result);
    addSafeAreaInsets(result);
    populateParameters(result);
  }
};
var showActionSheet = {
  args: function args(fromArgs) {
    if ((0, _typeof2.default)(fromArgs) === 'object') {
      fromArgs.alertText = fromArgs.title;
    }
  }
};
var getAppBaseInfo = {
  returnValue: function returnValue(result) {
    var _result = result,
      version = _result.version,
      language = _result.language,
      SDKVersion = _result.SDKVersion,
      theme = _result.theme;
    var _hostName = getHostName(result);
    var hostLanguage = (language || '').replace('_', '-');
    result = sortObject(Object.assign(result, {
      appId: "__UNI__8252119",
      appName: "AI",
      appVersion: "1.0.0",
      appVersionCode: "100",
      appLanguage: getAppLanguage(hostLanguage),
      hostVersion: version,
      hostLanguage: hostLanguage,
      hostName: _hostName,
      hostSDKVersion: SDKVersion,
      hostTheme: theme,
      isUniAppX: false,
      uniPlatform: undefined || "mp-weixin",
      uniCompileVersion: "4.57",
      uniCompilerVersion: "4.57",
      uniRuntimeVersion: "4.57"
    }));
  }
};
var getDeviceInfo = {
  returnValue: function returnValue(result) {
    var _result2 = result,
      brand = _result2.brand,
      model = _result2.model;
    var deviceType = getGetDeviceType(result, model);
    var deviceBrand = getDeviceBrand(brand);
    useDeviceId(result);
    result = sortObject(Object.assign(result, {
      deviceType: deviceType,
      deviceBrand: deviceBrand,
      deviceModel: model
    }));
  }
};
var getWindowInfo = {
  returnValue: function returnValue(result) {
    addSafeAreaInsets(result);
    result = sortObject(Object.assign(result, {
      windowTop: 0,
      windowBottom: 0
    }));
  }
};
var getAppAuthorizeSetting = {
  returnValue: function returnValue(result) {
    var locationReducedAccuracy = result.locationReducedAccuracy;
    result.locationAccuracy = 'unsupported';
    if (locationReducedAccuracy === true) {
      result.locationAccuracy = 'reduced';
    } else if (locationReducedAccuracy === false) {
      result.locationAccuracy = 'full';
    }
  }
};

// import navigateTo from 'uni-helpers/navigate-to'

var compressImage = {
  args: function args(fromArgs) {
    // https://developers.weixin.qq.com/community/develop/doc/000c08940c865011298e0a43256800?highLine=compressHeight
    if (fromArgs.compressedHeight && !fromArgs.compressHeight) {
      fromArgs.compressHeight = fromArgs.compressedHeight;
    }
    if (fromArgs.compressedWidth && !fromArgs.compressWidth) {
      fromArgs.compressWidth = fromArgs.compressedWidth;
    }
  }
};
var protocols = {
  redirectTo: redirectTo,
  // navigateTo,  // 由于在微信开发者工具的页面参数，会显示__id__参数，因此暂时关闭mp-weixin对于navigateTo的AOP
  previewImage: previewImage,
  getSystemInfo: getSystemInfo,
  getSystemInfoSync: getSystemInfo,
  showActionSheet: showActionSheet,
  getAppBaseInfo: getAppBaseInfo,
  getDeviceInfo: getDeviceInfo,
  getWindowInfo: getWindowInfo,
  getAppAuthorizeSetting: getAppAuthorizeSetting,
  compressImage: compressImage
};
var todos = ['vibrate', 'preloadPage', 'unPreloadPage', 'loadSubPackage'];
var canIUses = [];
var CALLBACKS = ['success', 'fail', 'cancel', 'complete'];
function processCallback(methodName, method, returnValue) {
  return function (res) {
    return method(processReturnValue(methodName, res, returnValue));
  };
}
function processArgs(methodName, fromArgs) {
  var argsOption = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
  var returnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
  var keepFromArgs = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
  if (isPlainObject(fromArgs)) {
    // 一般 api 的参数解析
    var toArgs = keepFromArgs === true ? fromArgs : {}; // returnValue 为 false 时，说明是格式化返回值，直接在返回值对象上修改赋值
    if (isFn(argsOption)) {
      argsOption = argsOption(fromArgs, toArgs) || {};
    }
    for (var key in fromArgs) {
      if (hasOwn(argsOption, key)) {
        var keyOption = argsOption[key];
        if (isFn(keyOption)) {
          keyOption = keyOption(fromArgs[key], fromArgs, toArgs);
        }
        if (!keyOption) {
          // 不支持的参数
          console.warn("The '".concat(methodName, "' method of platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support option '").concat(key, "'"));
        } else if (isStr(keyOption)) {
          // 重写参数 key
          toArgs[keyOption] = fromArgs[key];
        } else if (isPlainObject(keyOption)) {
          // {name:newName,value:value}可重新指定参数 key:value
          toArgs[keyOption.name ? keyOption.name : key] = keyOption.value;
        }
      } else if (CALLBACKS.indexOf(key) !== -1) {
        if (isFn(fromArgs[key])) {
          toArgs[key] = processCallback(methodName, fromArgs[key], returnValue);
        }
      } else {
        if (!keepFromArgs) {
          toArgs[key] = fromArgs[key];
        }
      }
    }
    return toArgs;
  } else if (isFn(fromArgs)) {
    fromArgs = processCallback(methodName, fromArgs, returnValue);
  }
  return fromArgs;
}
function processReturnValue(methodName, res, returnValue) {
  var keepReturnValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  if (isFn(protocols.returnValue)) {
    // 处理通用 returnValue
    res = protocols.returnValue(methodName, res);
  }
  return processArgs(methodName, res, returnValue, {}, keepReturnValue);
}
function wrapper(methodName, method) {
  if (hasOwn(protocols, methodName)) {
    var protocol = protocols[methodName];
    if (!protocol) {
      // 暂不支持的 api
      return function () {
        console.error("Platform '\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F' does not support '".concat(methodName, "'."));
      };
    }
    return function (arg1, arg2) {
      // 目前 api 最多两个参数
      var options = protocol;
      if (isFn(protocol)) {
        options = protocol(arg1);
      }
      arg1 = processArgs(methodName, arg1, options.args, options.returnValue);
      var args = [arg1];
      if (typeof arg2 !== 'undefined') {
        args.push(arg2);
      }
      if (isFn(options.name)) {
        methodName = options.name(arg1);
      } else if (isStr(options.name)) {
        methodName = options.name;
      }
      var returnValue = wx[methodName].apply(wx, args);
      if (isSyncApi(methodName)) {
        // 同步 api
        return processReturnValue(methodName, returnValue, options.returnValue, isContextApi(methodName));
      }
      return returnValue;
    };
  }
  return method;
}
var todoApis = Object.create(null);
var TODOS = ['onTabBarMidButtonTap', 'subscribePush', 'unsubscribePush', 'onPush', 'offPush', 'share'];
function createTodoApi(name) {
  return function todoApi(_ref) {
    var fail = _ref.fail,
      complete = _ref.complete;
    var res = {
      errMsg: "".concat(name, ":fail method '").concat(name, "' not supported")
    };
    isFn(fail) && fail(res);
    isFn(complete) && complete(res);
  };
}
TODOS.forEach(function (name) {
  todoApis[name] = createTodoApi(name);
});
var providers = {
  oauth: ['weixin'],
  share: ['weixin'],
  payment: ['wxpay'],
  push: ['weixin']
};
function getProvider(_ref2) {
  var service = _ref2.service,
    success = _ref2.success,
    fail = _ref2.fail,
    complete = _ref2.complete;
  var res = false;
  if (providers[service]) {
    res = {
      errMsg: 'getProvider:ok',
      service: service,
      provider: providers[service]
    };
    isFn(success) && success(res);
  } else {
    res = {
      errMsg: 'getProvider:fail service not found'
    };
    isFn(fail) && fail(res);
  }
  isFn(complete) && complete(res);
}
var extraApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  getProvider: getProvider
});
var getEmitter = function () {
  var Emitter;
  return function getUniEmitter() {
    if (!Emitter) {
      Emitter = new _vue.default();
    }
    return Emitter;
  };
}();
function apply(ctx, method, args) {
  return ctx[method].apply(ctx, args);
}
function $on() {
  return apply(getEmitter(), '$on', Array.prototype.slice.call(arguments));
}
function $off() {
  return apply(getEmitter(), '$off', Array.prototype.slice.call(arguments));
}
function $once() {
  return apply(getEmitter(), '$once', Array.prototype.slice.call(arguments));
}
function $emit() {
  return apply(getEmitter(), '$emit', Array.prototype.slice.call(arguments));
}
var eventApi = /*#__PURE__*/Object.freeze({
  __proto__: null,
  $on: $on,
  $off: $off,
  $once: $once,
  $emit: $emit
});

/**
 * 框架内 try-catch
 */
/**
 * 开发者 try-catch
 */
function tryCatch(fn) {
  return function () {
    try {
      return fn.apply(fn, arguments);
    } catch (e) {
      // TODO
      console.error(e);
    }
  };
}
function getApiCallbacks(params) {
  var apiCallbacks = {};
  for (var name in params) {
    var param = params[name];
    if (isFn(param)) {
      apiCallbacks[name] = tryCatch(param);
      delete params[name];
    }
  }
  return apiCallbacks;
}
var cid;
var cidErrMsg;
var enabled;
function normalizePushMessage(message) {
  try {
    return JSON.parse(message);
  } catch (e) {}
  return message;
}
function invokePushCallback(args) {
  if (args.type === 'enabled') {
    enabled = true;
  } else if (args.type === 'clientId') {
    cid = args.cid;
    cidErrMsg = args.errMsg;
    invokeGetPushCidCallbacks(cid, args.errMsg);
  } else if (args.type === 'pushMsg') {
    var message = {
      type: 'receive',
      data: normalizePushMessage(args.message)
    };
    for (var i = 0; i < onPushMessageCallbacks.length; i++) {
      var callback = onPushMessageCallbacks[i];
      callback(message);
      // 该消息已被阻止
      if (message.stopped) {
        break;
      }
    }
  } else if (args.type === 'click') {
    onPushMessageCallbacks.forEach(function (callback) {
      callback({
        type: 'click',
        data: normalizePushMessage(args.message)
      });
    });
  }
}
var getPushCidCallbacks = [];
function invokeGetPushCidCallbacks(cid, errMsg) {
  getPushCidCallbacks.forEach(function (callback) {
    callback(cid, errMsg);
  });
  getPushCidCallbacks.length = 0;
}
function getPushClientId(args) {
  if (!isPlainObject(args)) {
    args = {};
  }
  var _getApiCallbacks = getApiCallbacks(args),
    success = _getApiCallbacks.success,
    fail = _getApiCallbacks.fail,
    complete = _getApiCallbacks.complete;
  var hasSuccess = isFn(success);
  var hasFail = isFn(fail);
  var hasComplete = isFn(complete);
  Promise.resolve().then(function () {
    if (typeof enabled === 'undefined') {
      enabled = false;
      cid = '';
      cidErrMsg = 'uniPush is not enabled';
    }
    getPushCidCallbacks.push(function (cid, errMsg) {
      var res;
      if (cid) {
        res = {
          errMsg: 'getPushClientId:ok',
          cid: cid
        };
        hasSuccess && success(res);
      } else {
        res = {
          errMsg: 'getPushClientId:fail' + (errMsg ? ' ' + errMsg : '')
        };
        hasFail && fail(res);
      }
      hasComplete && complete(res);
    });
    if (typeof cid !== 'undefined') {
      invokeGetPushCidCallbacks(cid, cidErrMsg);
    }
  });
}
var onPushMessageCallbacks = [];
// 不使用 defineOnApi 实现，是因为 defineOnApi 依赖 UniServiceJSBridge ，该对象目前在小程序上未提供，故简单实现
var onPushMessage = function onPushMessage(fn) {
  if (onPushMessageCallbacks.indexOf(fn) === -1) {
    onPushMessageCallbacks.push(fn);
  }
};
var offPushMessage = function offPushMessage(fn) {
  if (!fn) {
    onPushMessageCallbacks.length = 0;
  } else {
    var index = onPushMessageCallbacks.indexOf(fn);
    if (index > -1) {
      onPushMessageCallbacks.splice(index, 1);
    }
  }
};
function __f__(type) {
  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
    args[_key3 - 1] = arguments[_key3];
  }
  console[type].apply(console, args);
}
var baseInfo = wx.getAppBaseInfo && wx.getAppBaseInfo();
if (!baseInfo) {
  baseInfo = wx.getSystemInfoSync();
}
var host = baseInfo ? baseInfo.host : null;
var shareVideoMessage = host && host.env === 'SAAASDK' ? wx.miniapp.shareVideoMessage : wx.shareVideoMessage;
var api = /*#__PURE__*/Object.freeze({
  __proto__: null,
  shareVideoMessage: shareVideoMessage,
  getPushClientId: getPushClientId,
  onPushMessage: onPushMessage,
  offPushMessage: offPushMessage,
  invokePushCallback: invokePushCallback,
  __f__: __f__
});
var mocks = ['__route__', '__wxExparserNodeId__', '__wxWebviewId__'];
function findVmByVueId(vm, vuePid) {
  var $children = vm.$children;
  // 优先查找直属(反向查找:https://github.com/dcloudio/uni-app/issues/1200)
  for (var i = $children.length - 1; i >= 0; i--) {
    var childVm = $children[i];
    if (childVm.$scope._$vueId === vuePid) {
      return childVm;
    }
  }
  // 反向递归查找
  var parentVm;
  for (var _i = $children.length - 1; _i >= 0; _i--) {
    parentVm = findVmByVueId($children[_i], vuePid);
    if (parentVm) {
      return parentVm;
    }
  }
}
function initBehavior(options) {
  return Behavior(options);
}
function isPage() {
  return !!this.route;
}
function initRelation(detail) {
  this.triggerEvent('__l', detail);
}
function selectAllComponents(mpInstance, selector, $refs) {
  var components = mpInstance.selectAllComponents(selector) || [];
  components.forEach(function (component) {
    var ref = component.dataset.ref;
    $refs[ref] = component.$vm || toSkip(component);
    {
      if (component.dataset.vueGeneric === 'scoped') {
        component.selectAllComponents('.scoped-ref').forEach(function (scopedComponent) {
          selectAllComponents(scopedComponent, selector, $refs);
        });
      }
    }
  });
}
function syncRefs(refs, newRefs) {
  var oldKeys = (0, _construct2.default)(Set, (0, _toConsumableArray2.default)(Object.keys(refs)));
  var newKeys = Object.keys(newRefs);
  newKeys.forEach(function (key) {
    var oldValue = refs[key];
    var newValue = newRefs[key];
    if (Array.isArray(oldValue) && Array.isArray(newValue) && oldValue.length === newValue.length && newValue.every(function (value) {
      return oldValue.includes(value);
    })) {
      return;
    }
    refs[key] = newValue;
    oldKeys.delete(key);
  });
  oldKeys.forEach(function (key) {
    delete refs[key];
  });
  return refs;
}
function initRefs(vm) {
  var mpInstance = vm.$scope;
  var refs = {};
  Object.defineProperty(vm, '$refs', {
    get: function get() {
      var $refs = {};
      selectAllComponents(mpInstance, '.vue-ref', $refs);
      // TODO 暂不考虑 for 中的 scoped
      var forComponents = mpInstance.selectAllComponents('.vue-ref-in-for') || [];
      forComponents.forEach(function (component) {
        var ref = component.dataset.ref;
        if (!$refs[ref]) {
          $refs[ref] = [];
        }
        $refs[ref].push(component.$vm || toSkip(component));
      });
      return syncRefs(refs, $refs);
    }
  });
}
function handleLink(event) {
  var _ref3 = event.detail || event.value,
    vuePid = _ref3.vuePid,
    vueOptions = _ref3.vueOptions; // detail 是微信,value 是百度(dipatch)

  var parentVm;
  if (vuePid) {
    parentVm = findVmByVueId(this.$vm, vuePid);
  }
  if (!parentVm) {
    parentVm = this.$vm;
  }
  vueOptions.parent = parentVm;
}
function markMPComponent(component) {
  // 在 Vue 中标记为小程序组件
  var IS_MP = '__v_isMPComponent';
  Object.defineProperty(component, IS_MP, {
    configurable: true,
    enumerable: false,
    value: true
  });
  return component;
}
function toSkip(obj) {
  var OB = '__ob__';
  var SKIP = '__v_skip';
  if (isObject(obj) && Object.isExtensible(obj)) {
    // 避免被 @vue/composition-api 观测
    Object.defineProperty(obj, OB, {
      configurable: true,
      enumerable: false,
      value: (0, _defineProperty2.default)({}, SKIP, true)
    });
  }
  return obj;
}
var WORKLET_RE = /_(.*)_worklet_factory_/;
function initWorkletMethods(mpMethods, vueMethods) {
  if (vueMethods) {
    Object.keys(vueMethods).forEach(function (name) {
      var matches = name.match(WORKLET_RE);
      if (matches) {
        var workletName = matches[1];
        mpMethods[name] = vueMethods[name];
        mpMethods[workletName] = vueMethods[workletName];
      }
    });
  }
}
var MPPage = Page;
var MPComponent = Component;
var customizeRE = /:/g;
var customize = cached(function (str) {
  return camelize(str.replace(customizeRE, '-'));
});
function initTriggerEvent(mpInstance) {
  var oldTriggerEvent = mpInstance.triggerEvent;
  var newTriggerEvent = function newTriggerEvent(event) {
    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {
      args[_key4 - 1] = arguments[_key4];
    }
    // 事件名统一转驼峰格式，仅处理：当前组件为 vue 组件、当前组件为 vue 组件子组件
    if (this.$vm || this.dataset && this.dataset.comType) {
      event = customize(event);
    } else {
      // 针对微信/QQ小程序单独补充驼峰格式事件，以兼容历史项目
      var newEvent = customize(event);
      if (newEvent !== event) {
        oldTriggerEvent.apply(this, [newEvent].concat(args));
      }
    }
    return oldTriggerEvent.apply(this, [event].concat(args));
  };
  try {
    // 京东小程序 triggerEvent 为只读
    mpInstance.triggerEvent = newTriggerEvent;
  } catch (error) {
    mpInstance._triggerEvent = newTriggerEvent;
  }
}
function initHook(name, options, isComponent) {
  var oldHook = options[name];
  options[name] = function () {
    markMPComponent(this);
    initTriggerEvent(this);
    if (oldHook) {
      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {
        args[_key5] = arguments[_key5];
      }
      return oldHook.apply(this, args);
    }
  };
}
if (!MPPage.__$wrappered) {
  MPPage.__$wrappered = true;
  Page = function Page() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('onLoad', options);
    return MPPage(options);
  };
  Page.after = MPPage.after;
  Component = function Component() {
    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    initHook('created', options);
    return MPComponent(options);
  };
}
var PAGE_EVENT_HOOKS = ['onPullDownRefresh', 'onReachBottom', 'onAddToFavorites', 'onShareTimeline', 'onShareAppMessage', 'onPageScroll', 'onResize', 'onTabItemTap'];
function initMocks(vm, mocks) {
  var mpInstance = vm.$mp[vm.mpType];
  mocks.forEach(function (mock) {
    if (hasOwn(mpInstance, mock)) {
      vm[mock] = mpInstance[mock];
    }
  });
}
function hasHook(hook, vueOptions) {
  if (!vueOptions) {
    return true;
  }
  if (_vue.default.options && Array.isArray(_vue.default.options[hook])) {
    return true;
  }
  vueOptions = vueOptions.default || vueOptions;
  if (isFn(vueOptions)) {
    if (isFn(vueOptions.extendOptions[hook])) {
      return true;
    }
    if (vueOptions.super && vueOptions.super.options && Array.isArray(vueOptions.super.options[hook])) {
      return true;
    }
    return false;
  }
  if (isFn(vueOptions[hook]) || Array.isArray(vueOptions[hook])) {
    return true;
  }
  var mixins = vueOptions.mixins;
  if (Array.isArray(mixins)) {
    return !!mixins.find(function (mixin) {
      return hasHook(hook, mixin);
    });
  }
}
function initHooks(mpOptions, hooks, vueOptions) {
  hooks.forEach(function (hook) {
    if (hasHook(hook, vueOptions)) {
      mpOptions[hook] = function (args) {
        return this.$vm && this.$vm.__call_hook(hook, args);
      };
    }
  });
}
function initUnknownHooks(mpOptions, vueOptions) {
  var excludes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  findHooks(vueOptions).forEach(function (hook) {
    return initHook$1(mpOptions, hook, excludes);
  });
}
function findHooks(vueOptions) {
  var hooks = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  if (vueOptions) {
    Object.keys(vueOptions).forEach(function (name) {
      if (name.indexOf('on') === 0 && isFn(vueOptions[name])) {
        hooks.push(name);
      }
    });
  }
  return hooks;
}
function initHook$1(mpOptions, hook, excludes) {
  if (excludes.indexOf(hook) === -1 && !hasOwn(mpOptions, hook)) {
    mpOptions[hook] = function (args) {
      return this.$vm && this.$vm.__call_hook(hook, args);
    };
  }
}
function initVueComponent(Vue, vueOptions) {
  vueOptions = vueOptions.default || vueOptions;
  var VueComponent;
  if (isFn(vueOptions)) {
    VueComponent = vueOptions;
  } else {
    VueComponent = Vue.extend(vueOptions);
  }
  vueOptions = VueComponent.options;
  return [VueComponent, vueOptions];
}
function initSlots(vm, vueSlots) {
  if (Array.isArray(vueSlots) && vueSlots.length) {
    var $slots = Object.create(null);
    vueSlots.forEach(function (slotName) {
      $slots[slotName] = true;
    });
    vm.$scopedSlots = vm.$slots = $slots;
  }
}
function initVueIds(vueIds, mpInstance) {
  vueIds = (vueIds || '').split(',');
  var len = vueIds.length;
  if (len === 1) {
    mpInstance._$vueId = vueIds[0];
  } else if (len === 2) {
    mpInstance._$vueId = vueIds[0];
    mpInstance._$vuePid = vueIds[1];
  }
}
function initData(vueOptions, context) {
  var data = vueOptions.data || {};
  var methods = vueOptions.methods || {};
  if (typeof data === 'function') {
    try {
      data = data.call(context); // 支持 Vue.prototype 上挂的数据
    } catch (e) {
      if (Object({"NODE_ENV":"development","VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"AI","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.warn('根据 Vue 的 data 函数初始化小程序 data 失败，请尽量确保 data 函数中不访问 vm 对象，否则可能影响首次数据渲染速度。', data);
      }
    }
  } else {
    try {
      // 对 data 格式化
      data = JSON.parse(JSON.stringify(data));
    } catch (e) {}
  }
  if (!isPlainObject(data)) {
    data = {};
  }
  Object.keys(methods).forEach(function (methodName) {
    if (context.__lifecycle_hooks__.indexOf(methodName) === -1 && !hasOwn(data, methodName)) {
      data[methodName] = methods[methodName];
    }
  });
  return data;
}
var PROP_TYPES = [String, Number, Boolean, Object, Array, null];
function createObserver(name) {
  return function observer(newVal, oldVal) {
    if (this.$vm) {
      this.$vm[name] = newVal; // 为了触发其他非 render watcher
    }
  };
}

function initBehaviors(vueOptions, initBehavior) {
  var vueBehaviors = vueOptions.behaviors;
  var vueExtends = vueOptions.extends;
  var vueMixins = vueOptions.mixins;
  var vueProps = vueOptions.props;
  if (!vueProps) {
    vueOptions.props = vueProps = [];
  }
  var behaviors = [];
  if (Array.isArray(vueBehaviors)) {
    vueBehaviors.forEach(function (behavior) {
      behaviors.push(behavior.replace('uni://', "wx".concat("://")));
      if (behavior === 'uni://form-field') {
        if (Array.isArray(vueProps)) {
          vueProps.push('name');
          vueProps.push('value');
        } else {
          vueProps.name = {
            type: String,
            default: ''
          };
          vueProps.value = {
            type: [String, Number, Boolean, Array, Object, Date],
            default: ''
          };
        }
      }
    });
  }
  if (isPlainObject(vueExtends) && vueExtends.props) {
    behaviors.push(initBehavior({
      properties: initProperties(vueExtends.props, true)
    }));
  }
  if (Array.isArray(vueMixins)) {
    vueMixins.forEach(function (vueMixin) {
      if (isPlainObject(vueMixin) && vueMixin.props) {
        behaviors.push(initBehavior({
          properties: initProperties(vueMixin.props, true)
        }));
      }
    });
  }
  return behaviors;
}
function parsePropType(key, type, defaultValue, file) {
  // [String]=>String
  if (Array.isArray(type) && type.length === 1) {
    return type[0];
  }
  return type;
}
function initProperties(props) {
  var isBehavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var file = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  var options = arguments.length > 3 ? arguments[3] : undefined;
  var properties = {};
  if (!isBehavior) {
    properties.vueId = {
      type: String,
      value: ''
    };
    {
      if (options.virtualHost) {
        properties.virtualHostStyle = {
          type: null,
          value: ''
        };
        properties.virtualHostClass = {
          type: null,
          value: ''
        };
      }
    }
    // scopedSlotsCompiler auto
    properties.scopedSlotsCompiler = {
      type: String,
      value: ''
    };
    properties.vueSlots = {
      // 小程序不能直接定义 $slots 的 props，所以通过 vueSlots 转换到 $slots
      type: null,
      value: [],
      observer: function observer(newVal, oldVal) {
        var $slots = Object.create(null);
        newVal.forEach(function (slotName) {
          $slots[slotName] = true;
        });
        this.setData({
          $slots: $slots
        });
      }
    };
  }
  if (Array.isArray(props)) {
    // ['title']
    props.forEach(function (key) {
      properties[key] = {
        type: null,
        observer: createObserver(key)
      };
    });
  } else if (isPlainObject(props)) {
    // {title:{type:String,default:''},content:String}
    Object.keys(props).forEach(function (key) {
      var opts = props[key];
      if (isPlainObject(opts)) {
        // title:{type:String,default:''}
        var value = opts.default;
        if (isFn(value)) {
          value = value();
        }
        opts.type = parsePropType(key, opts.type);
        properties[key] = {
          type: PROP_TYPES.indexOf(opts.type) !== -1 ? opts.type : null,
          value: value,
          observer: createObserver(key)
        };
      } else {
        // content:String
        var type = parsePropType(key, opts);
        properties[key] = {
          type: PROP_TYPES.indexOf(type) !== -1 ? type : null,
          observer: createObserver(key)
        };
      }
    });
  }
  return properties;
}
function wrapper$1(event) {
  // TODO 又得兼容 mpvue 的 mp 对象
  try {
    event.mp = JSON.parse(JSON.stringify(event));
  } catch (e) {}
  event.stopPropagation = noop;
  event.preventDefault = noop;
  event.target = event.target || {};
  if (!hasOwn(event, 'detail')) {
    event.detail = {};
  }
  if (hasOwn(event, 'markerId')) {
    event.detail = (0, _typeof2.default)(event.detail) === 'object' ? event.detail : {};
    event.detail.markerId = event.markerId;
  }
  if (isPlainObject(event.detail)) {
    event.target = Object.assign({}, event.target, event.detail);
  }
  return event;
}
function getExtraValue(vm, dataPathsArray) {
  var context = vm;
  dataPathsArray.forEach(function (dataPathArray) {
    var dataPath = dataPathArray[0];
    var value = dataPathArray[2];
    if (dataPath || typeof value !== 'undefined') {
      // ['','',index,'disable']
      var propPath = dataPathArray[1];
      var valuePath = dataPathArray[3];
      var vFor;
      if (Number.isInteger(dataPath)) {
        vFor = dataPath;
      } else if (!dataPath) {
        vFor = context;
      } else if (typeof dataPath === 'string' && dataPath) {
        if (dataPath.indexOf('#s#') === 0) {
          vFor = dataPath.substr(3);
        } else {
          vFor = vm.__get_value(dataPath, context);
        }
      }
      if (Number.isInteger(vFor)) {
        context = value;
      } else if (!propPath) {
        context = vFor[value];
      } else {
        if (Array.isArray(vFor)) {
          context = vFor.find(function (vForItem) {
            return vm.__get_value(propPath, vForItem) === value;
          });
        } else if (isPlainObject(vFor)) {
          context = Object.keys(vFor).find(function (vForKey) {
            return vm.__get_value(propPath, vFor[vForKey]) === value;
          });
        } else {
          console.error('v-for 暂不支持循环数据：', vFor);
        }
      }
      if (valuePath) {
        context = vm.__get_value(valuePath, context);
      }
    }
  });
  return context;
}
function processEventExtra(vm, extra, event, __args__) {
  var extraObj = {};
  if (Array.isArray(extra) && extra.length) {
    /**
     *[
     *    ['data.items', 'data.id', item.data.id],
     *    ['metas', 'id', meta.id]
     *],
     *[
     *    ['data.items', 'data.id', item.data.id],
     *    ['metas', 'id', meta.id]
     *],
     *'test'
     */
    extra.forEach(function (dataPath, index) {
      if (typeof dataPath === 'string') {
        if (!dataPath) {
          // model,prop.sync
          extraObj['$' + index] = vm;
        } else {
          if (dataPath === '$event') {
            // $event
            extraObj['$' + index] = event;
          } else if (dataPath === 'arguments') {
            extraObj['$' + index] = event.detail ? event.detail.__args__ || __args__ : __args__;
          } else if (dataPath.indexOf('$event.') === 0) {
            // $event.target.value
            extraObj['$' + index] = vm.__get_value(dataPath.replace('$event.', ''), event);
          } else {
            extraObj['$' + index] = vm.__get_value(dataPath);
          }
        }
      } else {
        extraObj['$' + index] = getExtraValue(vm, dataPath);
      }
    });
  }
  return extraObj;
}
function getObjByArray(arr) {
  var obj = {};
  for (var i = 1; i < arr.length; i++) {
    var element = arr[i];
    obj[element[0]] = element[1];
  }
  return obj;
}
function processEventArgs(vm, event) {
  var args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
  var extra = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];
  var isCustom = arguments.length > 4 ? arguments[4] : undefined;
  var methodName = arguments.length > 5 ? arguments[5] : undefined;
  var isCustomMPEvent = false; // wxcomponent 组件，传递原始 event 对象

  // fixed 用户直接触发 mpInstance.triggerEvent
  var __args__ = isPlainObject(event.detail) ? event.detail.__args__ || [event.detail] : [event.detail];
  if (isCustom) {
    // 自定义事件
    isCustomMPEvent = event.currentTarget && event.currentTarget.dataset && event.currentTarget.dataset.comType === 'wx';
    if (!args.length) {
      // 无参数，直接传入 event 或 detail 数组
      if (isCustomMPEvent) {
        return [event];
      }
      return __args__;
    }
  }
  var extraObj = processEventExtra(vm, extra, event, __args__);
  var ret = [];
  args.forEach(function (arg) {
    if (arg === '$event') {
      if (methodName === '__set_model' && !isCustom) {
        // input v-model value
        ret.push(event.target.value);
      } else {
        if (isCustom && !isCustomMPEvent) {
          ret.push(__args__[0]);
        } else {
          // wxcomponent 组件或内置组件
          ret.push(event);
        }
      }
    } else {
      if (Array.isArray(arg) && arg[0] === 'o') {
        ret.push(getObjByArray(arg));
      } else if (typeof arg === 'string' && hasOwn(extraObj, arg)) {
        ret.push(extraObj[arg]);
      } else {
        ret.push(arg);
      }
    }
  });
  return ret;
}
var ONCE = '~';
var CUSTOM = '^';
function isMatchEventType(eventType, optType) {
  return eventType === optType || optType === 'regionchange' && (eventType === 'begin' || eventType === 'end');
}
function getContextVm(vm) {
  var $parent = vm.$parent;
  // 父组件是 scoped slots 或者其他自定义组件时继续查找
  while ($parent && $parent.$parent && ($parent.$options.generic || $parent.$parent.$options.generic || $parent.$scope._$vuePid)) {
    $parent = $parent.$parent;
  }
  return $parent && $parent.$parent;
}
function handleEvent(event) {
  var _this2 = this;
  event = wrapper$1(event);

  // [['tap',[['handle',[1,2,a]],['handle1',[1,2,a]]]]]
  var dataset = (event.currentTarget || event.target).dataset;
  if (!dataset) {
    return console.warn('事件信息不存在');
  }
  var eventOpts = dataset.eventOpts || dataset['event-opts']; // 支付宝 web-view 组件 dataset 非驼峰
  if (!eventOpts) {
    return console.warn('事件信息不存在');
  }

  // [['handle',[1,2,a]],['handle1',[1,2,a]]]
  var eventType = event.type;
  var ret = [];
  eventOpts.forEach(function (eventOpt) {
    var type = eventOpt[0];
    var eventsArray = eventOpt[1];
    var isCustom = type.charAt(0) === CUSTOM;
    type = isCustom ? type.slice(1) : type;
    var isOnce = type.charAt(0) === ONCE;
    type = isOnce ? type.slice(1) : type;
    if (eventsArray && isMatchEventType(eventType, type)) {
      eventsArray.forEach(function (eventArray) {
        var methodName = eventArray[0];
        if (methodName) {
          var handlerCtx = _this2.$vm;
          if (handlerCtx.$options.generic) {
            // mp-weixin,mp-toutiao 抽象节点模拟 scoped slots
            handlerCtx = getContextVm(handlerCtx) || handlerCtx;
          }
          if (methodName === '$emit') {
            handlerCtx.$emit.apply(handlerCtx, processEventArgs(_this2.$vm, event, eventArray[1], eventArray[2], isCustom, methodName));
            return;
          }
          var handler = handlerCtx[methodName];
          if (!isFn(handler)) {
            var _type = _this2.$vm.mpType === 'page' ? 'Page' : 'Component';
            var path = _this2.route || _this2.is;
            throw new Error("".concat(_type, " \"").concat(path, "\" does not have a method \"").concat(methodName, "\""));
          }
          if (isOnce) {
            if (handler.once) {
              return;
            }
            handler.once = true;
          }
          var params = processEventArgs(_this2.$vm, event, eventArray[1], eventArray[2], isCustom, methodName);
          params = Array.isArray(params) ? params : [];
          // 参数尾部增加原始事件对象用于复杂表达式内获取额外数据
          if (/=\s*\S+\.eventParams\s*\|\|\s*\S+\[['"]event-params['"]\]/.test(handler.toString())) {
            // eslint-disable-next-line no-sparse-arrays
            params = params.concat([,,,,,,,,,, event]);
          }
          ret.push(handler.apply(handlerCtx, params));
        }
      });
    }
  });
  if (eventType === 'input' && ret.length === 1 && typeof ret[0] !== 'undefined') {
    return ret[0];
  }
}
var eventChannels = {};
function getEventChannel(id) {
  var eventChannel = eventChannels[id];
  delete eventChannels[id];
  return eventChannel;
}
var hooks = ['onShow', 'onHide', 'onError', 'onPageNotFound', 'onThemeChange', 'onUnhandledRejection'];
function initEventChannel() {
  _vue.default.prototype.getOpenerEventChannel = function () {
    // 微信小程序使用自身getOpenerEventChannel
    {
      return this.$scope.getOpenerEventChannel();
    }
  };
  var callHook = _vue.default.prototype.__call_hook;
  _vue.default.prototype.__call_hook = function (hook, args) {
    if (hook === 'onLoad' && args && args.__id__) {
      this.__eventChannel__ = getEventChannel(args.__id__);
      delete args.__id__;
    }
    return callHook.call(this, hook, args);
  };
}
function initScopedSlotsParams() {
  var center = {};
  var parents = {};
  function currentId(fn) {
    var vueIds = this.$options.propsData.vueId;
    if (vueIds) {
      var vueId = vueIds.split(',')[0];
      fn(vueId);
    }
  }
  _vue.default.prototype.$hasSSP = function (vueId) {
    var slot = center[vueId];
    if (!slot) {
      parents[vueId] = this;
      this.$on('hook:destroyed', function () {
        delete parents[vueId];
      });
    }
    return slot;
  };
  _vue.default.prototype.$getSSP = function (vueId, name, needAll) {
    var slot = center[vueId];
    if (slot) {
      var params = slot[name] || [];
      if (needAll) {
        return params;
      }
      return params[0];
    }
  };
  _vue.default.prototype.$setSSP = function (name, value) {
    var index = 0;
    currentId.call(this, function (vueId) {
      var slot = center[vueId];
      var params = slot[name] = slot[name] || [];
      params.push(value);
      index = params.length - 1;
    });
    return index;
  };
  _vue.default.prototype.$initSSP = function () {
    currentId.call(this, function (vueId) {
      center[vueId] = {};
    });
  };
  _vue.default.prototype.$callSSP = function () {
    currentId.call(this, function (vueId) {
      if (parents[vueId]) {
        parents[vueId].$forceUpdate();
      }
    });
  };
  _vue.default.mixin({
    destroyed: function destroyed() {
      var propsData = this.$options.propsData;
      var vueId = propsData && propsData.vueId;
      if (vueId) {
        delete center[vueId];
        delete parents[vueId];
      }
    }
  });
}
function parseBaseApp(vm, _ref4) {
  var mocks = _ref4.mocks,
    initRefs = _ref4.initRefs;
  initEventChannel();
  {
    initScopedSlotsParams();
  }
  if (vm.$options.store) {
    _vue.default.prototype.$store = vm.$options.store;
  }
  uniIdMixin(_vue.default);
  _vue.default.prototype.mpHost = "mp-weixin";
  _vue.default.mixin({
    beforeCreate: function beforeCreate() {
      if (!this.$options.mpType) {
        return;
      }
      this.mpType = this.$options.mpType;
      this.$mp = (0, _defineProperty2.default)({
        data: {}
      }, this.mpType, this.$options.mpInstance);
      this.$scope = this.$options.mpInstance;
      delete this.$options.mpType;
      delete this.$options.mpInstance;
      if (this.mpType === 'page' && typeof getApp === 'function') {
        // hack vue-i18n
        var app = getApp();
        if (app.$vm && app.$vm.$i18n) {
          this._i18n = app.$vm.$i18n;
        }
      }
      if (this.mpType !== 'app') {
        initRefs(this);
        initMocks(this, mocks);
      }
    }
  });
  var appOptions = {
    onLaunch: function onLaunch(args) {
      if (this.$vm) {
        // 已经初始化过了，主要是为了百度，百度 onShow 在 onLaunch 之前
        return;
      }
      {
        if (wx.canIUse && !wx.canIUse('nextTick')) {
          // 事实 上2.2.3 即可，简单使用 2.3.0 的 nextTick 判断
          console.error('当前微信基础库版本过低，请将 微信开发者工具-详情-项目设置-调试基础库版本 更换为`2.3.0`以上');
        }
      }
      this.$vm = vm;
      this.$vm.$mp = {
        app: this
      };
      this.$vm.$scope = this;
      // vm 上也挂载 globalData
      this.$vm.globalData = this.globalData;
      this.$vm._isMounted = true;
      this.$vm.__call_hook('mounted', args);
      this.$vm.__call_hook('onLaunch', args);
    }
  };

  // 兼容旧版本 globalData
  appOptions.globalData = vm.$options.globalData || {};
  // 将 methods 中的方法挂在 getApp() 中
  var methods = vm.$options.methods;
  if (methods) {
    Object.keys(methods).forEach(function (name) {
      appOptions[name] = methods[name];
    });
  }
  initAppLocale(_vue.default, vm, getLocaleLanguage$1());
  initHooks(appOptions, hooks);
  initUnknownHooks(appOptions, vm.$options);
  return appOptions;
}
function getLocaleLanguage$1() {
  var localeLanguage = '';
  {
    var appBaseInfo = wx.getAppBaseInfo();
    var language = appBaseInfo && appBaseInfo.language ? appBaseInfo.language : LOCALE_EN;
    localeLanguage = normalizeLocale(language) || LOCALE_EN;
  }
  return localeLanguage;
}
function parseApp(vm) {
  return parseBaseApp(vm, {
    mocks: mocks,
    initRefs: initRefs
  });
}
function createApp(vm) {
  App(parseApp(vm));
  return vm;
}
var encodeReserveRE = /[!'()*]/g;
var encodeReserveReplacer = function encodeReserveReplacer(c) {
  return '%' + c.charCodeAt(0).toString(16);
};
var commaRE = /%2C/g;

// fixed encodeURIComponent which is more conformant to RFC3986:
// - escapes [!'()*]
// - preserve commas
var encode = function encode(str) {
  return encodeURIComponent(str).replace(encodeReserveRE, encodeReserveReplacer).replace(commaRE, ',');
};
function stringifyQuery(obj) {
  var encodeStr = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : encode;
  var res = obj ? Object.keys(obj).map(function (key) {
    var val = obj[key];
    if (val === undefined) {
      return '';
    }
    if (val === null) {
      return encodeStr(key);
    }
    if (Array.isArray(val)) {
      var result = [];
      val.forEach(function (val2) {
        if (val2 === undefined) {
          return;
        }
        if (val2 === null) {
          result.push(encodeStr(key));
        } else {
          result.push(encodeStr(key) + '=' + encodeStr(val2));
        }
      });
      return result.join('&');
    }
    return encodeStr(key) + '=' + encodeStr(val);
  }).filter(function (x) {
    return x.length > 0;
  }).join('&') : null;
  return res ? "?".concat(res) : '';
}
function parseBaseComponent(vueComponentOptions) {
  var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
    isPage = _ref5.isPage,
    initRelation = _ref5.initRelation;
  var needVueOptions = arguments.length > 2 ? arguments[2] : undefined;
  var _initVueComponent = initVueComponent(_vue.default, vueComponentOptions),
    _initVueComponent2 = (0, _slicedToArray2.default)(_initVueComponent, 2),
    VueComponent = _initVueComponent2[0],
    vueOptions = _initVueComponent2[1];
  var options = _objectSpread({
    multipleSlots: true,
    // styleIsolation: 'apply-shared',
    addGlobalClass: true
  }, vueOptions.options || {});
  {
    // 微信 multipleSlots 部分情况有 bug，导致内容顺序错乱 如 u-list，提供覆盖选项
    if (vueOptions['mp-weixin'] && vueOptions['mp-weixin'].options) {
      Object.assign(options, vueOptions['mp-weixin'].options);
    }
  }
  var componentOptions = {
    options: options,
    data: initData(vueOptions, _vue.default.prototype),
    behaviors: initBehaviors(vueOptions, initBehavior),
    properties: initProperties(vueOptions.props, false, vueOptions.__file, options),
    lifetimes: {
      attached: function attached() {
        var properties = this.properties;
        var options = {
          mpType: isPage.call(this) ? 'page' : 'component',
          mpInstance: this,
          propsData: properties
        };
        initVueIds(properties.vueId, this);

        // 处理父子关系
        initRelation.call(this, {
          vuePid: this._$vuePid,
          vueOptions: options
        });

        // 初始化 vue 实例
        this.$vm = new VueComponent(options);

        // 处理$slots,$scopedSlots（暂不支持动态变化$slots）
        initSlots(this.$vm, properties.vueSlots);

        // 触发首次 setData
        this.$vm.$mount();
      },
      ready: function ready() {
        // 当组件 props 默认值为 true，初始化时传入 false 会导致 created,ready 触发, 但 attached 不触发
        // https://developers.weixin.qq.com/community/develop/doc/00066ae2844cc0f8eb883e2a557800
        if (this.$vm) {
          this.$vm._isMounted = true;
          this.$vm.__call_hook('mounted');
          this.$vm.__call_hook('onReady');
        }
      },
      detached: function detached() {
        this.$vm && this.$vm.$destroy();
      }
    },
    pageLifetimes: {
      show: function show(args) {
        this.$vm && this.$vm.__call_hook('onPageShow', args);
      },
      hide: function hide() {
        this.$vm && this.$vm.__call_hook('onPageHide');
      },
      resize: function resize(size) {
        this.$vm && this.$vm.__call_hook('onPageResize', size);
      }
    },
    methods: {
      __l: handleLink,
      __e: handleEvent
    }
  };
  // externalClasses
  if (vueOptions.externalClasses) {
    componentOptions.externalClasses = vueOptions.externalClasses;
  }
  if (Array.isArray(vueOptions.wxsCallMethods)) {
    vueOptions.wxsCallMethods.forEach(function (callMethod) {
      componentOptions.methods[callMethod] = function (args) {
        return this.$vm[callMethod](args);
      };
    });
  }
  if (needVueOptions) {
    return [componentOptions, vueOptions, VueComponent];
  }
  if (isPage) {
    return componentOptions;
  }
  return [componentOptions, VueComponent];
}
function parseComponent(vueComponentOptions, needVueOptions) {
  return parseBaseComponent(vueComponentOptions, {
    isPage: isPage,
    initRelation: initRelation
  }, needVueOptions);
}
var hooks$1 = ['onShow', 'onHide', 'onUnload'];
hooks$1.push.apply(hooks$1, PAGE_EVENT_HOOKS);
function parseBasePage(vuePageOptions) {
  var _parseComponent = parseComponent(vuePageOptions, true),
    _parseComponent2 = (0, _slicedToArray2.default)(_parseComponent, 2),
    pageOptions = _parseComponent2[0],
    vueOptions = _parseComponent2[1];
  initHooks(pageOptions.methods, hooks$1, vueOptions);
  pageOptions.methods.onLoad = function (query) {
    this.options = query;
    var copyQuery = Object.assign({}, query);
    delete copyQuery.__id__;
    this.$page = {
      fullPath: '/' + (this.route || this.is) + stringifyQuery(copyQuery)
    };
    this.$vm.$mp.query = query; // 兼容 mpvue
    this.$vm.__call_hook('onLoad', query);
  };
  {
    initUnknownHooks(pageOptions.methods, vuePageOptions, ['onReady']);
  }
  {
    initWorkletMethods(pageOptions.methods, vueOptions.methods);
  }
  return pageOptions;
}
function parsePage(vuePageOptions) {
  return parseBasePage(vuePageOptions);
}
function createPage(vuePageOptions) {
  {
    return Component(parsePage(vuePageOptions));
  }
}
function createComponent(vueOptions) {
  {
    return Component(parseComponent(vueOptions));
  }
}
function createSubpackageApp(vm) {
  var appOptions = parseApp(vm);
  var app = getApp({
    allowDefault: true
  });
  vm.$scope = app;
  var globalData = app.globalData;
  if (globalData) {
    Object.keys(appOptions.globalData).forEach(function (name) {
      if (!hasOwn(globalData, name)) {
        globalData[name] = appOptions.globalData[name];
      }
    });
  }
  Object.keys(appOptions).forEach(function (name) {
    if (!hasOwn(app, name)) {
      app[name] = appOptions[name];
    }
  });
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {
      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {
        args[_key6] = arguments[_key6];
      }
      vm.__call_hook('onShow', args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {
      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {
        args[_key7] = arguments[_key7];
      }
      vm.__call_hook('onHide', args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    vm.__call_hook('onLaunch', args);
  }
  return vm;
}
function createPlugin(vm) {
  var appOptions = parseApp(vm);
  if (isFn(appOptions.onShow) && wx.onAppShow) {
    wx.onAppShow(function () {
      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {
        args[_key8] = arguments[_key8];
      }
      vm.__call_hook('onShow', args);
    });
  }
  if (isFn(appOptions.onHide) && wx.onAppHide) {
    wx.onAppHide(function () {
      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {
        args[_key9] = arguments[_key9];
      }
      vm.__call_hook('onHide', args);
    });
  }
  if (isFn(appOptions.onLaunch)) {
    var args = wx.getLaunchOptionsSync && wx.getLaunchOptionsSync();
    vm.__call_hook('onLaunch', args);
  }
  return vm;
}
todos.forEach(function (todoApi) {
  protocols[todoApi] = false;
});
canIUses.forEach(function (canIUseApi) {
  var apiName = protocols[canIUseApi] && protocols[canIUseApi].name ? protocols[canIUseApi].name : canIUseApi;
  if (!wx.canIUse(apiName)) {
    protocols[canIUseApi] = false;
  }
});
var uni = {};
if (typeof Proxy !== 'undefined' && "mp-weixin" !== 'app-plus') {
  uni = new Proxy({}, {
    get: function get(target, name) {
      if (hasOwn(target, name)) {
        return target[name];
      }
      if (baseApi[name]) {
        return baseApi[name];
      }
      if (api[name]) {
        return promisify(name, api[name]);
      }
      {
        if (extraApi[name]) {
          return promisify(name, extraApi[name]);
        }
        if (todoApis[name]) {
          return promisify(name, todoApis[name]);
        }
      }
      if (eventApi[name]) {
        return eventApi[name];
      }
      return promisify(name, wrapper(name, wx[name]));
    },
    set: function set(target, name, value) {
      target[name] = value;
      return true;
    }
  });
} else {
  Object.keys(baseApi).forEach(function (name) {
    uni[name] = baseApi[name];
  });
  {
    Object.keys(todoApis).forEach(function (name) {
      uni[name] = promisify(name, todoApis[name]);
    });
    Object.keys(extraApi).forEach(function (name) {
      uni[name] = promisify(name, extraApi[name]);
    });
  }
  Object.keys(eventApi).forEach(function (name) {
    uni[name] = eventApi[name];
  });
  Object.keys(api).forEach(function (name) {
    uni[name] = promisify(name, api[name]);
  });
  Object.keys(wx).forEach(function (name) {
    if (hasOwn(wx, name) || hasOwn(protocols, name)) {
      uni[name] = promisify(name, wrapper(name, wx[name]));
    }
  });
}
wx.createApp = createApp;
wx.createPage = createPage;
wx.createComponent = createComponent;
wx.createSubpackageApp = createSubpackageApp;
wx.createPlugin = createPlugin;
var uni$1 = uni;
var _default = uni$1;
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"], __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 20:
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArray.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
}
module.exports = _iterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 21:
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableSpread.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
module.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 219:
/*!************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/echarts.min.js ***!
  \************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(wx) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
!function (t, e) {
  "object" == ( false ? undefined : _typeof(exports)) && "undefined" != typeof module ? e(exports) :  true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (e),
				__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
				(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : undefined;
}(this, function (t) {
  "use strict";

  var _v2 = function v(t, e) {
    return (_v2 = Object.setPrototypeOf || ({
      __proto__: []
    } instanceof Array ? function (t, e) {
      t.__proto__ = e;
    } : function (t, e) {
      for (var n in e) {
        Object.prototype.hasOwnProperty.call(e, n) && (t[n] = e[n]);
      }
    }))(t, e);
  };
  function u(t, e) {
    if ("function" != typeof e && null !== e) throw new TypeError("Class extends value " + String(e) + " is not a constructor or null");
    function n() {
      this.constructor = t;
    }
    _v2(t, e), t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype, new n());
  }
  var _ = function _() {
      this.firefox = !1, this.ie = !1, this.edge = !1, this.newEdge = !1, this.weChat = !1;
    },
    b = new function () {
      this.browser = new _(), this.node = !1, this.wxa = !1, this.worker = !1, this.svgSupported = !1, this.touchEventsSupported = !1, this.pointerEventsSupported = !1, this.domSupported = !1, this.transformSupported = !1, this.transform3dSupported = !1, this.hasGlobalWindow = "undefined" != typeof window;
    }();
  "object" == (typeof wx === "undefined" ? "undefined" : _typeof(wx)) && "function" == typeof wx.getSystemInfoSync ? (b.wxa = !0, b.touchEventsSupported = !0) : "undefined" == typeof document && "undefined" != typeof self ? b.worker = !0 : !b.hasGlobalWindow || "Deno" in window ? (b.node = !0, b.svgSupported = !0) : (J = navigator.userAgent, oe = (Ht = b).browser, rt = J.match(/Firefox\/([\d.]+)/), A = J.match(/MSIE\s([\d.]+)/) || J.match(/Trident\/.+?rv:(([\d.]+))/), Q = J.match(/Edge?\/([\d.]+)/), J = /micromessenger/i.test(J), rt && (oe.firefox = !0, oe.version = rt[1]), A && (oe.ie = !0, oe.version = A[1]), Q && (oe.edge = !0, oe.version = Q[1], oe.newEdge = 18 < +Q[1].split(".")[0]), J && (oe.weChat = !0), Ht.svgSupported = "undefined" != typeof SVGRect, Ht.touchEventsSupported = "ontouchstart" in window && !oe.ie && !oe.edge, Ht.pointerEventsSupported = "onpointerdown" in window && (oe.edge || oe.ie && 11 <= +oe.version), Ht.domSupported = "undefined" != typeof document, rt = document.documentElement.style, Ht.transform3dSupported = (oe.ie && "transition" in rt || oe.edge || "WebKitCSSMatrix" in window && "m11" in new WebKitCSSMatrix() || "MozPerspective" in rt) && !("OTransition" in rt), Ht.transformSupported = Ht.transform3dSupported || oe.ie && 9 <= +oe.version);
  var j = "12px sans-serif";
  var x,
    w,
    S = function (t) {
      var e = {};
      if ("undefined" != typeof JSON) for (var n = 0; n < t.length; n++) {
        var i = String.fromCharCode(n + 32),
          r = (t.charCodeAt(n) - 20) / 100;
        e[i] = r;
      }
      return e;
    }("007LLmW'55;N0500LLLLLLLLLL00NNNLzWW\\\\WQb\\0FWLg\\bWb\\WQ\\WrWWQ000CL5LLFLL0LL**F*gLLLL5F0LF\\FFF5.5N"),
    Y = {
      createCanvas: function createCanvas() {
        return "undefined" != typeof document && document.createElement("canvas");
      },
      measureText: function measureText(t, e) {
        if (x || (n = Y.createCanvas(), x = n && n.getContext("2d")), x) return w !== e && (w = x.font = e || j), x.measureText(t);
        t = t || "", e = e || j;
        var n = /((?:\d+)?\.?\d*)px/.exec(e),
          i = n && +n[1] || 12,
          r = 0;
        if (0 <= e.indexOf("mono")) r = i * t.length;else for (var o = 0; o < t.length; o++) {
          var a = S[t[o]];
          r += null == a ? i : a * i;
        }
        return {
          width: r
        };
      },
      loadImage: function loadImage(t, e, n) {
        var i = new Image();
        return i.onload = e, i.onerror = n, i.src = t, i;
      }
    };
  function M(t) {
    for (var e in Y) {
      t[e] && (Y[e] = t[e]);
    }
  }
  var T = lt(["Function", "RegExp", "Date", "Error", "CanvasGradient", "CanvasPattern", "Image", "Canvas"], function (t, e) {
      return t["[object " + e + "]"] = !0, t;
    }, {}),
    I = lt(["Int8", "Uint8", "Uint8Clamped", "Int16", "Uint16", "Int32", "Uint32", "Float32", "Float64"], function (t, e) {
      return t["[object " + e + "Array]"] = !0, t;
    }, {}),
    k = Object.prototype.toString,
    A = Array.prototype,
    P = A.forEach,
    Z = A.filter,
    K = A.slice,
    $ = A.map,
    Q = function () {}.constructor,
    J = Q ? Q.prototype : null,
    tt = "__proto__",
    et = 2311;
  function nt() {
    return et++;
  }
  function it() {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }
    "undefined" != typeof console && console.error.apply(console, t);
  }
  function y(t) {
    if (null == t || "object" != _typeof(t)) return t;
    var e = t,
      n = k.call(t);
    if ("[object Array]" === n) {
      if (!At(t)) for (var e = [], i = 0, r = t.length; i < r; i++) {
        e[i] = y(t[i]);
      }
    } else if (I[n]) {
      if (!At(t)) {
        var o = t.constructor;
        if (o.from) e = o.from(t);else {
          e = new o(t.length);
          for (i = 0, r = t.length; i < r; i++) {
            e[i] = t[i];
          }
        }
      }
    } else if (!T[n] && !At(t) && !mt(t)) for (var a in e = {}, t) {
      t.hasOwnProperty(a) && a !== tt && (e[a] = y(t[a]));
    }
    return e;
  }
  function d(t, e, n) {
    if (!O(e) || !O(t)) return n ? y(e) : t;
    for (var i in e) {
      var r, o;
      e.hasOwnProperty(i) && i !== tt && (r = t[i], !O(o = e[i]) || !O(r) || F(o) || F(r) || mt(o) || mt(r) || gt(o) || gt(r) || At(o) || At(r) ? !n && i in t || (t[i] = y(e[i])) : d(r, o, n));
    }
    return t;
  }
  function L(t, e) {
    if (Object.assign) Object.assign(t, e);else for (var n in e) {
      e.hasOwnProperty(n) && n !== tt && (t[n] = e[n]);
    }
    return t;
  }
  function B(t, e, n) {
    for (var i = ct(e), r = 0, o = i.length; r < o; r++) {
      var a = i[r];
      (n ? null != e[a] : null == t[a]) && (t[a] = e[a]);
    }
    return t;
  }
  var rt = Y.createCanvas;
  function C(t, e) {
    if (t) {
      if (t.indexOf) return t.indexOf(e);
      for (var n = 0, i = t.length; n < i; n++) {
        if (t[n] === e) return n;
      }
    }
    return -1;
  }
  function ot(t, e) {
    var n,
      i = t.prototype;
    function r() {}
    for (n in r.prototype = e.prototype, t.prototype = new r(), i) {
      i.hasOwnProperty(n) && (t.prototype[n] = i[n]);
    }
    (t.prototype.constructor = t).superClass = e;
  }
  function at(t, e, n) {
    if (t = "prototype" in t ? t.prototype : t, e = "prototype" in e ? e.prototype : e, Object.getOwnPropertyNames) for (var i = Object.getOwnPropertyNames(e), r = 0; r < i.length; r++) {
      var o = i[r];
      "constructor" !== o && (n ? null != e[o] : null == t[o]) && (t[o] = e[o]);
    } else B(t, e, n);
  }
  function st(t) {
    return !!t && "string" != typeof t && "number" == typeof t.length;
  }
  function E(t, e, n) {
    if (t && e) if (t.forEach && t.forEach === P) t.forEach(e, n);else if (t.length === +t.length) for (var i = 0, r = t.length; i < r; i++) {
      e.call(n, t[i], i, t);
    } else for (var o in t) {
      t.hasOwnProperty(o) && e.call(n, t[o], o, t);
    }
  }
  function z(t, e, n) {
    if (!t) return [];
    if (!e) return Mt(t);
    if (t.map && t.map === $) return t.map(e, n);
    for (var i = [], r = 0, o = t.length; r < o; r++) {
      i.push(e.call(n, t[r], r, t));
    }
    return i;
  }
  function lt(t, e, n, i) {
    if (t && e) {
      for (var r = 0, o = t.length; r < o; r++) {
        n = e.call(i, n, t[r], r, t);
      }
      return n;
    }
  }
  function ut(t, e, n) {
    if (!t) return [];
    if (!e) return Mt(t);
    if (t.filter && t.filter === Z) return t.filter(e, n);
    for (var i = [], r = 0, o = t.length; r < o; r++) {
      e.call(n, t[r], r, t) && i.push(t[r]);
    }
    return i;
  }
  function ht(t, e, n) {
    if (t && e) for (var i = 0, r = t.length; i < r; i++) {
      if (e.call(n, t[i], i, t)) return t[i];
    }
  }
  function ct(t) {
    if (!t) return [];
    if (Object.keys) return Object.keys(t);
    var e,
      n = [];
    for (e in t) {
      t.hasOwnProperty(e) && n.push(e);
    }
    return n;
  }
  var pt = J && D(J.bind) ? J.call.bind(J.bind) : function (t, e) {
    for (var n = [], i = 2; i < arguments.length; i++) {
      n[i - 2] = arguments[i];
    }
    return function () {
      return t.apply(e, n.concat(K.call(arguments)));
    };
  };
  function dt(t) {
    for (var e = [], n = 1; n < arguments.length; n++) {
      e[n - 1] = arguments[n];
    }
    return function () {
      return t.apply(this, e.concat(K.call(arguments)));
    };
  }
  function F(t) {
    return Array.isArray ? Array.isArray(t) : "[object Array]" === k.call(t);
  }
  function D(t) {
    return "function" == typeof t;
  }
  function V(t) {
    return "string" == typeof t;
  }
  function ft(t) {
    return "[object String]" === k.call(t);
  }
  function W(t) {
    return "number" == typeof t;
  }
  function O(t) {
    var e = _typeof(t);
    return "function" == e || !!t && "object" == e;
  }
  function gt(t) {
    return !!T[k.call(t)];
  }
  function yt(t) {
    return !!I[k.call(t)];
  }
  function mt(t) {
    return "object" == _typeof(t) && "number" == typeof t.nodeType && "object" == _typeof(t.ownerDocument);
  }
  function vt(t) {
    return null != t.colorStops;
  }
  function _t(t) {
    return null != t.image;
  }
  function xt(t) {
    return "[object RegExp]" === k.call(t);
  }
  function wt(t) {
    return t != t;
  }
  function bt() {
    for (var t = [], e = 0; e < arguments.length; e++) {
      t[e] = arguments[e];
    }
    for (var n = 0, i = t.length; n < i; n++) {
      if (null != t[n]) return t[n];
    }
  }
  function R(t, e) {
    return null != t ? t : e;
  }
  function St(t, e, n) {
    return null != t ? t : null != e ? e : n;
  }
  function Mt(t) {
    for (var e = [], n = 1; n < arguments.length; n++) {
      e[n - 1] = arguments[n];
    }
    return K.apply(t, e);
  }
  function Tt(t) {
    var e;
    return "number" == typeof t ? [t, t, t, t] : 2 === (e = t.length) ? [t[0], t[1], t[0], t[1]] : 3 === e ? [t[0], t[1], t[2], t[1]] : t;
  }
  function It(t, e) {
    if (!t) throw new Error(e);
  }
  function Ct(t) {
    return null == t ? null : "function" == typeof t.trim ? t.trim() : t.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
  }
  var Dt = "__ec_primitive__";
  function kt(t) {
    t[Dt] = !0;
  }
  function At(t) {
    return t[Dt];
  }
  Lt.prototype.delete = function (t) {
    var e = this.has(t);
    return e && delete this.data[t], e;
  }, Lt.prototype.has = function (t) {
    return this.data.hasOwnProperty(t);
  }, Lt.prototype.get = function (t) {
    return this.data[t];
  }, Lt.prototype.set = function (t, e) {
    return this.data[t] = e, this;
  }, Lt.prototype.keys = function () {
    return ct(this.data);
  }, Lt.prototype.forEach = function (t) {
    var e,
      n = this.data;
    for (e in n) {
      n.hasOwnProperty(e) && t(n[e], e);
    }
  };
  var Pt = Lt;
  function Lt() {
    this.data = {};
  }
  var Ot = "function" == typeof Map;
  Nt.prototype.hasKey = function (t) {
    return this.data.has(t);
  }, Nt.prototype.get = function (t) {
    return this.data.get(t);
  }, Nt.prototype.set = function (t, e) {
    return this.data.set(t, e), e;
  }, Nt.prototype.each = function (n, i) {
    this.data.forEach(function (t, e) {
      n.call(i, t, e);
    });
  }, Nt.prototype.keys = function () {
    var t = this.data.keys();
    return Ot ? Array.from(t) : t;
  }, Nt.prototype.removeKey = function (t) {
    this.data.delete(t);
  };
  var Rt = Nt;
  function Nt(t) {
    var n = F(t),
      i = (this.data = new (Ot ? Map : Pt)(), this);
    function e(t, e) {
      n ? i.set(t, e) : i.set(e, t);
    }
    t instanceof Nt ? t.each(e) : t && E(t, e);
  }
  function N(t) {
    return new Rt(t);
  }
  function Et(t, e) {
    for (var n = new t.constructor(t.length + e.length), i = 0; i < t.length; i++) {
      n[i] = t[i];
    }
    for (var r = t.length, i = 0; i < e.length; i++) {
      n[i + r] = e[i];
    }
    return n;
  }
  function Bt(t, e) {
    var n,
      t = Object.create ? Object.create(t) : ((n = function n() {}).prototype = t, new n());
    return e && L(t, e), t;
  }
  function zt(t) {
    t = t.style;
    t.webkitUserSelect = "none", t.userSelect = "none", t.webkitTapHighlightColor = "rgba(0,0,0,0)", t["-webkit-touch-callout"] = "none";
  }
  function Ft(t, e) {
    return t.hasOwnProperty(e);
  }
  function Vt() {}
  var Wt = 180 / Math.PI,
    Ht = Object.freeze({
      __proto__: null,
      HashMap: Rt,
      RADIAN_TO_DEGREE: Wt,
      assert: It,
      bind: pt,
      clone: y,
      concatArray: Et,
      createCanvas: rt,
      createHashMap: N,
      createObject: Bt,
      curry: dt,
      defaults: B,
      disableUserSelect: zt,
      each: E,
      eqNaN: wt,
      extend: L,
      filter: ut,
      find: ht,
      guid: nt,
      hasOwn: Ft,
      indexOf: C,
      inherits: ot,
      isArray: F,
      isArrayLike: st,
      isBuiltInObject: gt,
      isDom: mt,
      isFunction: D,
      isGradientObject: vt,
      isImagePatternObject: _t,
      isNumber: W,
      isObject: O,
      isPrimitive: At,
      isRegExp: xt,
      isString: V,
      isStringSafe: ft,
      isTypedArray: yt,
      keys: ct,
      logError: it,
      map: z,
      merge: d,
      mergeAll: function mergeAll(t, e) {
        for (var n = t[0], i = 1, r = t.length; i < r; i++) {
          n = d(n, t[i], e);
        }
        return n;
      },
      mixin: at,
      noop: Vt,
      normalizeCssArray: Tt,
      reduce: lt,
      retrieve: bt,
      retrieve2: R,
      retrieve3: St,
      setAsPrimitive: kt,
      slice: Mt,
      trim: Ct
    });
  function Gt(t, e) {
    return [t = null == t ? 0 : t, e = null == e ? 0 : e];
  }
  function Ut(t) {
    return [t[0], t[1]];
  }
  function qt(t, e, n) {
    return t[0] = e[0] + n[0], t[1] = e[1] + n[1], t;
  }
  function Xt(t, e, n) {
    return t[0] = e[0] - n[0], t[1] = e[1] - n[1], t;
  }
  function Yt(t) {
    return Math.sqrt(Zt(t));
  }
  function Zt(t) {
    return t[0] * t[0] + t[1] * t[1];
  }
  function jt(t, e, n) {
    return t[0] = e[0] * n, t[1] = e[1] * n, t;
  }
  function Kt(t, e) {
    var n = Yt(e);
    return 0 === n ? (t[0] = 0, t[1] = 0) : (t[0] = e[0] / n, t[1] = e[1] / n), t;
  }
  function $t(t, e) {
    return Math.sqrt((t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1]));
  }
  var Qt = $t;
  function Jt(t, e) {
    return (t[0] - e[0]) * (t[0] - e[0]) + (t[1] - e[1]) * (t[1] - e[1]);
  }
  var te = Jt;
  function ee(t, e, n, i) {
    return t[0] = e[0] + i * (n[0] - e[0]), t[1] = e[1] + i * (n[1] - e[1]), t;
  }
  function ne(t, e, n) {
    var i = e[0],
      e = e[1];
    return t[0] = n[0] * i + n[2] * e + n[4], t[1] = n[1] * i + n[3] * e + n[5], t;
  }
  function ie(t, e, n) {
    return t[0] = Math.min(e[0], n[0]), t[1] = Math.min(e[1], n[1]), t;
  }
  function re(t, e, n) {
    return t[0] = Math.max(e[0], n[0]), t[1] = Math.max(e[1], n[1]), t;
  }
  var oe = Object.freeze({
      __proto__: null,
      add: qt,
      applyTransform: ne,
      clone: Ut,
      copy: function copy(t, e) {
        return t[0] = e[0], t[1] = e[1], t;
      },
      create: Gt,
      dist: Qt,
      distSquare: te,
      distance: $t,
      distanceSquare: Jt,
      div: function div(t, e, n) {
        return t[0] = e[0] / n[0], t[1] = e[1] / n[1], t;
      },
      dot: function dot(t, e) {
        return t[0] * e[0] + t[1] * e[1];
      },
      len: Yt,
      lenSquare: Zt,
      length: Yt,
      lengthSquare: Zt,
      lerp: ee,
      max: re,
      min: ie,
      mul: function mul(t, e, n) {
        return t[0] = e[0] * n[0], t[1] = e[1] * n[1], t;
      },
      negate: function negate(t, e) {
        return t[0] = -e[0], t[1] = -e[1], t;
      },
      normalize: Kt,
      scale: jt,
      scaleAndAdd: function scaleAndAdd(t, e, n, i) {
        return t[0] = e[0] + n[0] * i, t[1] = e[1] + n[1] * i, t;
      },
      set: function set(t, e, n) {
        return t[0] = e, t[1] = n, t;
      },
      sub: Xt
    }),
    ae = function ae(t, e) {
      this.target = t, this.topTarget = e && e.topTarget;
    },
    se = (le.prototype._dragStart = function (t) {
      for (var e = t.target; e && !e.draggable;) {
        e = e.parent || e.__hostTarget;
      }
      e && ((this._draggingTarget = e).dragging = !0, this._x = t.offsetX, this._y = t.offsetY, this.handler.dispatchToElement(new ae(e, t), "dragstart", t.event));
    }, le.prototype._drag = function (t) {
      var e,
        n,
        i,
        r,
        o = this._draggingTarget;
      o && (e = t.offsetX, n = t.offsetY, i = e - this._x, r = n - this._y, this._x = e, this._y = n, o.drift(i, r, t), this.handler.dispatchToElement(new ae(o, t), "drag", t.event), i = this.handler.findHover(e, n, o).target, r = this._dropTarget, o !== (this._dropTarget = i)) && (r && i !== r && this.handler.dispatchToElement(new ae(r, t), "dragleave", t.event), i) && i !== r && this.handler.dispatchToElement(new ae(i, t), "dragenter", t.event);
    }, le.prototype._dragEnd = function (t) {
      var e = this._draggingTarget;
      e && (e.dragging = !1), this.handler.dispatchToElement(new ae(e, t), "dragend", t.event), this._dropTarget && this.handler.dispatchToElement(new ae(this._dropTarget, t), "drop", t.event), this._draggingTarget = null, this._dropTarget = null;
    }, le);
  function le(t) {
    (this.handler = t).on("mousedown", this._dragStart, this), t.on("mousemove", this._drag, this), t.on("mouseup", this._dragEnd, this);
  }
  he.prototype.on = function (t, e, n, i) {
    this._$handlers || (this._$handlers = {});
    var r = this._$handlers;
    if ("function" == typeof e && (i = n, n = e, e = null), n && t) {
      var o = this._$eventProcessor;
      null != e && o && o.normalizeQuery && (e = o.normalizeQuery(e)), r[t] || (r[t] = []);
      for (var a = 0; a < r[t].length; a++) {
        if (r[t][a].h === n) return this;
      }
      o = {
        h: n,
        query: e,
        ctx: i || this,
        callAtLast: n.zrEventfulCallAtLast
      }, e = r[t].length - 1, i = r[t][e];
      i && i.callAtLast ? r[t].splice(e, 0, o) : r[t].push(o);
    }
    return this;
  }, he.prototype.isSilent = function (t) {
    var e = this._$handlers;
    return !e || !e[t] || !e[t].length;
  }, he.prototype.off = function (t, e) {
    var n = this._$handlers;
    if (n) if (t) {
      if (e) {
        if (n[t]) {
          for (var i = [], r = 0, o = n[t].length; r < o; r++) {
            n[t][r].h !== e && i.push(n[t][r]);
          }
          n[t] = i;
        }
        n[t] && 0 === n[t].length && delete n[t];
      } else delete n[t];
    } else this._$handlers = {};
    return this;
  }, he.prototype.trigger = function (t) {
    for (var e = [], n = 1; n < arguments.length; n++) {
      e[n - 1] = arguments[n];
    }
    if (this._$handlers) {
      var i = this._$handlers[t],
        r = this._$eventProcessor;
      if (i) for (var o = e.length, a = i.length, s = 0; s < a; s++) {
        var l = i[s];
        if (!r || !r.filter || null == l.query || r.filter(t, l.query)) switch (o) {
          case 0:
            l.h.call(l.ctx);
            break;
          case 1:
            l.h.call(l.ctx, e[0]);
            break;
          case 2:
            l.h.call(l.ctx, e[0], e[1]);
            break;
          default:
            l.h.apply(l.ctx, e);
        }
      }
      r && r.afterTrigger && r.afterTrigger(t);
    }
    return this;
  }, he.prototype.triggerWithContext = function (t) {
    for (var e = [], n = 1; n < arguments.length; n++) {
      e[n - 1] = arguments[n];
    }
    if (this._$handlers) {
      var i = this._$handlers[t],
        r = this._$eventProcessor;
      if (i) for (var o = e.length, a = e[o - 1], s = i.length, l = 0; l < s; l++) {
        var u = i[l];
        if (!r || !r.filter || null == u.query || r.filter(t, u.query)) switch (o) {
          case 0:
            u.h.call(a);
            break;
          case 1:
            u.h.call(a, e[0]);
            break;
          case 2:
            u.h.call(a, e[0], e[1]);
            break;
          default:
            u.h.apply(a, e.slice(1, o - 1));
        }
      }
      r && r.afterTrigger && r.afterTrigger(t);
    }
    return this;
  };
  var ue = he;
  function he(t) {
    t && (this._$eventProcessor = t);
  }
  var ce = Math.log(2);
  function pe(t, e, n, i, r, o) {
    var a,
      s = i + "-" + r,
      l = t.length;
    if (o.hasOwnProperty(s)) return o[s];
    if (1 === e) return a = Math.round(Math.log((1 << l) - 1 & ~r) / ce), t[n][a];
    for (var u = i | 1 << n, h = n + 1; i & 1 << h;) {
      h++;
    }
    for (var c = 0, p = 0, d = 0; p < l; p++) {
      var f = 1 << p;
      f & r || (c += (d % 2 ? -1 : 1) * t[n][p] * pe(t, e - 1, h, u, r | f, o), d++);
    }
    return o[s] = c;
  }
  function de(t, e) {
    var n = [[t[0], t[1], 1, 0, 0, 0, -e[0] * t[0], -e[0] * t[1]], [0, 0, 0, t[0], t[1], 1, -e[1] * t[0], -e[1] * t[1]], [t[2], t[3], 1, 0, 0, 0, -e[2] * t[2], -e[2] * t[3]], [0, 0, 0, t[2], t[3], 1, -e[3] * t[2], -e[3] * t[3]], [t[4], t[5], 1, 0, 0, 0, -e[4] * t[4], -e[4] * t[5]], [0, 0, 0, t[4], t[5], 1, -e[5] * t[4], -e[5] * t[5]], [t[6], t[7], 1, 0, 0, 0, -e[6] * t[6], -e[6] * t[7]], [0, 0, 0, t[6], t[7], 1, -e[7] * t[6], -e[7] * t[7]]],
      i = {},
      r = pe(n, 8, 0, 0, 0, i);
    if (0 !== r) {
      for (var o = [], a = 0; a < 8; a++) {
        for (var s = 0; s < 8; s++) {
          null == o[s] && (o[s] = 0), o[s] += ((a + s) % 2 ? -1 : 1) * pe(n, 7, 0 === a ? 1 : 0, 1 << a, 1 << s, i) / r * e[a];
        }
      }
      return function (t, e, n) {
        var i = e * o[6] + n * o[7] + 1;
        t[0] = (e * o[0] + n * o[1] + o[2]) / i, t[1] = (e * o[3] + n * o[4] + o[5]) / i;
      };
    }
  }
  var fe = "___zrEVENTSAVED";
  function ge(t, e, n, i, r) {
    if (e.getBoundingClientRect && b.domSupported && !ye(e)) {
      var o = e[fe] || (e[fe] = {}),
        e = function (t, e, n) {
          for (var i = n ? "invTrans" : "trans", r = e[i], o = e.srcCoords, a = [], s = [], l = !0, u = 0; u < 4; u++) {
            var h = t[u].getBoundingClientRect(),
              c = 2 * u,
              p = h.left,
              h = h.top;
            a.push(p, h), l = l && o && p === o[c] && h === o[1 + c], s.push(t[u].offsetLeft, t[u].offsetTop);
          }
          return l && r ? r : (e.srcCoords = a, e[i] = n ? de(s, a) : de(a, s));
        }(function (t, e) {
          var n = e.markers;
          if (!n) {
            n = e.markers = [];
            for (var i = ["left", "right"], r = ["top", "bottom"], o = 0; o < 4; o++) {
              var a = document.createElement("div"),
                s = a.style,
                l = o % 2,
                u = (o >> 1) % 2;
              s.cssText = ["position: absolute", "visibility: hidden", "padding: 0", "margin: 0", "border-width: 0", "user-select: none", "width:0", "height:0", i[l] + ":0", r[u] + ":0", i[1 - l] + ":auto", r[1 - u] + ":auto", ""].join("!important;"), t.appendChild(a), n.push(a);
            }
          }
          return n;
        }(e, o), o, r);
      if (e) return e(t, n, i), 1;
    }
  }
  function ye(t) {
    return "CANVAS" === t.nodeName.toUpperCase();
  }
  var me = /([&<>"'])/g,
    ve = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#39;"
    };
  function _e(t) {
    return null == t ? "" : (t + "").replace(me, function (t, e) {
      return ve[e];
    });
  }
  var xe = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
    we = [],
    be = b.browser.firefox && +b.browser.version.split(".")[0] < 39;
  function Se(t, e, n, i) {
    return n = n || {}, i ? Me(t, e, n) : be && null != e.layerX && e.layerX !== e.offsetX ? (n.zrX = e.layerX, n.zrY = e.layerY) : null != e.offsetX ? (n.zrX = e.offsetX, n.zrY = e.offsetY) : Me(t, e, n), n;
  }
  function Me(t, e, n) {
    if (b.domSupported && t.getBoundingClientRect) {
      var i,
        r = e.clientX,
        e = e.clientY;
      if (ye(t)) return i = t.getBoundingClientRect(), n.zrX = r - i.left, void (n.zrY = e - i.top);
      if (ge(we, t, r, e)) return n.zrX = we[0], void (n.zrY = we[1]);
    }
    n.zrX = n.zrY = 0;
  }
  function Te(t) {
    return t || window.event;
  }
  function Ie(t, e, n) {
    var i;
    return null == (e = Te(e)).zrX && ((i = e.type) && 0 <= i.indexOf("touch") ? (i = ("touchend" !== i ? e.targetTouches : e.changedTouches)[0]) && Se(t, i, e, n) : (Se(t, e, e, n), i = function (t) {
      var e = t.wheelDelta;
      if (e) return e;
      var n = t.deltaX,
        t = t.deltaY;
      return null != n && null != t ? 3 * (0 !== t ? Math.abs(t) : Math.abs(n)) * (0 < t || !(t < 0) && 0 < n ? -1 : 1) : e;
    }(e), e.zrDelta = i ? i / 120 : -(e.detail || 0) / 3), t = e.button, null == e.which && void 0 !== t && xe.test(e.type)) && (e.which = 1 & t ? 1 : 2 & t ? 3 : 4 & t ? 2 : 0), e;
  }
  var Ce = function Ce(t) {
      t.preventDefault(), t.stopPropagation(), t.cancelBubble = !0;
    },
    De = (ke.prototype.recognize = function (t, e, n) {
      return this._doTrack(t, e, n), this._recognize(t);
    }, ke.prototype.clear = function () {
      return this._track.length = 0, this;
    }, ke.prototype._doTrack = function (t, e, n) {
      var i = t.touches;
      if (i) {
        for (var r = {
            points: [],
            touches: [],
            target: e,
            event: t
          }, o = 0, a = i.length; o < a; o++) {
          var s = i[o],
            l = Se(n, s, {});
          r.points.push([l.zrX, l.zrY]), r.touches.push(s);
        }
        this._track.push(r);
      }
    }, ke.prototype._recognize = function (t) {
      for (var e in Pe) {
        if (Pe.hasOwnProperty(e)) {
          e = Pe[e](this._track, t);
          if (e) return e;
        }
      }
    }, ke);
  function ke() {
    this._track = [];
  }
  function Ae(t) {
    var e = t[1][0] - t[0][0],
      t = t[1][1] - t[0][1];
    return Math.sqrt(e * e + t * t);
  }
  var Pe = {
    pinch: function pinch(t, e) {
      var n,
        i = t.length;
      if (i) return n = (t[i - 1] || {}).points, (i = (t[i - 2] || {}).points || n) && 1 < i.length && n && 1 < n.length ? (i = Ae(n) / Ae(i), isFinite(i) || (i = 1), e.pinchScale = i, i = [(n[0][0] + n[1][0]) / 2, (n[0][1] + n[1][1]) / 2], e.pinchX = i[0], e.pinchY = i[1], {
        type: "pinch",
        target: t[0].target,
        event: e
      }) : void 0;
    }
  };
  function Le() {
    return [1, 0, 0, 1, 0, 0];
  }
  function Oe(t) {
    return t[0] = 1, t[1] = 0, t[2] = 0, t[3] = 1, t[4] = 0, t[5] = 0, t;
  }
  function Re(t, e) {
    return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4], t[5] = e[5], t;
  }
  function Ne(t, e, n) {
    var i = e[0] * n[0] + e[2] * n[1],
      r = e[1] * n[0] + e[3] * n[1],
      o = e[0] * n[2] + e[2] * n[3],
      a = e[1] * n[2] + e[3] * n[3],
      s = e[0] * n[4] + e[2] * n[5] + e[4],
      n = e[1] * n[4] + e[3] * n[5] + e[5];
    return t[0] = i, t[1] = r, t[2] = o, t[3] = a, t[4] = s, t[5] = n, t;
  }
  function Ee(t, e, n) {
    return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t[4] = e[4] + n[0], t[5] = e[5] + n[1], t;
  }
  function Be(t, e, n, i) {
    void 0 === i && (i = [0, 0]);
    var r = e[0],
      o = e[2],
      a = e[4],
      s = e[1],
      l = e[3],
      e = e[5],
      u = Math.sin(n),
      n = Math.cos(n);
    return t[0] = r * n + s * u, t[1] = -r * u + s * n, t[2] = o * n + l * u, t[3] = -o * u + n * l, t[4] = n * (a - i[0]) + u * (e - i[1]) + i[0], t[5] = n * (e - i[1]) - u * (a - i[0]) + i[1], t;
  }
  function ze(t, e, n) {
    var i = n[0],
      n = n[1];
    return t[0] = e[0] * i, t[1] = e[1] * n, t[2] = e[2] * i, t[3] = e[3] * n, t[4] = e[4] * i, t[5] = e[5] * n, t;
  }
  function Fe(t, e) {
    var n = e[0],
      i = e[2],
      r = e[4],
      o = e[1],
      a = e[3],
      e = e[5],
      s = n * a - o * i;
    return s ? (t[0] = a * (s = 1 / s), t[1] = -o * s, t[2] = -i * s, t[3] = n * s, t[4] = (i * e - a * r) * s, t[5] = (o * r - n * e) * s, t) : null;
  }
  var Ve = Object.freeze({
      __proto__: null,
      clone: function clone(t) {
        var e = Le();
        return Re(e, t), e;
      },
      copy: Re,
      create: Le,
      identity: Oe,
      invert: Fe,
      mul: Ne,
      rotate: Be,
      scale: ze,
      translate: Ee
    }),
    H = (e.prototype.copy = function (t) {
      return this.x = t.x, this.y = t.y, this;
    }, e.prototype.clone = function () {
      return new e(this.x, this.y);
    }, e.prototype.set = function (t, e) {
      return this.x = t, this.y = e, this;
    }, e.prototype.equal = function (t) {
      return t.x === this.x && t.y === this.y;
    }, e.prototype.add = function (t) {
      return this.x += t.x, this.y += t.y, this;
    }, e.prototype.scale = function (t) {
      this.x *= t, this.y *= t;
    }, e.prototype.scaleAndAdd = function (t, e) {
      this.x += t.x * e, this.y += t.y * e;
    }, e.prototype.sub = function (t) {
      return this.x -= t.x, this.y -= t.y, this;
    }, e.prototype.dot = function (t) {
      return this.x * t.x + this.y * t.y;
    }, e.prototype.len = function () {
      return Math.sqrt(this.x * this.x + this.y * this.y);
    }, e.prototype.lenSquare = function () {
      return this.x * this.x + this.y * this.y;
    }, e.prototype.normalize = function () {
      var t = this.len();
      return this.x /= t, this.y /= t, this;
    }, e.prototype.distance = function (t) {
      var e = this.x - t.x,
        t = this.y - t.y;
      return Math.sqrt(e * e + t * t);
    }, e.prototype.distanceSquare = function (t) {
      var e = this.x - t.x,
        t = this.y - t.y;
      return e * e + t * t;
    }, e.prototype.negate = function () {
      return this.x = -this.x, this.y = -this.y, this;
    }, e.prototype.transform = function (t) {
      var e, n;
      if (t) return e = this.x, n = this.y, this.x = t[0] * e + t[2] * n + t[4], this.y = t[1] * e + t[3] * n + t[5], this;
    }, e.prototype.toArray = function (t) {
      return t[0] = this.x, t[1] = this.y, t;
    }, e.prototype.fromArray = function (t) {
      this.x = t[0], this.y = t[1];
    }, e.set = function (t, e, n) {
      t.x = e, t.y = n;
    }, e.copy = function (t, e) {
      t.x = e.x, t.y = e.y;
    }, e.len = function (t) {
      return Math.sqrt(t.x * t.x + t.y * t.y);
    }, e.lenSquare = function (t) {
      return t.x * t.x + t.y * t.y;
    }, e.dot = function (t, e) {
      return t.x * e.x + t.y * e.y;
    }, e.add = function (t, e, n) {
      t.x = e.x + n.x, t.y = e.y + n.y;
    }, e.sub = function (t, e, n) {
      t.x = e.x - n.x, t.y = e.y - n.y;
    }, e.scale = function (t, e, n) {
      t.x = e.x * n, t.y = e.y * n;
    }, e.scaleAndAdd = function (t, e, n, i) {
      t.x = e.x + n.x * i, t.y = e.y + n.y * i;
    }, e.lerp = function (t, e, n, i) {
      var r = 1 - i;
      t.x = r * e.x + i * n.x, t.y = r * e.y + i * n.y;
    }, e);
  function e(t, e) {
    this.x = t || 0, this.y = e || 0;
  }
  var We = Math.min,
    He = Math.max,
    Ge = new H(),
    Ue = new H(),
    qe = new H(),
    Xe = new H(),
    Ye = new H(),
    Ze = new H(),
    q = (je.prototype.union = function (t) {
      var e = We(t.x, this.x),
        n = We(t.y, this.y);
      isFinite(this.x) && isFinite(this.width) ? this.width = He(t.x + t.width, this.x + this.width) - e : this.width = t.width, isFinite(this.y) && isFinite(this.height) ? this.height = He(t.y + t.height, this.y + this.height) - n : this.height = t.height, this.x = e, this.y = n;
    }, je.prototype.applyTransform = function (t) {
      je.applyTransform(this, this, t);
    }, je.prototype.calculateTransform = function (t) {
      var e = t.width / this.width,
        n = t.height / this.height,
        i = Le();
      return Ee(i, i, [-this.x, -this.y]), ze(i, i, [e, n]), Ee(i, i, [t.x, t.y]), i;
    }, je.prototype.intersect = function (t, e) {
      if (!t) return !1;
      t instanceof je || (t = je.create(t));
      var n,
        i,
        r,
        o,
        a,
        s,
        l,
        u,
        h = this,
        c = h.x,
        p = h.x + h.width,
        d = h.y,
        h = h.y + h.height,
        f = t.x,
        g = t.x + t.width,
        y = t.y,
        t = t.y + t.height,
        m = !(p < f || g < c || h < y || t < d);
      return e && (n = 1 / 0, i = 0, r = Math.abs(p - f), o = Math.abs(g - c), a = Math.abs(h - y), s = Math.abs(t - d), l = Math.min(r, o), u = Math.min(a, s), p < f || g < c ? i < l && (i = l, r < o ? H.set(Ze, -r, 0) : H.set(Ze, o, 0)) : l < n && (n = l, r < o ? H.set(Ye, r, 0) : H.set(Ye, -o, 0)), h < y || t < d ? i < u && (i = u, a < s ? H.set(Ze, 0, -a) : H.set(Ze, 0, s)) : l < n && (n = l, a < s ? H.set(Ye, 0, a) : H.set(Ye, 0, -s))), e && H.copy(e, m ? Ye : Ze), m;
    }, je.prototype.contain = function (t, e) {
      var n = this;
      return t >= n.x && t <= n.x + n.width && e >= n.y && e <= n.y + n.height;
    }, je.prototype.clone = function () {
      return new je(this.x, this.y, this.width, this.height);
    }, je.prototype.copy = function (t) {
      je.copy(this, t);
    }, je.prototype.plain = function () {
      return {
        x: this.x,
        y: this.y,
        width: this.width,
        height: this.height
      };
    }, je.prototype.isFinite = function () {
      return isFinite(this.x) && isFinite(this.y) && isFinite(this.width) && isFinite(this.height);
    }, je.prototype.isZero = function () {
      return 0 === this.width || 0 === this.height;
    }, je.create = function (t) {
      return new je(t.x, t.y, t.width, t.height);
    }, je.copy = function (t, e) {
      t.x = e.x, t.y = e.y, t.width = e.width, t.height = e.height;
    }, je.applyTransform = function (t, e, n) {
      var i, r, o, a;
      n ? n[1] < 1e-5 && -1e-5 < n[1] && n[2] < 1e-5 && -1e-5 < n[2] ? (i = n[0], r = n[3], o = n[4], a = n[5], t.x = e.x * i + o, t.y = e.y * r + a, t.width = e.width * i, t.height = e.height * r, t.width < 0 && (t.x += t.width, t.width = -t.width), t.height < 0 && (t.y += t.height, t.height = -t.height)) : (Ge.x = qe.x = e.x, Ge.y = Xe.y = e.y, Ue.x = Xe.x = e.x + e.width, Ue.y = qe.y = e.y + e.height, Ge.transform(n), Xe.transform(n), Ue.transform(n), qe.transform(n), t.x = We(Ge.x, Ue.x, qe.x, Xe.x), t.y = We(Ge.y, Ue.y, qe.y, Xe.y), o = He(Ge.x, Ue.x, qe.x, Xe.x), a = He(Ge.y, Ue.y, qe.y, Xe.y), t.width = o - t.x, t.height = a - t.y) : t !== e && je.copy(t, e);
    }, je);
  function je(t, e, n, i) {
    n < 0 && (t += n, n = -n), i < 0 && (e += i, i = -i), this.x = t, this.y = e, this.width = n, this.height = i;
  }
  var Ke = "silent";
  function $e() {
    Ce(this.event);
  }
  u(tn, Qe = ue), tn.prototype.dispose = function () {}, tn.prototype.setCursor = function () {};
  var Qe,
    Je = tn;
  function tn() {
    var t = null !== Qe && Qe.apply(this, arguments) || this;
    return t.handler = null, t;
  }
  var en,
    nn = function nn(t, e) {
      this.x = t, this.y = e;
    },
    rn = ["click", "dblclick", "mousewheel", "mouseout", "mouseup", "mousedown", "mousemove", "contextmenu"],
    on = new q(0, 0, 0, 0),
    an = (u(sn, en = ue), sn.prototype.setHandlerProxy = function (e) {
      this.proxy && this.proxy.dispose(), e && (E(rn, function (t) {
        e.on && e.on(t, this[t], this);
      }, this), e.handler = this), this.proxy = e;
    }, sn.prototype.mousemove = function (t) {
      var e = t.zrX,
        n = t.zrY,
        i = un(this, e, n),
        r = this._hovered,
        o = r.target,
        i = (o && !o.__zr && (o = (r = this.findHover(r.x, r.y)).target), this._hovered = i ? new nn(e, n) : this.findHover(e, n)),
        e = i.target,
        n = this.proxy;
      n.setCursor && n.setCursor(e ? e.cursor : "default"), o && e !== o && this.dispatchToElement(r, "mouseout", t), this.dispatchToElement(i, "mousemove", t), e && e !== o && this.dispatchToElement(i, "mouseover", t);
    }, sn.prototype.mouseout = function (t) {
      var e = t.zrEventControl;
      "only_globalout" !== e && this.dispatchToElement(this._hovered, "mouseout", t), "no_globalout" !== e && this.trigger("globalout", {
        type: "globalout",
        event: t
      });
    }, sn.prototype.resize = function () {
      this._hovered = new nn(0, 0);
    }, sn.prototype.dispatch = function (t, e) {
      t = this[t];
      t && t.call(this, e);
    }, sn.prototype.dispose = function () {
      this.proxy.dispose(), this.storage = null, this.proxy = null, this.painter = null;
    }, sn.prototype.setCursorStyle = function (t) {
      var e = this.proxy;
      e.setCursor && e.setCursor(t);
    }, sn.prototype.dispatchToElement = function (t, e, n) {
      var i = (t = t || {}).target;
      if (!i || !i.silent) {
        for (var r = "on" + e, o = {
            type: e,
            event: n,
            target: (t = t).target,
            topTarget: t.topTarget,
            cancelBubble: !1,
            offsetX: n.zrX,
            offsetY: n.zrY,
            gestureEvent: n.gestureEvent,
            pinchX: n.pinchX,
            pinchY: n.pinchY,
            pinchScale: n.pinchScale,
            wheelDelta: n.zrDelta,
            zrByTouch: n.zrByTouch,
            which: n.which,
            stop: $e
          }; i && (i[r] && (o.cancelBubble = !!i[r].call(i, o)), i.trigger(e, o), i = i.__hostTarget || i.parent, !o.cancelBubble);) {
          ;
        }
        o.cancelBubble || (this.trigger(e, o), this.painter && this.painter.eachOtherLayer && this.painter.eachOtherLayer(function (t) {
          "function" == typeof t[r] && t[r].call(t, o), t.trigger && t.trigger(e, o);
        }));
      }
    }, sn.prototype.findHover = function (t, e, n) {
      var i = this.storage.getDisplayList(),
        r = new nn(t, e);
      if (ln(i, r, t, e, n), this._pointerSize && !r.target) {
        for (var o = [], a = this._pointerSize, s = a / 2, l = new q(t - s, e - s, a, a), u = i.length - 1; 0 <= u; u--) {
          var h = i[u];
          h === n || h.ignore || h.ignoreCoarsePointer || h.parent && h.parent.ignoreCoarsePointer || (on.copy(h.getBoundingRect()), h.transform && on.applyTransform(h.transform), on.intersect(l) && o.push(h));
        }
        if (o.length) for (var c = Math.PI / 12, p = 2 * Math.PI, d = 0; d < s; d += 4) {
          for (var f = 0; f < p; f += c) {
            if (ln(o, r, t + d * Math.cos(f), e + d * Math.sin(f), n), r.target) return r;
          }
        }
      }
      return r;
    }, sn.prototype.processGesture = function (t, e) {
      this._gestureMgr || (this._gestureMgr = new De());
      var n = this._gestureMgr,
        i = ("start" === e && n.clear(), n.recognize(t, this.findHover(t.zrX, t.zrY, null).target, this.proxy.dom));
      "end" === e && n.clear(), i && (e = i.type, t.gestureEvent = e, (n = new nn()).target = i.target, this.dispatchToElement(n, e, i.event));
    }, sn);
  function sn(t, e, n, i, r) {
    var o = en.call(this) || this;
    return o._hovered = new nn(0, 0), o.storage = t, o.painter = e, o.painterRoot = i, o._pointerSize = r, n = n || new Je(), o.proxy = null, o.setHandlerProxy(n), o._draggingMgr = new se(o), o;
  }
  function ln(t, e, n, i, r) {
    for (var o = t.length - 1; 0 <= o; o--) {
      var a = t[o],
        s = void 0;
      if (a !== r && !a.ignore && (s = function (t, e, n) {
        if (t[t.rectHover ? "rectContain" : "contain"](e, n)) {
          for (var i = t, r = void 0, o = !1; i;) {
            if (!(o = i.ignoreClip ? !0 : o)) {
              var a = i.getClipPath();
              if (a && !a.contain(e, n)) return !1;
            }
            i.silent && (r = !0);
            a = i.__hostTarget, i = a || i.parent;
          }
          return !r || Ke;
        }
        return !1;
      }(a, n, i)) && (e.topTarget || (e.topTarget = a), s !== Ke)) {
        e.target = a;
        break;
      }
    }
  }
  function un(t, e, n) {
    t = t.painter;
    return e < 0 || e > t.getWidth() || n < 0 || n > t.getHeight();
  }
  E(["click", "mousedown", "mouseup", "mousewheel", "dblclick", "contextmenu"], function (a) {
    an.prototype[a] = function (t) {
      var e,
        n,
        i = t.zrX,
        r = t.zrY,
        o = un(this, i, r);
      if ("mouseup" === a && o || (n = (e = this.findHover(i, r)).target), "mousedown" === a) this._downEl = n, this._downPoint = [t.zrX, t.zrY], this._upEl = n;else if ("mouseup" === a) this._upEl = n;else if ("click" === a) {
        if (this._downEl !== this._upEl || !this._downPoint || 4 < Qt(this._downPoint, [t.zrX, t.zrY])) return;
        this._downPoint = null;
      }
      this.dispatchToElement(e, a, t);
    };
  });
  var hn = 32,
    cn = 7;
  function pn(t, e, n, i) {
    var r = e + 1;
    if (r === n) return 1;
    if (i(t[r++], t[e]) < 0) {
      for (; r < n && i(t[r], t[r - 1]) < 0;) {
        r++;
      }
      var o = t,
        a = e,
        s = r;
      for (s--; a < s;) {
        var l = o[a];
        o[a++] = o[s], o[s--] = l;
      }
    } else for (; r < n && 0 <= i(t[r], t[r - 1]);) {
      r++;
    }
    return r - e;
  }
  function dn(t, e, n, i, r) {
    for (i === e && i++; i < n; i++) {
      for (var o, a = t[i], s = e, l = i; s < l;) {
        r(a, t[o = s + l >>> 1]) < 0 ? l = o : s = 1 + o;
      }
      var u = i - s;
      switch (u) {
        case 3:
          t[s + 3] = t[s + 2];
        case 2:
          t[s + 2] = t[s + 1];
        case 1:
          t[s + 1] = t[s];
          break;
        default:
          for (; 0 < u;) {
            t[s + u] = t[s + u - 1], u--;
          }
      }
      t[s] = a;
    }
  }
  function fn(t, e, n, i, r, o) {
    var a = 0,
      s = 0,
      l = 1;
    if (0 < o(t, e[n + r])) {
      for (s = i - r; l < s && 0 < o(t, e[n + r + l]);) {
        (l = 1 + ((a = l) << 1)) <= 0 && (l = s);
      }
      s < l && (l = s), a += r, l += r;
    } else {
      for (s = r + 1; l < s && o(t, e[n + r - l]) <= 0;) {
        (l = 1 + ((a = l) << 1)) <= 0 && (l = s);
      }
      i = a, a = r - (l = s < l ? s : l), l = r - i;
    }
    for (a++; a < l;) {
      var u = a + (l - a >>> 1);
      0 < o(t, e[n + u]) ? a = u + 1 : l = u;
    }
    return l;
  }
  function gn(t, e, n, i, r, o) {
    var a = 0,
      s = 0,
      l = 1;
    if (o(t, e[n + r]) < 0) {
      for (s = r + 1; l < s && o(t, e[n + r - l]) < 0;) {
        (l = 1 + ((a = l) << 1)) <= 0 && (l = s);
      }
      var u = a,
        a = r - (l = s < l ? s : l),
        l = r - u;
    } else {
      for (s = i - r; l < s && 0 <= o(t, e[n + r + l]);) {
        (l = 1 + ((a = l) << 1)) <= 0 && (l = s);
      }
      s < l && (l = s), a += r, l += r;
    }
    for (a++; a < l;) {
      var h = a + (l - a >>> 1);
      o(t, e[n + h]) < 0 ? l = h : a = h + 1;
    }
    return l;
  }
  function yn(A, P) {
    var L,
      O,
      R = cn,
      N = 0,
      E = [];
    function e(t) {
      var e = L[t],
        n = O[t],
        i = L[t + 1],
        r = O[t + 1],
        t = (O[t] = n + r, t === N - 3 && (L[t + 1] = L[t + 2], O[t + 1] = O[t + 2]), N--, gn(A[i], A, e, n, 0, P));
      if (e += t, 0 != (n -= t) && 0 !== (r = fn(A[e + n - 1], A, i, r, r - 1, P))) if (n <= r) {
        var o = e,
          a = n,
          t = i,
          s = r,
          l = 0;
        for (l = 0; l < a; l++) {
          E[l] = A[o + l];
        }
        var u = 0,
          h = t,
          c = o;
        if (A[c++] = A[h++], 0 == --s) for (l = 0; l < a; l++) {
          A[c + l] = E[u + l];
        } else if (1 === a) {
          for (l = 0; l < s; l++) {
            A[c + l] = A[h + l];
          }
          A[c + s] = E[u];
        } else {
          for (var p, d, f, g = R;;) {
            d = p = 0, f = !1;
            do {
              if (P(A[h], E[u]) < 0) {
                if (A[c++] = A[h++], d++, (p = 0) == --s) {
                  f = !0;
                  break;
                }
              } else if (A[c++] = E[u++], p++, d = 0, 1 == --a) {
                f = !0;
                break;
              }
            } while ((p | d) < g);
            if (f) break;
            do {
              if (0 !== (p = gn(A[h], E, u, a, 0, P))) {
                for (l = 0; l < p; l++) {
                  A[c + l] = E[u + l];
                }
                if (c += p, u += p, (a -= p) <= 1) {
                  f = !0;
                  break;
                }
              }
              if (A[c++] = A[h++], 0 == --s) {
                f = !0;
                break;
              }
              if (0 !== (d = fn(E[u], A, h, s, 0, P))) {
                for (l = 0; l < d; l++) {
                  A[c + l] = A[h + l];
                }
                if (c += d, h += d, 0 === (s -= d)) {
                  f = !0;
                  break;
                }
              }
              if (A[c++] = E[u++], 1 == --a) {
                f = !0;
                break;
              }
            } while ((g--, cn <= p || cn <= d));
            if (f) break;
            g < 0 && (g = 0), g += 2;
          }
          if ((R = g) < 1 && (R = 1), 1 === a) {
            for (l = 0; l < s; l++) {
              A[c + l] = A[h + l];
            }
            A[c + s] = E[u];
          } else {
            if (0 === a) throw new Error();
            for (l = 0; l < a; l++) {
              A[c + l] = E[u + l];
            }
          }
        }
      } else {
        var y = e,
          m = n,
          v = i,
          _ = r,
          x = 0;
        for (x = 0; x < _; x++) {
          E[x] = A[v + x];
        }
        var w = y + m - 1,
          b = _ - 1,
          S = v + _ - 1,
          M = 0,
          T = 0;
        if (A[S--] = A[w--], 0 == --m) for (M = S - (_ - 1), x = 0; x < _; x++) {
          A[M + x] = E[x];
        } else if (1 === _) {
          for (T = (S -= m) + 1, M = (w -= m) + 1, x = m - 1; 0 <= x; x--) {
            A[T + x] = A[M + x];
          }
          A[S] = E[b];
        } else {
          for (var I = R;;) {
            var C = 0,
              D = 0,
              k = !1;
            do {
              if (P(E[b], A[w]) < 0) {
                if (A[S--] = A[w--], C++, (D = 0) == --m) {
                  k = !0;
                  break;
                }
              } else if (A[S--] = E[b--], D++, C = 0, 1 == --_) {
                k = !0;
                break;
              }
            } while ((C | D) < I);
            if (k) break;
            do {
              if (0 !== (C = m - gn(E[b], A, y, m, m - 1, P))) {
                for (m -= C, T = (S -= C) + 1, M = (w -= C) + 1, x = C - 1; 0 <= x; x--) {
                  A[T + x] = A[M + x];
                }
                if (0 === m) {
                  k = !0;
                  break;
                }
              }
              if (A[S--] = E[b--], 1 == --_) {
                k = !0;
                break;
              }
              if (0 !== (D = _ - fn(A[w], E, 0, _, _ - 1, P))) {
                for (_ -= D, T = (S -= D) + 1, M = (b -= D) + 1, x = 0; x < D; x++) {
                  A[T + x] = E[M + x];
                }
                if (_ <= 1) {
                  k = !0;
                  break;
                }
              }
              if (A[S--] = A[w--], 0 == --m) {
                k = !0;
                break;
              }
            } while ((I--, cn <= C || cn <= D));
            if (k) break;
            I < 0 && (I = 0), I += 2;
          }
          if ((R = I) < 1 && (R = 1), 1 === _) {
            for (T = (S -= m) + 1, M = (w -= m) + 1, x = m - 1; 0 <= x; x--) {
              A[T + x] = A[M + x];
            }
            A[S] = E[b];
          } else {
            if (0 === _) throw new Error();
            for (M = S - (_ - 1), x = 0; x < _; x++) {
              A[M + x] = E[x];
            }
          }
        }
      }
    }
    return L = [], O = [], {
      mergeRuns: function mergeRuns() {
        for (; 1 < N;) {
          var t = N - 2;
          if (1 <= t && O[t - 1] <= O[t] + O[t + 1] || 2 <= t && O[t - 2] <= O[t] + O[t - 1]) O[t - 1] < O[t + 1] && t--;else if (O[t] > O[t + 1]) break;
          e(t);
        }
      },
      forceMergeRuns: function forceMergeRuns() {
        for (; 1 < N;) {
          var t = N - 2;
          0 < t && O[t - 1] < O[t + 1] && t--, e(t);
        }
      },
      pushRun: function pushRun(t, e) {
        L[N] = t, O[N] = e, N += 1;
      }
    };
  }
  function mn(t, e, n, i) {
    var r = (i = i || t.length) - (n = n || 0);
    if (!(r < 2)) {
      var o = 0;
      if (r < hn) dn(t, n, i, n + (o = pn(t, n, i, e)), e);else {
        var a,
          s = yn(t, e),
          l = function (t) {
            for (var e = 0; hn <= t;) {
              e |= 1 & t, t >>= 1;
            }
            return t + e;
          }(r);
        do {} while (((o = pn(t, n, i, e)) < l && (dn(t, n, n + (a = l < (a = r) ? l : r), n + o, e), o = a), s.pushRun(n, o), s.mergeRuns(), n += o, 0 !== (r -= o)));
        s.forceMergeRuns();
      }
    }
  }
  var vn = 1,
    _n = 4,
    xn = !1;
  function wn() {
    xn || (xn = !0, console.warn("z / z2 / zlevel of displayable is invalid, which may cause unexpected errors"));
  }
  function bn(t, e) {
    return t.zlevel === e.zlevel ? t.z === e.z ? t.z2 - e.z2 : t.z - e.z : t.zlevel - e.zlevel;
  }
  Mn.prototype.traverse = function (t, e) {
    for (var n = 0; n < this._roots.length; n++) {
      this._roots[n].traverse(t, e);
    }
  }, Mn.prototype.getDisplayList = function (t, e) {
    e = e || !1;
    var n = this._displayList;
    return !t && n.length || this.updateDisplayList(e), n;
  }, Mn.prototype.updateDisplayList = function (t) {
    this._displayListLen = 0;
    for (var e = this._roots, n = this._displayList, i = 0, r = e.length; i < r; i++) {
      this._updateAndAddDisplayable(e[i], null, t);
    }
    n.length = this._displayListLen, mn(n, bn);
  }, Mn.prototype._updateAndAddDisplayable = function (t, e, n) {
    if (!t.ignore || n) {
      t.beforeUpdate(), t.update(), t.afterUpdate();
      var i = t.getClipPath();
      if (t.ignoreClip) e = null;else if (i) {
        e = e ? e.slice() : [];
        for (var r = i, o = t; r;) {
          r.parent = o, r.updateTransform(), e.push(r), r = (o = r).getClipPath();
        }
      }
      if (t.childrenRef) {
        for (var a = t.childrenRef(), s = 0; s < a.length; s++) {
          var l = a[s];
          t.__dirty && (l.__dirty |= vn), this._updateAndAddDisplayable(l, e, n);
        }
        t.__dirty = 0;
      } else {
        i = t;
        e && e.length ? i.__clipPaths = e : i.__clipPaths && 0 < i.__clipPaths.length && (i.__clipPaths = []), isNaN(i.z) && (wn(), i.z = 0), isNaN(i.z2) && (wn(), i.z2 = 0), isNaN(i.zlevel) && (wn(), i.zlevel = 0), this._displayList[this._displayListLen++] = i;
      }
      i = t.getDecalElement && t.getDecalElement(), i = (i && this._updateAndAddDisplayable(i, e, n), t.getTextGuideLine()), i = (i && this._updateAndAddDisplayable(i, e, n), t.getTextContent());
      i && this._updateAndAddDisplayable(i, e, n);
    }
  }, Mn.prototype.addRoot = function (t) {
    t.__zr && t.__zr.storage === this || this._roots.push(t);
  }, Mn.prototype.delRoot = function (t) {
    if (t instanceof Array) for (var e = 0, n = t.length; e < n; e++) {
      this.delRoot(t[e]);
    } else {
      var i = C(this._roots, t);
      0 <= i && this._roots.splice(i, 1);
    }
  }, Mn.prototype.delAllRoots = function () {
    this._roots = [], this._displayList = [], this._displayListLen = 0;
  }, Mn.prototype.getRoots = function () {
    return this._roots;
  }, Mn.prototype.dispose = function () {
    this._displayList = null, this._roots = null;
  };
  var Sn = Mn;
  function Mn() {
    this._roots = [], this._displayList = [], this._displayListLen = 0, this.displayableSortFunc = bn;
  }
  var Tn = b.hasGlobalWindow && (window.requestAnimationFrame && window.requestAnimationFrame.bind(window) || window.msRequestAnimationFrame && window.msRequestAnimationFrame.bind(window) || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame) || function (t) {
      return setTimeout(t, 16);
    },
    In = {
      linear: function linear(t) {
        return t;
      },
      quadraticIn: function quadraticIn(t) {
        return t * t;
      },
      quadraticOut: function quadraticOut(t) {
        return t * (2 - t);
      },
      quadraticInOut: function quadraticInOut(t) {
        return (t *= 2) < 1 ? .5 * t * t : -.5 * (--t * (t - 2) - 1);
      },
      cubicIn: function cubicIn(t) {
        return t * t * t;
      },
      cubicOut: function cubicOut(t) {
        return --t * t * t + 1;
      },
      cubicInOut: function cubicInOut(t) {
        return (t *= 2) < 1 ? .5 * t * t * t : .5 * ((t -= 2) * t * t + 2);
      },
      quarticIn: function quarticIn(t) {
        return t * t * t * t;
      },
      quarticOut: function quarticOut(t) {
        return 1 - --t * t * t * t;
      },
      quarticInOut: function quarticInOut(t) {
        return (t *= 2) < 1 ? .5 * t * t * t * t : -.5 * ((t -= 2) * t * t * t - 2);
      },
      quinticIn: function quinticIn(t) {
        return t * t * t * t * t;
      },
      quinticOut: function quinticOut(t) {
        return --t * t * t * t * t + 1;
      },
      quinticInOut: function quinticInOut(t) {
        return (t *= 2) < 1 ? .5 * t * t * t * t * t : .5 * ((t -= 2) * t * t * t * t + 2);
      },
      sinusoidalIn: function sinusoidalIn(t) {
        return 1 - Math.cos(t * Math.PI / 2);
      },
      sinusoidalOut: function sinusoidalOut(t) {
        return Math.sin(t * Math.PI / 2);
      },
      sinusoidalInOut: function sinusoidalInOut(t) {
        return .5 * (1 - Math.cos(Math.PI * t));
      },
      exponentialIn: function exponentialIn(t) {
        return 0 === t ? 0 : Math.pow(1024, t - 1);
      },
      exponentialOut: function exponentialOut(t) {
        return 1 === t ? 1 : 1 - Math.pow(2, -10 * t);
      },
      exponentialInOut: function exponentialInOut(t) {
        return 0 === t ? 0 : 1 === t ? 1 : (t *= 2) < 1 ? .5 * Math.pow(1024, t - 1) : .5 * (2 - Math.pow(2, -10 * (t - 1)));
      },
      circularIn: function circularIn(t) {
        return 1 - Math.sqrt(1 - t * t);
      },
      circularOut: function circularOut(t) {
        return Math.sqrt(1 - --t * t);
      },
      circularInOut: function circularInOut(t) {
        return (t *= 2) < 1 ? -.5 * (Math.sqrt(1 - t * t) - 1) : .5 * (Math.sqrt(1 - (t -= 2) * t) + 1);
      },
      elasticIn: function elasticIn(t) {
        var e,
          n = .1;
        return 0 === t ? 0 : 1 === t ? 1 : (e = !n || n < 1 ? (n = 1, .1) : .4 * Math.asin(1 / n) / (2 * Math.PI), -(n * Math.pow(2, 10 * --t) * Math.sin((t - e) * (2 * Math.PI) / .4)));
      },
      elasticOut: function elasticOut(t) {
        var e,
          n = .1;
        return 0 === t ? 0 : 1 === t ? 1 : (e = !n || n < 1 ? (n = 1, .1) : .4 * Math.asin(1 / n) / (2 * Math.PI), n * Math.pow(2, -10 * t) * Math.sin((t - e) * (2 * Math.PI) / .4) + 1);
      },
      elasticInOut: function elasticInOut(t) {
        var e,
          n = .1;
        return 0 === t ? 0 : 1 === t ? 1 : (e = !n || n < 1 ? (n = 1, .1) : .4 * Math.asin(1 / n) / (2 * Math.PI), (t *= 2) < 1 ? n * Math.pow(2, 10 * --t) * Math.sin((t - e) * (2 * Math.PI) / .4) * -.5 : n * Math.pow(2, -10 * --t) * Math.sin((t - e) * (2 * Math.PI) / .4) * .5 + 1);
      },
      backIn: function backIn(t) {
        return t * t * (2.70158 * t - 1.70158);
      },
      backOut: function backOut(t) {
        return --t * t * (2.70158 * t + 1.70158) + 1;
      },
      backInOut: function backInOut(t) {
        var e = 2.5949095;
        return (t *= 2) < 1 ? t * t * ((1 + e) * t - e) * .5 : .5 * ((t -= 2) * t * ((1 + e) * t + e) + 2);
      },
      bounceIn: function bounceIn(t) {
        return 1 - In.bounceOut(1 - t);
      },
      bounceOut: function bounceOut(t) {
        return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;
      },
      bounceInOut: function bounceInOut(t) {
        return t < .5 ? .5 * In.bounceIn(2 * t) : .5 * In.bounceOut(2 * t - 1) + .5;
      }
    },
    Cn = Math.pow,
    Dn = Math.sqrt,
    kn = 1e-8,
    An = Dn(3),
    Pn = 1 / 3,
    Ln = Gt(),
    On = Gt(),
    Rn = Gt();
  function Nn(t) {
    return -kn < t && t < kn;
  }
  function En(t) {
    return kn < t || t < -kn;
  }
  function Bn(t, e, n, i, r) {
    var o = 1 - r;
    return o * o * (o * t + 3 * r * e) + r * r * (r * i + 3 * o * n);
  }
  function zn(t, e, n, i, r) {
    var o = 1 - r;
    return 3 * (((e - t) * o + 2 * (n - e) * r) * o + (i - n) * r * r);
  }
  function Fn(t, e, n, i, r, o) {
    var a,
      s,
      i = i + 3 * (e - n) - t,
      n = 3 * (n - 2 * e + t),
      e = 3 * (e - t),
      t = t - r,
      r = n * n - 3 * i * e,
      l = n * e - 9 * i * t,
      t = e * e - 3 * n * t,
      u = 0;
    return Nn(r) && Nn(l) ? Nn(n) ? o[0] = 0 : 0 <= (a = -e / n) && a <= 1 && (o[u++] = a) : Nn(e = l * l - 4 * r * t) ? (s = -(t = l / r) / 2, 0 <= (a = -n / i + t) && a <= 1 && (o[u++] = a), 0 <= s && s <= 1 && (o[u++] = s)) : 0 < e ? (e = r * n + 1.5 * i * (-l - (t = Dn(e))), 0 <= (a = (-n - ((t = (t = r * n + 1.5 * i * (-l + t)) < 0 ? -Cn(-t, Pn) : Cn(t, Pn)) + (e = e < 0 ? -Cn(-e, Pn) : Cn(e, Pn)))) / (3 * i)) && a <= 1 && (o[u++] = a)) : (t = (2 * r * n - 3 * i * l) / (2 * Dn(r * r * r)), e = Math.acos(t) / 3, a = (-n - 2 * (l = Dn(r)) * (t = Math.cos(e))) / (3 * i), s = (-n + l * (t + An * Math.sin(e))) / (3 * i), r = (-n + l * (t - An * Math.sin(e))) / (3 * i), 0 <= a && a <= 1 && (o[u++] = a), 0 <= s && s <= 1 && (o[u++] = s), 0 <= r && r <= 1 && (o[u++] = r)), u;
  }
  function Vn(t, e, n, i, r) {
    var o,
      a = 6 * n - 12 * e + 6 * t,
      i = 9 * e + 3 * i - 3 * t - 9 * n,
      n = 3 * e - 3 * t,
      e = 0;
    return Nn(i) ? En(a) && 0 <= (o = -n / a) && o <= 1 && (r[e++] = o) : Nn(t = a * a - 4 * i * n) ? r[0] = -a / (2 * i) : 0 < t && (t = (-a - (n = Dn(t))) / (2 * i), 0 <= (o = (-a + n) / (2 * i)) && o <= 1 && (r[e++] = o), 0 <= t) && t <= 1 && (r[e++] = t), e;
  }
  function Wn(t, e, n, i, r, o) {
    var a = (e - t) * r + t,
      e = (n - e) * r + e,
      n = (i - n) * r + n,
      s = (e - a) * r + a,
      e = (n - e) * r + e,
      r = (e - s) * r + s;
    o[0] = t, o[1] = a, o[2] = s, o[3] = r, o[4] = r, o[5] = e, o[6] = n, o[7] = i;
  }
  function Hn(t, e, n, i, r, o, a, s, l, u, h) {
    var c,
      p,
      d,
      f,
      g = .005,
      y = 1 / 0;
    Ln[0] = l, Ln[1] = u;
    for (var m = 0; m < 1; m += .05) {
      On[0] = Bn(t, n, r, a, m), On[1] = Bn(e, i, o, s, m), (d = te(Ln, On)) < y && (c = m, y = d);
    }
    for (var y = 1 / 0, v = 0; v < 32 && !(g < 1e-4); v++) {
      p = c + g, On[0] = Bn(t, n, r, a, f = c - g), On[1] = Bn(e, i, o, s, f), d = te(On, Ln), 0 <= f && d < y ? (c = f, y = d) : (Rn[0] = Bn(t, n, r, a, p), Rn[1] = Bn(e, i, o, s, p), f = te(Rn, Ln), p <= 1 && f < y ? (c = p, y = f) : g *= .5);
    }
    return h && (h[0] = Bn(t, n, r, a, c), h[1] = Bn(e, i, o, s, c)), Dn(y);
  }
  function Gn(t, e, n, i) {
    var r = 1 - i;
    return r * (r * t + 2 * i * e) + i * i * n;
  }
  function Un(t, e, n, i) {
    return 2 * ((1 - i) * (e - t) + i * (n - e));
  }
  function qn(t, e, n) {
    n = t + n - 2 * e;
    return 0 == n ? .5 : (t - e) / n;
  }
  function Xn(t, e, n, i, r) {
    var o = (e - t) * i + t,
      e = (n - e) * i + e,
      i = (e - o) * i + o;
    r[0] = t, r[1] = o, r[2] = i, r[3] = i, r[4] = e, r[5] = n;
  }
  function Yn(t, e, n, i, r, o, a, s, l) {
    var u,
      h = .005,
      c = 1 / 0;
    Ln[0] = a, Ln[1] = s;
    for (var p = 0; p < 1; p += .05) {
      On[0] = Gn(t, n, r, p), On[1] = Gn(e, i, o, p), (y = te(Ln, On)) < c && (u = p, c = y);
    }
    for (var c = 1 / 0, d = 0; d < 32 && !(h < 1e-4); d++) {
      var f = u - h,
        g = u + h,
        y = (On[0] = Gn(t, n, r, f), On[1] = Gn(e, i, o, f), te(On, Ln));
      0 <= f && y < c ? (u = f, c = y) : (Rn[0] = Gn(t, n, r, g), Rn[1] = Gn(e, i, o, g), f = te(Rn, Ln), g <= 1 && f < c ? (u = g, c = f) : h *= .5);
    }
    return l && (l[0] = Gn(t, n, r, u), l[1] = Gn(e, i, o, u)), Dn(c);
  }
  var Zn = /cubic-bezier\(([0-9,\.e ]+)\)/;
  function jn(t) {
    t = t && Zn.exec(t);
    if (t) {
      var e,
        t = t[1].split(","),
        n = +Ct(t[0]),
        i = +Ct(t[1]),
        r = +Ct(t[2]),
        o = +Ct(t[3]);
      if (!isNaN(n + i + r + o)) return e = [], function (t) {
        return t <= 0 ? 0 : 1 <= t ? 1 : Fn(0, n, r, 1, t, e) && Bn(0, i, o, 1, e[0]);
      };
    }
  }
  $n.prototype.step = function (t, e) {
    if (this._inited || (this._startTime = t + this._delay, this._inited = !0), !this._paused) {
      var n = this._life,
        i = t - this._startTime - this._pausedTime,
        r = i / n,
        o = (r < 0 && (r = 0), r = Math.min(r, 1), this.easingFunc),
        o = o ? o(r) : r;
      if (this.onframe(o), 1 === r) {
        if (!this.loop) return !0;
        this._startTime = t - i % n, this._pausedTime = 0, this.onrestart();
      }
      return !1;
    }
    this._pausedTime += e;
  }, $n.prototype.pause = function () {
    this._paused = !0;
  }, $n.prototype.resume = function () {
    this._paused = !1;
  }, $n.prototype.setEasing = function (t) {
    this.easing = t, this.easingFunc = D(t) ? t : In[t] || jn(t);
  };
  var Kn = $n;
  function $n(t) {
    this._inited = !1, this._startTime = 0, this._pausedTime = 0, this._paused = !1, this._life = t.life || 1e3, this._delay = t.delay || 0, this.loop = t.loop || !1, this.onframe = t.onframe || Vt, this.ondestroy = t.ondestroy || Vt, this.onrestart = t.onrestart || Vt, t.easing && this.setEasing(t.easing);
  }
  var Qn = function Qn(t) {
      this.value = t;
    },
    Jn = (ti.prototype.insert = function (t) {
      t = new Qn(t);
      return this.insertEntry(t), t;
    }, ti.prototype.insertEntry = function (t) {
      this.head ? ((this.tail.next = t).prev = this.tail, t.next = null, this.tail = t) : this.head = this.tail = t, this._len++;
    }, ti.prototype.remove = function (t) {
      var e = t.prev,
        n = t.next;
      e ? e.next = n : this.head = n, n ? n.prev = e : this.tail = e, t.next = t.prev = null, this._len--;
    }, ti.prototype.len = function () {
      return this._len;
    }, ti.prototype.clear = function () {
      this.head = this.tail = null, this._len = 0;
    }, ti);
  function ti() {
    this._len = 0;
  }
  ni.prototype.put = function (t, e) {
    var n,
      i,
      r = this._list,
      o = this._map,
      a = null;
    return null == o[t] && (i = r.len(), n = this._lastRemovedEntry, i >= this._maxSize && 0 < i && (i = r.head, r.remove(i), delete o[i.key], a = i.value, this._lastRemovedEntry = i), n ? n.value = e : n = new Qn(e), n.key = t, r.insertEntry(n), o[t] = n), a;
  }, ni.prototype.get = function (t) {
    var t = this._map[t],
      e = this._list;
    if (null != t) return t !== e.tail && (e.remove(t), e.insertEntry(t)), t.value;
  }, ni.prototype.clear = function () {
    this._list.clear(), this._map = {};
  }, ni.prototype.len = function () {
    return this._list.len();
  };
  var ei = ni;
  function ni(t) {
    this._list = new Jn(), this._maxSize = 10, this._map = {}, this._maxSize = t;
  }
  var ii = {
    transparent: [0, 0, 0, 0],
    aliceblue: [240, 248, 255, 1],
    antiquewhite: [250, 235, 215, 1],
    aqua: [0, 255, 255, 1],
    aquamarine: [127, 255, 212, 1],
    azure: [240, 255, 255, 1],
    beige: [245, 245, 220, 1],
    bisque: [255, 228, 196, 1],
    black: [0, 0, 0, 1],
    blanchedalmond: [255, 235, 205, 1],
    blue: [0, 0, 255, 1],
    blueviolet: [138, 43, 226, 1],
    brown: [165, 42, 42, 1],
    burlywood: [222, 184, 135, 1],
    cadetblue: [95, 158, 160, 1],
    chartreuse: [127, 255, 0, 1],
    chocolate: [210, 105, 30, 1],
    coral: [255, 127, 80, 1],
    cornflowerblue: [100, 149, 237, 1],
    cornsilk: [255, 248, 220, 1],
    crimson: [220, 20, 60, 1],
    cyan: [0, 255, 255, 1],
    darkblue: [0, 0, 139, 1],
    darkcyan: [0, 139, 139, 1],
    darkgoldenrod: [184, 134, 11, 1],
    darkgray: [169, 169, 169, 1],
    darkgreen: [0, 100, 0, 1],
    darkgrey: [169, 169, 169, 1],
    darkkhaki: [189, 183, 107, 1],
    darkmagenta: [139, 0, 139, 1],
    darkolivegreen: [85, 107, 47, 1],
    darkorange: [255, 140, 0, 1],
    darkorchid: [153, 50, 204, 1],
    darkred: [139, 0, 0, 1],
    darksalmon: [233, 150, 122, 1],
    darkseagreen: [143, 188, 143, 1],
    darkslateblue: [72, 61, 139, 1],
    darkslategray: [47, 79, 79, 1],
    darkslategrey: [47, 79, 79, 1],
    darkturquoise: [0, 206, 209, 1],
    darkviolet: [148, 0, 211, 1],
    deeppink: [255, 20, 147, 1],
    deepskyblue: [0, 191, 255, 1],
    dimgray: [105, 105, 105, 1],
    dimgrey: [105, 105, 105, 1],
    dodgerblue: [30, 144, 255, 1],
    firebrick: [178, 34, 34, 1],
    floralwhite: [255, 250, 240, 1],
    forestgreen: [34, 139, 34, 1],
    fuchsia: [255, 0, 255, 1],
    gainsboro: [220, 220, 220, 1],
    ghostwhite: [248, 248, 255, 1],
    gold: [255, 215, 0, 1],
    goldenrod: [218, 165, 32, 1],
    gray: [128, 128, 128, 1],
    green: [0, 128, 0, 1],
    greenyellow: [173, 255, 47, 1],
    grey: [128, 128, 128, 1],
    honeydew: [240, 255, 240, 1],
    hotpink: [255, 105, 180, 1],
    indianred: [205, 92, 92, 1],
    indigo: [75, 0, 130, 1],
    ivory: [255, 255, 240, 1],
    khaki: [240, 230, 140, 1],
    lavender: [230, 230, 250, 1],
    lavenderblush: [255, 240, 245, 1],
    lawngreen: [124, 252, 0, 1],
    lemonchiffon: [255, 250, 205, 1],
    lightblue: [173, 216, 230, 1],
    lightcoral: [240, 128, 128, 1],
    lightcyan: [224, 255, 255, 1],
    lightgoldenrodyellow: [250, 250, 210, 1],
    lightgray: [211, 211, 211, 1],
    lightgreen: [144, 238, 144, 1],
    lightgrey: [211, 211, 211, 1],
    lightpink: [255, 182, 193, 1],
    lightsalmon: [255, 160, 122, 1],
    lightseagreen: [32, 178, 170, 1],
    lightskyblue: [135, 206, 250, 1],
    lightslategray: [119, 136, 153, 1],
    lightslategrey: [119, 136, 153, 1],
    lightsteelblue: [176, 196, 222, 1],
    lightyellow: [255, 255, 224, 1],
    lime: [0, 255, 0, 1],
    limegreen: [50, 205, 50, 1],
    linen: [250, 240, 230, 1],
    magenta: [255, 0, 255, 1],
    maroon: [128, 0, 0, 1],
    mediumaquamarine: [102, 205, 170, 1],
    mediumblue: [0, 0, 205, 1],
    mediumorchid: [186, 85, 211, 1],
    mediumpurple: [147, 112, 219, 1],
    mediumseagreen: [60, 179, 113, 1],
    mediumslateblue: [123, 104, 238, 1],
    mediumspringgreen: [0, 250, 154, 1],
    mediumturquoise: [72, 209, 204, 1],
    mediumvioletred: [199, 21, 133, 1],
    midnightblue: [25, 25, 112, 1],
    mintcream: [245, 255, 250, 1],
    mistyrose: [255, 228, 225, 1],
    moccasin: [255, 228, 181, 1],
    navajowhite: [255, 222, 173, 1],
    navy: [0, 0, 128, 1],
    oldlace: [253, 245, 230, 1],
    olive: [128, 128, 0, 1],
    olivedrab: [107, 142, 35, 1],
    orange: [255, 165, 0, 1],
    orangered: [255, 69, 0, 1],
    orchid: [218, 112, 214, 1],
    palegoldenrod: [238, 232, 170, 1],
    palegreen: [152, 251, 152, 1],
    paleturquoise: [175, 238, 238, 1],
    palevioletred: [219, 112, 147, 1],
    papayawhip: [255, 239, 213, 1],
    peachpuff: [255, 218, 185, 1],
    peru: [205, 133, 63, 1],
    pink: [255, 192, 203, 1],
    plum: [221, 160, 221, 1],
    powderblue: [176, 224, 230, 1],
    purple: [128, 0, 128, 1],
    red: [255, 0, 0, 1],
    rosybrown: [188, 143, 143, 1],
    royalblue: [65, 105, 225, 1],
    saddlebrown: [139, 69, 19, 1],
    salmon: [250, 128, 114, 1],
    sandybrown: [244, 164, 96, 1],
    seagreen: [46, 139, 87, 1],
    seashell: [255, 245, 238, 1],
    sienna: [160, 82, 45, 1],
    silver: [192, 192, 192, 1],
    skyblue: [135, 206, 235, 1],
    slateblue: [106, 90, 205, 1],
    slategray: [112, 128, 144, 1],
    slategrey: [112, 128, 144, 1],
    snow: [255, 250, 250, 1],
    springgreen: [0, 255, 127, 1],
    steelblue: [70, 130, 180, 1],
    tan: [210, 180, 140, 1],
    teal: [0, 128, 128, 1],
    thistle: [216, 191, 216, 1],
    tomato: [255, 99, 71, 1],
    turquoise: [64, 224, 208, 1],
    violet: [238, 130, 238, 1],
    wheat: [245, 222, 179, 1],
    white: [255, 255, 255, 1],
    whitesmoke: [245, 245, 245, 1],
    yellow: [255, 255, 0, 1],
    yellowgreen: [154, 205, 50, 1]
  };
  function ri(t) {
    return (t = Math.round(t)) < 0 ? 0 : 255 < t ? 255 : t;
  }
  function oi(t) {
    return t < 0 ? 0 : 1 < t ? 1 : t;
  }
  function ai(t) {
    return t.length && "%" === t.charAt(t.length - 1) ? ri(parseFloat(t) / 100 * 255) : ri(parseInt(t, 10));
  }
  function si(t) {
    return t.length && "%" === t.charAt(t.length - 1) ? oi(parseFloat(t) / 100) : oi(parseFloat(t));
  }
  function li(t, e, n) {
    return n < 0 ? n += 1 : 1 < n && --n, 6 * n < 1 ? t + (e - t) * n * 6 : 2 * n < 1 ? e : 3 * n < 2 ? t + (e - t) * (2 / 3 - n) * 6 : t;
  }
  function ui(t, e, n) {
    return t + (e - t) * n;
  }
  function hi(t, e, n, i, r) {
    return t[0] = e, t[1] = n, t[2] = i, t[3] = r, t;
  }
  function ci(t, e) {
    return t[0] = e[0], t[1] = e[1], t[2] = e[2], t[3] = e[3], t;
  }
  var pi = new ei(20),
    di = null;
  function fi(t, e) {
    di && ci(di, e), di = pi.put(t, di || e.slice());
  }
  function gi(t, e) {
    if (t) {
      e = e || [];
      var n = pi.get(t);
      if (n) return ci(e, n);
      n = (t += "").replace(/ /g, "").toLowerCase();
      if (n in ii) return ci(e, ii[n]), fi(t, e), e;
      var i = n.length;
      if ("#" === n.charAt(0)) return 4 === i || 5 === i ? 0 <= (r = parseInt(n.slice(1, 4), 16)) && r <= 4095 ? (hi(e, (3840 & r) >> 4 | (3840 & r) >> 8, 240 & r | (240 & r) >> 4, 15 & r | (15 & r) << 4, 5 === i ? parseInt(n.slice(4), 16) / 15 : 1), fi(t, e), e) : void hi(e, 0, 0, 0, 1) : 7 === i || 9 === i ? 0 <= (r = parseInt(n.slice(1, 7), 16)) && r <= 16777215 ? (hi(e, (16711680 & r) >> 16, (65280 & r) >> 8, 255 & r, 9 === i ? parseInt(n.slice(7), 16) / 255 : 1), fi(t, e), e) : void hi(e, 0, 0, 0, 1) : void 0;
      var r = n.indexOf("("),
        o = n.indexOf(")");
      if (-1 !== r && o + 1 === i) {
        var i = n.substr(0, r),
          a = n.substr(r + 1, o - (r + 1)).split(","),
          s = 1;
        switch (i) {
          case "rgba":
            if (4 !== a.length) return 3 === a.length ? hi(e, +a[0], +a[1], +a[2], 1) : hi(e, 0, 0, 0, 1);
            s = si(a.pop());
          case "rgb":
            return 3 <= a.length ? (hi(e, ai(a[0]), ai(a[1]), ai(a[2]), 3 === a.length ? s : si(a[3])), fi(t, e), e) : void hi(e, 0, 0, 0, 1);
          case "hsla":
            return 4 !== a.length ? void hi(e, 0, 0, 0, 1) : (a[3] = si(a[3]), yi(a, e), fi(t, e), e);
          case "hsl":
            return 3 !== a.length ? void hi(e, 0, 0, 0, 1) : (yi(a, e), fi(t, e), e);
          default:
            return;
        }
      }
      hi(e, 0, 0, 0, 1);
    }
  }
  function yi(t, e) {
    var n = (parseFloat(t[0]) % 360 + 360) % 360 / 360,
      i = si(t[1]),
      r = si(t[2]),
      i = r <= .5 ? r * (i + 1) : r + i - r * i,
      r = 2 * r - i;
    return hi(e = e || [], ri(255 * li(r, i, n + 1 / 3)), ri(255 * li(r, i, n)), ri(255 * li(r, i, n - 1 / 3)), 1), 4 === t.length && (e[3] = t[3]), e;
  }
  function mi(t, e) {
    var n = gi(t);
    if (n) {
      for (var i = 0; i < 3; i++) {
        n[i] = e < 0 ? n[i] * (1 - e) | 0 : (255 - n[i]) * e + n[i] | 0, 255 < n[i] ? n[i] = 255 : n[i] < 0 && (n[i] = 0);
      }
      return wi(n, 4 === n.length ? "rgba" : "rgb");
    }
  }
  function vi(t, e, n) {
    var i, r, o;
    if (e && e.length && 0 <= t && t <= 1) return n = n || [], t = t * (e.length - 1), i = Math.floor(t), o = Math.ceil(t), r = e[i], e = e[o], n[0] = ri(ui(r[0], e[0], o = t - i)), n[1] = ri(ui(r[1], e[1], o)), n[2] = ri(ui(r[2], e[2], o)), n[3] = oi(ui(r[3], e[3], o)), n;
  }
  var _i = vi;
  function xi(t, e, n) {
    var i, r, o, a;
    if (e && e.length && 0 <= t && t <= 1) return t = t * (e.length - 1), i = Math.floor(t), r = Math.ceil(t), a = gi(e[i]), e = gi(e[r]), a = wi([ri(ui(a[0], e[0], o = t - i)), ri(ui(a[1], e[1], o)), ri(ui(a[2], e[2], o)), oi(ui(a[3], e[3], o))], "rgba"), n ? {
      color: a,
      leftIndex: i,
      rightIndex: r,
      value: t
    } : a;
  }
  var n = xi;
  function wi(t, e) {
    var n;
    if (t && t.length) return n = t[0] + "," + t[1] + "," + t[2], "rgba" !== e && "hsva" !== e && "hsla" !== e || (n += "," + t[3]), e + "(" + n + ")";
  }
  function bi(t, e) {
    t = gi(t);
    return t ? (.299 * t[0] + .587 * t[1] + .114 * t[2]) * t[3] / 255 + (1 - t[3]) * e : 0;
  }
  var Si = new ei(100);
  function Mi(t) {
    var e;
    return V(t) ? ((e = Si.get(t)) || (e = mi(t, -.1), Si.put(t, e)), e) : vt(t) ? ((e = L({}, t)).colorStops = z(t.colorStops, function (t) {
      return {
        offset: t.offset,
        color: mi(t.color, -.1)
      };
    }), e) : t;
  }
  _i = Object.freeze({
    __proto__: null,
    fastLerp: vi,
    fastMapToColor: _i,
    lerp: xi,
    lift: mi,
    liftColor: Mi,
    lum: bi,
    mapToColor: n,
    modifyAlpha: function modifyAlpha(t, e) {
      if ((t = gi(t)) && null != e) return t[3] = oi(e), wi(t, "rgba");
    },
    modifyHSL: function modifyHSL(t, e, n, i) {
      var r = gi(t);
      if (t) return r = function (t) {
        var e, n, i, r, o, a, s, l, u, h;
        if (t) return h = t[0] / 255, e = t[1] / 255, n = t[2] / 255, s = Math.min(h, e, n), r = ((i = Math.max(h, e, n)) + s) / 2, 0 == (u = i - s) ? a = o = 0 : (a = r < .5 ? u / (i + s) : u / (2 - i - s), s = ((i - h) / 6 + u / 2) / u, l = ((i - e) / 6 + u / 2) / u, u = ((i - n) / 6 + u / 2) / u, h === i ? o = u - l : e === i ? o = 1 / 3 + s - u : n === i && (o = 2 / 3 + l - s), o < 0 && (o += 1), 1 < o && --o), h = [360 * o, a, r], null != t[3] && h.push(t[3]), h;
      }(r), null != e && (r[0] = (t = e, (t = Math.round(t)) < 0 ? 0 : 360 < t ? 360 : t)), null != n && (r[1] = si(n)), null != i && (r[2] = si(i)), wi(yi(r), "rgba");
    },
    parse: gi,
    random: function random() {
      return wi([Math.round(255 * Math.random()), Math.round(255 * Math.random()), Math.round(255 * Math.random())], "rgb");
    },
    stringify: wi,
    toHex: function toHex(t) {
      if (t = gi(t)) return ((1 << 24) + (t[0] << 16) + (t[1] << 8) + +t[2]).toString(16).slice(1);
    }
  });
  b.hasGlobalWindow && D(window.btoa);
  var Ti = Array.prototype.slice;
  function Ii(t, e, n) {
    return (e - t) * n + t;
  }
  function Ci(t, e, n, i) {
    for (var r = e.length, o = 0; o < r; o++) {
      t[o] = Ii(e[o], n[o], i);
    }
    return t;
  }
  function Di(t, e, n, i) {
    for (var r = e.length, o = 0; o < r; o++) {
      t[o] = e[o] + n[o] * i;
    }
    return t;
  }
  function ki(t, e, n, i) {
    for (var r = e.length, o = r && e[0].length, a = 0; a < r; a++) {
      t[a] || (t[a] = []);
      for (var s = 0; s < o; s++) {
        t[a][s] = e[a][s] + n[a][s] * i;
      }
    }
    return t;
  }
  function Ai(t) {
    if (st(t)) {
      var e = t.length;
      if (st(t[0])) {
        for (var n = [], i = 0; i < e; i++) {
          n.push(Ti.call(t[i]));
        }
        return n;
      }
      return Ti.call(t);
    }
    return t;
  }
  function Pi(t) {
    return t[0] = Math.floor(t[0]) || 0, t[1] = Math.floor(t[1]) || 0, t[2] = Math.floor(t[2]) || 0, t[3] = null == t[3] ? 1 : t[3], "rgba(" + t.join(",") + ")";
  }
  function Li(t) {
    return 4 === t || 5 === t;
  }
  function Oi(t) {
    return 1 === t || 2 === t;
  }
  var Ri = [0, 0, 0, 0],
    Ni = (Ei.prototype.isFinished = function () {
      return this._finished;
    }, Ei.prototype.setFinished = function () {
      this._finished = !0, this._additiveTrack && this._additiveTrack.setFinished();
    }, Ei.prototype.needsAnimate = function () {
      return 1 <= this.keyframes.length;
    }, Ei.prototype.getAdditiveTrack = function () {
      return this._additiveTrack;
    }, Ei.prototype.addKeyframe = function (t, e, n) {
      this._needsSort = !0;
      var i,
        r = this.keyframes,
        o = r.length,
        a = !1,
        s = 6,
        l = e,
        u = (st(e) ? (1 == (s = i = st((i = e) && i[0]) ? 2 : 1) && !W(e[0]) || 2 == i && !W(e[0][0])) && (a = !0) : W(e) && !wt(e) ? s = 0 : V(e) ? isNaN(+e) ? (i = gi(e)) && (l = i, s = 3) : s = 0 : vt(e) && ((u = L({}, l)).colorStops = z(e.colorStops, function (t) {
          return {
            offset: t.offset,
            color: gi(t.color)
          };
        }), "linear" === e.type ? s = 4 : "radial" === e.type && (s = 5), l = u), 0 === o ? this.valType = s : s === this.valType && 6 !== s || (a = !0), this.discrete = this.discrete || a, {
          time: t,
          value: l,
          rawValue: e,
          percent: 0
        });
      return n && (u.easing = n, u.easingFunc = D(n) ? n : In[n] || jn(n)), r.push(u), u;
    }, Ei.prototype.prepare = function (t, e) {
      for (var n = this.keyframes, i = (this._needsSort && n.sort(function (t, e) {
          return t.time - e.time;
        }), this.valType), r = n.length, o = n[r - 1], a = this.discrete, s = Oi(i), l = Li(i), u = 0; u < r; u++) {
        var h = n[u],
          c = h.value,
          p = o.value;
        if (h.percent = h.time / t, !a) if (s && u !== r - 1) {
          x = _ = v = m = y = g = f = d = h = void 0;
          var d = p,
            f = i,
            g = h = c,
            y = d;
          if (g.push && y.push) {
            var h = g.length,
              m = y.length;
            if (h !== m) if (m < h) g.length = m;else for (var v = h; v < m; v++) {
              g.push(1 === f ? y[v] : Ti.call(y[v]));
            }
            for (var _ = g[0] && g[0].length, v = 0; v < g.length; v++) {
              if (1 === f) isNaN(g[v]) && (g[v] = y[v]);else for (var x = 0; x < _; x++) {
                isNaN(g[v][x]) && (g[v][x] = y[v][x]);
              }
            }
          }
        } else if (l) {
          T = M = S = b = w = h = d = void 0;
          for (var d = c.colorStops, h = p.colorStops, w = d.length, b = h.length, S = b < w ? h : d, h = Math.min(w, b), M = S[h - 1] || {
              color: [0, 0, 0, 0],
              offset: 0
            }, T = h; T < Math.max(w, b); T++) {
            S.push({
              offset: M.offset,
              color: M.color.slice()
            });
          }
        }
      }
      if (!a && 5 !== i && e && this.needsAnimate() && e.needsAnimate() && i === e.valType && !e._finished) {
        this._additiveTrack = e;
        for (var I = n[0].value, u = 0; u < r; u++) {
          0 === i ? n[u].additiveValue = n[u].value - I : 3 === i ? n[u].additiveValue = Di([], n[u].value, I, -1) : Oi(i) && (n[u].additiveValue = (1 === i ? Di : ki)([], n[u].value, I, -1));
        }
      }
    }, Ei.prototype.step = function (t, e) {
      if (!this._finished) {
        this._additiveTrack && this._additiveTrack._finished && (this._additiveTrack = null);
        var n,
          i,
          r,
          o,
          a = null != this._additiveTrack,
          s = a ? "additiveValue" : "value",
          l = this.valType,
          u = this.keyframes,
          h = u.length,
          c = this.propName,
          p = 3 === l,
          d = this._lastFr,
          f = Math.min;
        if (1 === h) n = i = u[0];else {
          if (e < 0) g = 0;else if (e < this._lastFrP) {
            for (var g = f(d + 1, h - 1); 0 <= g && !(u[g].percent <= e); g--) {
              ;
            }
            g = f(g, h - 2);
          } else {
            for (g = d; g < h && !(u[g].percent > e); g++) {
              ;
            }
            g = f(g - 1, h - 2);
          }
          i = u[g + 1], n = u[g];
        }
        n && i && (this._lastFr = g, this._lastFrP = e, d = i.percent - n.percent, r = 0 == d ? 1 : f((e - n.percent) / d, 1), i.easingFunc && (r = i.easingFunc(r)), f = a ? this._additiveValue : p ? Ri : t[c], (Oi(l) || p) && (f = f || (this._additiveValue = [])), this.discrete ? t[c] = (r < 1 ? n : i).rawValue : Oi(l) ? (1 === l ? Ci : function (t, e, n, i) {
          for (var r = e.length, o = r && e[0].length, a = 0; a < r; a++) {
            t[a] || (t[a] = []);
            for (var s = 0; s < o; s++) {
              t[a][s] = Ii(e[a][s], n[a][s], i);
            }
          }
        })(f, n[s], i[s], r) : Li(l) ? (d = n[s], o = i[s], t[c] = {
          type: (l = 4 === l) ? "linear" : "radial",
          x: Ii(d.x, o.x, r),
          y: Ii(d.y, o.y, r),
          colorStops: z(d.colorStops, function (t, e) {
            e = o.colorStops[e];
            return {
              offset: Ii(t.offset, e.offset, r),
              color: Pi(Ci([], t.color, e.color, r))
            };
          }),
          global: o.global
        }, l ? (t[c].x2 = Ii(d.x2, o.x2, r), t[c].y2 = Ii(d.y2, o.y2, r)) : t[c].r = Ii(d.r, o.r, r)) : p ? (Ci(f, n[s], i[s], r), a || (t[c] = Pi(f))) : (l = Ii(n[s], i[s], r), a ? this._additiveValue = l : t[c] = l), a) && this._addToTarget(t);
      }
    }, Ei.prototype._addToTarget = function (t) {
      var e = this.valType,
        n = this.propName,
        i = this._additiveValue;
      0 === e ? t[n] = t[n] + i : 3 === e ? (gi(t[n], Ri), Di(Ri, Ri, i, 1), t[n] = Pi(Ri)) : 1 === e ? Di(t[n], t[n], i, 1) : 2 === e && ki(t[n], t[n], i, 1);
    }, Ei);
  function Ei(t) {
    this.keyframes = [], this.discrete = !1, this._invalid = !1, this._needsSort = !1, this._lastFr = 0, this._lastFrP = 0, this.propName = t;
  }
  zi.prototype.getMaxTime = function () {
    return this._maxTime;
  }, zi.prototype.getDelay = function () {
    return this._delay;
  }, zi.prototype.getLoop = function () {
    return this._loop;
  }, zi.prototype.getTarget = function () {
    return this._target;
  }, zi.prototype.changeTarget = function (t) {
    this._target = t;
  }, zi.prototype.when = function (t, e, n) {
    return this.whenWithKeys(t, e, ct(e), n);
  }, zi.prototype.whenWithKeys = function (t, e, n, i) {
    for (var r = this._tracks, o = 0; o < n.length; o++) {
      var a = n[o];
      if (!(l = r[a])) {
        var s,
          l = r[a] = new Ni(a),
          u = void 0,
          h = this._getAdditiveTrack(a);
        if (h ? (u = (s = (s = h.keyframes)[s.length - 1]) && s.value, 3 === h.valType && (u = u && Pi(u))) : u = this._target[a], null == u) continue;
        0 < t && l.addKeyframe(0, Ai(u), i), this._trackKeys.push(a);
      }
      l.addKeyframe(t, Ai(e[a]), i);
    }
    return this._maxTime = Math.max(this._maxTime, t), this;
  }, zi.prototype.pause = function () {
    this._clip.pause(), this._paused = !0;
  }, zi.prototype.resume = function () {
    this._clip.resume(), this._paused = !1;
  }, zi.prototype.isPaused = function () {
    return !!this._paused;
  }, zi.prototype.duration = function (t) {
    return this._maxTime = t, this._force = !0, this;
  }, zi.prototype._doneCallback = function () {
    this._setTracksFinished(), this._clip = null;
    var t = this._doneCbs;
    if (t) for (var e = t.length, n = 0; n < e; n++) {
      t[n].call(this);
    }
  }, zi.prototype._abortedCallback = function () {
    this._setTracksFinished();
    var t = this.animation,
      e = this._abortedCbs;
    if (t && t.removeClip(this._clip), this._clip = null, e) for (var n = 0; n < e.length; n++) {
      e[n].call(this);
    }
  }, zi.prototype._setTracksFinished = function () {
    for (var t = this._tracks, e = this._trackKeys, n = 0; n < e.length; n++) {
      t[e[n]].setFinished();
    }
  }, zi.prototype._getAdditiveTrack = function (t) {
    var e,
      n = this._additiveAnimators;
    if (n) for (var i = 0; i < n.length; i++) {
      var r = n[i].getTrack(t);
      r && (e = r);
    }
    return e;
  }, zi.prototype.start = function (t) {
    if (!(0 < this._started)) {
      this._started = 1;
      for (var e, o = this, a = [], n = this._maxTime || 0, i = 0; i < this._trackKeys.length; i++) {
        var r = this._trackKeys[i],
          s = this._tracks[r],
          r = this._getAdditiveTrack(r),
          l = s.keyframes,
          u = l.length;
        s.prepare(n, r), s.needsAnimate() && (!this._allowDiscrete && s.discrete ? ((r = l[u - 1]) && (o._target[s.propName] = r.rawValue), s.setFinished()) : a.push(s));
      }
      return a.length || this._force ? (e = new Kn({
        life: n,
        loop: this._loop,
        delay: this._delay || 0,
        onframe: function onframe(t) {
          o._started = 2;
          var e = o._additiveAnimators;
          if (e) {
            for (var n = !1, i = 0; i < e.length; i++) {
              if (e[i]._clip) {
                n = !0;
                break;
              }
            }
            n || (o._additiveAnimators = null);
          }
          for (i = 0; i < a.length; i++) {
            a[i].step(o._target, t);
          }
          var r = o._onframeCbs;
          if (r) for (i = 0; i < r.length; i++) {
            r[i](o._target, t);
          }
        },
        ondestroy: function ondestroy() {
          o._doneCallback();
        }
      }), this._clip = e, this.animation && this.animation.addClip(e), t && e.setEasing(t)) : this._doneCallback(), this;
    }
  }, zi.prototype.stop = function (t) {
    var e;
    this._clip && (e = this._clip, t && e.onframe(1), this._abortedCallback());
  }, zi.prototype.delay = function (t) {
    return this._delay = t, this;
  }, zi.prototype.during = function (t) {
    return t && (this._onframeCbs || (this._onframeCbs = []), this._onframeCbs.push(t)), this;
  }, zi.prototype.done = function (t) {
    return t && (this._doneCbs || (this._doneCbs = []), this._doneCbs.push(t)), this;
  }, zi.prototype.aborted = function (t) {
    return t && (this._abortedCbs || (this._abortedCbs = []), this._abortedCbs.push(t)), this;
  }, zi.prototype.getClip = function () {
    return this._clip;
  }, zi.prototype.getTrack = function (t) {
    return this._tracks[t];
  }, zi.prototype.getTracks = function () {
    var e = this;
    return z(this._trackKeys, function (t) {
      return e._tracks[t];
    });
  }, zi.prototype.stopTracks = function (t, e) {
    if (!t.length || !this._clip) return !0;
    for (var n = this._tracks, i = this._trackKeys, r = 0; r < t.length; r++) {
      var o = n[t[r]];
      o && !o.isFinished() && (e ? o.step(this._target, 1) : 1 === this._started && o.step(this._target, 0), o.setFinished());
    }
    for (var a = !0, r = 0; r < i.length; r++) {
      if (!n[i[r]].isFinished()) {
        a = !1;
        break;
      }
    }
    return a && this._abortedCallback(), a;
  }, zi.prototype.saveTo = function (t, e, n) {
    if (t) {
      e = e || this._trackKeys;
      for (var i = 0; i < e.length; i++) {
        var r = e[i],
          o = this._tracks[r];
        o && !o.isFinished() && (o = (o = o.keyframes)[n ? 0 : o.length - 1]) && (t[r] = Ai(o.rawValue));
      }
    }
  }, zi.prototype.__changeFinalValue = function (t, e) {
    e = e || ct(t);
    for (var n = 0; n < e.length; n++) {
      var i,
        r = e[n],
        o = this._tracks[r];
      o && 1 < (i = o.keyframes).length && (i = i.pop(), o.addKeyframe(i.time, t[r]), o.prepare(this._maxTime, o.getAdditiveTrack()));
    }
  };
  var Bi = zi;
  function zi(t, e, n, i) {
    this._tracks = {}, this._trackKeys = [], this._maxTime = 0, this._started = 0, this._clip = null, this._target = t, (this._loop = e) && i ? it("Can' use additive animation on looped animation.") : (this._additiveAnimators = i, this._allowDiscrete = n);
  }
  function Fi() {
    return new Date().getTime();
  }
  u(Hi, Vi = ue), Hi.prototype.addClip = function (t) {
    t.animation && this.removeClip(t), this._head ? ((this._tail.next = t).prev = this._tail, t.next = null, this._tail = t) : this._head = this._tail = t, t.animation = this;
  }, Hi.prototype.addAnimator = function (t) {
    t.animation = this;
    t = t.getClip();
    t && this.addClip(t);
  }, Hi.prototype.removeClip = function (t) {
    var e, n;
    t.animation && (e = t.prev, n = t.next, e ? e.next = n : this._head = n, n ? n.prev = e : this._tail = e, t.next = t.prev = t.animation = null);
  }, Hi.prototype.removeAnimator = function (t) {
    var e = t.getClip();
    e && this.removeClip(e), t.animation = null;
  }, Hi.prototype.update = function (t) {
    for (var e = Fi() - this._pausedTime, n = e - this._time, i = this._head; i;) {
      var r = i.next,
        i = (i.step(e, n) && (i.ondestroy(), this.removeClip(i)), r);
    }
    this._time = e, t || (this.trigger("frame", n), this.stage.update && this.stage.update());
  }, Hi.prototype._startLoop = function () {
    var e = this;
    this._running = !0, Tn(function t() {
      e._running && (Tn(t), e._paused || e.update());
    });
  }, Hi.prototype.start = function () {
    this._running || (this._time = Fi(), this._pausedTime = 0, this._startLoop());
  }, Hi.prototype.stop = function () {
    this._running = !1;
  }, Hi.prototype.pause = function () {
    this._paused || (this._pauseStart = Fi(), this._paused = !0);
  }, Hi.prototype.resume = function () {
    this._paused && (this._pausedTime += Fi() - this._pauseStart, this._paused = !1);
  }, Hi.prototype.clear = function () {
    for (var t = this._head; t;) {
      var e = t.next;
      t.prev = t.next = t.animation = null, t = e;
    }
    this._head = this._tail = null;
  }, Hi.prototype.isFinished = function () {
    return null == this._head;
  }, Hi.prototype.animate = function (t, e) {
    e = e || {}, this.start();
    t = new Bi(t, e.loop);
    return this.addAnimator(t), t;
  };
  var Vi,
    Wi = Hi;
  function Hi(t) {
    var e = Vi.call(this) || this;
    return e._running = !1, e._time = 0, e._pausedTime = 0, e._pauseStart = 0, e._paused = !1, e.stage = (t = t || {}).stage || {}, e;
  }
  var Gi,
    Ui = b.domSupported,
    qi = (Gi = {
      pointerdown: 1,
      pointerup: 1,
      pointermove: 1,
      pointerout: 1
    }, {
      mouse: n = ["click", "dblclick", "mousewheel", "wheel", "mouseout", "mouseup", "mousedown", "mousemove", "contextmenu"],
      touch: ["touchstart", "touchend", "touchmove"],
      pointer: z(n, function (t) {
        var e = t.replace("mouse", "pointer");
        return Gi.hasOwnProperty(e) ? e : t;
      })
    }),
    Xi = ["mousemove", "mouseup"],
    Yi = ["pointermove", "pointerup"],
    Zi = !1;
  function ji(t) {
    t = t.pointerType;
    return "pen" === t || "touch" === t;
  }
  function Ki(t) {
    t && (t.zrByTouch = !0);
  }
  function $i(t, e) {
    for (var n = e, i = !1; n && 9 !== n.nodeType && !(i = n.domBelongToZr || n !== e && n === t.painterRoot);) {
      n = n.parentNode;
    }
    return i;
  }
  var Qi = function Qi(t, e) {
      this.stopPropagation = Vt, this.stopImmediatePropagation = Vt, this.preventDefault = Vt, this.type = e.type, this.target = this.currentTarget = t.dom, this.pointerType = e.pointerType, this.clientX = e.clientX, this.clientY = e.clientY;
    },
    Ji = {
      mousedown: function mousedown(t) {
        t = Ie(this.dom, t), this.__mayPointerCapture = [t.zrX, t.zrY], this.trigger("mousedown", t);
      },
      mousemove: function mousemove(t) {
        t = Ie(this.dom, t);
        var e = this.__mayPointerCapture;
        !e || t.zrX === e[0] && t.zrY === e[1] || this.__togglePointerCapture(!0), this.trigger("mousemove", t);
      },
      mouseup: function mouseup(t) {
        t = Ie(this.dom, t), this.__togglePointerCapture(!1), this.trigger("mouseup", t);
      },
      mouseout: function mouseout(t) {
        $i(this, (t = Ie(this.dom, t)).toElement || t.relatedTarget) || (this.__pointerCapturing && (t.zrEventControl = "no_globalout"), this.trigger("mouseout", t));
      },
      wheel: function wheel(t) {
        Zi = !0, t = Ie(this.dom, t), this.trigger("mousewheel", t);
      },
      mousewheel: function mousewheel(t) {
        Zi || (t = Ie(this.dom, t), this.trigger("mousewheel", t));
      },
      touchstart: function touchstart(t) {
        Ki(t = Ie(this.dom, t)), this.__lastTouchMoment = new Date(), this.handler.processGesture(t, "start"), Ji.mousemove.call(this, t), Ji.mousedown.call(this, t);
      },
      touchmove: function touchmove(t) {
        Ki(t = Ie(this.dom, t)), this.handler.processGesture(t, "change"), Ji.mousemove.call(this, t);
      },
      touchend: function touchend(t) {
        Ki(t = Ie(this.dom, t)), this.handler.processGesture(t, "end"), Ji.mouseup.call(this, t), +new Date() - +this.__lastTouchMoment < 300 && Ji.click.call(this, t);
      },
      pointerdown: function pointerdown(t) {
        Ji.mousedown.call(this, t);
      },
      pointermove: function pointermove(t) {
        ji(t) || Ji.mousemove.call(this, t);
      },
      pointerup: function pointerup(t) {
        Ji.mouseup.call(this, t);
      },
      pointerout: function pointerout(t) {
        ji(t) || Ji.mouseout.call(this, t);
      }
    },
    tr = (E(["click", "dblclick", "contextmenu"], function (e) {
      Ji[e] = function (t) {
        t = Ie(this.dom, t), this.trigger(e, t);
      };
    }), {
      pointermove: function pointermove(t) {
        ji(t) || tr.mousemove.call(this, t);
      },
      pointerup: function pointerup(t) {
        tr.mouseup.call(this, t);
      },
      mousemove: function mousemove(t) {
        this.trigger("mousemove", t);
      },
      mouseup: function mouseup(t) {
        var e = this.__pointerCapturing;
        this.__togglePointerCapture(!1), this.trigger("mouseup", t), e && (t.zrEventControl = "only_globalout", this.trigger("mouseout", t));
      }
    });
  function er(i, r) {
    var o = r.domHandlers;
    b.pointerEventsSupported ? E(qi.pointer, function (e) {
      ir(r, e, function (t) {
        o[e].call(i, t);
      });
    }) : (b.touchEventsSupported && E(qi.touch, function (n) {
      ir(r, n, function (t) {
        var e;
        o[n].call(i, t), (e = r).touching = !0, null != e.touchTimer && (clearTimeout(e.touchTimer), e.touchTimer = null), e.touchTimer = setTimeout(function () {
          e.touching = !1, e.touchTimer = null;
        }, 700);
      });
    }), E(qi.mouse, function (e) {
      ir(r, e, function (t) {
        t = Te(t), r.touching || o[e].call(i, t);
      });
    }));
  }
  function nr(i, r) {
    function t(n) {
      ir(r, n, function (t) {
        var e;
        t = Te(t), $i(i, t.target) || (e = t, t = Ie(i.dom, new Qi(i, e), !0), r.domHandlers[n].call(i, t));
      }, {
        capture: !0
      });
    }
    b.pointerEventsSupported ? E(Yi, t) : b.touchEventsSupported || E(Xi, t);
  }
  function ir(t, e, n, i) {
    t.mounted[e] = n, t.listenerOpts[e] = i, t.domTarget.addEventListener(e, n, i);
  }
  function rr(t) {
    var e,
      n,
      i,
      r,
      o,
      a = t.mounted;
    for (e in a) {
      a.hasOwnProperty(e) && (n = t.domTarget, r = a[i = e], o = t.listenerOpts[e], n.removeEventListener(i, r, o));
    }
    t.mounted = {};
  }
  var or,
    ar = function ar(t, e) {
      this.mounted = {}, this.listenerOpts = {}, this.touching = !1, this.domTarget = t, this.domHandlers = e;
    },
    sr = (u(lr, or = ue), lr.prototype.dispose = function () {
      rr(this._localHandlerScope), Ui && rr(this._globalHandlerScope);
    }, lr.prototype.setCursor = function (t) {
      this.dom.style && (this.dom.style.cursor = t || "default");
    }, lr.prototype.__togglePointerCapture = function (t) {
      var e;
      this.__mayPointerCapture = null, Ui && +this.__pointerCapturing ^ +t && (this.__pointerCapturing = t, e = this._globalHandlerScope, t ? nr(this, e) : rr(e));
    }, lr);
  function lr(t, e) {
    var n = or.call(this) || this;
    return n.__pointerCapturing = !1, n.dom = t, n.painterRoot = e, n._localHandlerScope = new ar(t, Ji), Ui && (n._globalHandlerScope = new ar(document, tr)), er(n, n._localHandlerScope), n;
  }
  var n = 1,
    ur = n = b.hasGlobalWindow ? Math.max(window.devicePixelRatio || window.screen && window.screen.deviceXDPI / window.screen.logicalXDPI || 1, 1) : n,
    hr = "#333",
    cr = "#ccc",
    pr = Oe;
  function dr(t) {
    return 5e-5 < t || t < -5e-5;
  }
  var fr = [],
    gr = [],
    yr = Le(),
    mr = Math.abs,
    vr = (_r.prototype.getLocalTransform = function (t) {
      return _r.getLocalTransform(this, t);
    }, _r.prototype.setPosition = function (t) {
      this.x = t[0], this.y = t[1];
    }, _r.prototype.setScale = function (t) {
      this.scaleX = t[0], this.scaleY = t[1];
    }, _r.prototype.setSkew = function (t) {
      this.skewX = t[0], this.skewY = t[1];
    }, _r.prototype.setOrigin = function (t) {
      this.originX = t[0], this.originY = t[1];
    }, _r.prototype.needLocalTransform = function () {
      return dr(this.rotation) || dr(this.x) || dr(this.y) || dr(this.scaleX - 1) || dr(this.scaleY - 1) || dr(this.skewX) || dr(this.skewY);
    }, _r.prototype.updateTransform = function () {
      var t = this.parent && this.parent.transform,
        e = this.needLocalTransform(),
        n = this.transform;
      e || t ? (n = n || Le(), e ? this.getLocalTransform(n) : pr(n), t && (e ? Ne(n, t, n) : Re(n, t)), this.transform = n, this._resolveGlobalScaleRatio(n)) : n && (pr(n), this.invTransform = null);
    }, _r.prototype._resolveGlobalScaleRatio = function (t) {
      var e,
        n,
        i = this.globalScaleRatio;
      null != i && 1 !== i && (this.getGlobalScale(fr), n = ((fr[1] - (n = fr[1] < 0 ? -1 : 1)) * i + n) / fr[1] || 0, t[0] *= i = ((fr[0] - (e = fr[0] < 0 ? -1 : 1)) * i + e) / fr[0] || 0, t[1] *= i, t[2] *= n, t[3] *= n), this.invTransform = this.invTransform || Le(), Fe(this.invTransform, t);
    }, _r.prototype.getComputedTransform = function () {
      for (var t = this, e = []; t;) {
        e.push(t), t = t.parent;
      }
      for (; t = e.pop();) {
        t.updateTransform();
      }
      return this.transform;
    }, _r.prototype.setLocalTransform = function (t) {
      var e, n, i, r;
      t && (r = t[0] * t[0] + t[1] * t[1], i = t[2] * t[2] + t[3] * t[3], e = Math.atan2(t[1], t[0]), n = Math.PI / 2 + e - Math.atan2(t[3], t[2]), i = Math.sqrt(i) * Math.cos(n), r = Math.sqrt(r), this.skewX = n, this.skewY = 0, this.rotation = -e, this.x = +t[4], this.y = +t[5], this.scaleX = r, this.scaleY = i, this.originX = 0, this.originY = 0);
    }, _r.prototype.decomposeTransform = function () {
      var t, e, n;
      this.transform && (e = this.parent, t = this.transform, e && e.transform && (e.invTransform = e.invTransform || Le(), Ne(gr, e.invTransform, t), t = gr), e = this.originX, n = this.originY, (e || n) && (yr[4] = e, yr[5] = n, Ne(gr, t, yr), gr[4] -= e, gr[5] -= n, t = gr), this.setLocalTransform(t));
    }, _r.prototype.getGlobalScale = function (t) {
      var e = this.transform;
      return t = t || [], e ? (t[0] = Math.sqrt(e[0] * e[0] + e[1] * e[1]), t[1] = Math.sqrt(e[2] * e[2] + e[3] * e[3]), e[0] < 0 && (t[0] = -t[0]), e[3] < 0 && (t[1] = -t[1])) : (t[0] = 1, t[1] = 1), t;
    }, _r.prototype.transformCoordToLocal = function (t, e) {
      t = [t, e], e = this.invTransform;
      return e && ne(t, t, e), t;
    }, _r.prototype.transformCoordToGlobal = function (t, e) {
      t = [t, e], e = this.transform;
      return e && ne(t, t, e), t;
    }, _r.prototype.getLineScale = function () {
      var t = this.transform;
      return t && 1e-10 < mr(t[0] - 1) && 1e-10 < mr(t[3] - 1) ? Math.sqrt(mr(t[0] * t[3] - t[2] * t[1])) : 1;
    }, _r.prototype.copyTransform = function (t) {
      for (var e = this, n = t, i = 0; i < xr.length; i++) {
        var r = xr[i];
        e[r] = n[r];
      }
    }, _r.getLocalTransform = function (t, e) {
      e = e || [];
      var n = t.originX || 0,
        i = t.originY || 0,
        r = t.scaleX,
        o = t.scaleY,
        a = t.anchorX,
        s = t.anchorY,
        l = t.rotation || 0,
        u = t.x,
        h = t.y,
        c = t.skewX ? Math.tan(t.skewX) : 0,
        t = t.skewY ? Math.tan(-t.skewY) : 0;
      return n || i || a || s ? (e[4] = -(a = n + a) * r - c * (s = i + s) * o, e[5] = -s * o - t * a * r) : e[4] = e[5] = 0, e[0] = r, e[3] = o, e[1] = t * r, e[2] = c * o, l && Be(e, e, l), e[4] += n + u, e[5] += i + h, e;
    }, _r.initDefaultProps = ((n = _r.prototype).scaleX = n.scaleY = n.globalScaleRatio = 1, void (n.x = n.y = n.originX = n.originY = n.skewX = n.skewY = n.rotation = n.anchorX = n.anchorY = 0)), _r);
  function _r() {}
  var xr = ["x", "y", "originX", "originY", "anchorX", "anchorY", "rotation", "scaleX", "scaleY", "skewX", "skewY"];
  var wr = {};
  function br(t, e) {
    var n = wr[e = e || j],
      i = (n = n || (wr[e] = new ei(500))).get(t);
    return null == i && (i = Y.measureText(t, e).width, n.put(t, i)), i;
  }
  function Sr(t, e, n, i) {
    t = br(t, e), e = Cr(e), n = Tr(0, t, n), i = Ir(0, e, i);
    return new q(n, i, t, e);
  }
  function Mr(t, e, n, i) {
    var r = ((t || "") + "").split("\n");
    if (1 === r.length) return Sr(r[0], e, n, i);
    for (var o = new q(0, 0, 0, 0), a = 0; a < r.length; a++) {
      var s = Sr(r[a], e, n, i);
      0 === a ? o.copy(s) : o.union(s);
    }
    return o;
  }
  function Tr(t, e, n) {
    return "right" === n ? t -= e : "center" === n && (t -= e / 2), t;
  }
  function Ir(t, e, n) {
    return "middle" === n ? t -= e / 2 : "bottom" === n && (t -= e), t;
  }
  function Cr(t) {
    return br("国", t);
  }
  function Dr(t, e) {
    return "string" == typeof t ? 0 <= t.lastIndexOf("%") ? parseFloat(t) / 100 * e : parseFloat(t) : t;
  }
  function kr(t, e, n) {
    var i = e.position || "inside",
      r = null != e.distance ? e.distance : 5,
      o = n.height,
      a = n.width,
      s = o / 2,
      l = n.x,
      u = n.y,
      h = "left",
      c = "top";
    if (i instanceof Array) l += Dr(i[0], n.width), u += Dr(i[1], n.height), c = h = null;else switch (i) {
      case "left":
        l -= r, u += s, h = "right", c = "middle";
        break;
      case "right":
        l += r + a, u += s, c = "middle";
        break;
      case "top":
        l += a / 2, u -= r, h = "center", c = "bottom";
        break;
      case "bottom":
        l += a / 2, u += o + r, h = "center";
        break;
      case "inside":
        l += a / 2, u += s, h = "center", c = "middle";
        break;
      case "insideLeft":
        l += r, u += s, c = "middle";
        break;
      case "insideRight":
        l += a - r, u += s, h = "right", c = "middle";
        break;
      case "insideTop":
        l += a / 2, u += r, h = "center";
        break;
      case "insideBottom":
        l += a / 2, u += o - r, h = "center", c = "bottom";
        break;
      case "insideTopLeft":
        l += r, u += r;
        break;
      case "insideTopRight":
        l += a - r, u += r, h = "right";
        break;
      case "insideBottomLeft":
        l += r, u += o - r, c = "bottom";
        break;
      case "insideBottomRight":
        l += a - r, u += o - r, h = "right", c = "bottom";
    }
    return (t = t || {}).x = l, t.y = u, t.align = h, t.verticalAlign = c, t;
  }
  var Ar,
    Pr = "__zr_normal__",
    Lr = xr.concat(["ignore"]),
    Or = lt(xr, function (t, e) {
      return t[e] = !0, t;
    }, {
      ignore: !1
    }),
    Rr = {},
    Nr = new q(0, 0, 0, 0),
    n = (i.prototype._init = function (t) {
      this.attr(t);
    }, i.prototype.drift = function (t, e, n) {
      switch (this.draggable) {
        case "horizontal":
          e = 0;
          break;
        case "vertical":
          t = 0;
      }
      var i = this.transform;
      (i = i || (this.transform = [1, 0, 0, 1, 0, 0]))[4] += t, i[5] += e, this.decomposeTransform(), this.markRedraw();
    }, i.prototype.beforeUpdate = function () {}, i.prototype.afterUpdate = function () {}, i.prototype.update = function () {
      this.updateTransform(), this.__dirty && this.updateInnerText();
    }, i.prototype.updateInnerText = function (t) {
      var e,
        n,
        i,
        r,
        o,
        a,
        s,
        l,
        u,
        h,
        c = this._textContent;
      !c || c.ignore && !t || (this.textConfig || (this.textConfig = {}), l = (t = this.textConfig).local, i = n = void 0, r = !1, (e = c.innerTransformable).parent = l ? this : null, h = !1, e.copyTransform(c), null != t.position && (u = Nr, t.layoutRect ? u.copy(t.layoutRect) : u.copy(this.getBoundingRect()), l || u.applyTransform(this.transform), this.calculateTextPosition ? this.calculateTextPosition(Rr, t, u) : kr(Rr, t, u), e.x = Rr.x, e.y = Rr.y, n = Rr.align, i = Rr.verticalAlign, o = t.origin) && null != t.rotation && (s = a = void 0, s = "center" === o ? (a = .5 * u.width, .5 * u.height) : (a = Dr(o[0], u.width), Dr(o[1], u.height)), h = !0, e.originX = -e.x + a + (l ? 0 : u.x), e.originY = -e.y + s + (l ? 0 : u.y)), null != t.rotation && (e.rotation = t.rotation), (o = t.offset) && (e.x += o[0], e.y += o[1], h || (e.originX = -o[0], e.originY = -o[1])), a = null == t.inside ? "string" == typeof t.position && 0 <= t.position.indexOf("inside") : t.inside, s = this._innerTextDefaultStyle || (this._innerTextDefaultStyle = {}), h = u = l = void 0, a && this.canBeInsideText() ? (l = t.insideFill, u = t.insideStroke, null != l && "auto" !== l || (l = this.getInsideTextFill()), null != u && "auto" !== u || (u = this.getInsideTextStroke(l), h = !0)) : (l = t.outsideFill, u = t.outsideStroke, null != l && "auto" !== l || (l = this.getOutsideFill()), null != u && "auto" !== u || (u = this.getOutsideStroke(l), h = !0)), (l = l || "#000") === s.fill && u === s.stroke && h === s.autoStroke && n === s.align && i === s.verticalAlign || (r = !0, s.fill = l, s.stroke = u, s.autoStroke = h, s.align = n, s.verticalAlign = i, c.setDefaultTextStyle(s)), c.__dirty |= vn, r && c.dirtyStyle(!0));
    }, i.prototype.canBeInsideText = function () {
      return !0;
    }, i.prototype.getInsideTextFill = function () {
      return "#fff";
    }, i.prototype.getInsideTextStroke = function (t) {
      return "#000";
    }, i.prototype.getOutsideFill = function () {
      return this.__zr && this.__zr.isDarkMode() ? cr : hr;
    }, i.prototype.getOutsideStroke = function (t) {
      for (var e = this.__zr && this.__zr.getBackgroundColor(), n = "string" == typeof e && gi(e), i = (n = n || [255, 255, 255, 1])[3], r = this.__zr.isDarkMode(), o = 0; o < 3; o++) {
        n[o] = n[o] * i + (r ? 0 : 255) * (1 - i);
      }
      return n[3] = 1, wi(n, "rgba");
    }, i.prototype.traverse = function (t, e) {}, i.prototype.attrKV = function (t, e) {
      "textConfig" === t ? this.setTextConfig(e) : "textContent" === t ? this.setTextContent(e) : "clipPath" === t ? this.setClipPath(e) : "extra" === t ? (this.extra = this.extra || {}, L(this.extra, e)) : this[t] = e;
    }, i.prototype.hide = function () {
      this.ignore = !0, this.markRedraw();
    }, i.prototype.show = function () {
      this.ignore = !1, this.markRedraw();
    }, i.prototype.attr = function (t, e) {
      if ("string" == typeof t) this.attrKV(t, e);else if (O(t)) for (var n = ct(t), i = 0; i < n.length; i++) {
        var r = n[i];
        this.attrKV(r, t[r]);
      }
      return this.markRedraw(), this;
    }, i.prototype.saveCurrentToNormalState = function (t) {
      this._innerSaveToNormal(t);
      for (var e = this._normalState, n = 0; n < this.animators.length; n++) {
        var i = this.animators[n],
          r = i.__fromStateTransition;
        i.getLoop() || r && r !== Pr || (r = (r = i.targetName) ? e[r] : e, i.saveTo(r));
      }
    }, i.prototype._innerSaveToNormal = function (t) {
      var e = (e = this._normalState) || (this._normalState = {});
      t.textConfig && !e.textConfig && (e.textConfig = this.textConfig), this._savePrimaryToNormal(t, e, Lr);
    }, i.prototype._savePrimaryToNormal = function (t, e, n) {
      for (var i = 0; i < n.length; i++) {
        var r = n[i];
        null == t[r] || r in e || (e[r] = this[r]);
      }
    }, i.prototype.hasState = function () {
      return 0 < this.currentStates.length;
    }, i.prototype.getState = function (t) {
      return this.states[t];
    }, i.prototype.ensureState = function (t) {
      var e = this.states;
      return e[t] || (e[t] = {}), e[t];
    }, i.prototype.clearStates = function (t) {
      this.useState(Pr, !1, t);
    }, i.prototype.useState = function (t, e, n, i) {
      var r = t === Pr,
        o = this.hasState();
      if (o || !r) {
        var a,
          o = this.currentStates,
          s = this.stateTransition;
        if (!(0 <= C(o, t)) || !e && 1 !== o.length) {
          if ((a = (a = this.stateProxy && !r ? this.stateProxy(t) : a) || this.states && this.states[t]) || r) return r || this.saveCurrentToNormalState(a), (o = !!(a && a.hoverLayer || i)) && this._toggleHoverLayerFlag(!0), this._applyStateObj(t, a, this._normalState, e, !n && !this.__inHover && s && 0 < s.duration, s), i = this._textContent, s = this._textGuide, i && i.useState(t, e, n, o), s && s.useState(t, e, n, o), r ? (this.currentStates = [], this._normalState = {}) : e ? this.currentStates.push(t) : this.currentStates = [t], this._updateAnimationTargets(), this.markRedraw(), !o && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= ~vn), a;
          it("State " + t + " not exists.");
        }
      }
    }, i.prototype.useStates = function (t, e, n) {
      if (t.length) {
        var i = [],
          r = this.currentStates,
          o = t.length,
          a = o === r.length;
        if (a) for (var s = 0; s < o; s++) {
          if (t[s] !== r[s]) {
            a = !1;
            break;
          }
        }
        if (!a) {
          for (s = 0; s < o; s++) {
            var l = t[s],
              u = void 0;
            (u = (u = this.stateProxy ? this.stateProxy(l, t) : u) || this.states[l]) && i.push(u);
          }
          var h = i[o - 1],
            h = !!(h && h.hoverLayer || n),
            n = (h && this._toggleHoverLayerFlag(!0), this._mergeStates(i)),
            c = this.stateTransition,
            n = (this.saveCurrentToNormalState(n), this._applyStateObj(t.join(","), n, this._normalState, !1, !e && !this.__inHover && c && 0 < c.duration, c), this._textContent),
            c = this._textGuide;
          n && n.useStates(t, e, h), c && c.useStates(t, e, h), this._updateAnimationTargets(), this.currentStates = t.slice(), this.markRedraw(), !h && this.__inHover && (this._toggleHoverLayerFlag(!1), this.__dirty &= ~vn);
        }
      } else this.clearStates();
    }, i.prototype.isSilent = function () {
      for (var t = this.silent, e = this.parent; !t && e;) {
        if (e.silent) {
          t = !0;
          break;
        }
        e = e.parent;
      }
      return t;
    }, i.prototype._updateAnimationTargets = function () {
      for (var t = 0; t < this.animators.length; t++) {
        var e = this.animators[t];
        e.targetName && e.changeTarget(this[e.targetName]);
      }
    }, i.prototype.removeState = function (t) {
      var e,
        t = C(this.currentStates, t);
      0 <= t && ((e = this.currentStates.slice()).splice(t, 1), this.useStates(e));
    }, i.prototype.replaceState = function (t, e, n) {
      var i = this.currentStates.slice(),
        t = C(i, t),
        r = 0 <= C(i, e);
      0 <= t ? r ? i.splice(t, 1) : i[t] = e : n && !r && i.push(e), this.useStates(i);
    }, i.prototype.toggleState = function (t, e) {
      e ? this.useState(t, !0) : this.removeState(t);
    }, i.prototype._mergeStates = function (t) {
      for (var e, n = {}, i = 0; i < t.length; i++) {
        var r = t[i];
        L(n, r), r.textConfig && L(e = e || {}, r.textConfig);
      }
      return e && (n.textConfig = e), n;
    }, i.prototype._applyStateObj = function (t, e, n, i, r, o) {
      for (var a = !(e && i), s = (e && e.textConfig ? (this.textConfig = L({}, (i ? this : n).textConfig), L(this.textConfig, e.textConfig)) : a && n.textConfig && (this.textConfig = n.textConfig), {}), l = !1, u = 0; u < Lr.length; u++) {
        var h = Lr[u],
          c = r && Or[h];
        e && null != e[h] ? c ? (l = !0, s[h] = e[h]) : this[h] = e[h] : a && null != n[h] && (c ? (l = !0, s[h] = n[h]) : this[h] = n[h]);
      }
      if (!r) for (u = 0; u < this.animators.length; u++) {
        var p = this.animators[u],
          d = p.targetName;
        p.getLoop() || p.__changeFinalValue(d ? (e || n)[d] : e || n);
      }
      l && this._transitionState(t, s, o);
    }, i.prototype._attachComponent = function (t) {
      var e;
      t.__zr && !t.__hostTarget || t !== this && ((e = this.__zr) && t.addSelfToZr(e), t.__zr = e, t.__hostTarget = this);
    }, i.prototype._detachComponent = function (t) {
      t.__zr && t.removeSelfFromZr(t.__zr), t.__zr = null, t.__hostTarget = null;
    }, i.prototype.getClipPath = function () {
      return this._clipPath;
    }, i.prototype.setClipPath = function (t) {
      this._clipPath && this._clipPath !== t && this.removeClipPath(), this._attachComponent(t), this._clipPath = t, this.markRedraw();
    }, i.prototype.removeClipPath = function () {
      var t = this._clipPath;
      t && (this._detachComponent(t), this._clipPath = null, this.markRedraw());
    }, i.prototype.getTextContent = function () {
      return this._textContent;
    }, i.prototype.setTextContent = function (t) {
      var e = this._textContent;
      e !== t && (e && e !== t && this.removeTextContent(), t.innerTransformable = new vr(), this._attachComponent(t), this._textContent = t, this.markRedraw());
    }, i.prototype.setTextConfig = function (t) {
      this.textConfig || (this.textConfig = {}), L(this.textConfig, t), this.markRedraw();
    }, i.prototype.removeTextConfig = function () {
      this.textConfig = null, this.markRedraw();
    }, i.prototype.removeTextContent = function () {
      var t = this._textContent;
      t && (t.innerTransformable = null, this._detachComponent(t), this._textContent = null, this._innerTextDefaultStyle = null, this.markRedraw());
    }, i.prototype.getTextGuideLine = function () {
      return this._textGuide;
    }, i.prototype.setTextGuideLine = function (t) {
      this._textGuide && this._textGuide !== t && this.removeTextGuideLine(), this._attachComponent(t), this._textGuide = t, this.markRedraw();
    }, i.prototype.removeTextGuideLine = function () {
      var t = this._textGuide;
      t && (this._detachComponent(t), this._textGuide = null, this.markRedraw());
    }, i.prototype.markRedraw = function () {
      this.__dirty |= vn;
      var t = this.__zr;
      t && (this.__inHover ? t.refreshHover() : t.refresh()), this.__hostTarget && this.__hostTarget.markRedraw();
    }, i.prototype.dirty = function () {
      this.markRedraw();
    }, i.prototype._toggleHoverLayerFlag = function (t) {
      this.__inHover = t;
      var e = this._textContent,
        n = this._textGuide;
      e && (e.__inHover = t), n && (n.__inHover = t);
    }, i.prototype.addSelfToZr = function (t) {
      if (this.__zr !== t) {
        this.__zr = t;
        var e = this.animators;
        if (e) for (var n = 0; n < e.length; n++) {
          t.animation.addAnimator(e[n]);
        }
        this._clipPath && this._clipPath.addSelfToZr(t), this._textContent && this._textContent.addSelfToZr(t), this._textGuide && this._textGuide.addSelfToZr(t);
      }
    }, i.prototype.removeSelfFromZr = function (t) {
      if (this.__zr) {
        this.__zr = null;
        var e = this.animators;
        if (e) for (var n = 0; n < e.length; n++) {
          t.animation.removeAnimator(e[n]);
        }
        this._clipPath && this._clipPath.removeSelfFromZr(t), this._textContent && this._textContent.removeSelfFromZr(t), this._textGuide && this._textGuide.removeSelfFromZr(t);
      }
    }, i.prototype.animate = function (t, e, n) {
      var i = t ? this[t] : this,
        i = new Bi(i, e, n);
      return t && (i.targetName = t), this.addAnimator(i, t), i;
    }, i.prototype.addAnimator = function (n, t) {
      var e = this.__zr,
        i = this;
      n.during(function () {
        i.updateDuringAnimation(t);
      }).done(function () {
        var t = i.animators,
          e = C(t, n);
        0 <= e && t.splice(e, 1);
      }), this.animators.push(n), e && e.animation.addAnimator(n), e && e.wakeUp();
    }, i.prototype.updateDuringAnimation = function (t) {
      this.markRedraw();
    }, i.prototype.stopAnimation = function (t, e) {
      for (var n = this.animators, i = n.length, r = [], o = 0; o < i; o++) {
        var a = n[o];
        t && t !== a.scope ? r.push(a) : a.stop(e);
      }
      return this.animators = r, this;
    }, i.prototype.animateTo = function (t, e, n) {
      Br(this, t, e, n);
    }, i.prototype.animateFrom = function (t, e, n) {
      Br(this, t, e, n, !0);
    }, i.prototype._transitionState = function (t, e, n, i) {
      for (var r = Br(this, e, n, i), o = 0; o < r.length; o++) {
        r[o].__fromStateTransition = t;
      }
    }, i.prototype.getBoundingRect = function () {
      return null;
    }, i.prototype.getPaintRect = function () {
      return null;
    }, i.initDefaultProps = ((Ar = i.prototype).type = "element", Ar.name = "", Ar.ignore = Ar.silent = Ar.isGroup = Ar.draggable = Ar.dragging = Ar.ignoreClip = Ar.__inHover = !1, Ar.__dirty = vn, void (Object.defineProperty && (Er("position", "_legacyPos", "x", "y"), Er("scale", "_legacyScale", "scaleX", "scaleY"), Er("origin", "_legacyOrigin", "originX", "originY")))), i);
  function i(t) {
    this.id = et++, this.animators = [], this.currentStates = [], this.states = {}, this._init(t);
  }
  function Er(t, e, n, i) {
    function r(e, t) {
      Object.defineProperty(t, 0, {
        get: function get() {
          return e[n];
        },
        set: function set(t) {
          e[n] = t;
        }
      }), Object.defineProperty(t, 1, {
        get: function get() {
          return e[i];
        },
        set: function set(t) {
          e[i] = t;
        }
      });
    }
    Object.defineProperty(Ar, t, {
      get: function get() {
        var t;
        return this[e] || (t = this[e] = [], r(this, t)), this[e];
      },
      set: function set(t) {
        this[n] = t[0], this[i] = t[1], this[e] = t, r(this, t);
      }
    });
  }
  function Br(t, e, n, i, r) {
    function o() {
      u = !0, --l <= 0 && (u ? h && h() : c && c());
    }
    function a() {
      --l <= 0 && (u ? h && h() : c && c());
    }
    var s = [],
      l = (!function t(e, n, i, r, o, a, s, l) {
        var u = ct(r);
        var h = o.duration;
        var c = o.delay;
        var p = o.additive;
        var d = o.setToFinal;
        var f = !O(a);
        var g = e.animators;
        var y = [];
        for (var m = 0; m < u.length; m++) {
          var v = u[m],
            _ = r[v];
          null != _ && null != i[v] && (f || a[v]) ? !O(_) || st(_) || vt(_) ? y.push(v) : n ? l || (i[v] = _, e.updateDuringAnimation(n)) : t(e, v, i[v], _, o, a && a[v], s, l) : l || (i[v] = _, e.updateDuringAnimation(n), y.push(v));
        }
        var x = y.length;
        if (!p && x) for (var w, b = 0; b < g.length; b++) {
          (S = g[b]).targetName === n && S.stopTracks(y) && (w = C(g, S), g.splice(w, 1));
        }
        o.force || (y = ut(y, function (t) {
          return !Vr(r[t], i[t]);
        }), x = y.length);
        if (0 < x || o.force && !s.length) {
          var S,
            M = void 0,
            T = void 0,
            I = void 0;
          if (l) {
            T = {}, d && (M = {});
            for (b = 0; b < x; b++) {
              v = y[b];
              T[v] = i[v], d ? M[v] = r[v] : i[v] = r[v];
            }
          } else if (d) {
            I = {};
            for (b = 0; b < x; b++) {
              v = y[b];
              I[v] = Ai(i[v]), Fr(i, r, v);
            }
          }
          (S = new Bi(i, !1, !1, p ? ut(g, function (t) {
            return t.targetName === n;
          }) : null)).targetName = n, o.scope && (S.scope = o.scope), d && M && S.whenWithKeys(0, M, y), I && S.whenWithKeys(0, I, y), S.whenWithKeys(null == h ? 500 : h, l ? T : r, y).delay(c || 0), e.addAnimator(S, n), s.push(S);
        }
      }(t, "", t, e, n = n || {}, i, s, r), s.length),
      u = !1,
      h = n.done,
      c = n.aborted;
    l || h && h(), 0 < s.length && n.during && s[0].during(function (t, e) {
      n.during(e);
    });
    for (var p = 0; p < s.length; p++) {
      var d = s[p];
      d.done(o), d.aborted(a), n.force && d.duration(n.duration), d.start(n.easing);
    }
    return s;
  }
  function zr(t, e, n) {
    for (var i = 0; i < n; i++) {
      t[i] = e[i];
    }
  }
  function Fr(t, e, n) {
    if (st(e[n])) {
      if (st(t[n]) || (t[n] = []), yt(e[n])) {
        var i = e[n].length;
        t[n].length !== i && (t[n] = new e[n].constructor(i), zr(t[n], e[n], i));
      } else {
        var r = e[n],
          o = t[n],
          a = r.length;
        if (st(r[0])) for (var s = r[0].length, l = 0; l < a; l++) {
          o[l] ? zr(o[l], r[l], s) : o[l] = Array.prototype.slice.call(r[l]);
        } else zr(o, r, a);
        o.length = r.length;
      }
    } else t[n] = e[n];
  }
  function Vr(t, e) {
    return t === e || st(t) && st(e) && function (t, e) {
      var n = t.length;
      if (n !== e.length) return !1;
      for (var i = 0; i < n; i++) {
        if (t[i] !== e[i]) return !1;
      }
      return !0;
    }(t, e);
  }
  at(n, ue), at(n, vr);
  u(Gr, Wr = n), Gr.prototype.childrenRef = function () {
    return this._children;
  }, Gr.prototype.children = function () {
    return this._children.slice();
  }, Gr.prototype.childAt = function (t) {
    return this._children[t];
  }, Gr.prototype.childOfName = function (t) {
    for (var e = this._children, n = 0; n < e.length; n++) {
      if (e[n].name === t) return e[n];
    }
  }, Gr.prototype.childCount = function () {
    return this._children.length;
  }, Gr.prototype.add = function (t) {
    return t && t !== this && t.parent !== this && (this._children.push(t), this._doAdd(t)), this;
  }, Gr.prototype.addBefore = function (t, e) {
    var n;
    return t && t !== this && t.parent !== this && e && e.parent === this && 0 <= (e = (n = this._children).indexOf(e)) && (n.splice(e, 0, t), this._doAdd(t)), this;
  }, Gr.prototype.replace = function (t, e) {
    t = C(this._children, t);
    return 0 <= t && this.replaceAt(e, t), this;
  }, Gr.prototype.replaceAt = function (t, e) {
    var n = this._children,
      i = n[e];
    return t && t !== this && t.parent !== this && t !== i && (n[e] = t, i.parent = null, (n = this.__zr) && i.removeSelfFromZr(n), this._doAdd(t)), this;
  }, Gr.prototype._doAdd = function (t) {
    t.parent && t.parent.remove(t);
    var e = (t.parent = this).__zr;
    e && e !== t.__zr && t.addSelfToZr(e), e && e.refresh();
  }, Gr.prototype.remove = function (t) {
    var e = this.__zr,
      n = this._children,
      i = C(n, t);
    return i < 0 || (n.splice(i, 1), t.parent = null, e && t.removeSelfFromZr(e), e && e.refresh()), this;
  }, Gr.prototype.removeAll = function () {
    for (var t = this._children, e = this.__zr, n = 0; n < t.length; n++) {
      var i = t[n];
      e && i.removeSelfFromZr(e), i.parent = null;
    }
    return t.length = 0, this;
  }, Gr.prototype.eachChild = function (t, e) {
    for (var n = this._children, i = 0; i < n.length; i++) {
      var r = n[i];
      t.call(e, r, i);
    }
    return this;
  }, Gr.prototype.traverse = function (t, e) {
    for (var n = 0; n < this._children.length; n++) {
      var i = this._children[n],
        r = t.call(e, i);
      i.isGroup && !r && i.traverse(t, e);
    }
    return this;
  }, Gr.prototype.addSelfToZr = function (t) {
    Wr.prototype.addSelfToZr.call(this, t);
    for (var e = 0; e < this._children.length; e++) {
      this._children[e].addSelfToZr(t);
    }
  }, Gr.prototype.removeSelfFromZr = function (t) {
    Wr.prototype.removeSelfFromZr.call(this, t);
    for (var e = 0; e < this._children.length; e++) {
      this._children[e].removeSelfFromZr(t);
    }
  }, Gr.prototype.getBoundingRect = function (t) {
    for (var e = new q(0, 0, 0, 0), n = t || this._children, i = [], r = null, o = 0; o < n.length; o++) {
      var a,
        s = n[o];
      s.ignore || s.invisible || (a = s.getBoundingRect(), (s = s.getLocalTransform(i)) ? (q.applyTransform(e, a, s), (r = r || e.clone()).union(e)) : (r = r || a.clone()).union(a));
    }
    return r || e;
  };
  var Wr,
    Hr = Gr;
  function Gr(t) {
    var e = Wr.call(this) || this;
    return e.isGroup = !0, e._children = [], e.attr(t), e;
  }
  Hr.prototype.type = "group";
  var Ur = {},
    qr = {};
  Zr.prototype.add = function (t) {
    !this._disposed && t && (this.storage.addRoot(t), t.addSelfToZr(this), this.refresh());
  }, Zr.prototype.remove = function (t) {
    !this._disposed && t && (this.storage.delRoot(t), t.removeSelfFromZr(this), this.refresh());
  }, Zr.prototype.configLayer = function (t, e) {
    this._disposed || (this.painter.configLayer && this.painter.configLayer(t, e), this.refresh());
  }, Zr.prototype.setBackgroundColor = function (t) {
    this._disposed || (this.painter.setBackgroundColor && this.painter.setBackgroundColor(t), this.refresh(), this._backgroundColor = t, this._darkMode = function (t) {
      if (t) {
        if ("string" == typeof t) return bi(t, 1) < .4;
        if (t.colorStops) {
          for (var e = t.colorStops, n = 0, i = e.length, r = 0; r < i; r++) {
            n += bi(e[r].color, 1);
          }
          return (n /= i) < .4;
        }
      }
      return !1;
    }(t));
  }, Zr.prototype.getBackgroundColor = function () {
    return this._backgroundColor;
  }, Zr.prototype.setDarkMode = function (t) {
    this._darkMode = t;
  }, Zr.prototype.isDarkMode = function () {
    return this._darkMode;
  }, Zr.prototype.refreshImmediately = function (t) {
    this._disposed || (t || this.animation.update(!0), this._needsRefresh = !1, this.painter.refresh(), this._needsRefresh = !1);
  }, Zr.prototype.refresh = function () {
    this._disposed || (this._needsRefresh = !0, this.animation.start());
  }, Zr.prototype.flush = function () {
    this._disposed || this._flush(!1);
  }, Zr.prototype._flush = function (t) {
    var e,
      n = Fi(),
      t = (this._needsRefresh && (e = !0, this.refreshImmediately(t)), this._needsRefreshHover && (e = !0, this.refreshHoverImmediately()), Fi());
    e ? (this._stillFrameAccum = 0, this.trigger("rendered", {
      elapsedTime: t - n
    })) : 0 < this._sleepAfterStill && (this._stillFrameAccum++, this._stillFrameAccum > this._sleepAfterStill) && this.animation.stop();
  }, Zr.prototype.setSleepAfterStill = function (t) {
    this._sleepAfterStill = t;
  }, Zr.prototype.wakeUp = function () {
    this._disposed || (this.animation.start(), this._stillFrameAccum = 0);
  }, Zr.prototype.refreshHover = function () {
    this._needsRefreshHover = !0;
  }, Zr.prototype.refreshHoverImmediately = function () {
    this._disposed || (this._needsRefreshHover = !1, this.painter.refreshHover && "canvas" === this.painter.getType() && this.painter.refreshHover());
  }, Zr.prototype.resize = function (t) {
    this._disposed || (this.painter.resize((t = t || {}).width, t.height), this.handler.resize());
  }, Zr.prototype.clearAnimation = function () {
    this._disposed || this.animation.clear();
  }, Zr.prototype.getWidth = function () {
    if (!this._disposed) return this.painter.getWidth();
  }, Zr.prototype.getHeight = function () {
    if (!this._disposed) return this.painter.getHeight();
  }, Zr.prototype.setCursorStyle = function (t) {
    this._disposed || this.handler.setCursorStyle(t);
  }, Zr.prototype.findHover = function (t, e) {
    if (!this._disposed) return this.handler.findHover(t, e);
  }, Zr.prototype.on = function (t, e, n) {
    return this._disposed || this.handler.on(t, e, n), this;
  }, Zr.prototype.off = function (t, e) {
    this._disposed || this.handler.off(t, e);
  }, Zr.prototype.trigger = function (t, e) {
    this._disposed || this.handler.trigger(t, e);
  }, Zr.prototype.clear = function () {
    if (!this._disposed) {
      for (var t = this.storage.getRoots(), e = 0; e < t.length; e++) {
        t[e] instanceof Hr && t[e].removeSelfFromZr(this);
      }
      this.storage.delAllRoots(), this.painter.clear();
    }
  }, Zr.prototype.dispose = function () {
    var t;
    this._disposed || (this.animation.stop(), this.clear(), this.storage.dispose(), this.painter.dispose(), this.handler.dispose(), this.animation = this.storage = this.painter = this.handler = null, this._disposed = !0, t = this.id, delete qr[t]);
  };
  var Xr,
    Yr = Zr;
  function Zr(t, e, n) {
    var i,
      r = this,
      o = (this._sleepAfterStill = 10, this._stillFrameAccum = 0, this._needsRefresh = !0, this._needsRefreshHover = !0, this._darkMode = !1, n = n || {}, this.dom = e, this.id = t, new Sn()),
      a = n.renderer || "canvas",
      a = (Ur[a] || (a = ct(Ur)[0]), n.useDirtyRect = null != n.useDirtyRect && n.useDirtyRect, new Ur[a](e, o, n, t)),
      e = n.ssr || a.ssrOnly,
      t = (this.storage = o, this.painter = a, b.node || b.worker || e ? null : new sr(a.getViewportRoot(), a.root)),
      s = n.useCoarsePointer;
    (null == s || "auto" === s ? b.touchEventsSupported : !!s) && (i = R(n.pointerSize, 44)), this.handler = new an(o, a, t, a.root, i), this.animation = new Wi({
      stage: {
        update: e ? null : function () {
          return r._flush(!0);
        }
      }
    }), e || this.animation.start();
  }
  function jr(t, e) {
    t = new Yr(et++, t, e);
    return qr[t.id] = t;
  }
  function Kr(t, e) {
    Ur[t] = e;
  }
  function $r(t) {
    Xr = t;
  }
  var Qr = Object.freeze({
      __proto__: null,
      dispose: function dispose(t) {
        t.dispose();
      },
      disposeAll: function disposeAll() {
        for (var t in qr) {
          qr.hasOwnProperty(t) && qr[t].dispose();
        }
        qr = {};
      },
      getElementSSRData: function getElementSSRData(t) {
        if ("function" == typeof Xr) return Xr(t);
      },
      getInstance: function getInstance(t) {
        return qr[t];
      },
      init: jr,
      registerPainter: Kr,
      registerSSRDataGetter: $r,
      version: "5.6.1"
    }),
    Jr = 20;
  function to(t, e, n, i) {
    var r = e[0],
      e = e[1],
      o = n[0],
      n = n[1],
      a = e - r,
      s = n - o;
    if (0 == a) return 0 == s ? o : (o + n) / 2;
    if (i) {
      if (0 < a) {
        if (t <= r) return o;
        if (e <= t) return n;
      } else {
        if (r <= t) return o;
        if (t <= e) return n;
      }
    } else {
      if (t === r) return o;
      if (t === e) return n;
    }
    return (t - r) / a * s + o;
  }
  function G(t, e) {
    switch (t) {
      case "center":
      case "middle":
        t = "50%";
        break;
      case "left":
      case "top":
        t = "0%";
        break;
      case "right":
      case "bottom":
        t = "100%";
    }
    return V(t) ? t.replace(/^\s+|\s+$/g, "").match(/%$/) ? parseFloat(t) / 100 * e : parseFloat(t) : null == t ? NaN : +t;
  }
  function eo(t, e, n) {
    return null == e && (e = 10), e = Math.min(Math.max(0, e), Jr), t = (+t).toFixed(e), n ? t : +t;
  }
  function no(t) {
    if (t = +t, isNaN(t)) return 0;
    if (1e-14 < t) for (var e = 1, n = 0; n < 15; n++, e *= 10) {
      if (Math.round(t * e) / e === t) return n;
    }
    return io(t);
  }
  function io(t) {
    var t = t.toString().toLowerCase(),
      e = t.indexOf("e"),
      n = 0 < e ? +t.slice(e + 1) : 0,
      e = 0 < e ? e : t.length,
      t = t.indexOf(".");
    return Math.max(0, (t < 0 ? 0 : e - 1 - t) - n);
  }
  function ro(t, e) {
    var n = Math.log,
      i = Math.LN10,
      t = Math.floor(n(t[1] - t[0]) / i),
      n = Math.round(n(Math.abs(e[1] - e[0])) / i),
      e = Math.min(Math.max(-t + n, 0), 20);
    return isFinite(e) ? e : 20;
  }
  function oo(t, e) {
    var n = lt(t, function (t, e) {
      return t + (isNaN(e) ? 0 : e);
    }, 0);
    if (0 === n) return [];
    for (var i = Math.pow(10, e), e = z(t, function (t) {
        return (isNaN(t) ? 0 : t) / n * i * 100;
      }), r = 100 * i, o = z(e, function (t) {
        return Math.floor(t);
      }), a = lt(o, function (t, e) {
        return t + e;
      }, 0), s = z(e, function (t, e) {
        return t - o[e];
      }); a < r;) {
      for (var l = Number.NEGATIVE_INFINITY, u = null, h = 0, c = s.length; h < c; ++h) {
        s[h] > l && (l = s[h], u = h);
      }
      ++o[u], s[u] = 0, ++a;
    }
    return z(o, function (t) {
      return t / i;
    });
  }
  function ao(t) {
    var e = 2 * Math.PI;
    return (t % e + e) % e;
  }
  function so(t) {
    return -1e-4 < t && t < 1e-4;
  }
  var lo = /^(?:(\d{4})(?:[-\/](\d{1,2})(?:[-\/](\d{1,2})(?:[T ](\d{1,2})(?::(\d{1,2})(?::(\d{1,2})(?:[.,](\d+))?)?)?(Z|[\+\-]\d\d:?\d\d)?)?)?)?)?$/;
  function uo(t) {
    var e, n;
    return t instanceof Date ? t : V(t) ? (e = lo.exec(t)) ? e[8] ? (n = +e[4] || 0, "Z" !== e[8].toUpperCase() && (n -= +e[8].slice(0, 3)), new Date(Date.UTC(+e[1], +(e[2] || 1) - 1, +e[3] || 1, n, +(e[5] || 0), +e[6] || 0, e[7] ? +e[7].substring(0, 3) : 0))) : new Date(+e[1], +(e[2] || 1) - 1, +e[3] || 1, +e[4] || 0, +(e[5] || 0), +e[6] || 0, e[7] ? +e[7].substring(0, 3) : 0) : new Date(NaN) : null == t ? new Date(NaN) : new Date(Math.round(t));
  }
  function ho(t) {
    return Math.pow(10, co(t));
  }
  function co(t) {
    var e;
    return 0 === t ? 0 : (e = Math.floor(Math.log(t) / Math.LN10), 10 <= t / Math.pow(10, e) && e++, e);
  }
  function po(t, e) {
    var n = co(t),
      i = Math.pow(10, n),
      r = t / i,
      e = e ? r < 1.5 ? 1 : r < 2.5 ? 2 : r < 4 ? 3 : r < 7 ? 5 : 10 : r < 1 ? 1 : r < 2 ? 2 : r < 3 ? 3 : r < 5 ? 5 : 10;
    return t = e * i, -20 <= n ? +t.toFixed(n < 0 ? -n : 0) : t;
  }
  function fo(t) {
    var e = parseFloat(t);
    return e == t && (0 !== e || !V(t) || t.indexOf("x") <= 0) ? e : NaN;
  }
  function go(t) {
    return !isNaN(fo(t));
  }
  function yo(t, e) {
    return null == t ? e : null == e ? t : t * e / function t(e, n) {
      return 0 === n ? e : t(n, e % n);
    }(t, e);
  }
  function f(t) {
    throw new Error(t);
  }
  function mo(t, e, n) {
    return (e - t) * n + t;
  }
  var vo = "series\0";
  function _o(t) {
    return t instanceof Array ? t : null == t ? [] : [t];
  }
  function xo(t, e, n) {
    if (t) {
      t[e] = t[e] || {}, t.emphasis = t.emphasis || {}, t.emphasis[e] = t.emphasis[e] || {};
      for (var i = 0, r = n.length; i < r; i++) {
        var o = n[i];
        !t.emphasis[e].hasOwnProperty(o) && t[e].hasOwnProperty(o) && (t.emphasis[e][o] = t[e][o]);
      }
    }
  }
  var wo = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "rich", "tag", "color", "textBorderColor", "textBorderWidth", "width", "height", "lineHeight", "align", "verticalAlign", "baseline", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY", "backgroundColor", "borderColor", "borderWidth", "borderRadius", "padding"];
  function bo(t) {
    return !O(t) || F(t) || t instanceof Date ? t : t.value;
  }
  function So(t, n, e) {
    var o,
      a,
      s,
      l,
      r,
      u,
      i,
      h,
      c,
      p,
      d = "normalMerge" === e,
      f = "replaceMerge" === e,
      g = "replaceAll" === e,
      y = (t = t || [], n = (n || []).slice(), N()),
      e = (E(n, function (t, e) {
        O(t) || (n[e] = null);
      }), function (t, e, n) {
        var i = [];
        if ("replaceAll" !== n) for (var r = 0; r < t.length; r++) {
          var o = t[r];
          o && null != o.id && e.set(o.id, r), i.push({
            existing: "replaceMerge" === n || Do(o) ? null : o,
            newOption: null,
            keyInfo: null,
            brandNew: null
          });
        }
        return i;
      }(t, y, e));
    return (d || f) && (o = e, a = t, s = y, E(l = n, function (t, e) {
      var n, i, r;
      t && null != t.id && (n = To(t.id), null != (i = s.get(n))) && (It(!(r = o[i]).newOption, 'Duplicated option on id "' + n + '".'), r.newOption = t, r.existing = a[i], l[e] = null);
    })), d && (r = e, E(u = n, function (t, e) {
      if (t && null != t.name) for (var n = 0; n < r.length; n++) {
        var i = r[n].existing;
        if (!r[n].newOption && i && (null == i.id || null == t.id) && !Do(t) && !Do(i) && Mo("name", i, t)) return r[n].newOption = t, void (u[e] = null);
      }
    })), d || f ? (h = e, c = f, E(n, function (t) {
      if (t) {
        for (var e, n = 0; (e = h[n]) && (e.newOption || Do(e.existing) || e.existing && null != t.id && !Mo("id", t, e.existing));) {
          n++;
        }
        e ? (e.newOption = t, e.brandNew = c) : h.push({
          newOption: t,
          brandNew: c,
          existing: null,
          keyInfo: null
        }), n++;
      }
    })) : g && (i = e, E(n, function (t) {
      i.push({
        newOption: t,
        brandNew: !0,
        existing: null,
        keyInfo: null
      });
    })), t = e, p = N(), E(t, function (t) {
      var e = t.existing;
      e && p.set(e.id, t);
    }), E(t, function (t) {
      var e = t.newOption;
      It(!e || null == e.id || !p.get(e.id) || p.get(e.id) === t, "id duplicates: " + (e && e.id)), e && null != e.id && p.set(e.id, t), t.keyInfo || (t.keyInfo = {});
    }), E(t, function (t, e) {
      var n = t.existing,
        i = t.newOption,
        r = t.keyInfo;
      if (O(i)) {
        if (r.name = null != i.name ? To(i.name) : n ? n.name : vo + e, n) r.id = To(n.id);else if (null != i.id) r.id = To(i.id);else for (var o = 0; r.id = "\0" + r.name + "\0" + o++, p.get(r.id);) {
          ;
        }
        p.set(r.id, t);
      }
    }), e;
  }
  function Mo(t, e, n) {
    e = Io(e[t], null), n = Io(n[t], null);
    return null != e && null != n && e === n;
  }
  function To(t) {
    return Io(t, "");
  }
  function Io(t, e) {
    return null == t ? e : V(t) ? t : W(t) || ft(t) ? t + "" : e;
  }
  function Co(t) {
    t = t.name;
    return !(!t || !t.indexOf(vo));
  }
  function Do(t) {
    return t && null != t.id && 0 === To(t.id).indexOf("\0_ec_\0");
  }
  function ko(t, r, o) {
    E(t, function (t) {
      var e,
        n,
        i = t.newOption;
      O(i) && (t.keyInfo.mainType = r, t.keyInfo.subType = (e = r, i = i, t = t.existing, n = o, i.type || (t ? t.subType : n.determineSubType(e, i))));
    });
  }
  function Ao(e, t) {
    return null != t.dataIndexInside ? t.dataIndexInside : null != t.dataIndex ? F(t.dataIndex) ? z(t.dataIndex, function (t) {
      return e.indexOfRawIndex(t);
    }) : e.indexOfRawIndex(t.dataIndex) : null != t.name ? F(t.name) ? z(t.name, function (t) {
      return e.indexOfName(t);
    }) : e.indexOfName(t.name) : void 0;
  }
  function Po() {
    var e = "__ec_inner_" + Lo++;
    return function (t) {
      return t[e] || (t[e] = {});
    };
  }
  var Lo = Math.round(9 * Math.random());
  function Oo(n, t, i) {
    var t = Ro(t, i),
      e = t.mainTypeSpecified,
      r = t.queryOptionMap,
      o = t.others,
      a = i ? i.defaultMainType : null;
    return !e && a && r.set(a, {}), r.each(function (t, e) {
      t = Eo(n, e, t, {
        useDefault: a === e,
        enableAll: !i || null == i.enableAll || i.enableAll,
        enableNone: !i || null == i.enableNone || i.enableNone
      });
      o[e + "Models"] = t.models, o[e + "Model"] = t.models[0];
    }), o;
  }
  function Ro(t, i) {
    var e = V(t) ? ((e = {})[t + "Index"] = 0, e) : t,
      r = N(),
      o = {},
      a = !1;
    return E(e, function (t, e) {
      var n;
      "dataIndex" === e || "dataIndexInside" === e ? o[e] = t : (n = (e = e.match(/^(\w+)(Index|Id|Name)$/) || [])[1], e = (e[2] || "").toLowerCase(), !n || !e || i && i.includeMainTypes && C(i.includeMainTypes, n) < 0 || (a = a || !!n, (r.get(n) || r.set(n, {}))[e] = t));
    }), {
      mainTypeSpecified: a,
      queryOptionMap: r,
      others: o
    };
  }
  var No = {
    useDefault: !0,
    enableAll: !1,
    enableNone: !1
  };
  function Eo(t, e, n, i) {
    i = i || No;
    var r = n.index,
      o = n.id,
      n = n.name,
      a = {
        models: null,
        specified: null != r || null != o || null != n
      };
    return a.specified ? "none" === r || !1 === r ? (It(i.enableNone, '`"none"` or `false` is not a valid value on index option.'), a.models = []) : ("all" === r && (It(i.enableAll, '`"all"` is not a valid value on index option.'), r = o = n = null), a.models = t.queryComponents({
      mainType: e,
      index: r,
      id: o,
      name: n
    })) : (r = void 0, a.models = i.useDefault && (r = t.getComponent(e)) ? [r] : []), a;
  }
  function Bo(t, e, n) {
    t.setAttribute ? t.setAttribute(e, n) : t[e] = n;
  }
  var zo = ".",
    Fo = "___EC__COMPONENT__CONTAINER___",
    Vo = "___EC__EXTENDED_CLASS___";
  function Wo(t) {
    var e = {
      main: "",
      sub: ""
    };
    return t && (t = t.split(zo), e.main = t[0] || "", e.sub = t[1] || ""), e;
  }
  function Ho(t) {
    (t.$constructor = t).extend = function (t) {
      var e,
        n,
        i,
        r = this;
      function o() {
        return n.apply(this, arguments) || this;
      }
      return D(i = r) && /^class\s/.test(Function.prototype.toString.call(i)) ? (u(o, n = r), e = o) : ot(e = function e() {
        (t.$constructor || r).apply(this, arguments);
      }, this), L(e.prototype, t), e[Vo] = !0, e.extend = this.extend, e.superCall = qo, e.superApply = Xo, e.superClass = r, e;
    };
  }
  function Go(t, e) {
    t.extend = e.extend;
  }
  var Uo = Math.round(10 * Math.random());
  function qo(t, e) {
    for (var n = [], i = 2; i < arguments.length; i++) {
      n[i - 2] = arguments[i];
    }
    return this.superClass.prototype[e].apply(t, n);
  }
  function Xo(t, e, n) {
    return this.superClass.prototype[e].apply(t, n);
  }
  function Yo(t) {
    var r = {};
    t.registerClass = function (t) {
      var e,
        n = t.type || t.prototype.type;
      return n && (It(/^[a-zA-Z0-9_]+([.][a-zA-Z0-9_]+)?$/.test(e = n), 'componentType "' + e + '" illegal'), (e = Wo(t.prototype.type = n)).sub ? e.sub !== Fo && (function (t) {
        var e = r[t.main];
        e && e[Fo] || (e = r[t.main] = {
          ___EC__COMPONENT__CONTAINER___: !0
        });
        return e;
      }(e)[e.sub] = t) : r[e.main] = t), t;
    }, t.getClass = function (t, e, n) {
      var i = r[t];
      if (i && i[Fo] && (i = e ? i[e] : null), n && !i) throw new Error(e ? "Component " + t + "." + (e || "") + " is used but not imported." : t + ".type should be specified.");
      return i;
    }, t.getClassesByMainType = function (t) {
      var t = Wo(t),
        n = [],
        t = r[t.main];
      return t && t[Fo] ? E(t, function (t, e) {
        e !== Fo && n.push(t);
      }) : n.push(t), n;
    }, t.hasClass = function (t) {
      t = Wo(t);
      return !!r[t.main];
    }, t.getAllClassMainTypes = function () {
      var n = [];
      return E(r, function (t, e) {
        n.push(e);
      }), n;
    }, t.hasSubTypes = function (t) {
      t = Wo(t), t = r[t.main];
      return t && t[Fo];
    };
  }
  function Zo(a, s) {
    for (var t = 0; t < a.length; t++) {
      a[t][1] || (a[t][1] = a[t][0]);
    }
    return s = s || !1, function (t, e, n) {
      for (var i = {}, r = 0; r < a.length; r++) {
        var o = a[r][1];
        e && 0 <= C(e, o) || n && C(n, o) < 0 || null != (o = t.getShallow(o, s)) && (i[a[r][0]] = o);
      }
      return i;
    };
  }
  var jo = Zo([["fill", "color"], ["shadowBlur"], ["shadowOffsetX"], ["shadowOffsetY"], ["opacity"], ["shadowColor"]]),
    Ko = ($o.prototype.getAreaStyle = function (t, e) {
      return jo(this, t, e);
    }, $o);
  function $o() {}
  var Qo = new ei(50);
  function Jo(t, e, n, i, r) {
    return t ? "string" == typeof t ? (e && e.__zrImageSrc === t || !n || (n = {
      hostEl: n,
      cb: i,
      cbPayload: r
    }, (i = Qo.get(t)) ? ea(e = i.image) || i.pending.push(n) : ((e = Y.loadImage(t, ta, ta)).__zrImageSrc = t, Qo.put(t, e.__cachedImgObj = {
      image: e,
      pending: [n]
    }))), e) : t : e;
  }
  function ta() {
    var t = this.__cachedImgObj;
    this.onload = this.onerror = this.__cachedImgObj = null;
    for (var e = 0; e < t.pending.length; e++) {
      var n = t.pending[e],
        i = n.cb;
      i && i(this, n.cbPayload), n.hostEl.dirty();
    }
    t.pending.length = 0;
  }
  function ea(t) {
    return t && t.width && t.height;
  }
  var na = /\{([a-zA-Z0-9_]+)\|([^}]*)\}/g;
  function ia(t, e, n, i, r, o) {
    if (n) {
      for (var a = (e + "").split("\n"), s = (o = ra(n, i, r, o), !1), l = {}, u = 0, h = a.length; u < h; u++) {
        oa(l, a[u], o), a[u] = l.textLine, s = s || l.isTruncated;
      }
      t.text = a.join("\n"), t.isTruncated = s;
    } else t.text = "", t.isTruncated = !1;
  }
  function ra(t, e, n, i) {
    for (var r = L({}, i = i || {}), o = (r.font = e, n = R(n, "..."), r.maxIterations = R(i.maxIterations, 2), r.minChar = R(i.minChar, 0)), a = (r.cnCharWidth = br("国", e), r.ascCharWidth = br("a", e)), s = (r.placeholder = R(i.placeholder, ""), t = Math.max(0, t - 1)), l = 0; l < o && a <= s; l++) {
      s -= a;
    }
    i = br(n, e);
    return s < i && (n = "", i = 0), s = t - i, r.ellipsis = n, r.ellipsisWidth = i, r.contentWidth = s, r.containerWidth = t, r;
  }
  function oa(t, e, n) {
    var i = n.containerWidth,
      r = n.font,
      o = n.contentWidth;
    if (i) {
      if ((l = br(e, r)) <= i) t.textLine = e, t.isTruncated = !1;else {
        for (var a = 0;; a++) {
          if (l <= o || a >= n.maxIterations) {
            e += n.ellipsis;
            break;
          }
          var s = 0 === a ? function (t, e, n, i) {
              for (var r = 0, o = 0, a = t.length; o < a && r < e; o++) {
                var s = t.charCodeAt(o);
                r += 0 <= s && s <= 127 ? n : i;
              }
              return o;
            }(e, o, n.ascCharWidth, n.cnCharWidth) : 0 < l ? Math.floor(e.length * o / l) : 0,
            l = br(e = e.substr(0, s), r);
        }
        "" === e && (e = n.placeholder), t.textLine = e, t.isTruncated = !0;
      }
    } else t.textLine = "", t.isTruncated = !1;
  }
  var aa = function aa() {},
    sa = function sa(t) {
      this.tokens = [], t && (this.tokens = t);
    },
    la = function la() {
      this.width = 0, this.height = 0, this.contentWidth = 0, this.contentHeight = 0, this.outerWidth = 0, this.outerHeight = 0, this.lines = [], this.isTruncated = !1;
    };
  function ua(t, e) {
    var n = new la();
    if (null != t && (t += ""), t) {
      for (var i, r = e.width, o = e.height, a = e.overflow, s = "break" !== a && "breakAll" !== a || null == r ? null : {
          width: r,
          accumWidth: 0,
          breakAll: "breakAll" === a
        }, l = na.lastIndex = 0; null != (i = na.exec(t));) {
        var u = i.index;
        l < u && ha(n, t.substring(l, u), e, s), ha(n, i[2], e, s, i[1]), l = na.lastIndex;
      }
      l < t.length && ha(n, t.substring(l, t.length), e, s);
      var h,
        c = [],
        p = 0,
        d = 0,
        f = e.padding,
        g = "truncate" === a,
        y = "truncate" === e.lineOverflow,
        m = {};
      t: for (var v = 0; v < n.lines.length; v++) {
        for (var _ = n.lines[v], x = 0, w = 0, b = 0; b < _.tokens.length; b++) {
          var S = (A = _.tokens[b]).styleName && e.rich[A.styleName] || {},
            M = A.textPadding = S.padding,
            T = M ? M[1] + M[3] : 0,
            I = A.font = S.font || e.font,
            C = (A.contentHeight = Cr(I), R(S.height, A.contentHeight));
          if (A.innerHeight = C, M && (C += M[0] + M[2]), A.height = C, A.lineHeight = St(S.lineHeight, e.lineHeight, C), A.align = S && S.align || e.align, A.verticalAlign = S && S.verticalAlign || "middle", y && null != o && p + A.lineHeight > o) {
            M = n.lines.length;
            0 < b ? (_.tokens = _.tokens.slice(0, b), L(_, w, x), n.lines = n.lines.slice(0, v + 1)) : n.lines = n.lines.slice(0, v), n.isTruncated = n.isTruncated || n.lines.length < M;
            break t;
          }
          var D,
            M = S.width,
            k = null == M || "auto" === M;
          "string" == typeof M && "%" === M.charAt(M.length - 1) ? (A.percentWidth = M, c.push(A), A.contentWidth = br(A.text, I)) : (k && (M = (M = S.backgroundColor) && M.image) && (D = void 0, ea(M = "string" == typeof (h = M) ? (D = Qo.get(h)) && D.image : h)) && (A.width = Math.max(A.width, M.width * C / M.height)), null != (D = g && null != r ? r - w : null) && D < A.width ? !k || D < T ? (A.text = "", A.width = A.contentWidth = 0) : (ia(m, A.text, D - T, I, e.ellipsis, {
            minChar: e.truncateMinChar
          }), A.text = m.text, n.isTruncated = n.isTruncated || m.isTruncated, A.width = A.contentWidth = br(A.text, I)) : A.contentWidth = br(A.text, I)), A.width += T, w += A.width, S && (x = Math.max(x, A.lineHeight));
        }
        L(_, w, x);
      }
      n.outerWidth = n.width = R(r, d), n.outerHeight = n.height = R(o, p), n.contentHeight = p, n.contentWidth = d, f && (n.outerWidth += f[1] + f[3], n.outerHeight += f[0] + f[2]);
      for (v = 0; v < c.length; v++) {
        var A,
          P = (A = c[v]).percentWidth;
        A.width = parseInt(P, 10) / 100 * n.width;
      }
    }
    return n;
    function L(t, e, n) {
      t.width = e, t.lineHeight = n, p += n, d = Math.max(d, e);
    }
  }
  function ha(t, e, n, i, r) {
    var o,
      a,
      s = "" === e,
      l = r && n.rich[r] || {},
      u = t.lines,
      h = l.font || n.font,
      c = !1;
    i ? (n = (t = l.padding) ? t[1] + t[3] : 0, null != l.width && "auto" !== l.width ? (t = Dr(l.width, i.width) + n, 0 < u.length && t + i.accumWidth > i.width && (o = e.split("\n"), c = !0), i.accumWidth = t) : (t = pa(e, h, i.width, i.breakAll, i.accumWidth), i.accumWidth = t.accumWidth + n, a = t.linesWidths, o = t.lines)) : o = e.split("\n");
    for (var p = 0; p < o.length; p++) {
      var d,
        f,
        g = o[p],
        y = new aa();
      y.styleName = r, y.text = g, y.isLineHolder = !g && !s, "number" == typeof l.width ? y.width = l.width : y.width = a ? a[p] : br(g, h), p || c ? u.push(new sa([y])) : 1 === (f = (d = (u[u.length - 1] || (u[0] = new sa())).tokens).length) && d[0].isLineHolder ? d[0] = y : !g && f && !s || d.push(y);
    }
  }
  var ca = lt(",&?/;] ".split(""), function (t, e) {
    return t[e] = !0, t;
  }, {});
  function pa(t, e, n, i, r) {
    for (var o, a = [], s = [], l = "", u = "", h = 0, c = 0, p = 0; p < t.length; p++) {
      var d,
        f,
        g = t.charAt(p);
      "\n" === g ? (u && (l += u, c += h), a.push(l), s.push(c), u = l = "", c = h = 0) : (d = br(g, e), f = !(i || (f = void 0, !(32 <= (f = (f = o = g).charCodeAt(0)) && f <= 591 || 880 <= f && f <= 4351 || 4608 <= f && f <= 5119 || 7680 <= f && f <= 8303)) || !!ca[o]), (a.length ? n < c + d : n < r + c + d) ? c ? (l || u) && (c = f ? (l || (l = u, u = "", c = h = 0), a.push(l), s.push(c - h), u += g, l = "", h += d) : (u && (l += u, u = "", h = 0), a.push(l), s.push(c), l = g, d)) : f ? (a.push(u), s.push(h), u = g, h = d) : (a.push(g), s.push(d)) : (c += d, f ? (u += g, h += d) : (u && (l += u, u = "", h = 0), l += g)));
    }
    return a.length || l || (l = t, u = "", h = 0), u && (l += u), l && (a.push(l), s.push(c)), 1 === a.length && (c += r), {
      accumWidth: c,
      lines: a,
      linesWidths: s
    };
  }
  var da,
    fa = "__zr_style_" + Math.round(10 * Math.random()),
    ga = {
      shadowBlur: 0,
      shadowOffsetX: 0,
      shadowOffsetY: 0,
      shadowColor: "#000",
      opacity: 1,
      blend: "source-over"
    },
    ya = {
      style: {
        shadowBlur: !0,
        shadowOffsetX: !0,
        shadowOffsetY: !0,
        shadowColor: !0,
        opacity: !0
      }
    },
    ma = (ga[fa] = !0, ["z", "z2", "invisible"]),
    va = ["invisible"],
    n = (u(r, da = n), r.prototype._init = function (t) {
      for (var e = ct(t), n = 0; n < e.length; n++) {
        var i = e[n];
        "style" === i ? this.useStyle(t[i]) : da.prototype.attrKV.call(this, i, t[i]);
      }
      this.style || this.useStyle({});
    }, r.prototype.beforeBrush = function () {}, r.prototype.afterBrush = function () {}, r.prototype.innerBeforeBrush = function () {}, r.prototype.innerAfterBrush = function () {}, r.prototype.shouldBePainted = function (t, e, n, i) {
      var r = this.transform;
      if (this.ignore || this.invisible || 0 === this.style.opacity || this.culling && function (t, e, n) {
        _a.copy(t.getBoundingRect()), t.transform && _a.applyTransform(t.transform);
        return xa.width = e, xa.height = n, !_a.intersect(xa);
      }(this, t, e) || r && !r[0] && !r[3]) return !1;
      if (n && this.__clipPaths) for (var o = 0; o < this.__clipPaths.length; ++o) {
        if (this.__clipPaths[o].isZeroArea()) return !1;
      }
      if (i && this.parent) for (var a = this.parent; a;) {
        if (a.ignore) return !1;
        a = a.parent;
      }
      return !0;
    }, r.prototype.contain = function (t, e) {
      return this.rectContain(t, e);
    }, r.prototype.traverse = function (t, e) {
      t.call(e, this);
    }, r.prototype.rectContain = function (t, e) {
      t = this.transformCoordToLocal(t, e);
      return this.getBoundingRect().contain(t[0], t[1]);
    }, r.prototype.getPaintRect = function () {
      var t,
        e,
        n,
        i,
        r,
        o = this._paintRect;
      return this._paintRect && !this.__dirty || (r = this.transform, t = this.getBoundingRect(), e = (i = this.style).shadowBlur || 0, n = i.shadowOffsetX || 0, i = i.shadowOffsetY || 0, o = this._paintRect || (this._paintRect = new q(0, 0, 0, 0)), r ? q.applyTransform(o, t, r) : o.copy(t), (e || n || i) && (o.width += 2 * e + Math.abs(n), o.height += 2 * e + Math.abs(i), o.x = Math.min(o.x, o.x + n - e), o.y = Math.min(o.y, o.y + i - e)), r = this.dirtyRectTolerance, o.isZero()) || (o.x = Math.floor(o.x - r), o.y = Math.floor(o.y - r), o.width = Math.ceil(o.width + 1 + 2 * r), o.height = Math.ceil(o.height + 1 + 2 * r)), o;
    }, r.prototype.setPrevPaintRect = function (t) {
      t ? (this._prevPaintRect = this._prevPaintRect || new q(0, 0, 0, 0), this._prevPaintRect.copy(t)) : this._prevPaintRect = null;
    }, r.prototype.getPrevPaintRect = function () {
      return this._prevPaintRect;
    }, r.prototype.animateStyle = function (t) {
      return this.animate("style", t);
    }, r.prototype.updateDuringAnimation = function (t) {
      "style" === t ? this.dirtyStyle() : this.markRedraw();
    }, r.prototype.attrKV = function (t, e) {
      "style" !== t ? da.prototype.attrKV.call(this, t, e) : this.style ? this.setStyle(e) : this.useStyle(e);
    }, r.prototype.setStyle = function (t, e) {
      return "string" == typeof t ? this.style[t] = e : L(this.style, t), this.dirtyStyle(), this;
    }, r.prototype.dirtyStyle = function (t) {
      t || this.markRedraw(), this.__dirty |= 2, this._rect && (this._rect = null);
    }, r.prototype.dirty = function () {
      this.dirtyStyle();
    }, r.prototype.styleChanged = function () {
      return !!(2 & this.__dirty);
    }, r.prototype.styleUpdated = function () {
      this.__dirty &= -3;
    }, r.prototype.createStyle = function (t) {
      return Bt(ga, t);
    }, r.prototype.useStyle = function (t) {
      t[fa] || (t = this.createStyle(t)), this.__inHover ? this.__hoverStyle = t : this.style = t, this.dirtyStyle();
    }, r.prototype.isStyleObject = function (t) {
      return t[fa];
    }, r.prototype._innerSaveToNormal = function (t) {
      da.prototype._innerSaveToNormal.call(this, t);
      var e = this._normalState;
      t.style && !e.style && (e.style = this._mergeStyle(this.createStyle(), this.style)), this._savePrimaryToNormal(t, e, ma);
    }, r.prototype._applyStateObj = function (t, e, n, i, r, o) {
      da.prototype._applyStateObj.call(this, t, e, n, i, r, o);
      var a,
        s = !(e && i);
      if (e && e.style ? r ? i ? a = e.style : (a = this._mergeStyle(this.createStyle(), n.style), this._mergeStyle(a, e.style)) : (a = this._mergeStyle(this.createStyle(), (i ? this : n).style), this._mergeStyle(a, e.style)) : s && (a = n.style), a) if (r) {
        var l = this.style;
        if (this.style = this.createStyle(s ? {} : l), s) for (var u = ct(l), h = 0; h < u.length; h++) {
          (p = u[h]) in a && (a[p] = a[p], this.style[p] = l[p]);
        }
        for (var c = ct(a), h = 0; h < c.length; h++) {
          var p = c[h];
          this.style[p] = this.style[p];
        }
        this._transitionState(t, {
          style: a
        }, o, this.getAnimationStyleProps());
      } else this.useStyle(a);
      for (var d = this.__inHover ? va : ma, h = 0; h < d.length; h++) {
        p = d[h];
        e && null != e[p] ? this[p] = e[p] : s && null != n[p] && (this[p] = n[p]);
      }
    }, r.prototype._mergeStates = function (t) {
      for (var e, n = da.prototype._mergeStates.call(this, t), i = 0; i < t.length; i++) {
        var r = t[i];
        r.style && this._mergeStyle(e = e || {}, r.style);
      }
      return e && (n.style = e), n;
    }, r.prototype._mergeStyle = function (t, e) {
      return L(t, e), t;
    }, r.prototype.getAnimationStyleProps = function () {
      return ya;
    }, r.initDefaultProps = ((n = r.prototype).type = "displayable", n.invisible = !1, n.z = 0, n.z2 = 0, n.zlevel = 0, n.culling = !1, n.cursor = "pointer", n.rectHover = !1, n.incremental = !1, n._rect = null, n.dirtyRectTolerance = 0, void (n.__dirty = 2 | vn)), r);
  function r(t) {
    return da.call(this, t) || this;
  }
  var _a = new q(0, 0, 0, 0),
    xa = new q(0, 0, 0, 0);
  var wa = Math.min,
    ba = Math.max,
    Sa = Math.sin,
    Ma = Math.cos,
    Ta = 2 * Math.PI,
    Ia = Gt(),
    Ca = Gt(),
    Da = Gt();
  function ka(t, e, n, i, r, o) {
    r[0] = wa(t, n), r[1] = wa(e, i), o[0] = ba(t, n), o[1] = ba(e, i);
  }
  var Aa = [],
    Pa = [];
  var X = {
      M: 1,
      L: 2,
      C: 3,
      Q: 4,
      A: 5,
      Z: 6,
      R: 7
    },
    La = [],
    Oa = [],
    Ra = [],
    Na = [],
    Ea = [],
    Ba = [],
    za = Math.min,
    Fa = Math.max,
    Va = Math.cos,
    Wa = Math.sin,
    Ha = Math.abs,
    Ga = Math.PI,
    Ua = 2 * Ga,
    qa = "undefined" != typeof Float32Array,
    Xa = [];
  function Ya(t) {
    return Math.round(t / Ga * 1e8) / 1e8 % 2 * Ga;
  }
  function Za(t, e) {
    var n = Ya(t[0]),
      i = (n < 0 && (n += Ua), n - t[0]),
      r = t[1];
    r += i, !e && Ua <= r - n ? r = n + Ua : e && Ua <= n - r ? r = n - Ua : !e && r < n ? r = n + (Ua - Ya(n - r)) : e && n < r && (r = n - (Ua - Ya(r - n))), t[0] = n, t[1] = r;
  }
  o.prototype.increaseVersion = function () {
    this._version++;
  }, o.prototype.getVersion = function () {
    return this._version;
  }, o.prototype.setScale = function (t, e, n) {
    0 < (n = n || 0) && (this._ux = Ha(n / ur / t) || 0, this._uy = Ha(n / ur / e) || 0);
  }, o.prototype.setDPR = function (t) {
    this.dpr = t;
  }, o.prototype.setContext = function (t) {
    this._ctx = t;
  }, o.prototype.getContext = function () {
    return this._ctx;
  }, o.prototype.beginPath = function () {
    return this._ctx && this._ctx.beginPath(), this.reset(), this;
  }, o.prototype.reset = function () {
    this._saveData && (this._len = 0), this._pathSegLen && (this._pathSegLen = null, this._pathLen = 0), this._version++;
  }, o.prototype.moveTo = function (t, e) {
    return this._drawPendingPt(), this.addData(X.M, t, e), this._ctx && this._ctx.moveTo(t, e), this._x0 = t, this._y0 = e, this._xi = t, this._yi = e, this;
  }, o.prototype.lineTo = function (t, e) {
    var n = Ha(t - this._xi),
      i = Ha(e - this._yi),
      r = n > this._ux || i > this._uy;
    return this.addData(X.L, t, e), this._ctx && r && this._ctx.lineTo(t, e), r ? (this._xi = t, this._yi = e, this._pendingPtDist = 0) : (r = n * n + i * i) > this._pendingPtDist && (this._pendingPtX = t, this._pendingPtY = e, this._pendingPtDist = r), this;
  }, o.prototype.bezierCurveTo = function (t, e, n, i, r, o) {
    return this._drawPendingPt(), this.addData(X.C, t, e, n, i, r, o), this._ctx && this._ctx.bezierCurveTo(t, e, n, i, r, o), this._xi = r, this._yi = o, this;
  }, o.prototype.quadraticCurveTo = function (t, e, n, i) {
    return this._drawPendingPt(), this.addData(X.Q, t, e, n, i), this._ctx && this._ctx.quadraticCurveTo(t, e, n, i), this._xi = n, this._yi = i, this;
  }, o.prototype.arc = function (t, e, n, i, r, o) {
    return this._drawPendingPt(), Xa[0] = i, Xa[1] = r, Za(Xa, o), this.addData(X.A, t, e, n, n, i = Xa[0], (r = Xa[1]) - i, 0, o ? 0 : 1), this._ctx && this._ctx.arc(t, e, n, i, r, o), this._xi = Va(r) * n + t, this._yi = Wa(r) * n + e, this;
  }, o.prototype.arcTo = function (t, e, n, i, r) {
    return this._drawPendingPt(), this._ctx && this._ctx.arcTo(t, e, n, i, r), this;
  }, o.prototype.rect = function (t, e, n, i) {
    return this._drawPendingPt(), this._ctx && this._ctx.rect(t, e, n, i), this.addData(X.R, t, e, n, i), this;
  }, o.prototype.closePath = function () {
    this._drawPendingPt(), this.addData(X.Z);
    var t = this._ctx,
      e = this._x0,
      n = this._y0;
    return t && t.closePath(), this._xi = e, this._yi = n, this;
  }, o.prototype.fill = function (t) {
    t && t.fill(), this.toStatic();
  }, o.prototype.stroke = function (t) {
    t && t.stroke(), this.toStatic();
  }, o.prototype.len = function () {
    return this._len;
  }, o.prototype.setData = function (t) {
    var e = t.length;
    this.data && this.data.length === e || !qa || (this.data = new Float32Array(e));
    for (var n = 0; n < e; n++) {
      this.data[n] = t[n];
    }
    this._len = e;
  }, o.prototype.appendPath = function (t) {
    for (var e = (t = t instanceof Array ? t : [t]).length, n = 0, i = this._len, r = 0; r < e; r++) {
      n += t[r].len();
    }
    qa && this.data instanceof Float32Array && (this.data = new Float32Array(i + n));
    for (r = 0; r < e; r++) {
      for (var o = t[r].data, a = 0; a < o.length; a++) {
        this.data[i++] = o[a];
      }
    }
    this._len = i;
  }, o.prototype.addData = function (t, e, n, i, r, o, a, s, l) {
    if (this._saveData) {
      var u = this.data;
      this._len + arguments.length > u.length && (this._expandData(), u = this.data);
      for (var h = 0; h < arguments.length; h++) {
        u[this._len++] = arguments[h];
      }
    }
  }, o.prototype._drawPendingPt = function () {
    0 < this._pendingPtDist && (this._ctx && this._ctx.lineTo(this._pendingPtX, this._pendingPtY), this._pendingPtDist = 0);
  }, o.prototype._expandData = function () {
    if (!(this.data instanceof Array)) {
      for (var t = [], e = 0; e < this._len; e++) {
        t[e] = this.data[e];
      }
      this.data = t;
    }
  }, o.prototype.toStatic = function () {
    var t;
    this._saveData && (this._drawPendingPt(), (t = this.data) instanceof Array) && (t.length = this._len, qa) && 11 < this._len && (this.data = new Float32Array(t));
  }, o.prototype.getBoundingRect = function () {
    Ra[0] = Ra[1] = Ea[0] = Ea[1] = Number.MAX_VALUE, Na[0] = Na[1] = Ba[0] = Ba[1] = -Number.MAX_VALUE;
    for (var t, e = this.data, n = 0, i = 0, r = 0, o = 0, a = 0; a < this._len;) {
      var E = e[a++],
        B = 1 === a;
      switch (B && (r = n = e[a], o = i = e[a + 1]), E) {
        case X.M:
          n = r = e[a++], i = o = e[a++], Ea[0] = r, Ea[1] = o, Ba[0] = r, Ba[1] = o;
          break;
        case X.L:
          ka(n, i, e[a], e[a + 1], Ea, Ba), n = e[a++], i = e[a++];
          break;
        case X.C:
          H = W = m = y = V = g = f = d = p = c = F = z = h = u = l = s = void 0;
          var s = n,
            l = i,
            u = e[a++],
            h = e[a++],
            z = e[a++],
            F = e[a++],
            c = e[a],
            p = e[a + 1],
            d = Ea,
            f = Ba,
            g = Vn,
            V = Bn,
            y = g(s, u, z, c, Aa);
          d[0] = 1 / 0, d[1] = 1 / 0, f[0] = -1 / 0, f[1] = -1 / 0;
          for (var m = 0; m < y; m++) {
            var W = V(s, u, z, c, Aa[m]);
            d[0] = wa(W, d[0]), f[0] = ba(W, f[0]);
          }
          for (y = g(l, h, F, p, Pa), m = 0; m < y; m++) {
            var H = V(l, h, F, p, Pa[m]);
            d[1] = wa(H, d[1]), f[1] = ba(H, f[1]);
          }
          d[0] = wa(s, d[0]), f[0] = ba(s, f[0]), d[0] = wa(c, d[0]), f[0] = ba(c, f[0]), d[1] = wa(l, d[1]), f[1] = ba(l, f[1]), d[1] = wa(p, d[1]), f[1] = ba(p, f[1]), n = e[a++], i = e[a++];
          break;
        case X.Q:
          g = n, L = i, M = e[a++], x = e[a++], S = e[a], v = e[a + 1], b = Ea, T = Ba, t = w = t = _ = void 0, _ = Gn, t = ba(wa((w = qn)(g, M, S), 1), 0), w = ba(wa(w(L, x, v), 1), 0), M = _(g, M, S, t), t = _(L, x, v, w), b[0] = wa(g, S, M), b[1] = wa(L, v, t), T[0] = ba(g, S, M), T[1] = ba(L, v, t), n = e[a++], i = e[a++];
          break;
        case X.A:
          var v,
            _ = e[a++],
            x = e[a++],
            w = e[a++],
            b = e[a++],
            S = e[a++],
            M = e[a++] + S,
            T = (a += 1, !e[a++]),
            I = (B && (r = Va(S) * w + _, o = Wa(S) * b + x), N = v = U = G = R = O = L = P = A = k = D = C = I = void 0, _),
            C = x,
            D = w,
            k = b,
            A = S,
            P = M,
            L = T,
            O = Ea,
            R = Ba,
            G = ie,
            U = re;
          if ((v = Math.abs(A - P)) % Ta < 1e-4 && 1e-4 < v) O[0] = I - D, O[1] = C - k, R[0] = I + D, R[1] = C + k;else {
            Ia[0] = Ma(A) * D + I, Ia[1] = Sa(A) * k + C, Ca[0] = Ma(P) * D + I, Ca[1] = Sa(P) * k + C, G(O, Ia, Ca), U(R, Ia, Ca), (A %= Ta) < 0 && (A += Ta), (P %= Ta) < 0 && (P += Ta), P < A && !L ? P += Ta : A < P && L && (A += Ta), L && (v = P, P = A, A = v);
            for (var N = 0; N < P; N += Math.PI / 2) {
              A < N && (Da[0] = Ma(N) * D + I, Da[1] = Sa(N) * k + C, G(O, Da, O), U(R, Da, R));
            }
          }
          n = Va(M) * w + _, i = Wa(M) * b + x;
          break;
        case X.R:
          ka(r = n = e[a++], o = i = e[a++], r + e[a++], o + e[a++], Ea, Ba);
          break;
        case X.Z:
          n = r, i = o;
      }
      ie(Ra, Ra, Ea), re(Na, Na, Ba);
    }
    return 0 === a && (Ra[0] = Ra[1] = Na[0] = Na[1] = 0), new q(Ra[0], Ra[1], Na[0] - Ra[0], Na[1] - Ra[1]);
  }, o.prototype._calculateLength = function () {
    for (var t = this.data, e = this._len, n = this._ux, i = this._uy, r = 0, o = 0, a = 0, s = 0, l = (this._pathSegLen || (this._pathSegLen = []), this._pathSegLen), u = 0, h = 0, c = 0; c < e;) {
      var p = t[c++],
        d = 1 === c,
        f = (d && (a = r = t[c], s = o = t[c + 1]), -1);
      switch (p) {
        case X.M:
          r = a = t[c++], o = s = t[c++];
          break;
        case X.L:
          var g = t[c++],
            y = (_ = t[c++]) - o;
          (Ha(C = g - r) > n || Ha(y) > i || c === e - 1) && (f = Math.sqrt(C * C + y * y), r = g, o = _);
          break;
        case X.C:
          var m = t[c++],
            v = t[c++],
            g = t[c++],
            _ = t[c++],
            x = t[c++],
            w = t[c++],
            f = function (t, e, n, i, r, o, a, s, l) {
              for (var u = t, h = e, c = 0, p = 1 / l, d = 1; d <= l; d++) {
                var f = d * p,
                  g = Bn(t, n, r, a, f),
                  f = Bn(e, i, o, s, f),
                  y = g - u,
                  m = f - h;
                c += Math.sqrt(y * y + m * m), u = g, h = f;
              }
              return c;
            }(r, o, m, v, g, _, x, w, 10),
            r = x,
            o = w;
          break;
        case X.Q:
          f = function (t, e, n, i, r, o, a) {
            for (var s = t, l = e, u = 0, h = 1 / a, c = 1; c <= a; c++) {
              var p = c * h,
                d = Gn(t, n, r, p),
                p = Gn(e, i, o, p),
                f = d - s,
                g = p - l;
              u += Math.sqrt(f * f + g * g), s = d, l = p;
            }
            return u;
          }(r, o, m = t[c++], v = t[c++], g = t[c++], _ = t[c++], 10), r = g, o = _;
          break;
        case X.A:
          var x = t[c++],
            w = t[c++],
            b = t[c++],
            S = t[c++],
            M = t[c++],
            T = t[c++],
            I = T + M;
          c += 1, d && (a = Va(M) * b + x, s = Wa(M) * S + w), f = Fa(b, S) * za(Ua, Math.abs(T)), r = Va(I) * b + x, o = Wa(I) * S + w;
          break;
        case X.R:
          a = r = t[c++], s = o = t[c++];
          f = 2 * t[c++] + 2 * t[c++];
          break;
        case X.Z:
          var C = a - r,
            y = s - o;
          f = Math.sqrt(C * C + y * y), r = a, o = s;
      }
      0 <= f && (u += l[h++] = f);
    }
    return this._pathLen = u;
  }, o.prototype.rebuildPath = function (t, e) {
    var n,
      i,
      r,
      o,
      a,
      s,
      l,
      u,
      h = this.data,
      E = this._ux,
      B = this._uy,
      z = this._len,
      c = e < 1,
      p = 0,
      d = 0,
      f = 0;
    if (!c || (this._pathSegLen || this._calculateLength(), a = this._pathSegLen, s = e * this._pathLen)) t: for (var g = 0; g < z;) {
      var y = h[g++],
        F = 1 === g;
      switch (F && (n = r = h[g], i = o = h[g + 1]), y !== X.L && 0 < f && (t.lineTo(l, u), f = 0), y) {
        case X.M:
          n = r = h[g++], i = o = h[g++], t.moveTo(r, o);
          break;
        case X.L:
          var m = h[g++],
            v = h[g++],
            _ = Ha(m - r),
            x = Ha(v - o);
          if (E < _ || B < x) {
            if (c) {
              if (s < p + (N = a[d++])) {
                var w = (s - p) / N;
                t.lineTo(r * (1 - w) + m * w, o * (1 - w) + v * w);
                break t;
              }
              p += N;
            }
            t.lineTo(m, v), r = m, o = v, f = 0;
          } else {
            _ = _ * _ + x * x;
            f < _ && (l = m, u = v, f = _);
          }
          break;
        case X.C:
          var b = h[g++],
            S = h[g++],
            M = h[g++],
            T = h[g++],
            x = h[g++],
            _ = h[g++];
          if (c) {
            if (s < p + (N = a[d++])) {
              Wn(r, b, M, x, w = (s - p) / N, La), Wn(o, S, T, _, w, Oa), t.bezierCurveTo(La[1], Oa[1], La[2], Oa[2], La[3], Oa[3]);
              break t;
            }
            p += N;
          }
          t.bezierCurveTo(b, S, M, T, x, _), r = x, o = _;
          break;
        case X.Q:
          b = h[g++], S = h[g++], M = h[g++], T = h[g++];
          if (c) {
            if (s < p + (N = a[d++])) {
              Xn(r, b, M, w = (s - p) / N, La), Xn(o, S, T, w, Oa), t.quadraticCurveTo(La[1], Oa[1], La[2], Oa[2]);
              break t;
            }
            p += N;
          }
          t.quadraticCurveTo(b, S, M, T), r = M, o = T;
          break;
        case X.A:
          var I = h[g++],
            C = h[g++],
            D = h[g++],
            k = h[g++],
            A = h[g++],
            P = h[g++],
            L = h[g++],
            V = !h[g++],
            W = k < D ? D : k,
            O = .001 < Ha(D - k),
            R = A + P,
            H = !1;
          if (c && (s < p + (N = a[d++]) && (R = A + P * (s - p) / N, H = !0), p += N), O && t.ellipse ? t.ellipse(I, C, D, k, L, A, R, V) : t.arc(I, C, W, A, R, V), H) break t;
          F && (n = Va(A) * D + I, i = Wa(A) * k + C), r = Va(R) * D + I, o = Wa(R) * k + C;
          break;
        case X.R:
          n = r = h[g], i = o = h[g + 1], m = h[g++], v = h[g++];
          var N,
            P = h[g++],
            O = h[g++];
          if (c) {
            if (s < p + (N = a[d++])) {
              L = s - p;
              t.moveTo(m, v), t.lineTo(m + za(L, P), v), 0 < (L -= P) && t.lineTo(m + P, v + za(L, O)), 0 < (L -= O) && t.lineTo(m + Fa(P - L, 0), v + O), 0 < (L -= P) && t.lineTo(m, v + Fa(O - L, 0));
              break t;
            }
            p += N;
          }
          t.rect(m, v, P, O);
          break;
        case X.Z:
          if (c) {
            if (s < p + (N = a[d++])) {
              w = (s - p) / N;
              t.lineTo(r * (1 - w) + n * w, o * (1 - w) + i * w);
              break t;
            }
            p += N;
          }
          t.closePath(), r = n, o = i;
      }
    }
  }, o.prototype.clone = function () {
    var t = new o(),
      e = this.data;
    return t.data = e.slice ? e.slice() : Array.prototype.slice.call(e), t._len = this._len, t;
  }, o.CMD = X, o.initDefaultProps = ((fu = o.prototype)._saveData = !0, fu._ux = 0, fu._uy = 0, fu._pendingPtDist = 0, void (fu._version = 0));
  var ja = o;
  function o(t) {
    this.dpr = 1, this._xi = 0, this._yi = 0, this._x0 = 0, this._y0 = 0, this._len = 0, t && (this._saveData = !1), this._saveData && (this.data = []);
  }
  function Ka(t, e, n, i, r, o, a) {
    var s;
    if (0 !== r) return s = 0, !(e + (r = r) < a && i + r < a || a < e - r && a < i - r || t + r < o && n + r < o || o < t - r && o < n - r) && (t === n ? Math.abs(o - t) <= r / 2 : (o = (s = (e - i) / (t - n)) * o - a + (t * i - n * e) / (t - n)) * o / (s * s + 1) <= r / 2 * r / 2);
  }
  var $a = 2 * Math.PI;
  function Qa(t) {
    return (t %= $a) < 0 && (t += $a), t;
  }
  var Ja = 2 * Math.PI;
  function ts(t, e, n, i, r, o) {
    return e < o && i < o || o < e && o < i || i === e ? 0 : (n = (o = (o - e) / (i - e)) * (n - t) + t) === r ? 1 / 0 : r < n ? 1 != o && 0 != o ? i < e ? 1 : -1 : i < e ? .5 : -.5 : 0;
  }
  var es = ja.CMD,
    ns = 2 * Math.PI,
    is = 1e-4;
  var rs = [-1, -1, -1],
    os = [-1, -1];
  function as(t, e, n, i, r, o, a, s, l, u) {
    if (e < u && i < u && o < u && s < u || u < e && u < i && u < o && u < s) return 0;
    var h = Fn(e, i, o, s, u, rs);
    if (0 === h) return 0;
    for (var c, p = 0, d = -1, f = void 0, g = void 0, y = 0; y < h; y++) {
      var m = rs[y],
        v = 0 === m || 1 === m ? .5 : 1;
      Bn(t, n, r, a, m) < l || (d < 0 && (d = Vn(e, i, o, s, os), os[1] < os[0] && 1 < d && (c = void 0, c = os[0], os[0] = os[1], os[1] = c), f = Bn(e, i, o, s, os[0]), 1 < d) && (g = Bn(e, i, o, s, os[1])), 2 === d ? m < os[0] ? p += f < e ? v : -v : m < os[1] ? p += g < f ? v : -v : p += s < g ? v : -v : m < os[0] ? p += f < e ? v : -v : p += s < f ? v : -v);
    }
    return p;
  }
  function ss(t, e, n, i, r, o, a, s) {
    if (e < s && i < s && o < s || s < e && s < i && s < o) return 0;
    c = rs, h = (l = e) - 2 * (u = i) + (h = o), u = 2 * (u - l), l -= s = s, s = 0, Nn(h) ? En(u) && 0 <= (p = -l / u) && p <= 1 && (c[s++] = p) : Nn(l = u * u - 4 * h * l) ? 0 <= (p = -u / (2 * h)) && p <= 1 && (c[s++] = p) : 0 < l && (d = (-u - (l = Dn(l))) / (2 * h), 0 <= (p = (-u + l) / (2 * h)) && p <= 1 && (c[s++] = p), 0 <= d) && d <= 1 && (c[s++] = d);
    var l,
      u,
      h,
      c,
      p,
      d,
      f = s;
    if (0 === f) return 0;
    var g = qn(e, i, o);
    if (0 <= g && g <= 1) {
      for (var y = 0, m = Gn(e, i, o, g), v = 0; v < f; v++) {
        var _ = 0 === rs[v] || 1 === rs[v] ? .5 : 1;
        Gn(t, n, r, rs[v]) < a || (rs[v] < g ? y += m < e ? _ : -_ : y += o < m ? _ : -_);
      }
      return y;
    }
    return _ = 0 === rs[0] || 1 === rs[0] ? .5 : 1, Gn(t, n, r, rs[0]) < a ? 0 : o < e ? _ : -_;
  }
  function ls(t, e, n, i, r) {
    for (var o, a = t.data, s = t.len(), l = 0, u = 0, h = 0, c = 0, p = 0, d = 0; d < s;) {
      var f = a[d++],
        g = 1 === d;
      switch (f === es.M && 1 < d && (n || (l += ts(u, h, c, p, i, r))), g && (c = u = a[d], p = h = a[d + 1]), f) {
        case es.M:
          u = c = a[d++], h = p = a[d++];
          break;
        case es.L:
          if (n) {
            if (Ka(u, h, a[d], a[d + 1], e, i, r)) return !0;
          } else l += ts(u, h, a[d], a[d + 1], i, r) || 0;
          u = a[d++], h = a[d++];
          break;
        case es.C:
          if (n) {
            if (function (t, e, n, i, r, o, a, s, l, u, h) {
              if (0 !== l) return !(e + (l = l) < h && i + l < h && o + l < h && s + l < h || h < e - l && h < i - l && h < o - l && h < s - l || t + l < u && n + l < u && r + l < u && a + l < u || u < t - l && u < n - l && u < r - l && u < a - l) && Hn(t, e, n, i, r, o, a, s, u, h, null) <= l / 2;
            }(u, h, a[d++], a[d++], a[d++], a[d++], a[d], a[d + 1], e, i, r)) return !0;
          } else l += as(u, h, a[d++], a[d++], a[d++], a[d++], a[d], a[d + 1], i, r) || 0;
          u = a[d++], h = a[d++];
          break;
        case es.Q:
          if (n) {
            if (function (t, e, n, i, r, o, a, s, l) {
              if (0 !== a) return !(e + (a = a) < l && i + a < l && o + a < l || l < e - a && l < i - a && l < o - a || t + a < s && n + a < s && r + a < s || s < t - a && s < n - a && s < r - a) && Yn(t, e, n, i, r, o, s, l, null) <= a / 2;
            }(u, h, a[d++], a[d++], a[d], a[d + 1], e, i, r)) return !0;
          } else l += ss(u, h, a[d++], a[d++], a[d], a[d + 1], i, r) || 0;
          u = a[d++], h = a[d++];
          break;
        case es.A:
          var y = a[d++],
            m = a[d++],
            v = a[d++],
            _ = a[d++],
            x = a[d++],
            w = a[d++],
            b = (d += 1, !!(1 - a[d++])),
            S = Math.cos(x) * v + y,
            M = Math.sin(x) * _ + m,
            T = (g ? (c = S, p = M) : l += ts(u, h, S, M, i, r), (i - y) * _ / v + y);
          if (n) {
            if (function (t, e, n, i, r, o, a, s, l) {
              if (0 !== a) return a = a, s -= t, l -= e, !(n < (t = Math.sqrt(s * s + l * l)) - a || t + a < n) && (Math.abs(i - r) % Ja < 1e-4 || ((r = o ? (e = i, i = Qa(r), Qa(e)) : (i = Qa(i), Qa(r))) < i && (r += Ja), (t = Math.atan2(l, s)) < 0 && (t += Ja), i <= t && t <= r) || i <= t + Ja && t + Ja <= r);
            }(y, m, _, x, x + w, b, e, T, r)) return !0;
          } else l += function (t, e, n, i, r, o, a, s) {
            if (n < (s -= e) || s < -n) return 0;
            var e = Math.sqrt(n * n - s * s);
            if (rs[0] = -e, rs[1] = e, (n = Math.abs(i - r)) < 1e-4) return 0;
            if (ns - 1e-4 <= n) return r = ns, h = o ? 1 : -1, a >= rs[i = 0] + t && a <= rs[1] + t ? h : 0;
            r < i && (e = i, i = r, r = e), i < 0 && (i += ns, r += ns);
            for (var l = 0, u = 0; u < 2; u++) {
              var h,
                c = rs[u];
              a < c + t && (h = o ? 1 : -1, i <= (c = (c = Math.atan2(s, c)) < 0 ? ns + c : c) && c <= r || i <= c + ns && c + ns <= r) && (l += h = c > Math.PI / 2 && c < 1.5 * Math.PI ? -h : h);
            }
            return l;
          }(y, m, _, x, x + w, b, T, r);
          u = Math.cos(x + w) * v + y, h = Math.sin(x + w) * _ + m;
          break;
        case es.R:
          c = u = a[d++], p = h = a[d++];
          if (S = c + a[d++], M = p + a[d++], n) {
            if (Ka(c, p, S, p, e, i, r) || Ka(S, p, S, M, e, i, r) || Ka(S, M, c, M, e, i, r) || Ka(c, M, c, p, e, i, r)) return !0;
          } else l = (l += ts(S, p, S, M, i, r)) + ts(c, M, c, p, i, r);
          break;
        case es.Z:
          if (n) {
            if (Ka(u, h, c, p, e, i, r)) return !0;
          } else l += ts(u, h, c, p, i, r);
          u = c, h = p;
      }
    }
    return n || (t = h, o = p, Math.abs(t - o) < is) || (l += ts(u, h, c, p, i, r) || 0), 0 !== l;
  }
  var us,
    hs = B({
      fill: "#000",
      stroke: null,
      strokePercent: 1,
      fillOpacity: 1,
      strokeOpacity: 1,
      lineDashOffset: 0,
      lineWidth: 1,
      lineCap: "butt",
      miterLimit: 10,
      strokeNoScale: !1,
      strokeFirst: !1
    }, ga),
    cs = {
      style: B({
        fill: !0,
        stroke: !0,
        strokePercent: !0,
        fillOpacity: !0,
        strokeOpacity: !0,
        lineDashOffset: !0,
        lineWidth: !0,
        miterLimit: !0
      }, ya.style)
    },
    ps = xr.concat(["invisible", "culling", "z", "z2", "zlevel", "parent"]),
    ds = (u(a, us = n), a.prototype.update = function () {
      var e = this,
        t = (us.prototype.update.call(this), this.style);
      if (t.decal) {
        var n,
          i = this._decalEl = this._decalEl || new a(),
          r = (i.buildPath === a.prototype.buildPath && (i.buildPath = function (t) {
            e.buildPath(t, e.shape);
          }), i.silent = !0, i.style);
        for (n in t) {
          r[n] !== t[n] && (r[n] = t[n]);
        }
        r.fill = t.fill ? t.decal : null, r.decal = null, r.shadowColor = null, t.strokeFirst && (r.stroke = null);
        for (var o = 0; o < ps.length; ++o) {
          i[ps[o]] = this[ps[o]];
        }
        i.__dirty |= vn;
      } else this._decalEl && (this._decalEl = null);
    }, a.prototype.getDecalElement = function () {
      return this._decalEl;
    }, a.prototype._init = function (t) {
      var e = ct(t),
        n = (this.shape = this.getDefaultShape(), this.getDefaultStyle());
      n && this.useStyle(n);
      for (var i = 0; i < e.length; i++) {
        var r = e[i],
          o = t[r];
        "style" === r ? this.style ? L(this.style, o) : this.useStyle(o) : "shape" === r ? L(this.shape, o) : us.prototype.attrKV.call(this, r, o);
      }
      this.style || this.useStyle({});
    }, a.prototype.getDefaultStyle = function () {
      return null;
    }, a.prototype.getDefaultShape = function () {
      return {};
    }, a.prototype.canBeInsideText = function () {
      return this.hasFill();
    }, a.prototype.getInsideTextFill = function () {
      var t,
        e = this.style.fill;
      if ("none" !== e) {
        if (V(e)) return .5 < (t = bi(e, 0)) ? hr : .2 < t ? "#eee" : cr;
        if (e) return cr;
      }
      return hr;
    }, a.prototype.getInsideTextStroke = function (t) {
      var e = this.style.fill;
      if (V(e)) {
        var n = this.__zr;
        if (!(!n || !n.isDarkMode()) == bi(t, 0) < .4) return e;
      }
    }, a.prototype.buildPath = function (t, e, n) {}, a.prototype.pathUpdated = function () {
      this.__dirty &= ~_n;
    }, a.prototype.getUpdatedPathProxy = function (t) {
      return this.path || this.createPathProxy(), this.path.beginPath(), this.buildPath(this.path, this.shape, t), this.path;
    }, a.prototype.createPathProxy = function () {
      this.path = new ja(!1);
    }, a.prototype.hasStroke = function () {
      var t = this.style,
        e = t.stroke;
      return !(null == e || "none" === e || !(0 < t.lineWidth));
    }, a.prototype.hasFill = function () {
      var t = this.style.fill;
      return null != t && "none" !== t;
    }, a.prototype.getBoundingRect = function () {
      var t,
        e,
        n = this._rect,
        i = this.style,
        r = !n;
      return r && (t = !1, this.path || (t = !0, this.createPathProxy()), e = this.path, (t || this.__dirty & _n) && (e.beginPath(), this.buildPath(e, this.shape, !1), this.pathUpdated()), n = e.getBoundingRect()), this._rect = n, this.hasStroke() && this.path && 0 < this.path.len() ? (t = this._rectStroke || (this._rectStroke = n.clone()), (this.__dirty || r) && (t.copy(n), e = i.strokeNoScale ? this.getLineScale() : 1, r = i.lineWidth, this.hasFill() || (i = this.strokeContainThreshold, r = Math.max(r, null == i ? 4 : i)), 1e-10 < e) && (t.width += r / e, t.height += r / e, t.x -= r / e / 2, t.y -= r / e / 2), t) : n;
    }, a.prototype.contain = function (t, e) {
      var n = this.transformCoordToLocal(t, e),
        i = this.getBoundingRect(),
        r = this.style;
      if (t = n[0], e = n[1], i.contain(t, e)) {
        n = this.path;
        if (this.hasStroke()) {
          i = r.lineWidth, r = r.strokeNoScale ? this.getLineScale() : 1;
          if (1e-10 < r && (this.hasFill() || (i = Math.max(i, this.strokeContainThreshold)), ls(n, i / r, !0, t, e))) return !0;
        }
        if (this.hasFill()) return ls(n, 0, !1, t, e);
      }
      return !1;
    }, a.prototype.dirtyShape = function () {
      this.__dirty |= _n, this._rect && (this._rect = null), this._decalEl && this._decalEl.dirtyShape(), this.markRedraw();
    }, a.prototype.dirty = function () {
      this.dirtyStyle(), this.dirtyShape();
    }, a.prototype.animateShape = function (t) {
      return this.animate("shape", t);
    }, a.prototype.updateDuringAnimation = function (t) {
      "style" === t ? this.dirtyStyle() : "shape" === t ? this.dirtyShape() : this.markRedraw();
    }, a.prototype.attrKV = function (t, e) {
      "shape" === t ? this.setShape(e) : us.prototype.attrKV.call(this, t, e);
    }, a.prototype.setShape = function (t, e) {
      var n = (n = this.shape) || (this.shape = {});
      return "string" == typeof t ? n[t] = e : L(n, t), this.dirtyShape(), this;
    }, a.prototype.shapeChanged = function () {
      return !!(this.__dirty & _n);
    }, a.prototype.createStyle = function (t) {
      return Bt(hs, t);
    }, a.prototype._innerSaveToNormal = function (t) {
      us.prototype._innerSaveToNormal.call(this, t);
      var e = this._normalState;
      t.shape && !e.shape && (e.shape = L({}, this.shape));
    }, a.prototype._applyStateObj = function (t, e, n, i, r, o) {
      us.prototype._applyStateObj.call(this, t, e, n, i, r, o);
      var a,
        s = !(e && i);
      if (e && e.shape ? r ? i ? a = e.shape : (a = L({}, n.shape), L(a, e.shape)) : (a = L({}, (i ? this : n).shape), L(a, e.shape)) : s && (a = n.shape), a) if (r) {
        this.shape = L({}, this.shape);
        for (var l = {}, u = ct(a), h = 0; h < u.length; h++) {
          var c = u[h];
          "object" == _typeof(a[c]) ? this.shape[c] = a[c] : l[c] = a[c];
        }
        this._transitionState(t, {
          shape: l
        }, o);
      } else this.shape = a, this.dirtyShape();
    }, a.prototype._mergeStates = function (t) {
      for (var e, n = us.prototype._mergeStates.call(this, t), i = 0; i < t.length; i++) {
        var r = t[i];
        r.shape && this._mergeStyle(e = e || {}, r.shape);
      }
      return e && (n.shape = e), n;
    }, a.prototype.getAnimationStyleProps = function () {
      return cs;
    }, a.prototype.isZeroArea = function () {
      return !1;
    }, a.extend = function (n) {
      u(r, i = a), r.prototype.getDefaultStyle = function () {
        return y(n.style);
      }, r.prototype.getDefaultShape = function () {
        return y(n.shape);
      };
      var i,
        t,
        e = r;
      function r(t) {
        var e = i.call(this, t) || this;
        return n.init && n.init.call(e, t), e;
      }
      for (t in n) {
        "function" == typeof n[t] && (e.prototype[t] = n[t]);
      }
      return e;
    }, a.initDefaultProps = ((fu = a.prototype).type = "path", fu.strokeContainThreshold = 5, fu.segmentIgnoreThreshold = 0, fu.subPixelOptimize = !1, fu.autoBatch = !1, void (fu.__dirty = 2 | vn | _n)), a);
  function a(t) {
    return us.call(this, t) || this;
  }
  var fs,
    gs = B({
      strokeFirst: !0,
      font: j,
      x: 0,
      y: 0,
      textAlign: "left",
      textBaseline: "top",
      miterLimit: 2
    }, hs),
    ys = (u(ms, fs = n), ms.prototype.hasStroke = function () {
      var t = this.style,
        e = t.stroke;
      return null != e && "none" !== e && 0 < t.lineWidth;
    }, ms.prototype.hasFill = function () {
      var t = this.style.fill;
      return null != t && "none" !== t;
    }, ms.prototype.createStyle = function (t) {
      return Bt(gs, t);
    }, ms.prototype.setBoundingRect = function (t) {
      this._rect = t;
    }, ms.prototype.getBoundingRect = function () {
      var t,
        e = this.style;
      return this._rect || (null != (t = e.text) ? t += "" : t = "", (t = Mr(t, e.font, e.textAlign, e.textBaseline)).x += e.x || 0, t.y += e.y || 0, this.hasStroke() && (e = e.lineWidth, t.x -= e / 2, t.y -= e / 2, t.width += e, t.height += e), this._rect = t), this._rect;
    }, ms.initDefaultProps = void (ms.prototype.dirtyRectTolerance = 10), ms);
  function ms() {
    return null !== fs && fs.apply(this, arguments) || this;
  }
  ys.prototype.type = "tspan";
  var vs = B({
      x: 0,
      y: 0
    }, ga),
    _s = {
      style: B({
        x: !0,
        y: !0,
        width: !0,
        height: !0,
        sx: !0,
        sy: !0,
        sWidth: !0,
        sHeight: !0
      }, ya.style)
    };
  u(bs, xs = n), bs.prototype.createStyle = function (t) {
    return Bt(vs, t);
  }, bs.prototype._getSize = function (t) {
    var e,
      n = this.style,
      i = n[t];
    return null != i ? i : (i = (i = n.image) && "string" != typeof i && i.width && i.height ? n.image : this.__image) ? null == (e = n[n = "width" === t ? "height" : "width"]) ? i[t] : i[t] / i[n] * e : 0;
  }, bs.prototype.getWidth = function () {
    return this._getSize("width");
  }, bs.prototype.getHeight = function () {
    return this._getSize("height");
  }, bs.prototype.getAnimationStyleProps = function () {
    return _s;
  }, bs.prototype.getBoundingRect = function () {
    var t = this.style;
    return this._rect || (this._rect = new q(t.x || 0, t.y || 0, this.getWidth(), this.getHeight())), this._rect;
  };
  var xs,
    ws = bs;
  function bs() {
    return null !== xs && xs.apply(this, arguments) || this;
  }
  ws.prototype.type = "image";
  var Ss = Math.round;
  function Ms(t, e, n) {
    var i, r, o;
    if (e) return i = e.x1, r = e.x2, o = e.y1, e = e.y2, t.x1 = i, t.x2 = r, t.y1 = o, t.y2 = e, (n = n && n.lineWidth) && (Ss(2 * i) === Ss(2 * r) && (t.x1 = t.x2 = Is(i, n, !0)), Ss(2 * o) === Ss(2 * e)) && (t.y1 = t.y2 = Is(o, n, !0)), t;
  }
  function Ts(t, e, n) {
    var i, r, o;
    if (e) return i = e.x, r = e.y, o = e.width, e = e.height, t.x = i, t.y = r, t.width = o, t.height = e, (n = n && n.lineWidth) && (t.x = Is(i, n, !0), t.y = Is(r, n, !0), t.width = Math.max(Is(i + o, n, !1) - t.x, 0 === o ? 0 : 1), t.height = Math.max(Is(r + e, n, !1) - t.y, 0 === e ? 0 : 1)), t;
  }
  function Is(t, e, n) {
    var i;
    return e ? ((i = Ss(2 * t)) + Ss(e)) % 2 == 0 ? i / 2 : (i + (n ? 1 : -1)) / 2 : t;
  }
  var Cs,
    Ds = function Ds() {
      this.x = 0, this.y = 0, this.width = 0, this.height = 0;
    },
    ks = {},
    As = (u(Ps, Cs = ds), Ps.prototype.getDefaultShape = function () {
      return new Ds();
    }, Ps.prototype.buildPath = function (t, e) {
      var n, i, r, o, a, s, l, u, h, c, p, d, f, g;
      this.subPixelOptimize ? (n = (a = Ts(ks, e, this.style)).x, i = a.y, r = a.width, o = a.height, a.r = e.r, e = a) : (n = e.x, i = e.y, r = e.width, o = e.height), e.r ? (a = t, p = (e = e).x, d = e.y, f = e.width, g = e.height, e = e.r, f < 0 && (p += f, f = -f), g < 0 && (d += g, g = -g), "number" == typeof e ? s = l = u = h = e : e instanceof Array ? 1 === e.length ? s = l = u = h = e[0] : 2 === e.length ? (s = u = e[0], l = h = e[1]) : 3 === e.length ? (s = e[0], l = h = e[1], u = e[2]) : (s = e[0], l = e[1], u = e[2], h = e[3]) : s = l = u = h = 0, f < s + l && (s *= f / (c = s + l), l *= f / c), f < u + h && (u *= f / (c = u + h), h *= f / c), g < l + u && (l *= g / (c = l + u), u *= g / c), g < s + h && (s *= g / (c = s + h), h *= g / c), a.moveTo(p + s, d), a.lineTo(p + f - l, d), 0 !== l && a.arc(p + f - l, d + l, l, -Math.PI / 2, 0), a.lineTo(p + f, d + g - u), 0 !== u && a.arc(p + f - u, d + g - u, u, 0, Math.PI / 2), a.lineTo(p + h, d + g), 0 !== h && a.arc(p + h, d + g - h, h, Math.PI / 2, Math.PI), a.lineTo(p, d + s), 0 !== s && a.arc(p + s, d + s, s, Math.PI, 1.5 * Math.PI)) : t.rect(n, i, r, o);
    }, Ps.prototype.isZeroArea = function () {
      return !this.shape.width || !this.shape.height;
    }, Ps);
  function Ps(t) {
    return Cs.call(this, t) || this;
  }
  As.prototype.type = "rect";
  var Ls,
    Os = {
      fill: "#000"
    },
    Rs = {
      style: B({
        fill: !0,
        stroke: !0,
        fillOpacity: !0,
        strokeOpacity: !0,
        lineWidth: !0,
        fontSize: !0,
        lineHeight: !0,
        width: !0,
        height: !0,
        textShadowColor: !0,
        textShadowBlur: !0,
        textShadowOffsetX: !0,
        textShadowOffsetY: !0,
        backgroundColor: !0,
        padding: !0,
        borderColor: !0,
        borderWidth: !0,
        borderRadius: !0
      }, ya.style)
    },
    Ns = (u(Es, Ls = n), Es.prototype.childrenRef = function () {
      return this._children;
    }, Es.prototype.update = function () {
      Ls.prototype.update.call(this), this.styleChanged() && this._updateSubTexts();
      for (var t = 0; t < this._children.length; t++) {
        var e = this._children[t];
        e.zlevel = this.zlevel, e.z = this.z, e.z2 = this.z2, e.culling = this.culling, e.cursor = this.cursor, e.invisible = this.invisible;
      }
    }, Es.prototype.updateTransform = function () {
      var t = this.innerTransformable;
      t ? (t.updateTransform(), t.transform && (this.transform = t.transform)) : Ls.prototype.updateTransform.call(this);
    }, Es.prototype.getLocalTransform = function (t) {
      var e = this.innerTransformable;
      return e ? e.getLocalTransform(t) : Ls.prototype.getLocalTransform.call(this, t);
    }, Es.prototype.getComputedTransform = function () {
      return this.__hostTarget && (this.__hostTarget.getComputedTransform(), this.__hostTarget.updateInnerText(!0)), Ls.prototype.getComputedTransform.call(this);
    }, Es.prototype._updateSubTexts = function () {
      var t;
      this._childCursor = 0, Ws(t = this.style), E(t.rich, Ws), this.style.rich ? this._updateRichTexts() : this._updatePlainTexts(), this._children.length = this._childCursor, this.styleUpdated();
    }, Es.prototype.addSelfToZr = function (t) {
      Ls.prototype.addSelfToZr.call(this, t);
      for (var e = 0; e < this._children.length; e++) {
        this._children[e].__zr = t;
      }
    }, Es.prototype.removeSelfFromZr = function (t) {
      Ls.prototype.removeSelfFromZr.call(this, t);
      for (var e = 0; e < this._children.length; e++) {
        this._children[e].__zr = null;
      }
    }, Es.prototype.getBoundingRect = function () {
      if (this.styleChanged() && this._updateSubTexts(), !this._rect) {
        for (var t = new q(0, 0, 0, 0), e = this._children, n = [], i = null, r = 0; r < e.length; r++) {
          var o = e[r],
            a = o.getBoundingRect(),
            o = o.getLocalTransform(n);
          o ? (t.copy(a), t.applyTransform(o), (i = i || t.clone()).union(t)) : (i = i || a.clone()).union(a);
        }
        this._rect = i || t;
      }
      return this._rect;
    }, Es.prototype.setDefaultTextStyle = function (t) {
      this._defaultStyle = t || Os;
    }, Es.prototype.setTextContent = function (t) {}, Es.prototype._mergeStyle = function (t, e) {
      var n, i;
      return e && (n = e.rich, i = t.rich || n && {}, L(t, e), n && i ? (this._mergeRich(i, n), t.rich = i) : i && (t.rich = i)), t;
    }, Es.prototype._mergeRich = function (t, e) {
      for (var n = ct(e), i = 0; i < n.length; i++) {
        var r = n[i];
        t[r] = t[r] || {}, L(t[r], e[r]);
      }
    }, Es.prototype.getAnimationStyleProps = function () {
      return Rs;
    }, Es.prototype._getOrCreateChild = function (t) {
      var e = this._children[this._childCursor];
      return e && e instanceof t || (e = new t()), (this._children[this._childCursor++] = e).__zr = this.__zr, e.parent = this, e;
    }, Es.prototype._updatePlainTexts = function () {
      for (var t, e = this.style, n = e.font || j, i = e.padding, r = function (t, e) {
          null != t && (t += "");
          var n,
            i = e.overflow,
            r = e.padding,
            o = e.font,
            a = "truncate" === i,
            s = Cr(o),
            l = R(e.lineHeight, s),
            u = !!e.backgroundColor,
            h = "truncate" === e.lineOverflow,
            c = !1,
            p = e.width,
            i = (n = null == p || "break" !== i && "breakAll" !== i ? t ? t.split("\n") : [] : t ? pa(t, e.font, p, "breakAll" === i, 0).lines : []).length * l,
            d = R(e.height, i);
          if (d < i && h && (h = Math.floor(d / l), c = c || n.length > h, n = n.slice(0, h)), t && a && null != p) for (var f = ra(p, o, e.ellipsis, {
              minChar: e.truncateMinChar,
              placeholder: e.placeholder
            }), g = {}, y = 0; y < n.length; y++) {
            oa(g, n[y], f), n[y] = g.textLine, c = c || g.isTruncated;
          }
          for (var h = d, m = 0, y = 0; y < n.length; y++) {
            m = Math.max(br(n[y], o), m);
          }
          return null == p && (p = m), t = m, r && (h += r[0] + r[2], t += r[1] + r[3], p += r[1] + r[3]), {
            lines: n,
            height: d,
            outerWidth: t = u ? p : t,
            outerHeight: h,
            lineHeight: l,
            calculatedLineHeight: s,
            contentWidth: m,
            contentHeight: i,
            width: p,
            isTruncated: c
          };
        }(qs(e), e), o = Xs(e), a = !!e.backgroundColor, s = r.outerHeight, l = r.outerWidth, u = r.contentWidth, h = r.lines, c = r.lineHeight, p = this._defaultStyle, d = (this.isTruncated = !!r.isTruncated, e.x || 0), f = e.y || 0, g = e.align || p.align || "left", y = e.verticalAlign || p.verticalAlign || "top", m = d, v = Ir(f, r.contentHeight, y), _ = ((o || i) && (t = Tr(d, l, g), f = Ir(f, s, y), o) && this._renderBackground(e, e, t, f, l, s), v += c / 2, i && (m = Us(d, g, i), "top" === y ? v += i[0] : "bottom" === y && (v -= i[2])), 0), o = !1, x = Gs((("fill" in e) ? e : (o = !0, p)).fill), w = Hs(("stroke" in e) ? e.stroke : a || p.autoStroke && !o ? null : (_ = 2, p.stroke)), b = 0 < e.textShadowBlur, S = null != e.width && ("truncate" === e.overflow || "break" === e.overflow || "breakAll" === e.overflow), M = r.calculatedLineHeight, T = 0; T < h.length; T++) {
        var I = this._getOrCreateChild(ys),
          C = I.createStyle();
        I.useStyle(C), C.text = h[T], C.x = m, C.y = v, g && (C.textAlign = g), C.textBaseline = "middle", C.opacity = e.opacity, C.strokeFirst = !0, b && (C.shadowBlur = e.textShadowBlur || 0, C.shadowColor = e.textShadowColor || "transparent", C.shadowOffsetX = e.textShadowOffsetX || 0, C.shadowOffsetY = e.textShadowOffsetY || 0), C.stroke = w, C.fill = x, w && (C.lineWidth = e.lineWidth || _, C.lineDash = e.lineDash, C.lineDashOffset = e.lineDashOffset || 0), C.font = n, Vs(C, e), v += c, S && I.setBoundingRect(new q(Tr(C.x, u, C.textAlign), Ir(C.y, M, C.textBaseline), u, M));
      }
    }, Es.prototype._updateRichTexts = function () {
      for (var t = this.style, e = ua(qs(t), t), n = e.width, i = e.outerWidth, r = e.outerHeight, o = t.padding, a = t.x || 0, s = t.y || 0, l = this._defaultStyle, u = t.align || l.align, l = t.verticalAlign || l.verticalAlign, a = (this.isTruncated = !!e.isTruncated, Tr(a, i, u)), u = Ir(s, r, l), h = a, c = u, p = (o && (h += o[3], c += o[0]), h + n), d = (Xs(t) && this._renderBackground(t, t, a, u, i, r), !!t.backgroundColor), f = 0; f < e.lines.length; f++) {
        for (var g = e.lines[f], y = g.tokens, m = y.length, v = g.lineHeight, _ = g.width, x = 0, w = h, b = p, S = m - 1, M = void 0; x < m && (!(M = y[x]).align || "left" === M.align);) {
          this._placeToken(M, t, v, c, w, "left", d), _ -= M.width, w += M.width, x++;
        }
        for (; 0 <= S && "right" === (M = y[S]).align;) {
          this._placeToken(M, t, v, c, b, "right", d), _ -= M.width, b -= M.width, S--;
        }
        for (w += (n - (w - h) - (p - b) - _) / 2; x <= S;) {
          M = y[x], this._placeToken(M, t, v, c, w + M.width / 2, "center", d), w += M.width, x++;
        }
        c += v;
      }
    }, Es.prototype._placeToken = function (t, e, n, i, r, o, a) {
      var s = e.rich[t.styleName] || {},
        l = (s.text = t.text, t.verticalAlign),
        u = i + n / 2;
      "top" === l ? u = i + t.height / 2 : "bottom" === l && (u = i + n - t.height / 2);
      !t.isLineHolder && Xs(s) && this._renderBackground(s, e, "right" === o ? r - t.width : "center" === o ? r - t.width / 2 : r, u - t.height / 2, t.width, t.height);
      var l = !!s.backgroundColor,
        i = t.textPadding,
        n = (i && (r = Us(r, o, i), u -= t.height / 2 - i[0] - t.innerHeight / 2), this._getOrCreateChild(ys)),
        i = n.createStyle(),
        h = (n.useStyle(i), this._defaultStyle),
        c = !1,
        p = 0,
        d = Gs(("fill" in s ? s : "fill" in e ? e : (c = !0, h)).fill),
        l = Hs("stroke" in s ? s.stroke : "stroke" in e ? e.stroke : l || a || h.autoStroke && !c ? null : (p = 2, h.stroke)),
        a = 0 < s.textShadowBlur || 0 < e.textShadowBlur,
        c = (i.text = t.text, i.x = r, i.y = u, a && (i.shadowBlur = s.textShadowBlur || e.textShadowBlur || 0, i.shadowColor = s.textShadowColor || e.textShadowColor || "transparent", i.shadowOffsetX = s.textShadowOffsetX || e.textShadowOffsetX || 0, i.shadowOffsetY = s.textShadowOffsetY || e.textShadowOffsetY || 0), i.textAlign = o, i.textBaseline = "middle", i.font = t.font || j, i.opacity = St(s.opacity, e.opacity, 1), Vs(i, s), l && (i.lineWidth = St(s.lineWidth, e.lineWidth, p), i.lineDash = R(s.lineDash, e.lineDash), i.lineDashOffset = e.lineDashOffset || 0, i.stroke = l), d && (i.fill = d), t.contentWidth),
        h = t.contentHeight;
      n.setBoundingRect(new q(Tr(i.x, c, i.textAlign), Ir(i.y, h, i.textBaseline), c, h));
    }, Es.prototype._renderBackground = function (t, e, n, i, r, o) {
      var a,
        s,
        l,
        u,
        h = t.backgroundColor,
        c = t.borderWidth,
        p = t.borderColor,
        d = h && h.image,
        f = h && !d,
        g = t.borderRadius,
        y = this,
        g = ((f || t.lineHeight || c && p) && ((a = this._getOrCreateChild(As)).useStyle(a.createStyle()), a.style.fill = null, (l = a.shape).x = n, l.y = i, l.width = r, l.height = o, l.r = g, a.dirtyShape()), f ? ((u = a.style).fill = h || null, u.fillOpacity = R(t.fillOpacity, 1)) : d && ((s = this._getOrCreateChild(ws)).onload = function () {
          y.dirtyStyle();
        }, (l = s.style).image = h.image, l.x = n, l.y = i, l.width = r, l.height = o), c && p && ((u = a.style).lineWidth = c, u.stroke = p, u.strokeOpacity = R(t.strokeOpacity, 1), u.lineDash = t.borderDash, u.lineDashOffset = t.borderDashOffset || 0, a.strokeContainThreshold = 0, a.hasFill()) && a.hasStroke() && (u.strokeFirst = !0, u.lineWidth *= 2), (a || s).style);
      g.shadowBlur = t.shadowBlur || 0, g.shadowColor = t.shadowColor || "transparent", g.shadowOffsetX = t.shadowOffsetX || 0, g.shadowOffsetY = t.shadowOffsetY || 0, g.opacity = St(t.opacity, e.opacity, 1);
    }, Es.makeFont = function (t) {
      var e,
        n = "";
      return (n = null != (e = t).fontSize || e.fontFamily || e.fontWeight ? [t.fontStyle, t.fontWeight, "string" != typeof (e = t.fontSize) || -1 === e.indexOf("px") && -1 === e.indexOf("rem") && -1 === e.indexOf("em") ? isNaN(+e) ? "12px" : e + "px" : e, t.fontFamily || "sans-serif"].join(" ") : n) && Ct(n) || t.textFont || t.font;
    }, Es);
  function Es(t) {
    var e = Ls.call(this) || this;
    return e.type = "text", e._children = [], e._defaultStyle = Os, e.attr(t), e;
  }
  var Bs = {
      left: !0,
      right: 1,
      center: 1
    },
    zs = {
      top: 1,
      bottom: 1,
      middle: 1
    },
    Fs = ["fontStyle", "fontWeight", "fontSize", "fontFamily"];
  function Vs(t, e) {
    for (var n = 0; n < Fs.length; n++) {
      var i = Fs[n],
        r = e[i];
      null != r && (t[i] = r);
    }
  }
  function Ws(t) {
    var e;
    t && (t.font = Ns.makeFont(t), e = t.align, t.align = null == (e = "middle" === e ? "center" : e) || Bs[e] ? e : "left", e = t.verticalAlign, t.verticalAlign = null == (e = "center" === e ? "middle" : e) || zs[e] ? e : "top", t.padding) && (t.padding = Tt(t.padding));
  }
  function Hs(t, e) {
    return null == t || e <= 0 || "transparent" === t || "none" === t ? null : t.image || t.colorStops ? "#000" : t;
  }
  function Gs(t) {
    return null == t || "none" === t ? null : t.image || t.colorStops ? "#000" : t;
  }
  function Us(t, e, n) {
    return "right" === e ? t - n[1] : "center" === e ? t + n[3] / 2 - n[1] / 2 : t + n[3];
  }
  function qs(t) {
    t = t.text;
    return null != t && (t += ""), t;
  }
  function Xs(t) {
    return !!(t.backgroundColor || t.lineHeight || t.borderWidth && t.borderColor);
  }
  var Ys = Po(),
    Zs = 1,
    js = {},
    Ks = Po(),
    $s = Po(),
    Qs = 0,
    Js = 1,
    tl = 2,
    el = ["emphasis", "blur", "select"],
    nl = ["normal", "emphasis", "blur", "select"],
    il = "highlight",
    rl = "downplay",
    ol = "select",
    al = "unselect",
    sl = "toggleSelect";
  function ll(t) {
    return null != t && "none" !== t;
  }
  function ul(t, e, n) {
    t.onHoverStateChange && (t.hoverState || 0) !== n && t.onHoverStateChange(e), t.hoverState = n;
  }
  function hl(t) {
    ul(t, "emphasis", tl);
  }
  function cl(t) {
    t.hoverState === tl && ul(t, "normal", Qs);
  }
  function pl(t) {
    ul(t, "blur", Js);
  }
  function dl(t) {
    t.hoverState === Js && ul(t, "normal", Qs);
  }
  function fl(t) {
    t.selected = !0;
  }
  function gl(t) {
    t.selected = !1;
  }
  function yl(t, e, n) {
    e(t, n);
  }
  function ml(t, e, n) {
    yl(t, e, n), t.isGroup && t.traverse(function (t) {
      yl(t, e, n);
    });
  }
  function vl(t, e, n) {
    var i = 0 <= C(t.currentStates, e),
      r = t.style.opacity,
      t = i ? null : function (t, e, n, i) {
        for (var r = t.style, o = {}, a = 0; a < e.length; a++) {
          var s = e[a],
            l = r[s];
          o[s] = null == l ? i && i[s] : l;
        }
        for (a = 0; a < t.animators.length; a++) {
          var u = t.animators[a];
          u.__fromStateTransition && u.__fromStateTransition.indexOf(n) < 0 && "style" === u.targetName && u.saveTo(o, e);
        }
        return o;
      }(t, ["opacity"], e, {
        opacity: 1
      }),
      e = (n = n || {}).style || {};
    return null == e.opacity && (n = L({}, n), e = L({
      opacity: i ? r : .1 * t.opacity
    }, e), n.style = e), n;
  }
  function _l(t, e) {
    var n,
      i,
      r,
      o,
      a,
      s = this.states[t];
    if (this.style) {
      if ("emphasis" === t) return n = this, i = s, e = (e = e) && 0 <= C(e, "select"), a = !1, n instanceof ds && (r = Ks(n), o = e && r.selectFill || r.normalFill, e = e && r.selectStroke || r.normalStroke, ll(o) || ll(e)) && ("inherit" === (r = (i = i || {}).style || {}).fill ? (a = !0, i = L({}, i), (r = L({}, r)).fill = o) : !ll(r.fill) && ll(o) ? (a = !0, i = L({}, i), (r = L({}, r)).fill = Mi(o)) : !ll(r.stroke) && ll(e) && (a || (i = L({}, i), r = L({}, r)), r.stroke = Mi(e)), i.style = r), i && null == i.z2 && (a || (i = L({}, i)), o = n.z2EmphasisLift, i.z2 = n.z2 + (null != o ? o : 10)), i;
      if ("blur" === t) return vl(this, t, s);
      if ("select" === t) return e = this, (r = s) && null == r.z2 && (r = L({}, r), a = e.z2SelectLift, r.z2 = e.z2 + (null != a ? a : 9)), r;
    }
    return s;
  }
  function xl(t) {
    t.stateProxy = _l;
    var e = t.getTextContent(),
      t = t.getTextGuideLine();
    e && (e.stateProxy = _l), t && (t.stateProxy = _l);
  }
  function wl(t, e) {
    Dl(t, e) || t.__highByOuter || ml(t, hl);
  }
  function bl(t, e) {
    Dl(t, e) || t.__highByOuter || ml(t, cl);
  }
  function Sl(t, e) {
    t.__highByOuter |= 1 << (e || 0), ml(t, hl);
  }
  function Ml(t, e) {
    (t.__highByOuter &= ~(1 << (e || 0))) || ml(t, cl);
  }
  function Tl(t) {
    ml(t, dl);
  }
  function Il(t) {
    ml(t, fl);
  }
  function Cl(t) {
    ml(t, gl);
  }
  function Dl(t, e) {
    return t.__highDownSilentOnTouch && e.zrByTouch;
  }
  function kl(r) {
    var e = r.getModel(),
      o = [],
      a = [];
    e.eachComponent(function (t, e) {
      var n = $s(e),
        t = "series" === t,
        i = t ? r.getViewOfSeriesModel(e) : r.getViewOfComponentModel(e);
      t || a.push(i), n.isBlured && (i.group.traverse(function (t) {
        dl(t);
      }), t) && o.push(e), n.isBlured = !1;
    }), E(a, function (t) {
      t && t.toggleBlurSeries && t.toggleBlurSeries(o, !1, e);
    });
  }
  function Al(t, o, a, s) {
    var l,
      u,
      h,
      n = s.getModel();
    function c(t, e) {
      for (var n = 0; n < e.length; n++) {
        var i = t.getItemGraphicEl(e[n]);
        i && Tl(i);
      }
    }
    a = a || "coordinateSystem", null != t && o && "none" !== o && (l = n.getSeriesByIndex(t), (u = l.coordinateSystem) && u.master && (u = u.master), h = [], n.eachSeries(function (t) {
      var e = l === t,
        n = t.coordinateSystem,
        n = (n = n && n.master ? n.master : n) && u ? n === u : e;
      if (!("series" === a && !e || "coordinateSystem" === a && !n || "series" === o && e)) {
        if (s.getViewOfSeriesModel(t).group.traverse(function (t) {
          t.__highByOuter && e && "self" === o || pl(t);
        }), st(o)) c(t.getData(), o);else if (O(o)) for (var i = ct(o), r = 0; r < i.length; r++) {
          c(t.getData(i[r]), o[i[r]]);
        }
        h.push(t), $s(t).isBlured = !0;
      }
    }), n.eachComponent(function (t, e) {
      "series" !== t && (t = s.getViewOfComponentModel(e)) && t.toggleBlurSeries && t.toggleBlurSeries(h, !0, n);
    }));
  }
  function Pl(t, e, n) {
    var i;
    null != t && null != e && (t = n.getModel().getComponent(t, e)) && ($s(t).isBlured = !0, i = n.getViewOfComponentModel(t)) && i.focusBlurEnabled && i.group.traverse(function (t) {
      pl(t);
    });
  }
  function Ll(t, e, n, i) {
    var r = {
      focusSelf: !1,
      dispatchers: null
    };
    if (null == t || "series" === t || null == e || null == n) return r;
    t = i.getModel().getComponent(t, e);
    if (!t) return r;
    e = i.getViewOfComponentModel(t);
    if (!e || !e.findHighDownDispatchers) return r;
    for (var o, a = e.findHighDownDispatchers(n), s = 0; s < a.length; s++) {
      if ("self" === Ys(a[s]).focus) {
        o = !0;
        break;
      }
    }
    return {
      focusSelf: o,
      dispatchers: a
    };
  }
  function Ol(i) {
    E(i.getAllData(), function (t) {
      var e = t.data,
        n = t.type;
      e.eachItemGraphicEl(function (t, e) {
        (i.isSelected(e, n) ? Il : Cl)(t);
      });
    });
  }
  function Rl(t, e, n) {
    Fl(t, !0), ml(t, xl);
    t = Ys(t), null != e ? (t.focus = e, t.blurScope = n) : t.focus && (t.focus = null);
  }
  function Nl(t, e, n, i) {
    i ? Fl(t, !1) : Rl(t, e, n);
  }
  var El = ["emphasis", "blur", "select"],
    Bl = {
      itemStyle: "getItemStyle",
      lineStyle: "getLineStyle",
      areaStyle: "getAreaStyle"
    };
  function zl(t, e, n, i) {
    n = n || "itemStyle";
    for (var r = 0; r < El.length; r++) {
      var o = El[r],
        a = e.getModel([o, n]);
      t.ensureState(o).style = i ? i(a) : a[Bl[n]]();
    }
  }
  function Fl(t, e) {
    var e = !1 === e,
      n = t;
    t.highDownSilentOnTouch && (n.__highDownSilentOnTouch = t.highDownSilentOnTouch), e && !n.__highDownDispatcher || (n.__highByOuter = n.__highByOuter || 0, n.__highDownDispatcher = !e);
  }
  function Vl(t) {
    return !(!t || !t.__highDownDispatcher);
  }
  function Wl(t) {
    t = t.type;
    return t === ol || t === al || t === sl;
  }
  function Hl(t) {
    t = t.type;
    return t === il || t === rl;
  }
  var Gl = ja.CMD,
    Ul = [[], [], []],
    ql = Math.sqrt,
    Xl = Math.atan2;
  var Yl = Math.sqrt,
    Zl = Math.sin,
    jl = Math.cos,
    Kl = Math.PI;
  function $l(t) {
    return Math.sqrt(t[0] * t[0] + t[1] * t[1]);
  }
  function Ql(t, e) {
    return (t[0] * e[0] + t[1] * e[1]) / ($l(t) * $l(e));
  }
  function Jl(t, e) {
    return (t[0] * e[1] < t[1] * e[0] ? -1 : 1) * Math.acos(Ql(t, e));
  }
  function tu(t, e, n, i, r, o, a, s, l, u, h) {
    var l = l * (Kl / 180),
      c = jl(l) * (t - n) / 2 + Zl(l) * (e - i) / 2,
      p = -1 * Zl(l) * (t - n) / 2 + jl(l) * (e - i) / 2,
      d = c * c / (a * a) + p * p / (s * s),
      d = (1 < d && (a *= Yl(d), s *= Yl(d)), (r === o ? -1 : 1) * Yl((a * a * (s * s) - a * a * (p * p) - s * s * (c * c)) / (a * a * (p * p) + s * s * (c * c))) || 0),
      r = d * a * p / s,
      d = d * -s * c / a,
      t = (t + n) / 2 + jl(l) * r - Zl(l) * d,
      n = (e + i) / 2 + Zl(l) * r + jl(l) * d,
      e = Jl([1, 0], [(c - r) / a, (p - d) / s]),
      i = [(c - r) / a, (p - d) / s],
      c = [(-1 * c - r) / a, (-1 * p - d) / s],
      r = Jl(i, c);
    Ql(i, c) <= -1 && (r = Kl), (r = 1 <= Ql(i, c) ? 0 : r) < 0 && (p = Math.round(r / Kl * 1e6) / 1e6, r = 2 * Kl + p % 2 * Kl), h.addData(u, t, n, a, s, e, r, l, o);
  }
  var eu = /([mlvhzcqtsa])([^mlvhzcqtsa]*)/gi,
    nu = /-?([0-9]*\.)?[0-9]+([eE]-?[0-9]+)?/g;
  u(ou, iu = ds), ou.prototype.applyTransform = function (t) {};
  var iu,
    ru = ou;
  function ou() {
    return null !== iu && iu.apply(this, arguments) || this;
  }
  function au(t) {
    return null != t.setData;
  }
  function su(t, e) {
    var S = function (t) {
        var e = new ja();
        if (t) {
          var n,
            i = 0,
            r = 0,
            o = i,
            a = r,
            s = ja.CMD,
            l = t.match(eu);
          if (l) {
            for (var u = 0; u < l.length; u++) {
              for (var h = l[u], c = h.charAt(0), p = void 0, d = h.match(nu) || [], f = d.length, g = 0; g < f; g++) {
                d[g] = parseFloat(d[g]);
              }
              for (var y = 0; y < f;) {
                var m = void 0,
                  v = void 0,
                  _ = void 0,
                  x = void 0,
                  w = void 0,
                  b = void 0,
                  S = void 0,
                  M = i,
                  T = r,
                  I = void 0,
                  C = void 0;
                switch (c) {
                  case "l":
                    i += d[y++], r += d[y++], p = s.L, e.addData(p, i, r);
                    break;
                  case "L":
                    i = d[y++], r = d[y++], p = s.L, e.addData(p, i, r);
                    break;
                  case "m":
                    i += d[y++], r += d[y++], p = s.M, e.addData(p, i, r), o = i, a = r, c = "l";
                    break;
                  case "M":
                    i = d[y++], r = d[y++], p = s.M, e.addData(p, i, r), o = i, a = r, c = "L";
                    break;
                  case "h":
                    i += d[y++], p = s.L, e.addData(p, i, r);
                    break;
                  case "H":
                    i = d[y++], p = s.L, e.addData(p, i, r);
                    break;
                  case "v":
                    r += d[y++], p = s.L, e.addData(p, i, r);
                    break;
                  case "V":
                    r = d[y++], p = s.L, e.addData(p, i, r);
                    break;
                  case "C":
                    p = s.C, e.addData(p, d[y++], d[y++], d[y++], d[y++], d[y++], d[y++]), i = d[y - 2], r = d[y - 1];
                    break;
                  case "c":
                    p = s.C, e.addData(p, d[y++] + i, d[y++] + r, d[y++] + i, d[y++] + r, d[y++] + i, d[y++] + r), i += d[y - 2], r += d[y - 1];
                    break;
                  case "S":
                    m = i, v = r, I = e.len(), C = e.data, n === s.C && (m += i - C[I - 4], v += r - C[I - 3]), p = s.C, M = d[y++], T = d[y++], i = d[y++], r = d[y++], e.addData(p, m, v, M, T, i, r);
                    break;
                  case "s":
                    m = i, v = r, I = e.len(), C = e.data, n === s.C && (m += i - C[I - 4], v += r - C[I - 3]), p = s.C, M = i + d[y++], T = r + d[y++], i += d[y++], r += d[y++], e.addData(p, m, v, M, T, i, r);
                    break;
                  case "Q":
                    M = d[y++], T = d[y++], i = d[y++], r = d[y++], p = s.Q, e.addData(p, M, T, i, r);
                    break;
                  case "q":
                    M = d[y++] + i, T = d[y++] + r, i += d[y++], r += d[y++], p = s.Q, e.addData(p, M, T, i, r);
                    break;
                  case "T":
                    m = i, v = r, I = e.len(), C = e.data, n === s.Q && (m += i - C[I - 4], v += r - C[I - 3]), i = d[y++], r = d[y++], p = s.Q, e.addData(p, m, v, i, r);
                    break;
                  case "t":
                    m = i, v = r, I = e.len(), C = e.data, n === s.Q && (m += i - C[I - 4], v += r - C[I - 3]), i += d[y++], r += d[y++], p = s.Q, e.addData(p, m, v, i, r);
                    break;
                  case "A":
                    _ = d[y++], x = d[y++], w = d[y++], b = d[y++], S = d[y++], tu(M = i, T = r, i = d[y++], r = d[y++], b, S, _, x, w, p = s.A, e);
                    break;
                  case "a":
                    _ = d[y++], x = d[y++], w = d[y++], b = d[y++], S = d[y++], tu(M = i, T = r, i += d[y++], r += d[y++], b, S, _, x, w, p = s.A, e);
                }
              }
              "z" !== c && "Z" !== c || (p = s.Z, e.addData(p), i = o, r = a), n = p;
            }
            e.toStatic();
          }
        }
        return e;
      }(t),
      t = L({}, e);
    return t.buildPath = function (t) {
      var e;
      au(t) ? (t.setData(S.data), (e = t.getContext()) && t.rebuildPath(e, 1)) : S.rebuildPath(e = t, 1);
    }, t.applyTransform = function (t) {
      var e = S,
        n = t;
      if (n) {
        for (var i, r, o, a, s = e.data, l = e.len(), u = Gl.M, h = Gl.C, c = Gl.L, p = Gl.R, d = Gl.A, f = Gl.Q, g = 0, y = 0; g < l;) {
          switch (i = s[g++], y = g, r = 0, i) {
            case u:
            case c:
              r = 1;
              break;
            case h:
              r = 3;
              break;
            case f:
              r = 2;
              break;
            case d:
              var m = n[4],
                v = n[5],
                _ = ql(n[0] * n[0] + n[1] * n[1]),
                x = ql(n[2] * n[2] + n[3] * n[3]),
                w = Xl(-n[1] / x, n[0] / _);
              s[g] *= _, s[g++] += m, s[g] *= x, s[g++] += v, s[g++] *= _, s[g++] *= x, s[g++] += w, s[g++] += w, y = g += 2;
              break;
            case p:
              a[0] = s[g++], a[1] = s[g++], ne(a, a, n), s[y++] = a[0], s[y++] = a[1], a[0] += s[g++], a[1] += s[g++], ne(a, a, n), s[y++] = a[0], s[y++] = a[1];
          }
          for (o = 0; o < r; o++) {
            var b = Ul[o];
            b[0] = s[g++], b[1] = s[g++], ne(b, b, n), s[y++] = b[0], s[y++] = b[1];
          }
        }
        e.increaseVersion();
      }
      this.dirtyShape();
    }, t;
  }
  var lu,
    uu = function uu() {
      this.cx = 0, this.cy = 0, this.r = 0;
    },
    hu = (u(cu, lu = ds), cu.prototype.getDefaultShape = function () {
      return new uu();
    }, cu.prototype.buildPath = function (t, e) {
      t.moveTo(e.cx + e.r, e.cy), t.arc(e.cx, e.cy, e.r, 0, 2 * Math.PI);
    }, cu);
  function cu(t) {
    return lu.call(this, t) || this;
  }
  hu.prototype.type = "circle";
  var pu,
    du = function du() {
      this.cx = 0, this.cy = 0, this.rx = 0, this.ry = 0;
    },
    fu = (u(gu, pu = ds), gu.prototype.getDefaultShape = function () {
      return new du();
    }, gu.prototype.buildPath = function (t, e) {
      var n = e.cx,
        i = e.cy,
        r = e.rx,
        e = e.ry,
        o = .5522848 * r,
        a = .5522848 * e;
      t.moveTo(n - r, i), t.bezierCurveTo(n - r, i - a, n - o, i - e, n, i - e), t.bezierCurveTo(n + o, i - e, n + r, i - a, n + r, i), t.bezierCurveTo(n + r, i + a, n + o, i + e, n, i + e), t.bezierCurveTo(n - o, i + e, n - r, i + a, n - r, i), t.closePath();
    }, gu);
  function gu(t) {
    return pu.call(this, t) || this;
  }
  fu.prototype.type = "ellipse";
  var yu = Math.PI,
    mu = 2 * yu,
    vu = Math.sin,
    _u = Math.cos,
    xu = Math.acos,
    wu = Math.atan2,
    bu = Math.abs,
    Su = Math.sqrt,
    Mu = Math.max,
    Tu = Math.min,
    Iu = 1e-4;
  function Cu(t, e, n, i, r, o, a) {
    var s = t - n,
      l = e - i,
      a = (a ? o : -o) / Su(s * s + l * l),
      l = a * l,
      a = -a * s,
      s = t + l,
      t = e + a,
      e = n + l,
      n = i + a,
      i = (s + e) / 2,
      u = (t + n) / 2,
      h = e - s,
      c = n - t,
      p = h * h + c * c,
      o = r - o,
      s = s * n - e * t,
      n = (c < 0 ? -1 : 1) * Su(Mu(0, o * o * p - s * s)),
      e = (s * c - h * n) / p,
      t = (-s * h - c * n) / p,
      d = (s * c + h * n) / p,
      s = (-s * h + c * n) / p,
      h = e - i,
      c = t - u,
      n = d - i,
      p = s - u;
    return n * n + p * p < h * h + c * c && (e = d, t = s), {
      cx: e,
      cy: t,
      x0: -l,
      y0: -a,
      x1: e * (r / o - 1),
      y1: t * (r / o - 1)
    };
  }
  function Du(t, e) {
    var n,
      i,
      r,
      o,
      a,
      s,
      l,
      u,
      h,
      c,
      p,
      d,
      f,
      g,
      y,
      m,
      v,
      _,
      x,
      w,
      b,
      S,
      M,
      T,
      I,
      C,
      D,
      k,
      A,
      P,
      L = Mu(e.r, 0),
      O = Mu(e.r0 || 0, 0),
      R = 0 < L;
    (R || 0 < O) && (R || (L = O, O = 0), L < O && (R = L, L = O, O = R), R = e.startAngle, n = e.endAngle, isNaN(R) || isNaN(n) || (i = e.cx, r = e.cy, o = !!e.clockwise, m = bu(n - R), Iu < (a = mu < m && m % mu) && (m = a), Iu < L ? mu - Iu < m ? (t.moveTo(i + L * _u(R), r + L * vu(R)), t.arc(i, r, L, R, n, !o), Iu < O && (t.moveTo(i + O * _u(n), r + O * vu(n)), t.arc(i, r, O, n, R, o))) : (S = b = w = x = _ = v = c = h = C = I = T = M = u = l = s = a = void 0, p = L * _u(R), d = L * vu(R), f = O * _u(n), g = O * vu(n), (y = Iu < m) && ((e = e.cornerRadius) && (a = (e = function (t) {
      if (F(t)) {
        var e = t.length;
        if (!e) return t;
        e = 1 === e ? [t[0], t[0], 0, 0] : 2 === e ? [t[0], t[0], t[1], t[1]] : 3 === e ? t.concat(t[2]) : t;
      } else e = [t, t, t, t];
      return e;
    }(e))[0], s = e[1], l = e[2], u = e[3]), e = bu(L - O) / 2, M = Tu(e, l), T = Tu(e, u), I = Tu(e, a), C = Tu(e, s), v = h = Mu(M, T), _ = c = Mu(I, C), Iu < h || Iu < c) && (x = L * _u(n), w = L * vu(n), b = O * _u(R), S = O * vu(R), m < yu) && (e = function (t, e, n, i, r, o, a, s) {
      var l = (s = s - o) * (n = n - t) - (a = a - r) * (i = i - e);
      if (!(l * l < Iu)) return [t + (l = (a * (e - o) - s * (t - r)) / l) * n, e + l * i];
    }(p, d, b, S, x, w, f, g)) && (M = p - e[0], T = d - e[1], I = x - e[0], C = w - e[1], m = 1 / vu(xu((M * I + T * C) / (Su(M * M + T * T) * Su(I * I + C * C))) / 2), M = Su(e[0] * e[0] + e[1] * e[1]), v = Tu(h, (L - M) / (1 + m)), _ = Tu(c, (O - M) / (m - 1))), y ? Iu < v ? (D = Tu(l, v), k = Tu(u, v), A = Cu(b, S, p, d, L, D, o), P = Cu(x, w, f, g, L, k, o), t.moveTo(i + A.cx + A.x0, r + A.cy + A.y0), v < h && D === k ? t.arc(i + A.cx, r + A.cy, v, wu(A.y0, A.x0), wu(P.y0, P.x0), !o) : (0 < D && t.arc(i + A.cx, r + A.cy, D, wu(A.y0, A.x0), wu(A.y1, A.x1), !o), t.arc(i, r, L, wu(A.cy + A.y1, A.cx + A.x1), wu(P.cy + P.y1, P.cx + P.x1), !o), 0 < k && t.arc(i + P.cx, r + P.cy, k, wu(P.y1, P.x1), wu(P.y0, P.x0), !o))) : (t.moveTo(i + p, r + d), t.arc(i, r, L, R, n, !o)) : t.moveTo(i + p, r + d), Iu < O && y ? Iu < _ ? (D = Tu(a, _), A = Cu(f, g, x, w, O, -(k = Tu(s, _)), o), P = Cu(p, d, b, S, O, -D, o), t.lineTo(i + A.cx + A.x0, r + A.cy + A.y0), _ < c && D === k ? t.arc(i + A.cx, r + A.cy, _, wu(A.y0, A.x0), wu(P.y0, P.x0), !o) : (0 < k && t.arc(i + A.cx, r + A.cy, k, wu(A.y0, A.x0), wu(A.y1, A.x1), !o), t.arc(i, r, O, wu(A.cy + A.y1, A.cx + A.x1), wu(P.cy + P.y1, P.cx + P.x1), o), 0 < D && t.arc(i + P.cx, r + P.cy, D, wu(P.y1, P.x1), wu(P.y0, P.x0), !o))) : (t.lineTo(i + f, r + g), t.arc(i, r, O, n, R, o)) : t.lineTo(i + f, r + g)) : t.moveTo(i, r), t.closePath()));
  }
  var ku,
    Au = function Au() {
      this.cx = 0, this.cy = 0, this.r0 = 0, this.r = 0, this.startAngle = 0, this.endAngle = 2 * Math.PI, this.clockwise = !0, this.cornerRadius = 0;
    },
    Pu = (u(Lu, ku = ds), Lu.prototype.getDefaultShape = function () {
      return new Au();
    }, Lu.prototype.buildPath = function (t, e) {
      Du(t, e);
    }, Lu.prototype.isZeroArea = function () {
      return this.shape.startAngle === this.shape.endAngle || this.shape.r === this.shape.r0;
    }, Lu);
  function Lu(t) {
    return ku.call(this, t) || this;
  }
  Pu.prototype.type = "sector";
  var Ou,
    Ru = function Ru() {
      this.cx = 0, this.cy = 0, this.r = 0, this.r0 = 0;
    },
    Nu = (u(Eu, Ou = ds), Eu.prototype.getDefaultShape = function () {
      return new Ru();
    }, Eu.prototype.buildPath = function (t, e) {
      var n = e.cx,
        i = e.cy,
        r = 2 * Math.PI;
      t.moveTo(n + e.r, i), t.arc(n, i, e.r, 0, r, !1), t.moveTo(n + e.r0, i), t.arc(n, i, e.r0, 0, r, !0);
    }, Eu);
  function Eu(t) {
    return Ou.call(this, t) || this;
  }
  function Bu(t, e, n) {
    var i = e.smooth,
      r = e.points;
    if (r && 2 <= r.length) {
      if (i) for (var o = function (t, e, n, i) {
          var r,
            o,
            a = [],
            s = [],
            l = [],
            u = [];
          if (i) {
            for (var h = [1 / 0, 1 / 0], c = [-1 / 0, -1 / 0], p = 0, d = t.length; p < d; p++) {
              ie(h, h, t[p]), re(c, c, t[p]);
            }
            ie(h, h, i[0]), re(c, c, i[1]);
          }
          for (p = 0, d = t.length; p < d; p++) {
            var f = t[p];
            if (n) r = t[p ? p - 1 : d - 1], o = t[(p + 1) % d];else {
              if (0 === p || p === d - 1) {
                a.push(Ut(t[p]));
                continue;
              }
              r = t[p - 1], o = t[p + 1];
            }
            Xt(s, o, r), jt(s, s, e);
            var g = $t(f, r),
              y = $t(f, o),
              m = g + y,
              m = (0 !== m && (g /= m, y /= m), jt(l, s, -g), jt(u, s, y), qt([], f, l)),
              g = qt([], f, u);
            i && (re(m, m, h), ie(m, m, c), re(g, g, h), ie(g, g, c)), a.push(m), a.push(g);
          }
          return n && a.push(a.shift()), a;
        }(r, i, n, e.smoothConstraint), a = (t.moveTo(r[0][0], r[0][1]), r.length), s = 0; s < (n ? a : a - 1); s++) {
        var l = o[2 * s],
          u = o[2 * s + 1],
          h = r[(s + 1) % a];
        t.bezierCurveTo(l[0], l[1], u[0], u[1], h[0], h[1]);
      } else {
        t.moveTo(r[0][0], r[0][1]);
        for (var s = 1, c = r.length; s < c; s++) {
          t.lineTo(r[s][0], r[s][1]);
        }
      }
      n && t.closePath();
    }
  }
  Nu.prototype.type = "ring";
  var zu,
    Fu = function Fu() {
      this.points = null, this.smooth = 0, this.smoothConstraint = null;
    },
    Vu = (u(Wu, zu = ds), Wu.prototype.getDefaultShape = function () {
      return new Fu();
    }, Wu.prototype.buildPath = function (t, e) {
      Bu(t, e, !0);
    }, Wu);
  function Wu(t) {
    return zu.call(this, t) || this;
  }
  Vu.prototype.type = "polygon";
  var Hu,
    Gu = function Gu() {
      this.points = null, this.percent = 1, this.smooth = 0, this.smoothConstraint = null;
    },
    Uu = (u(qu, Hu = ds), qu.prototype.getDefaultStyle = function () {
      return {
        stroke: "#000",
        fill: null
      };
    }, qu.prototype.getDefaultShape = function () {
      return new Gu();
    }, qu.prototype.buildPath = function (t, e) {
      Bu(t, e, !1);
    }, qu);
  function qu(t) {
    return Hu.call(this, t) || this;
  }
  Uu.prototype.type = "polyline";
  var Xu,
    Yu = {},
    Zu = function Zu() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.percent = 1;
    },
    ju = (u(Ku, Xu = ds), Ku.prototype.getDefaultStyle = function () {
      return {
        stroke: "#000",
        fill: null
      };
    }, Ku.prototype.getDefaultShape = function () {
      return new Zu();
    }, Ku.prototype.buildPath = function (t, e) {
      o = (this.subPixelOptimize ? (n = (o = Ms(Yu, e, this.style)).x1, i = o.y1, r = o.x2, o) : (n = e.x1, i = e.y1, r = e.x2, e)).y2;
      var n,
        i,
        r,
        o,
        e = e.percent;
      0 !== e && (t.moveTo(n, i), e < 1 && (r = n * (1 - e) + r * e, o = i * (1 - e) + o * e), t.lineTo(r, o));
    }, Ku.prototype.pointAt = function (t) {
      var e = this.shape;
      return [e.x1 * (1 - t) + e.x2 * t, e.y1 * (1 - t) + e.y2 * t];
    }, Ku);
  function Ku(t) {
    return Xu.call(this, t) || this;
  }
  ju.prototype.type = "line";
  var $u = [],
    Qu = function Qu() {
      this.x1 = 0, this.y1 = 0, this.x2 = 0, this.y2 = 0, this.cpx1 = 0, this.cpy1 = 0, this.percent = 1;
    };
  function Ju(t, e, n) {
    var i = t.cpx2,
      r = t.cpy2;
    return null != i || null != r ? [(n ? zn : Bn)(t.x1, t.cpx1, t.cpx2, t.x2, e), (n ? zn : Bn)(t.y1, t.cpy1, t.cpy2, t.y2, e)] : [(n ? Un : Gn)(t.x1, t.cpx1, t.x2, e), (n ? Un : Gn)(t.y1, t.cpy1, t.y2, e)];
  }
  u(nh, th = ds), nh.prototype.getDefaultStyle = function () {
    return {
      stroke: "#000",
      fill: null
    };
  }, nh.prototype.getDefaultShape = function () {
    return new Qu();
  }, nh.prototype.buildPath = function (t, e) {
    var n = e.x1,
      i = e.y1,
      r = e.x2,
      o = e.y2,
      a = e.cpx1,
      s = e.cpy1,
      l = e.cpx2,
      u = e.cpy2,
      e = e.percent;
    0 !== e && (t.moveTo(n, i), null == l || null == u ? (e < 1 && (Xn(n, a, r, e, $u), a = $u[1], r = $u[2], Xn(i, s, o, e, $u), s = $u[1], o = $u[2]), t.quadraticCurveTo(a, s, r, o)) : (e < 1 && (Wn(n, a, l, r, e, $u), a = $u[1], l = $u[2], r = $u[3], Wn(i, s, u, o, e, $u), s = $u[1], u = $u[2], o = $u[3]), t.bezierCurveTo(a, s, l, u, r, o)));
  }, nh.prototype.pointAt = function (t) {
    return Ju(this.shape, t, !1);
  }, nh.prototype.tangentAt = function (t) {
    t = Ju(this.shape, t, !0);
    return Kt(t, t);
  };
  var th,
    eh = nh;
  function nh(t) {
    return th.call(this, t) || this;
  }
  eh.prototype.type = "bezier-curve";
  var ih,
    rh = function rh() {
      this.cx = 0, this.cy = 0, this.r = 0, this.startAngle = 0, this.endAngle = 2 * Math.PI, this.clockwise = !0;
    },
    oh = (u(ah, ih = ds), ah.prototype.getDefaultStyle = function () {
      return {
        stroke: "#000",
        fill: null
      };
    }, ah.prototype.getDefaultShape = function () {
      return new rh();
    }, ah.prototype.buildPath = function (t, e) {
      var n = e.cx,
        i = e.cy,
        r = Math.max(e.r, 0),
        o = e.startAngle,
        a = e.endAngle,
        e = e.clockwise,
        s = Math.cos(o),
        l = Math.sin(o);
      t.moveTo(s * r + n, l * r + i), t.arc(n, i, r, o, a, !e);
    }, ah);
  function ah(t) {
    return ih.call(this, t) || this;
  }
  oh.prototype.type = "arc";
  u(uh, sh = ds), uh.prototype._updatePathDirty = function () {
    for (var t = this.shape.paths, e = this.shapeChanged(), n = 0; n < t.length; n++) {
      e = e || t[n].shapeChanged();
    }
    e && this.dirtyShape();
  }, uh.prototype.beforeBrush = function () {
    this._updatePathDirty();
    for (var t = this.shape.paths || [], e = this.getGlobalScale(), n = 0; n < t.length; n++) {
      t[n].path || t[n].createPathProxy(), t[n].path.setScale(e[0], e[1], t[n].segmentIgnoreThreshold);
    }
  }, uh.prototype.buildPath = function (t, e) {
    for (var n = e.paths || [], i = 0; i < n.length; i++) {
      n[i].buildPath(t, n[i].shape, !0);
    }
  }, uh.prototype.afterBrush = function () {
    for (var t = this.shape.paths || [], e = 0; e < t.length; e++) {
      t[e].pathUpdated();
    }
  }, uh.prototype.getBoundingRect = function () {
    return this._updatePathDirty.call(this), ds.prototype.getBoundingRect.call(this);
  };
  var sh,
    lh = uh;
  function uh() {
    var t = null !== sh && sh.apply(this, arguments) || this;
    return t.type = "compound", t;
  }
  ch.prototype.addColorStop = function (t, e) {
    this.colorStops.push({
      offset: t,
      color: e
    });
  };
  var hh = ch;
  function ch(t) {
    this.colorStops = t || [];
  }
  u(fh, ph = hh);
  var ph,
    dh = fh;
  function fh(t, e, n, i, r, o) {
    r = ph.call(this, r) || this;
    return r.x = null == t ? 0 : t, r.y = null == e ? 0 : e, r.x2 = null == n ? 1 : n, r.y2 = null == i ? 0 : i, r.type = "linear", r.global = o || !1, r;
  }
  u(yh, gh = hh);
  var gh,
    hh = yh;
  function yh(t, e, n, i, r) {
    i = gh.call(this, i) || this;
    return i.x = null == t ? .5 : t, i.y = null == e ? .5 : e, i.r = null == n ? .5 : n, i.type = "radial", i.global = r || !1, i;
  }
  var mh = [0, 0],
    vh = [0, 0],
    _h = new H(),
    xh = new H(),
    wh = (bh.prototype.fromBoundingRect = function (t, e) {
      var n = this._corners,
        i = this._axes,
        r = t.x,
        o = t.y,
        a = r + t.width,
        t = o + t.height;
      if (n[0].set(r, o), n[1].set(a, o), n[2].set(a, t), n[3].set(r, t), e) for (var s = 0; s < 4; s++) {
        n[s].transform(e);
      }
      H.sub(i[0], n[1], n[0]), H.sub(i[1], n[3], n[0]), i[0].normalize(), i[1].normalize();
      for (s = 0; s < 2; s++) {
        this._origin[s] = i[s].dot(n[0]);
      }
    }, bh.prototype.intersect = function (t, e) {
      var n = !0,
        i = !e;
      return _h.set(1 / 0, 1 / 0), xh.set(0, 0), !this._intersectCheckOneSide(this, t, _h, xh, i, 1) && (n = !1, i) || !this._intersectCheckOneSide(t, this, _h, xh, i, -1) && (n = !1, i) || i || H.copy(e, n ? _h : xh), n;
    }, bh.prototype._intersectCheckOneSide = function (t, e, n, i, r, o) {
      for (var a = !0, s = 0; s < 2; s++) {
        var l = this._axes[s];
        if (this._getProjMinMaxOnAxis(s, t._corners, mh), this._getProjMinMaxOnAxis(s, e._corners, vh), mh[1] < vh[0] || vh[1] < mh[0]) {
          if (a = !1, r) return a;
          var u = Math.abs(vh[0] - mh[1]),
            h = Math.abs(mh[0] - vh[1]);
          Math.min(u, h) > i.len() && (u < h ? H.scale(i, l, -u * o) : H.scale(i, l, h * o));
        } else n && (u = Math.abs(vh[0] - mh[1]), h = Math.abs(mh[0] - vh[1]), Math.min(u, h) < n.len()) && (u < h ? H.scale(n, l, u * o) : H.scale(n, l, -h * o));
      }
      return a;
    }, bh.prototype._getProjMinMaxOnAxis = function (t, e, n) {
      for (var i = this._axes[t], r = this._origin, o = e[0].dot(i) + r[t], a = o, s = o, l = 1; l < e.length; l++) {
        var u = e[l].dot(i) + r[t],
          a = Math.min(u, a),
          s = Math.max(u, s);
      }
      n[0] = a, n[1] = s;
    }, bh);
  function bh(t, e) {
    this._corners = [], this._axes = [], this._origin = [0, 0];
    for (var n = 0; n < 4; n++) {
      this._corners[n] = new H();
    }
    for (n = 0; n < 2; n++) {
      this._axes[n] = new H();
    }
    t && this.fromBoundingRect(t, e);
  }
  var Sh,
    Mh = [],
    n = (u(Th, Sh = n), Th.prototype.traverse = function (t, e) {
      t.call(e, this);
    }, Th.prototype.useStyle = function () {
      this.style = {};
    }, Th.prototype.getCursor = function () {
      return this._cursor;
    }, Th.prototype.innerAfterBrush = function () {
      this._cursor = this._displayables.length;
    }, Th.prototype.clearDisplaybles = function () {
      this._displayables = [], this._temporaryDisplayables = [], this._cursor = 0, this.markRedraw(), this.notClear = !1;
    }, Th.prototype.clearTemporalDisplayables = function () {
      this._temporaryDisplayables = [];
    }, Th.prototype.addDisplayable = function (t, e) {
      (e ? this._temporaryDisplayables : this._displayables).push(t), this.markRedraw();
    }, Th.prototype.addDisplayables = function (t, e) {
      e = e || !1;
      for (var n = 0; n < t.length; n++) {
        this.addDisplayable(t[n], e);
      }
    }, Th.prototype.getDisplayables = function () {
      return this._displayables;
    }, Th.prototype.getTemporalDisplayables = function () {
      return this._temporaryDisplayables;
    }, Th.prototype.eachPendingDisplayable = function (t) {
      for (var e = this._cursor; e < this._displayables.length; e++) {
        t && t(this._displayables[e]);
      }
      for (e = 0; e < this._temporaryDisplayables.length; e++) {
        t && t(this._temporaryDisplayables[e]);
      }
    }, Th.prototype.update = function () {
      this.updateTransform();
      for (var t = this._cursor; t < this._displayables.length; t++) {
        (e = this._displayables[t]).parent = this, e.update(), e.parent = null;
      }
      for (var e, t = 0; t < this._temporaryDisplayables.length; t++) {
        (e = this._temporaryDisplayables[t]).parent = this, e.update(), e.parent = null;
      }
    }, Th.prototype.getBoundingRect = function () {
      if (!this._rect) {
        for (var t = new q(1 / 0, 1 / 0, -1 / 0, -1 / 0), e = 0; e < this._displayables.length; e++) {
          var n = this._displayables[e],
            i = n.getBoundingRect().clone();
          n.needLocalTransform() && i.applyTransform(n.getLocalTransform(Mh)), t.union(i);
        }
        this._rect = t;
      }
      return this._rect;
    }, Th.prototype.contain = function (t, e) {
      var n = this.transformCoordToLocal(t, e);
      if (this.getBoundingRect().contain(n[0], n[1])) for (var i = 0; i < this._displayables.length; i++) {
        if (this._displayables[i].contain(t, e)) return !0;
      }
      return !1;
    }, Th);
  function Th() {
    var t = null !== Sh && Sh.apply(this, arguments) || this;
    return t.notClear = !0, t.incremental = !0, t._displayables = [], t._temporaryDisplayables = [], t._cursor = 0, t;
  }
  var Ih = Po();
  function Ch(t, e, n, i, r, o, a) {
    var s,
      l,
      u,
      h,
      c,
      p,
      d = !1,
      f = (D(r) ? (a = o, o = r, r = null) : O(r) && (o = r.cb, a = r.during, d = r.isFrom, l = r.removeOpt, r = r.dataIndex), "leave" === t),
      g = (f || e.stopAnimation("leave"), p = t, s = r, l = f ? l || {} : null, i = (g = i) && i.getAnimationDelayParams ? i.getAnimationDelayParams(e, r) : null, g && g.ecModel && (u = (u = g.ecModel.getUpdatePayload()) && u.animation), p = "update" === p, g && g.isAnimationEnabled() ? (c = h = r = void 0, c = l ? (r = R(l.duration, 200), h = R(l.easing, "cubicOut"), 0) : (r = g.getShallow(p ? "animationDurationUpdate" : "animationDuration"), h = g.getShallow(p ? "animationEasingUpdate" : "animationEasing"), g.getShallow(p ? "animationDelayUpdate" : "animationDelay")), D(c = u && (null != u.duration && (r = u.duration), null != u.easing && (h = u.easing), null != u.delay) ? u.delay : c) && (c = c(s, i)), {
        duration: (r = D(r) ? r(s) : r) || 0,
        delay: c,
        easing: h
      }) : null);
    g && 0 < g.duration ? (p = {
      duration: g.duration,
      delay: g.delay || 0,
      easing: g.easing,
      done: o,
      force: !!o || !!a,
      setToFinal: !f,
      scope: t,
      during: a
    }, d ? e.animateFrom(n, p) : e.animateTo(n, p)) : (e.stopAnimation(), d || e.attr(n), a && a(1), o && o());
  }
  function Dh(t, e, n, i, r, o) {
    Ch("update", t, e, n, i, r, o);
  }
  function kh(t, e, n, i, r, o) {
    Ch("enter", t, e, n, i, r, o);
  }
  function Ah(t) {
    if (!t.__zr) return !0;
    for (var e = 0; e < t.animators.length; e++) {
      if ("leave" === t.animators[e].scope) return !0;
    }
    return !1;
  }
  function Ph(t, e, n, i, r, o) {
    Ah(t) || Ch("leave", t, e, n, i, r, o);
  }
  function Lh(t, e, n, i) {
    t.removeTextContent(), t.removeTextGuideLine(), Ph(t, {
      style: {
        opacity: 0
      }
    }, e, n, i);
  }
  function Oh(t, e, n) {
    function i() {
      t.parent && t.parent.remove(t);
    }
    t.isGroup ? t.traverse(function (t) {
      t.isGroup || Lh(t, e, n, i);
    }) : Lh(t, e, n, i);
  }
  function Rh(t) {
    Ih(t).oldStyle = t.style;
  }
  var Nh = Math.max,
    Eh = Math.min,
    Bh = {};
  function zh(t) {
    return ds.extend(t);
  }
  var Fh = function Fh(t, e) {
    var n,
      i = su(t, e);
    function r(t) {
      t = n.call(this, t) || this;
      return t.applyTransform = i.applyTransform, t.buildPath = i.buildPath, t;
    }
    return u(r, n = ru), r;
  };
  function Vh(t, e) {
    return Fh(t, e);
  }
  function Wh(t, e) {
    Bh[t] = e;
  }
  function Hh(t) {
    if (Bh.hasOwnProperty(t)) return Bh[t];
  }
  function Gh(t, e, n, i) {
    t = new ru(su(t, e));
    return n && ("center" === i && (n = qh(n, t.getBoundingRect())), Yh(t, n)), t;
  }
  function Uh(t, e, n) {
    var i = new ws({
      style: {
        image: t,
        x: e.x,
        y: e.y,
        width: e.width,
        height: e.height
      },
      onload: function onload(t) {
        "center" === n && (t = {
          width: t.width,
          height: t.height
        }, i.setStyle(qh(e, t)));
      }
    });
    return i;
  }
  function qh(t, e) {
    var e = e.width / e.height,
      n = t.height * e,
      e = n <= t.width ? t.height : (n = t.width) / e;
    return {
      x: t.x + t.width / 2 - n / 2,
      y: t.y + t.height / 2 - e / 2,
      width: n,
      height: e
    };
  }
  var Xh = function Xh(t, e) {
    for (var n = [], i = t.length, r = 0; r < i; r++) {
      var o = t[r];
      n.push(o.getUpdatedPathProxy(!0));
    }
    return (e = new ds(e)).createPathProxy(), e.buildPath = function (t) {
      var e;
      au(t) && (t.appendPath(n), e = t.getContext()) && t.rebuildPath(e, 1);
    }, e;
  };
  function Yh(t, e) {
    t.applyTransform && (e = t.getBoundingRect().calculateTransform(e), t.applyTransform(e));
  }
  function Zh(t, e) {
    return Ms(t, t, {
      lineWidth: e
    }), t;
  }
  var jh = Is;
  function Kh(t, e) {
    for (var n = Oe([]); t && t !== e;) {
      Ne(n, t.getLocalTransform(), n), t = t.parent;
    }
    return n;
  }
  function $h(t, e, n) {
    return e && !st(e) && (e = vr.getLocalTransform(e)), ne([], t, e = n ? Fe([], e) : e);
  }
  function Qh(t) {
    return !t.isGroup;
  }
  function Jh(t, e, i) {
    var r, n;
    function o(t) {
      var e = {
        x: t.x,
        y: t.y,
        rotation: t.rotation
      };
      return null != t.shape && (e.shape = L({}, t.shape)), e;
    }
    t && e && (n = {}, t.traverse(function (t) {
      Qh(t) && t.anid && (n[t.anid] = t);
    }), r = n, e.traverse(function (t) {
      var e, n;
      Qh(t) && t.anid && (e = r[t.anid]) && (n = o(t), t.attr(o(e)), Dh(t, n, i, Ys(t).dataIndex));
    }));
  }
  function tc(t, n) {
    return z(t, function (t) {
      var e = t[0],
        e = Nh(e, n.x),
        t = (e = Eh(e, n.x + n.width), t[1]),
        t = Nh(t, n.y);
      return [e, Eh(t, n.y + n.height)];
    });
  }
  function ec(t, e) {
    var n = Nh(t.x, e.x),
      i = Eh(t.x + t.width, e.x + e.width),
      r = Nh(t.y, e.y),
      t = Eh(t.y + t.height, e.y + e.height);
    if (n <= i && r <= t) return {
      x: n,
      y: r,
      width: i - n,
      height: t - r
    };
  }
  function nc(t, e, n) {
    var e = L({
        rectHover: !0
      }, e),
      i = e.style = {
        strokeNoScale: !0
      };
    if (n = n || {
      x: -1,
      y: -1,
      width: 2,
      height: 2
    }, t) return 0 === t.indexOf("image://") ? (i.image = t.slice(8), B(i, n), new ws(e)) : Gh(t.replace("path://", ""), e, n, "center");
  }
  function ic(t, e, n, i, r, o, a, s) {
    var l,
      n = n - t,
      i = i - e,
      a = a - r,
      s = s - o,
      u = a * i - n * s;
    return !((l = u) <= 1e-6 && -1e-6 <= l || (r = ((l = t - r) * i - n * (t = e - o)) / u) < 0 || 1 < r || (i = (l * s - a * t) / u) < 0 || 1 < i);
  }
  function rc(t) {
    var e = t.itemTooltipOption,
      n = t.componentModel,
      i = t.itemName,
      e = V(e) ? {
        formatter: e
      } : e,
      r = n.mainType,
      n = n.componentIndex,
      o = {
        componentType: r,
        name: i,
        $vars: ["name"]
      },
      a = (o[r + "Index"] = n, t.formatterParamsExtra),
      t = (a && E(ct(a), function (t) {
        Ft(o, t) || (o[t] = a[t], o.$vars.push(t));
      }), Ys(t.el));
    t.componentMainType = r, t.componentIndex = n, t.tooltipConfig = {
      name: i,
      option: B({
        content: i,
        encodeHTMLContent: !0,
        formatterParams: o
      }, e)
    };
  }
  function oc(t, e) {
    var n;
    (n = t.isGroup ? e(t) : n) || t.traverse(e);
  }
  function ac(t, e) {
    if (t) if (F(t)) for (var n = 0; n < t.length; n++) {
      oc(t[n], e);
    } else oc(t, e);
  }
  Wh("circle", hu), Wh("ellipse", fu), Wh("sector", Pu), Wh("ring", Nu), Wh("polygon", Vu), Wh("polyline", Uu), Wh("rect", As), Wh("line", ju), Wh("bezierCurve", eh), Wh("arc", oh);
  var sc = Object.freeze({
      __proto__: null,
      Arc: oh,
      BezierCurve: eh,
      BoundingRect: q,
      Circle: hu,
      CompoundPath: lh,
      Ellipse: fu,
      Group: Hr,
      Image: ws,
      IncrementalDisplayable: n,
      Line: ju,
      LinearGradient: dh,
      OrientedBoundingRect: wh,
      Path: ds,
      Point: H,
      Polygon: Vu,
      Polyline: Uu,
      RadialGradient: hh,
      Rect: As,
      Ring: Nu,
      Sector: Pu,
      Text: Ns,
      applyTransform: $h,
      clipPointsByRect: tc,
      clipRectByRect: ec,
      createIcon: nc,
      extendPath: Vh,
      extendShape: zh,
      getShapeClass: Hh,
      getTransform: Kh,
      groupTransition: Jh,
      initProps: kh,
      isElementRemoved: Ah,
      lineLineIntersect: ic,
      linePolygonIntersect: function linePolygonIntersect(t, e, n, i, r) {
        for (var o = 0, a = r[r.length - 1]; o < r.length; o++) {
          var s = r[o];
          if (ic(t, e, n, i, s[0], s[1], a[0], a[1])) return !0;
          a = s;
        }
      },
      makeImage: Uh,
      makePath: Gh,
      mergePath: Xh,
      registerShape: Wh,
      removeElement: Ph,
      removeElementWithFadeOut: Oh,
      resizePath: Yh,
      setTooltipConfig: rc,
      subPixelOptimize: jh,
      subPixelOptimizeLine: Zh,
      subPixelOptimizeRect: function subPixelOptimizeRect(t) {
        return Ts(t.shape, t.shape, t.style), t;
      },
      transformDirection: function transformDirection(t, e, n) {
        var i = 0 === e[4] || 0 === e[5] || 0 === e[0] ? 1 : Math.abs(2 * e[4] / e[0]),
          r = 0 === e[4] || 0 === e[5] || 0 === e[2] ? 1 : Math.abs(2 * e[4] / e[2]),
          i = $h(["left" === t ? -i : "right" === t ? i : 0, "top" === t ? -r : "bottom" === t ? r : 0], e, n);
        return Math.abs(i[0]) > Math.abs(i[1]) ? 0 < i[0] ? "right" : "left" : 0 < i[1] ? "bottom" : "top";
      },
      traverseElements: ac,
      updateProps: Dh
    }),
    lc = {};
  function uc(t, e) {
    for (var n = 0; n < el.length; n++) {
      var i = el[n],
        r = e[i],
        i = t.ensureState(i);
      i.style = i.style || {}, i.style.text = r;
    }
    var o = t.currentStates.slice();
    t.clearStates(!0), t.setStyle({
      text: e.normal
    }), t.useStates(o, !0);
  }
  function hc(t, e, n) {
    for (var i, r = t.labelFetcher, o = t.labelDataIndex, a = t.labelDimIndex, s = e.normal, l = {
        normal: i = null == (i = r ? r.getFormattedLabel(o, "normal", null, a, s && s.get("formatter"), null != n ? {
          interpolatedValue: n
        } : null) : i) ? D(t.defaultText) ? t.defaultText(o, t, n) : t.defaultText : i
      }, u = 0; u < el.length; u++) {
      var h = el[u],
        c = e[h];
      l[h] = R(r ? r.getFormattedLabel(o, h, null, a, c && c.get("formatter")) : null, i);
    }
    return l;
  }
  function cc(t, e, n, i) {
    n = n || lc;
    for (var r = t instanceof Ns, o = !1, a = 0; a < nl.length; a++) {
      if ((p = e[nl[a]]) && p.getShallow("show")) {
        o = !0;
        break;
      }
    }
    var s = r ? t : t.getTextContent();
    if (o) {
      r || (s || (s = new Ns(), t.setTextContent(s)), t.stateProxy && (s.stateProxy = t.stateProxy));
      var l = hc(n, e),
        u = e.normal,
        h = !!u.getShallow("show"),
        c = dc(u, i && i.normal, n, !1, !r);
      c.text = l.normal, r || t.setTextConfig(fc(u, n, !1));
      for (a = 0; a < el.length; a++) {
        var p,
          d,
          f,
          g = el[a];
        (p = e[g]) && (d = s.ensureState(g), (f = !!R(p.getShallow("show"), h)) != h && (d.ignore = !f), d.style = dc(p, i && i[g], n, !0, !r), d.style.text = l[g], r || (t.ensureState(g).textConfig = fc(p, n, !0)));
      }
      s.silent = !!u.getShallow("silent"), null != s.style.x && (c.x = s.style.x), null != s.style.y && (c.y = s.style.y), s.ignore = !h, s.useStyle(c), s.dirty(), n.enableTextSetter && (_c(s).setLabelText = function (t) {
        t = hc(n, e, t);
        uc(s, t);
      });
    } else s && (s.ignore = !0);
    t.dirty();
  }
  function pc(t, e) {
    for (var n = {
        normal: t.getModel(e = e || "label")
      }, i = 0; i < el.length; i++) {
      var r = el[i];
      n[r] = t.getModel([r, e]);
    }
    return n;
  }
  function dc(t, e, n, i, r) {
    var o,
      a = {},
      s = a,
      l = t,
      u = n,
      h = i,
      c = r;
    u = u || lc;
    var p,
      t = l.ecModel,
      d = t && t.option.textStyle,
      f = function (t) {
        var e;
        for (; t && t !== t.ecModel;) {
          var n = (t.option || lc).rich;
          if (n) {
            e = e || {};
            for (var i = ct(n), r = 0; r < i.length; r++) {
              var o = i[r];
              e[o] = 1;
            }
          }
          t = t.parentModel;
        }
        return e;
      }(l);
    if (f) for (var g in p = {}, f) {
      f.hasOwnProperty(g) && (o = l.getModel(["rich", g]), vc(p[g] = {}, o, d, u, h, c, !1, !0));
    }
    return p && (s.rich = p), (t = l.get("overflow")) && (s.overflow = t), null != (t = l.get("minMargin")) && (s.margin = t), vc(s, l, d, u, h, c, !0, !1), e && L(a, e), a;
  }
  function fc(t, e, n) {
    e = e || {};
    var i = {},
      r = t.getShallow("rotate"),
      o = R(t.getShallow("distance"), n ? null : 5),
      a = t.getShallow("offset"),
      n = t.getShallow("position") || (n ? null : "inside");
    return null != (n = "outside" === n ? e.defaultOutsidePosition || "top" : n) && (i.position = n), null != a && (i.offset = a), null != r && (r *= Math.PI / 180, i.rotation = r), null != o && (i.distance = o), i.outsideFill = "inherit" === t.get("color") ? e.inheritColor || null : "auto", i;
  }
  var gc = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "textShadowColor", "textShadowBlur", "textShadowOffsetX", "textShadowOffsetY"],
    yc = ["align", "lineHeight", "width", "height", "tag", "verticalAlign", "ellipsis"],
    mc = ["padding", "borderWidth", "borderRadius", "borderDashOffset", "backgroundColor", "borderColor", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"];
  function vc(t, e, n, i, r, o, a, s) {
    n = !r && n || lc;
    var l = i && i.inheritColor,
      u = e.getShallow("color"),
      h = e.getShallow("textBorderColor"),
      c = R(e.getShallow("opacity"), n.opacity),
      u = ("inherit" !== u && "auto" !== u || (u = l || null), "inherit" !== h && "auto" !== h || (h = l || null), o || (u = u || n.color, h = h || n.textBorderColor), null != u && (t.fill = u), null != h && (t.stroke = h), R(e.getShallow("textBorderWidth"), n.textBorderWidth)),
      h = (null != u && (t.lineWidth = u), R(e.getShallow("textBorderType"), n.textBorderType)),
      u = (null != h && (t.lineDash = h), R(e.getShallow("textBorderDashOffset"), n.textBorderDashOffset));
    null != u && (t.lineDashOffset = u), null != (c = r || null != c || s ? c : i && i.defaultOpacity) && (t.opacity = c), r || o || null == t.fill && i.inheritColor && (t.fill = i.inheritColor);
    for (var p = 0; p < gc.length; p++) {
      var d = gc[p];
      null != (f = R(e.getShallow(d), n[d])) && (t[d] = f);
    }
    for (var p = 0; p < yc.length; p++) {
      d = yc[p];
      null != (f = e.getShallow(d)) && (t[d] = f);
    }
    if (null == t.verticalAlign && null != (h = e.getShallow("baseline")) && (t.verticalAlign = h), !a || !i.disableBox) {
      for (p = 0; p < mc.length; p++) {
        var f,
          d = mc[p];
        null != (f = e.getShallow(d)) && (t[d] = f);
      }
      u = e.getShallow("borderType");
      null != u && (t.borderDash = u), "auto" !== t.backgroundColor && "inherit" !== t.backgroundColor || !l || (t.backgroundColor = l), "auto" !== t.borderColor && "inherit" !== t.borderColor || !l || (t.borderColor = l);
    }
  }
  var _c = Po();
  function xc(n, i, r, t, o) {
    var a,
      s,
      l,
      u = _c(n);
    u.valueAnimation && u.prevValue !== u.value && (a = u.defaultInterpolatedText, s = R(u.interpolatedValue, u.prevValue), l = u.value, n.percent = 0, (null == u.prevValue ? kh : Dh)(n, {
      percent: 1
    }, t, i, null, function (t) {
      var e = function (t, e, n, i, r) {
          var o = null == e || "auto" === e;
          if (null == i) return i;
          if (W(i)) return eo(p = mo(n || 0, i, r), o ? Math.max(no(n || 0), no(i)) : e);
          if (V(i)) return r < 1 ? n : i;
          for (var a = [], s = n, l = i, u = Math.max(s ? s.length : 0, l.length), h = 0; h < u; ++h) {
            var c,
              p,
              d = t.getDimensionInfo(h);
            d && "ordinal" === d.type ? a[h] = (r < 1 && s ? s : l)[h] : (p = mo(d = s && s[h] ? s[h] : 0, c = l[h], r), a[h] = eo(p, o ? Math.max(no(d), no(c)) : e));
          }
          return a;
        }(r, u.precision, s, l, t),
        t = (u.interpolatedValue = 1 === t ? null : e, hc({
          labelDataIndex: i,
          labelFetcher: o,
          defaultText: a ? a(e) : e + ""
        }, u.statesModels, e));
      uc(n, t);
    }));
  }
  var wc = ["textStyle", "color"],
    bc = ["fontStyle", "fontWeight", "fontSize", "fontFamily", "padding", "lineHeight", "rich", "width", "height", "overflow"],
    Sc = new Ns(),
    jh = (Mc.prototype.getTextColor = function (t) {
      var e = this.ecModel;
      return this.getShallow("color") || (!t && e ? e.get(wc) : null);
    }, Mc.prototype.getFont = function () {
      return t = {
        fontStyle: this.getShallow("fontStyle"),
        fontWeight: this.getShallow("fontWeight"),
        fontSize: this.getShallow("fontSize"),
        fontFamily: this.getShallow("fontFamily")
      }, e = (e = this.ecModel) && e.getModel("textStyle"), Ct([t.fontStyle || e && e.getShallow("fontStyle") || "", t.fontWeight || e && e.getShallow("fontWeight") || "", (t.fontSize || e && e.getShallow("fontSize") || 12) + "px", t.fontFamily || e && e.getShallow("fontFamily") || "sans-serif"].join(" "));
      var t, e;
    }, Mc.prototype.getTextRect = function (t) {
      for (var e = {
          text: t,
          verticalAlign: this.getShallow("verticalAlign") || this.getShallow("baseline")
        }, n = 0; n < bc.length; n++) {
        e[bc[n]] = this.getShallow(bc[n]);
      }
      return Sc.useStyle(e), Sc.update(), Sc.getBoundingRect();
    }, Mc);
  function Mc() {}
  var Tc = [["lineWidth", "width"], ["stroke", "color"], ["opacity"], ["shadowBlur"], ["shadowOffsetX"], ["shadowOffsetY"], ["shadowColor"], ["lineDash", "type"], ["lineDashOffset", "dashOffset"], ["lineCap", "cap"], ["lineJoin", "join"], ["miterLimit"]],
    Ic = Zo(Tc),
    Cc = (Dc.prototype.getLineStyle = function (t) {
      return Ic(this, t);
    }, Dc);
  function Dc() {}
  var kc = [["fill", "color"], ["stroke", "borderColor"], ["lineWidth", "borderWidth"], ["opacity"], ["shadowBlur"], ["shadowOffsetX"], ["shadowOffsetY"], ["shadowColor"], ["lineDash", "borderType"], ["lineDashOffset", "borderDashOffset"], ["lineCap", "borderCap"], ["lineJoin", "borderJoin"], ["miterLimit", "borderMiterLimit"]],
    Ac = Zo(kc),
    Pc = (Lc.prototype.getItemStyle = function (t, e) {
      return Ac(this, t, e);
    }, Lc);
  function Lc() {}
  Nc.prototype.init = function (t, e, n) {}, Nc.prototype.mergeOption = function (t, e) {
    d(this.option, t, !0);
  }, Nc.prototype.get = function (t, e) {
    return null == t ? this.option : this._doGet(this.parsePath(t), !e && this.parentModel);
  }, Nc.prototype.getShallow = function (t, e) {
    var n = this.option,
      n = null == n ? n : n[t];
    return null != n || e || (e = this.parentModel) && (n = e.getShallow(t)), n;
  }, Nc.prototype.getModel = function (t, e) {
    var n = null != t,
      t = n ? this.parsePath(t) : null;
    return new Nc(n ? this._doGet(t) : this.option, e = e || this.parentModel && this.parentModel.getModel(this.resolveParentPath(t)), this.ecModel);
  }, Nc.prototype.isEmpty = function () {
    return null == this.option;
  }, Nc.prototype.restoreData = function () {}, Nc.prototype.clone = function () {
    return new this.constructor(y(this.option));
  }, Nc.prototype.parsePath = function (t) {
    return "string" == typeof t ? t.split(".") : t;
  }, Nc.prototype.resolveParentPath = function (t) {
    return t;
  }, Nc.prototype.isAnimationEnabled = function () {
    if (!b.node && this.option) return null != this.option.animation ? !!this.option.animation : this.parentModel ? this.parentModel.isAnimationEnabled() : void 0;
  }, Nc.prototype._doGet = function (t, e) {
    var n = this.option;
    if (t) {
      for (var i = 0; i < t.length && (!t[i] || null != (n = n && "object" == _typeof(n) ? n[t[i]] : null)); i++) {
        ;
      }
      null == n && e && (n = e._doGet(this.resolveParentPath(t), e.parentModel));
    }
    return n;
  };
  var Oc,
    Rc = Nc;
  function Nc(t, e, n) {
    this.parentModel = e, this.ecModel = n, this.option = t;
  }
  Ho(Rc), Kc = Rc, Oc = ["__\0is_clz", Uo++].join("_"), Kc.prototype[Oc] = !0, Kc.isInstance = function (t) {
    return !(!t || !t[Oc]);
  }, at(Rc, Cc), at(Rc, Pc), at(Rc, Ko), at(Rc, jh);
  var Ec = Math.round(10 * Math.random());
  function Bc(t) {
    return [t || "", Ec++].join("_");
  }
  var zc = "ZH",
    Fc = "EN",
    Vc = Fc,
    Wc = {},
    Hc = {},
    Gc = b.domSupported && -1 < (document.documentElement.lang || navigator.language || navigator.browserLanguage || Vc).toUpperCase().indexOf(zc) ? zc : Vc;
  function Uc(t, e) {
    t = t.toUpperCase(), Hc[t] = new Rc(e), Wc[t] = e;
  }
  Uc(Fc, {
    time: {
      month: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
      monthAbbr: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      dayOfWeek: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
      dayOfWeekAbbr: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
    },
    legend: {
      selector: {
        all: "All",
        inverse: "Inv"
      }
    },
    toolbox: {
      brush: {
        title: {
          rect: "Box Select",
          polygon: "Lasso Select",
          lineX: "Horizontally Select",
          lineY: "Vertically Select",
          keep: "Keep Selections",
          clear: "Clear Selections"
        }
      },
      dataView: {
        title: "Data View",
        lang: ["Data View", "Close", "Refresh"]
      },
      dataZoom: {
        title: {
          zoom: "Zoom",
          back: "Zoom Reset"
        }
      },
      magicType: {
        title: {
          line: "Switch to Line Chart",
          bar: "Switch to Bar Chart",
          stack: "Stack",
          tiled: "Tile"
        }
      },
      restore: {
        title: "Restore"
      },
      saveAsImage: {
        title: "Save as Image",
        lang: ["Right Click to Save Image"]
      }
    },
    series: {
      typeNames: {
        pie: "Pie chart",
        bar: "Bar chart",
        line: "Line chart",
        scatter: "Scatter plot",
        effectScatter: "Ripple scatter plot",
        radar: "Radar chart",
        tree: "Tree",
        treemap: "Treemap",
        boxplot: "Boxplot",
        candlestick: "Candlestick",
        k: "K line chart",
        heatmap: "Heat map",
        map: "Map",
        parallel: "Parallel coordinate map",
        lines: "Line graph",
        graph: "Relationship graph",
        sankey: "Sankey diagram",
        funnel: "Funnel chart",
        gauge: "Gauge",
        pictorialBar: "Pictorial bar",
        themeRiver: "Theme River Map",
        sunburst: "Sunburst",
        custom: "Custom chart",
        chart: "Chart"
      }
    },
    aria: {
      general: {
        withTitle: 'This is a chart about "{title}"',
        withoutTitle: "This is a chart"
      },
      series: {
        single: {
          prefix: "",
          withName: " with type {seriesType} named {seriesName}.",
          withoutName: " with type {seriesType}."
        },
        multiple: {
          prefix: ". It consists of {seriesCount} series count.",
          withName: " The {seriesId} series is a {seriesType} representing {seriesName}.",
          withoutName: " The {seriesId} series is a {seriesType}.",
          separator: {
            middle: "",
            end: ""
          }
        }
      },
      data: {
        allData: "The data is as follows: ",
        partialData: "The first {displayCnt} items are: ",
        withName: "the data for {name} is {value}",
        withoutName: "{value}",
        separator: {
          middle: ", ",
          end: ". "
        }
      }
    }
  }), Uc(zc, {
    time: {
      month: ["一月", "二月", "三月", "四月", "五月", "六月", "七月", "八月", "九月", "十月", "十一月", "十二月"],
      monthAbbr: ["1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月"],
      dayOfWeek: ["星期日", "星期一", "星期二", "星期三", "星期四", "星期五", "星期六"],
      dayOfWeekAbbr: ["日", "一", "二", "三", "四", "五", "六"]
    },
    legend: {
      selector: {
        all: "全选",
        inverse: "反选"
      }
    },
    toolbox: {
      brush: {
        title: {
          rect: "矩形选择",
          polygon: "圈选",
          lineX: "横向选择",
          lineY: "纵向选择",
          keep: "保持选择",
          clear: "清除选择"
        }
      },
      dataView: {
        title: "数据视图",
        lang: ["数据视图", "关闭", "刷新"]
      },
      dataZoom: {
        title: {
          zoom: "区域缩放",
          back: "区域缩放还原"
        }
      },
      magicType: {
        title: {
          line: "切换为折线图",
          bar: "切换为柱状图",
          stack: "切换为堆叠",
          tiled: "切换为平铺"
        }
      },
      restore: {
        title: "还原"
      },
      saveAsImage: {
        title: "保存为图片",
        lang: ["右键另存为图片"]
      }
    },
    series: {
      typeNames: {
        pie: "饼图",
        bar: "柱状图",
        line: "折线图",
        scatter: "散点图",
        effectScatter: "涟漪散点图",
        radar: "雷达图",
        tree: "树图",
        treemap: "矩形树图",
        boxplot: "箱型图",
        candlestick: "K线图",
        k: "K线图",
        heatmap: "热力图",
        map: "地图",
        parallel: "平行坐标图",
        lines: "线图",
        graph: "关系图",
        sankey: "桑基图",
        funnel: "漏斗图",
        gauge: "仪表盘图",
        pictorialBar: "象形柱图",
        themeRiver: "主题河流图",
        sunburst: "旭日图",
        custom: "自定义图表",
        chart: "图表"
      }
    },
    aria: {
      general: {
        withTitle: "这是一个关于“{title}”的图表。",
        withoutTitle: "这是一个图表，"
      },
      series: {
        single: {
          prefix: "",
          withName: "图表类型是{seriesType}，表示{seriesName}。",
          withoutName: "图表类型是{seriesType}。"
        },
        multiple: {
          prefix: "它由{seriesCount}个图表系列组成。",
          withName: "第{seriesId}个系列是一个表示{seriesName}的{seriesType}，",
          withoutName: "第{seriesId}个系列是一个{seriesType}，",
          separator: {
            middle: "；",
            end: "。"
          }
        }
      },
      data: {
        allData: "其数据是——",
        partialData: "其中，前{displayCnt}项是——",
        withName: "{name}的数据是{value}",
        withoutName: "{value}",
        separator: {
          middle: "，",
          end: ""
        }
      }
    }
  });
  var qc = 1e3,
    Xc = 60 * qc,
    Yc = 60 * Xc,
    Zc = 24 * Yc,
    Uo = 365 * Zc,
    jc = {
      year: "{yyyy}",
      month: "{MMM}",
      day: "{d}",
      hour: "{HH}:{mm}",
      minute: "{HH}:{mm}",
      second: "{HH}:{mm}:{ss}",
      millisecond: "{HH}:{mm}:{ss} {SSS}",
      none: "{yyyy}-{MM}-{dd} {HH}:{mm}:{ss} {SSS}"
    },
    Kc = "{yyyy}-{MM}-{dd}",
    $c = {
      year: "{yyyy}",
      month: "{yyyy}-{MM}",
      day: Kc,
      hour: Kc + " " + jc.hour,
      minute: Kc + " " + jc.minute,
      second: Kc + " " + jc.second,
      millisecond: jc.none
    },
    Qc = ["year", "month", "day", "hour", "minute", "second", "millisecond"],
    Jc = ["year", "half-year", "quarter", "month", "week", "half-week", "day", "half-day", "quarter-day", "hour", "minute", "second", "millisecond"];
  function tp(t, e) {
    return "0000".substr(0, e - (t += "").length) + t;
  }
  function ep(t) {
    switch (t) {
      case "half-year":
      case "quarter":
        return "month";
      case "week":
      case "half-week":
        return "day";
      case "half-day":
      case "quarter-day":
        return "hour";
      default:
        return t;
    }
  }
  function np(t, e, n, i) {
    var t = uo(t),
      r = t[op(n)](),
      o = t[ap(n)]() + 1,
      a = Math.floor((o - 1) / 3) + 1,
      s = t[sp(n)](),
      l = t["get" + (n ? "UTC" : "") + "Day"](),
      u = t[lp(n)](),
      h = (u - 1) % 12 + 1,
      c = t[up(n)](),
      p = t[hp(n)](),
      t = t[cp(n)](),
      n = 12 <= u ? "pm" : "am",
      d = n.toUpperCase(),
      i = (i instanceof Rc ? i : Hc[i || Gc] || Hc[Vc]).getModel("time"),
      f = i.get("month"),
      g = i.get("monthAbbr"),
      y = i.get("dayOfWeek"),
      i = i.get("dayOfWeekAbbr");
    return (e || "").replace(/{a}/g, n + "").replace(/{A}/g, d + "").replace(/{yyyy}/g, r + "").replace(/{yy}/g, tp(r % 100 + "", 2)).replace(/{Q}/g, a + "").replace(/{MMMM}/g, f[o - 1]).replace(/{MMM}/g, g[o - 1]).replace(/{MM}/g, tp(o, 2)).replace(/{M}/g, o + "").replace(/{dd}/g, tp(s, 2)).replace(/{d}/g, s + "").replace(/{eeee}/g, y[l]).replace(/{ee}/g, i[l]).replace(/{e}/g, l + "").replace(/{HH}/g, tp(u, 2)).replace(/{H}/g, u + "").replace(/{hh}/g, tp(h + "", 2)).replace(/{h}/g, h + "").replace(/{mm}/g, tp(c, 2)).replace(/{m}/g, c + "").replace(/{ss}/g, tp(p, 2)).replace(/{s}/g, p + "").replace(/{SSS}/g, tp(t, 3)).replace(/{S}/g, t + "");
  }
  function ip(t, e) {
    var t = uo(t),
      n = t[ap(e)]() + 1,
      i = t[sp(e)](),
      r = t[lp(e)](),
      o = t[up(e)](),
      a = t[hp(e)](),
      t = 0 === t[cp(e)](),
      e = t && 0 === a,
      a = e && 0 === o,
      o = a && 0 === r,
      r = o && 1 === i;
    return r && 1 === n ? "year" : r ? "month" : o ? "day" : a ? "hour" : e ? "minute" : t ? "second" : "millisecond";
  }
  function rp(t, e, n) {
    var i = W(t) ? uo(t) : t;
    switch (e = e || ip(t, n)) {
      case "year":
        return i[op(n)]();
      case "half-year":
        return 6 <= i[ap(n)]() ? 1 : 0;
      case "quarter":
        return Math.floor((i[ap(n)]() + 1) / 4);
      case "month":
        return i[ap(n)]();
      case "day":
        return i[sp(n)]();
      case "half-day":
        return i[lp(n)]() / 24;
      case "hour":
        return i[lp(n)]();
      case "minute":
        return i[up(n)]();
      case "second":
        return i[hp(n)]();
      case "millisecond":
        return i[cp(n)]();
    }
  }
  function op(t) {
    return t ? "getUTCFullYear" : "getFullYear";
  }
  function ap(t) {
    return t ? "getUTCMonth" : "getMonth";
  }
  function sp(t) {
    return t ? "getUTCDate" : "getDate";
  }
  function lp(t) {
    return t ? "getUTCHours" : "getHours";
  }
  function up(t) {
    return t ? "getUTCMinutes" : "getMinutes";
  }
  function hp(t) {
    return t ? "getUTCSeconds" : "getSeconds";
  }
  function cp(t) {
    return t ? "getUTCMilliseconds" : "getMilliseconds";
  }
  function pp(t) {
    return t ? "setUTCMonth" : "setMonth";
  }
  function dp(t) {
    return t ? "setUTCDate" : "setDate";
  }
  function fp(t) {
    return t ? "setUTCHours" : "setHours";
  }
  function gp(t) {
    return t ? "setUTCMinutes" : "setMinutes";
  }
  function yp(t) {
    return t ? "setUTCSeconds" : "setSeconds";
  }
  function mp(t) {
    return t ? "setUTCMilliseconds" : "setMilliseconds";
  }
  function vp(t) {
    var e;
    return go(t) ? (e = (t + "").split("."))[0].replace(/(\d{1,3})(?=(?:\d{3})+(?!\d))/g, "$1,") + (1 < e.length ? "." + e[1] : "") : V(t) ? t : "-";
  }
  function _p(t, e) {
    return "{" + t + (null == e ? "" : e) + "}";
  }
  var xp = Tt,
    wp = ["a", "b", "c", "d", "e", "f", "g"];
  function bp(t, e, n) {
    var i = (e = F(e) ? e : [e]).length;
    if (!i) return "";
    for (var r = e[0].$vars || [], o = 0; o < r.length; o++) {
      var a = wp[o];
      t = t.replace(_p(a), _p(a, 0));
    }
    for (var s = 0; s < i; s++) {
      for (var l = 0; l < r.length; l++) {
        var u = e[s][r[l]];
        t = t.replace(_p(wp[l], s), n ? _e(u) : u);
      }
    }
    return t;
  }
  var Sp = E,
    Mp = ["left", "right", "top", "bottom", "width", "height"],
    Tp = [["width", "left", "right"], ["height", "top", "bottom"]];
  function Ip(a, s, l, u, h) {
    var c = 0,
      p = 0,
      d = (null == u && (u = 1 / 0), null == h && (h = 1 / 0), 0);
    s.eachChild(function (t, e) {
      var n,
        i,
        r,
        o = t.getBoundingRect(),
        e = s.childAt(e + 1),
        e = e && e.getBoundingRect();
      d = "horizontal" === a ? (i = o.width + (e ? -e.x + o.x : 0), u < (n = c + i) || t.newline ? (c = 0, n = i, p += d + l, o.height) : Math.max(d, o.height)) : (i = o.height + (e ? -e.y + o.y : 0), h < (r = p + i) || t.newline ? (c += d + l, p = 0, r = i, o.width) : Math.max(d, o.width)), t.newline || (t.x = c, t.y = p, t.markRedraw(), "horizontal" === a ? c = n + l : p = r + l);
    });
  }
  var Cp = Ip;
  function Dp(t, e, n) {
    n = xp(n || 0);
    var i = e.width,
      r = e.height,
      o = G(t.left, i),
      a = G(t.top, r),
      e = G(t.right, i),
      s = G(t.bottom, r),
      l = G(t.width, i),
      u = G(t.height, r),
      h = n[2] + n[0],
      c = n[1] + n[3],
      p = t.aspect;
    switch (isNaN(l) && (l = i - e - c - o), isNaN(u) && (u = r - s - h - a), null != p && (isNaN(l) && isNaN(u) && (i / r < p ? l = .8 * i : u = .8 * r), isNaN(l) && (l = p * u), isNaN(u)) && (u = l / p), isNaN(o) && (o = i - e - l - c), isNaN(a) && (a = r - s - u - h), t.left || t.right) {
      case "center":
        o = i / 2 - l / 2 - n[3];
        break;
      case "right":
        o = i - l - c;
    }
    switch (t.top || t.bottom) {
      case "middle":
      case "center":
        a = r / 2 - u / 2 - n[0];
        break;
      case "bottom":
        a = r - u - h;
    }
    o = o || 0, a = a || 0, isNaN(l) && (l = i - c - o - (e || 0)), isNaN(u) && (u = r - h - a - (s || 0));
    p = new q(o + n[3], a + n[0], l, u);
    return p.margin = n, p;
  }
  function kp(t) {
    t = t.layoutMode || t.constructor.layoutMode;
    return O(t) ? t : t ? {
      type: t
    } : null;
  }
  function Ap(l, u, t) {
    var h = t && t.ignoreSize,
      t = (F(h) || (h = [h, h]), n(Tp[0], 0)),
      e = n(Tp[1], 1);
    function n(t, e) {
      var n = {},
        i = 0,
        r = {},
        o = 0;
      if (Sp(t, function (t) {
        r[t] = l[t];
      }), Sp(t, function (t) {
        c(u, t) && (n[t] = r[t] = u[t]), p(n, t) && i++, p(r, t) && o++;
      }), h[e]) p(u, t[1]) ? r[t[2]] = null : p(u, t[2]) && (r[t[1]] = null);else if (2 !== o && i) {
        if (!(2 <= i)) for (var a = 0; a < t.length; a++) {
          var s = t[a];
          if (!c(n, s) && c(l, s)) {
            n[s] = l[s];
            break;
          }
        }
        return n;
      }
      return r;
    }
    function c(t, e) {
      return t.hasOwnProperty(e);
    }
    function p(t, e) {
      return null != t[e] && "auto" !== t[e];
    }
    function i(t, e, n) {
      Sp(t, function (t) {
        e[t] = n[t];
      });
    }
    i(Tp[0], l, t), i(Tp[1], l, e);
  }
  function Pp(t) {
    return e = {}, (n = t) && e && Sp(Mp, function (t) {
      n.hasOwnProperty(t) && (e[t] = n[t]);
    }), e;
    var e, n;
  }
  dt(Ip, "vertical"), dt(Ip, "horizontal");
  var Lp,
    Op,
    Rp,
    Np,
    Ep = Po(),
    g = (u(Bp, Lp = Rc), Bp.prototype.init = function (t, e, n) {
      this.mergeDefaultAndTheme(t, n);
    }, Bp.prototype.mergeDefaultAndTheme = function (t, e) {
      var n = kp(this),
        i = n ? Pp(t) : {};
      d(t, e.getTheme().get(this.mainType)), d(t, this.getDefaultOption()), n && Ap(t, i, n);
    }, Bp.prototype.mergeOption = function (t, e) {
      d(this.option, t, !0);
      var n = kp(this);
      n && Ap(this.option, t, n);
    }, Bp.prototype.optionUpdated = function (t, e) {}, Bp.prototype.getDefaultOption = function () {
      var t = this.constructor;
      if (!(e = t) || !e[Vo]) return t.defaultOption;
      var e = Ep(this);
      if (!e.defaultOption) {
        for (var n = [], i = t; i;) {
          var r = i.prototype.defaultOption;
          r && n.push(r), i = i.superClass;
        }
        for (var o = {}, a = n.length - 1; 0 <= a; a--) {
          o = d(o, n[a], !0);
        }
        e.defaultOption = o;
      }
      return e.defaultOption;
    }, Bp.prototype.getReferringComponents = function (t, e) {
      var n = t + "Id";
      return Eo(this.ecModel, t, {
        index: this.get(t + "Index", !0),
        id: this.get(n, !0)
      }, e);
    }, Bp.prototype.getBoxLayoutParams = function () {
      return {
        left: this.get("left"),
        top: this.get("top"),
        right: this.get("right"),
        bottom: this.get("bottom"),
        width: this.get("width"),
        height: this.get("height")
      };
    }, Bp.prototype.getZLevelKey = function () {
      return "";
    }, Bp.prototype.setZLevel = function (t) {
      this.option.zlevel = t;
    }, Bp.protoInitialize = ((Cc = Bp.prototype).type = "component", Cc.id = "", Cc.name = "", Cc.mainType = "", Cc.subType = "", void (Cc.componentIndex = 0)), Bp);
  function Bp(t, e, n) {
    t = Lp.call(this, t, e, n) || this;
    return t.uid = Bc("ec_cpt_model"), t;
  }
  function zp(t, e) {
    return t[e] || (t[e] = {
      predecessor: [],
      successor: []
    }), t[e];
  }
  Go(g, Rc), Yo(g), Rp = {}, (Op = g).registerSubTypeDefaulter = function (t, e) {
    t = Wo(t);
    Rp[t.main] = e;
  }, Op.determineSubType = function (t, e) {
    var n,
      i = e.type;
    return i || (n = Wo(t).main, Op.hasSubTypes(t) && Rp[n] && (i = Rp[n](e))), i;
  }, Np = function Np(t) {
    var e = [];
    E(g.getClassesByMainType(t), function (t) {
      e = e.concat(t.dependencies || t.prototype.dependencies || []);
    }), e = z(e, function (t) {
      return Wo(t).main;
    }), "dataset" !== t && C(e, "dataset") <= 0 && e.unshift("dataset");
    return e;
  }, g.topologicalTravel = function (t, e, n, i) {
    if (t.length) {
      a = {}, s = [], E(o = e, function (n) {
        var e,
          i,
          r = zp(a, n),
          t = r.originalDeps = Np(n),
          t = (e = o, i = [], E(t, function (t) {
            0 <= C(e, t) && i.push(t);
          }), i);
        r.entryCount = t.length, 0 === r.entryCount && s.push(n), E(t, function (t) {
          C(r.predecessor, t) < 0 && r.predecessor.push(t);
          var e = zp(a, t);
          C(e.successor, t) < 0 && e.successor.push(n);
        });
      });
      var o,
        a,
        s,
        e = {
          graph: a,
          noEntryList: s
        },
        r = e.graph,
        l = e.noEntryList,
        u = {};
      for (E(t, function (t) {
        u[t] = !0;
      }); l.length;) {
        var h = l.pop(),
          c = r[h],
          p = !!u[h];
        p && (n.call(i, h, c.originalDeps.slice()), delete u[h]), E(c.successor, p ? f : d);
      }
      E(u, function () {
        throw new Error("");
      });
    }
    function d(t) {
      r[t].entryCount--, 0 === r[t].entryCount && l.push(t);
    }
    function f(t) {
      u[t] = !0, d(t);
    }
  };
  var Pc = "",
    Ko = ("undefined" != typeof navigator && (Pc = navigator.platform || ""), "rgba(0, 0, 0, 0.2)"),
    Fp = {
      darkMode: "auto",
      colorBy: "series",
      color: ["#5470c6", "#91cc75", "#fac858", "#ee6666", "#73c0de", "#3ba272", "#fc8452", "#9a60b4", "#ea7ccc"],
      gradientColor: ["#f6efa6", "#d88273", "#bf444c"],
      aria: {
        decal: {
          decals: [{
            color: Ko,
            dashArrayX: [1, 0],
            dashArrayY: [2, 5],
            symbolSize: 1,
            rotation: Math.PI / 6
          }, {
            color: Ko,
            symbol: "circle",
            dashArrayX: [[8, 8], [0, 8, 8, 0]],
            dashArrayY: [6, 0],
            symbolSize: .8
          }, {
            color: Ko,
            dashArrayX: [1, 0],
            dashArrayY: [4, 3],
            rotation: -Math.PI / 4
          }, {
            color: Ko,
            dashArrayX: [[6, 6], [0, 6, 6, 0]],
            dashArrayY: [6, 0]
          }, {
            color: Ko,
            dashArrayX: [[1, 0], [1, 6]],
            dashArrayY: [1, 0, 6, 0],
            rotation: Math.PI / 4
          }, {
            color: Ko,
            symbol: "triangle",
            dashArrayX: [[9, 9], [0, 9, 9, 0]],
            dashArrayY: [7, 2],
            symbolSize: .75
          }]
        }
      },
      textStyle: {
        fontFamily: Pc.match(/^Win/) ? "Microsoft YaHei" : "sans-serif",
        fontSize: 12,
        fontStyle: "normal",
        fontWeight: "normal"
      },
      blendMode: null,
      stateAnimation: {
        duration: 300,
        easing: "cubicOut"
      },
      animation: "auto",
      animationDuration: 1e3,
      animationDurationUpdate: 500,
      animationEasing: "cubicInOut",
      animationEasingUpdate: "cubicInOut",
      animationThreshold: 2e3,
      progressiveThreshold: 3e3,
      progressive: 400,
      hoverLayerThreshold: 3e3,
      useUTC: !1
    },
    Vp = N(["tooltip", "label", "itemName", "itemId", "itemGroupId", "itemChildGroupId", "seriesName"]),
    Wp = "original",
    Hp = "arrayRows",
    Gp = "objectRows",
    Up = "keyedColumns",
    qp = "typedArray",
    Xp = "unknown",
    Yp = "column",
    Zp = "row",
    jp = {
      Must: 1,
      Might: 2,
      Not: 3
    },
    Kp = Po();
  function $p(n, t, e) {
    var r,
      o,
      a,
      i,
      s,
      l = {},
      u = Jp(t);
    return u && n && (r = [], o = [], t = t.ecModel, t = Kp(t).datasetMap, u = u.uid + "_" + e.seriesLayoutBy, E(n = n.slice(), function (t, e) {
      t = O(t) ? t : n[e] = {
        name: t
      };
      "ordinal" === t.type && null == a && (a = e, i = c(t)), l[t.name] = [];
    }), s = t.get(u) || t.set(u, {
      categoryWayDim: i,
      valueWayDim: 0
    }), E(n, function (t, e) {
      var n,
        i = t.name,
        t = c(t);
      null == a ? (n = s.valueWayDim, h(l[i], n, t), h(o, n, t), s.valueWayDim += t) : a === e ? (h(l[i], 0, t), h(r, 0, t)) : (n = s.categoryWayDim, h(l[i], n, t), h(o, n, t), s.categoryWayDim += t);
    }), r.length && (l.itemName = r), o.length) && (l.seriesName = o), l;
    function h(t, e, n) {
      for (var i = 0; i < n; i++) {
        t.push(e + i);
      }
    }
    function c(t) {
      t = t.dimsDef;
      return t ? t.length : 1;
    }
  }
  function Qp(t, l, u) {
    var h,
      c,
      p,
      e = {};
    return Jp(t) && (h = l.sourceFormat, c = l.dimensionsDefine, h !== Gp && h !== Up || E(c, function (t, e) {
      "name" === (O(t) ? t.name : t) && (p = e);
    }), t = function () {
      for (var t = {}, e = {}, n = [], i = 0, r = Math.min(5, u); i < r; i++) {
        var o = ed(l.data, h, l.seriesLayoutBy, c, l.startIndex, i),
          a = (n.push(o), o === jp.Not);
        if (a && null == t.v && i !== p && (t.v = i), null != t.n && t.n !== t.v && (a || n[t.n] !== jp.Not) || (t.n = i), s(t) && n[t.n] !== jp.Not) return t;
        a || (o === jp.Might && null == e.v && i !== p && (e.v = i), null != e.n && e.n !== e.v) || (e.n = i);
      }
      function s(t) {
        return null != t.v && null != t.n;
      }
      return s(t) ? t : s(e) ? e : null;
    }()) && (e.value = [t.v], t = null != p ? p : t.n, e.itemName = [t], e.seriesName = [t]), e;
  }
  function Jp(t) {
    if (!t.get("data", !0)) return Eo(t.ecModel, "dataset", {
      index: t.get("datasetIndex", !0),
      id: t.get("datasetId", !0)
    }, No).models[0];
  }
  function td(t, e) {
    return ed(t.data, t.sourceFormat, t.seriesLayoutBy, t.dimensionsDefine, t.startIndex, e);
  }
  function ed(t, e, n, i, r, o) {
    var a, s, l;
    if (!yt(t)) {
      if (i && (O(i = i[o]) ? (s = i.name, l = i.type) : V(i) && (s = i)), null != l) return "ordinal" === l ? jp.Must : jp.Not;
      if (e === Hp) {
        var u = t;
        if (n === Zp) {
          for (var h = u[o], c = 0; c < (h || []).length && c < 5; c++) {
            if (null != (a = m(h[r + c]))) return a;
          }
        } else for (c = 0; c < u.length && c < 5; c++) {
          var p = u[r + c];
          if (p && null != (a = m(p[o]))) return a;
        }
      } else if (e === Gp) {
        var d = t;
        if (!s) return jp.Not;
        for (c = 0; c < d.length && c < 5; c++) {
          if ((g = d[c]) && null != (a = m(g[s]))) return a;
        }
      } else if (e === Up) {
        if (!s) return jp.Not;
        if (!(h = t[s]) || yt(h)) return jp.Not;
        for (c = 0; c < h.length && c < 5; c++) {
          if (null != (a = m(h[c]))) return a;
        }
      } else if (e === Wp) for (var f = t, c = 0; c < f.length && c < 5; c++) {
        var g,
          y = bo(g = f[c]);
        if (!F(y)) return jp.Not;
        if (null != (a = m(y[o]))) return a;
      }
    }
    return jp.Not;
    function m(t) {
      var e = V(t);
      return null != t && Number.isFinite(Number(t)) && "" !== t ? e ? jp.Might : jp.Not : e && "-" !== t ? jp.Must : void 0;
    }
  }
  var nd = N();
  var id,
    rd,
    od,
    ad = Po(),
    sd = (Po(), ld.prototype.getColorFromPalette = function (t, e, n) {
      var i = _o(this.get("color", !0)),
        r = this.get("colorLayer", !0),
        o = this,
        a = ad;
      return a = a(e = e || o), o = a.paletteIdx || 0, (e = a.paletteNameMap = a.paletteNameMap || {}).hasOwnProperty(t) ? e[t] : (r = (r = n == null || !r ? i : ud(r, n)) || i) && r.length ? (n = r[o], t && (e[t] = n), a.paletteIdx = (o + 1) % r.length, n) : void 0;
    }, ld.prototype.clearColorPalette = function () {
      var t, e;
      (e = ad)(t = this).paletteIdx = 0, e(t).paletteNameMap = {};
    }, ld);
  function ld() {}
  function ud(t, e) {
    for (var n = t.length, i = 0; i < n; i++) {
      if (t[i].length > e) return t[i];
    }
    return t[n - 1];
  }
  var hd,
    cd = "\0_ec_inner",
    pd = (u(s, hd = Rc), s.prototype.init = function (t, e, n, i, r, o) {
      i = i || {}, this.option = null, this._theme = new Rc(i), this._locale = new Rc(r), this._optionManager = o;
    }, s.prototype.setOption = function (t, e, n) {
      e = gd(e);
      this._optionManager.setOption(t, n, e), this._resetOption(null, e);
    }, s.prototype.resetOption = function (t, e) {
      return this._resetOption(t, gd(e));
    }, s.prototype._resetOption = function (t, e) {
      var n,
        i = !1,
        r = this._optionManager;
      return t && "recreate" !== t || (n = r.mountOption("recreate" === t), this.option && "recreate" !== t ? (this.restoreData(), this._mergeOption(n, e)) : od(this, n), i = !0), "timeline" !== t && "media" !== t || this.restoreData(), t && "recreate" !== t && "timeline" !== t || (n = r.getTimelineOption(this)) && (i = !0, this._mergeOption(n, e)), t && "recreate" !== t && "media" !== t || (n = r.getMediaOption(this)).length && E(n, function (t) {
        i = !0, this._mergeOption(t, e);
      }, this), i;
    }, s.prototype.mergeOption = function (t) {
      this._mergeOption(t, null);
    }, s.prototype._mergeOption = function (i, t) {
      var r = this.option,
        h = this._componentsMap,
        c = this._componentsCount,
        n = [],
        o = N(),
        p = t && t.replaceMergeMainTypeMap;
      Kp(this).datasetMap = N(), E(i, function (t, e) {
        null != t && (g.hasClass(e) ? e && (n.push(e), o.set(e, !0)) : r[e] = null == r[e] ? y(t) : d(r[e], t, !0));
      }), p && p.each(function (t, e) {
        g.hasClass(e) && !o.get(e) && (n.push(e), o.set(e, !0));
      }), g.topologicalTravel(n, g.getAllClassMainTypes(), function (o) {
        var a,
          t = function (t, e, n) {
            return (e = (e = nd.get(e)) && e(t)) ? n.concat(e) : n;
          }(this, o, _o(i[o])),
          e = h.get(o),
          n = e ? p && p.get(o) ? "replaceMerge" : "normalMerge" : "replaceAll",
          e = So(e, t, n),
          s = (ko(e, o, g), r[o] = null, h.set(o, null), c.set(o, 0), []),
          l = [],
          u = 0;
        E(e, function (t, e) {
          var n = t.existing,
            i = t.newOption;
          if (i) {
            var r = g.getClass(o, t.keyInfo.subType, !("series" === o));
            if (!r) return;
            if ("tooltip" === o) {
              if (a) return;
              a = !0;
            }
            n && n.constructor === r ? (n.name = t.keyInfo.name, n.mergeOption(i, this), n.optionUpdated(i, !1)) : (e = L({
              componentIndex: e
            }, t.keyInfo), L(n = new r(i, this, this, e), e), t.brandNew && (n.__requireNewView = !0), n.init(i, this, this), n.optionUpdated(null, !0));
          } else n && (n.mergeOption({}, this), n.optionUpdated({}, !1));
          n ? (s.push(n.option), l.push(n), u++) : (s.push(void 0), l.push(void 0));
        }, this), r[o] = s, h.set(o, l), c.set(o, u), "series" === o && id(this);
      }, this), this._seriesIndices || id(this);
    }, s.prototype.getOption = function () {
      var a = y(this.option);
      return E(a, function (t, e) {
        if (g.hasClass(e)) {
          for (var n = _o(t), i = n.length, r = !1, o = i - 1; 0 <= o; o--) {
            n[o] && !Do(n[o]) ? r = !0 : (n[o] = null, r || i--);
          }
          n.length = i, a[e] = n;
        }
      }), delete a[cd], a;
    }, s.prototype.getTheme = function () {
      return this._theme;
    }, s.prototype.getLocaleModel = function () {
      return this._locale;
    }, s.prototype.setUpdatePayload = function (t) {
      this._payload = t;
    }, s.prototype.getUpdatePayload = function () {
      return this._payload;
    }, s.prototype.getComponent = function (t, e) {
      var n = this._componentsMap.get(t);
      if (n) {
        t = n[e || 0];
        if (t) return t;
        if (null == e) for (var i = 0; i < n.length; i++) {
          if (n[i]) return n[i];
        }
      }
    }, s.prototype.queryComponents = function (t) {
      var e,
        n,
        i,
        r,
        o,
        a = t.mainType;
      return a && (e = t.index, n = t.id, i = t.name, r = this._componentsMap.get(a)) && r.length ? (null != e ? (o = [], E(_o(e), function (t) {
        r[t] && o.push(r[t]);
      })) : o = null != n ? dd("id", n, r) : null != i ? dd("name", i, r) : ut(r, function (t) {
        return !!t;
      }), fd(o, t)) : [];
    }, s.prototype.findComponents = function (t) {
      var e,
        n = t.query,
        i = t.mainType,
        r = (r = i + "Index", o = i + "Id", e = i + "Name", !(n = n) || null == n[r] && null == n[o] && null == n[e] ? null : {
          mainType: i,
          index: n[r],
          id: n[o],
          name: n[e]
        }),
        o = r ? this.queryComponents(r) : ut(this._componentsMap.get(i), function (t) {
          return !!t;
        });
      return n = fd(o, t), t.filter ? ut(n, t.filter) : n;
    }, s.prototype.eachComponent = function (t, e, n) {
      var i = this._componentsMap;
      if (D(t)) {
        var r = e,
          o = t;
        i.each(function (t, e) {
          for (var n = 0; t && n < t.length; n++) {
            var i = t[n];
            i && o.call(r, e, i, i.componentIndex);
          }
        });
      } else for (var a = V(t) ? i.get(t) : O(t) ? this.findComponents(t) : null, s = 0; a && s < a.length; s++) {
        var l = a[s];
        l && e.call(n, l, l.componentIndex);
      }
    }, s.prototype.getSeriesByName = function (t) {
      var e = Io(t, null);
      return ut(this._componentsMap.get("series"), function (t) {
        return !!t && null != e && t.name === e;
      });
    }, s.prototype.getSeriesByIndex = function (t) {
      return this._componentsMap.get("series")[t];
    }, s.prototype.getSeriesByType = function (e) {
      return ut(this._componentsMap.get("series"), function (t) {
        return !!t && t.subType === e;
      });
    }, s.prototype.getSeries = function () {
      return ut(this._componentsMap.get("series"), function (t) {
        return !!t;
      });
    }, s.prototype.getSeriesCount = function () {
      return this._componentsCount.get("series");
    }, s.prototype.eachSeries = function (n, i) {
      rd(this), E(this._seriesIndices, function (t) {
        var e = this._componentsMap.get("series")[t];
        n.call(i, e, t);
      }, this);
    }, s.prototype.eachRawSeries = function (e, n) {
      E(this._componentsMap.get("series"), function (t) {
        t && e.call(n, t, t.componentIndex);
      });
    }, s.prototype.eachSeriesByType = function (n, i, r) {
      rd(this), E(this._seriesIndices, function (t) {
        var e = this._componentsMap.get("series")[t];
        e.subType === n && i.call(r, e, t);
      }, this);
    }, s.prototype.eachRawSeriesByType = function (t, e, n) {
      return E(this.getSeriesByType(t), e, n);
    }, s.prototype.isSeriesFiltered = function (t) {
      return rd(this), null == this._seriesIndicesMap.get(t.componentIndex);
    }, s.prototype.getCurrentSeriesIndices = function () {
      return (this._seriesIndices || []).slice();
    }, s.prototype.filterSeries = function (n, i) {
      rd(this);
      var r = [];
      E(this._seriesIndices, function (t) {
        var e = this._componentsMap.get("series")[t];
        n.call(i, e, t) && r.push(t);
      }, this), this._seriesIndices = r, this._seriesIndicesMap = N(r);
    }, s.prototype.restoreData = function (n) {
      id(this);
      var t = this._componentsMap,
        i = [];
      t.each(function (t, e) {
        g.hasClass(e) && i.push(e);
      }), g.topologicalTravel(i, g.getAllClassMainTypes(), function (e) {
        E(t.get(e), function (t) {
          !t || "series" === e && function (t, e) {
            {
              var n, i;
              if (e) return n = e.seriesIndex, i = e.seriesId, e = e.seriesName, null != n && t.componentIndex !== n || null != i && t.id !== i || null != e && t.name !== e;
            }
          }(t, n) || t.restoreData();
        });
      });
    }, s.internalField = (id = function id(t) {
      var e = t._seriesIndices = [];
      E(t._componentsMap.get("series"), function (t) {
        t && e.push(t.componentIndex);
      }), t._seriesIndicesMap = N(e);
    }, rd = function rd(t) {}, void (od = function od(t, e) {
      t.option = {}, t.option[cd] = 1, t._componentsMap = N({
        series: []
      }), t._componentsCount = N();
      var n,
        i,
        r = e.aria;
      O(r) && null == r.enabled && (r.enabled = !0), n = e, r = t._theme.option, i = n.color && !n.colorLayer, E(r, function (t, e) {
        "colorLayer" === e && i || g.hasClass(e) || ("object" == _typeof(t) ? n[e] = n[e] ? d(n[e], t, !1) : y(t) : null == n[e] && (n[e] = t));
      }), d(e, Fp, !1), t._mergeOption(e, null);
    })), s);
  function s() {
    return null !== hd && hd.apply(this, arguments) || this;
  }
  function dd(e, t, n) {
    var i, r;
    return F(t) ? (i = N(), E(t, function (t) {
      null != t && null != Io(t, null) && i.set(t, !0);
    }), ut(n, function (t) {
      return t && i.get(t[e]);
    })) : (r = Io(t, null), ut(n, function (t) {
      return t && null != r && t[e] === r;
    }));
  }
  function fd(t, e) {
    return e.hasOwnProperty("subType") ? ut(t, function (t) {
      return t && t.subType === e.subType;
    }) : t;
  }
  function gd(t) {
    var e = N();
    return t && E(_o(t.replaceMerge), function (t) {
      e.set(t, !0);
    }), {
      replaceMergeMainTypeMap: e
    };
  }
  at(pd, sd);
  function yd(e) {
    E(md, function (t) {
      this[t] = pt(e[t], e);
    }, this);
  }
  var md = ["getDom", "getZr", "getWidth", "getHeight", "getDevicePixelRatio", "dispatchAction", "isSSR", "isDisposed", "on", "off", "getDataURL", "getConnectedDataURL", "getOption", "getId", "updateLabelLayout"],
    vd = {},
    _d = (xd.prototype.create = function (n, i) {
      var r = [];
      E(vd, function (t, e) {
        t = t.create(n, i);
        r = r.concat(t || []);
      }), this._coordinateSystems = r;
    }, xd.prototype.update = function (e, n) {
      E(this._coordinateSystems, function (t) {
        t.update && t.update(e, n);
      });
    }, xd.prototype.getCoordinateSystems = function () {
      return this._coordinateSystems.slice();
    }, xd.register = function (t, e) {
      vd[t] = e;
    }, xd.get = function (t) {
      return vd[t];
    }, xd);
  function xd() {
    this._coordinateSystems = [];
  }
  var wd = /^(min|max)?(.+)$/,
    bd = (Sd.prototype.setOption = function (t, e, n) {
      t && (E(_o(t.series), function (t) {
        t && t.data && yt(t.data) && kt(t.data);
      }), E(_o(t.dataset), function (t) {
        t && t.source && yt(t.source) && kt(t.source);
      })), t = y(t);
      var i = this._optionBackup,
        t = function (t, n, i) {
          var e,
            r,
            o = [],
            a = t.baseOption,
            s = t.timeline,
            l = t.options,
            u = t.media,
            h = !!t.media,
            c = !!(l || s || a && a.timeline);
          a ? (r = a).timeline || (r.timeline = s) : ((c || h) && (t.options = t.media = null), r = t);
          h && F(u) && E(u, function (t) {
            t && t.option && (t.query ? o.push(t) : e = e || t);
          });
          function p(e) {
            E(n, function (t) {
              t(e, i);
            });
          }
          return p(r), E(l, p), E(o, function (t) {
            return p(t.option);
          }), {
            baseOption: r,
            timelineOptions: l || [],
            mediaDefault: e,
            mediaList: o
          };
        }(t, e, !i);
      this._newBaseOption = t.baseOption, i ? (t.timelineOptions.length && (i.timelineOptions = t.timelineOptions), t.mediaList.length && (i.mediaList = t.mediaList), t.mediaDefault && (i.mediaDefault = t.mediaDefault)) : this._optionBackup = t;
    }, Sd.prototype.mountOption = function (t) {
      var e = this._optionBackup;
      return this._timelineOptions = e.timelineOptions, this._mediaList = e.mediaList, this._mediaDefault = e.mediaDefault, this._currentMediaIndices = [], y(t ? e.baseOption : this._newBaseOption);
    }, Sd.prototype.getTimelineOption = function (t) {
      var e,
        n = this._timelineOptions;
      return e = n.length && (t = t.getComponent("timeline")) ? y(n[t.getCurrentIndex()]) : e;
    }, Sd.prototype.getMediaOption = function (t) {
      var e = this._api.getWidth(),
        n = this._api.getHeight(),
        i = this._mediaList,
        r = this._mediaDefault,
        o = [],
        a = [];
      if (i.length || r) {
        for (var s, l, u = 0, h = i.length; u < h; u++) {
          !function (t, e, n) {
            var i = {
                width: e,
                height: n,
                aspectratio: e / n
              },
              r = !0;
            return E(t, function (t, e) {
              var n,
                e = e.match(wd);
              e && e[1] && e[2] && (n = e[1], e = e[2].toLowerCase(), e = i[e], t = t, ("min" === (n = n) ? t <= e : "max" === n ? e <= t : e === t) || (r = !1));
            }), r;
          }(i[u].query, e, n) || o.push(u);
        }
        (o = !o.length && r ? [-1] : o).length && (s = o, l = this._currentMediaIndices, s.join(",") !== l.join(",")) && (a = z(o, function (t) {
          return y((-1 === t ? r : i[t]).option);
        })), this._currentMediaIndices = o;
      }
      return a;
    }, Sd);
  function Sd(t) {
    this._timelineOptions = [], this._mediaList = [], this._currentMediaIndices = [], this._api = t;
  }
  var Md = E,
    Td = O,
    Id = ["areaStyle", "lineStyle", "nodeStyle", "linkStyle", "chordStyle", "label", "labelLine"];
  function Cd(t) {
    var e = t && t.itemStyle;
    if (e) for (var n = 0, i = Id.length; n < i; n++) {
      var r = Id[n],
        o = e.normal,
        a = e.emphasis;
      o && o[r] && (t[r] = t[r] || {}, t[r].normal ? d(t[r].normal, o[r]) : t[r].normal = o[r], o[r] = null), a && a[r] && (t[r] = t[r] || {}, t[r].emphasis ? d(t[r].emphasis, a[r]) : t[r].emphasis = a[r], a[r] = null);
    }
  }
  function Dd(t, e, n) {
    var i, r;
    t && t[e] && (t[e].normal || t[e].emphasis) && (i = t[e].normal, r = t[e].emphasis, i && (n ? (t[e].normal = t[e].emphasis = null, B(t[e], i)) : t[e] = i), r) && (t.emphasis = t.emphasis || {}, (t.emphasis[e] = r).focus && (t.emphasis.focus = r.focus), r.blurScope) && (t.emphasis.blurScope = r.blurScope);
  }
  function kd(t) {
    Dd(t, "itemStyle"), Dd(t, "lineStyle"), Dd(t, "areaStyle"), Dd(t, "label"), Dd(t, "labelLine"), Dd(t, "upperLabel"), Dd(t, "edgeLabel");
  }
  function Ad(t, e) {
    var n = Td(t) && t[e],
      i = Td(n) && n.textStyle;
    if (i) for (var r = 0, o = wo.length; r < o; r++) {
      var a = wo[r];
      i.hasOwnProperty(a) && (n[a] = i[a]);
    }
  }
  function Pd(t) {
    t && (kd(t), Ad(t, "label"), t.emphasis) && Ad(t.emphasis, "label");
  }
  function Ld(t) {
    return F(t) ? t : t ? [t] : [];
  }
  function Od(t) {
    return (F(t) ? t[0] : t) || {};
  }
  function Rd(e, t) {
    Md(Ld(e.series), function (t) {
      if (Td(t)) if (Td(t)) {
        Cd(t), kd(t), Ad(t, "label"), Ad(t, "upperLabel"), Ad(t, "edgeLabel"), t.emphasis && (Ad(t.emphasis, "label"), Ad(t.emphasis, "upperLabel"), Ad(t.emphasis, "edgeLabel"));
        var e = t.markPoint,
          n = (e && (Cd(e), Pd(e)), t.markLine),
          i = (n && (Cd(n), Pd(n)), t.markArea),
          r = (i && Pd(i), t.data);
        if ("graph" === t.type) {
          var r = r || t.nodes,
            o = t.links || t.edges;
          if (o && !yt(o)) for (var a = 0; a < o.length; a++) {
            Pd(o[a]);
          }
          E(t.categories, function (t) {
            kd(t);
          });
        }
        if (r && !yt(r)) for (a = 0; a < r.length; a++) {
          Pd(r[a]);
        }
        if ((e = t.markPoint) && e.data) for (var s = e.data, a = 0; a < s.length; a++) {
          Pd(s[a]);
        }
        if ((n = t.markLine) && n.data) for (var l = n.data, a = 0; a < l.length; a++) {
          F(l[a]) ? (Pd(l[a][0]), Pd(l[a][1])) : Pd(l[a]);
        }
        "gauge" === t.type ? (Ad(t, "axisLabel"), Ad(t, "title"), Ad(t, "detail")) : "treemap" === t.type ? (Dd(t.breadcrumb, "itemStyle"), E(t.levels, function (t) {
          kd(t);
        })) : "tree" === t.type && kd(t.leaves);
      }
    });
    var n = ["xAxis", "yAxis", "radiusAxis", "angleAxis", "singleAxis", "parallelAxis", "radar"];
    t && n.push("valueAxis", "categoryAxis", "logAxis", "timeAxis"), Md(n, function (t) {
      Md(Ld(e[t]), function (t) {
        t && (Ad(t, "axisLabel"), Ad(t.axisPointer, "label"));
      });
    }), Md(Ld(e.parallel), function (t) {
      t = t && t.parallelAxisDefault;
      Ad(t, "axisLabel"), Ad(t && t.axisPointer, "label");
    }), Md(Ld(e.calendar), function (t) {
      Dd(t, "itemStyle"), Ad(t, "dayLabel"), Ad(t, "monthLabel"), Ad(t, "yearLabel");
    }), Md(Ld(e.radar), function (t) {
      Ad(t, "name"), t.name && null == t.axisName && (t.axisName = t.name, delete t.name), null != t.nameGap && null == t.axisNameGap && (t.axisNameGap = t.nameGap, delete t.nameGap);
    }), Md(Ld(e.geo), function (t) {
      Td(t) && (Pd(t), Md(Ld(t.regions), function (t) {
        Pd(t);
      }));
    }), Md(Ld(e.timeline), function (t) {
      Pd(t), Dd(t, "label"), Dd(t, "itemStyle"), Dd(t, "controlStyle", !0);
      t = t.data;
      F(t) && E(t, function (t) {
        O(t) && (Dd(t, "label"), Dd(t, "itemStyle"));
      });
    }), Md(Ld(e.toolbox), function (t) {
      Dd(t, "iconStyle"), Md(t.feature, function (t) {
        Dd(t, "iconStyle");
      });
    }), Ad(Od(e.axisPointer), "label"), Ad(Od(e.tooltip).axisPointer, "label");
  }
  function Nd(e) {
    e && E(Ed, function (t) {
      t[0] in e && !(t[1] in e) && (e[t[1]] = e[t[0]]);
    });
  }
  var Ed = [["x", "left"], ["y", "top"], ["x2", "right"], ["y2", "bottom"]],
    Bd = ["grid", "geo", "parallel", "legend", "toolbox", "title", "visualMap", "dataZoom", "timeline"],
    zd = [["borderRadius", "barBorderRadius"], ["borderColor", "barBorderColor"], ["borderWidth", "barBorderWidth"]];
  function Fd(t) {
    var e = t && t.itemStyle;
    if (e) for (var n = 0; n < zd.length; n++) {
      var i = zd[n][1],
        r = zd[n][0];
      null != e[i] && (e[r] = e[i]);
    }
  }
  function Vd(t) {
    t && "edge" === t.alignTo && null != t.margin && null == t.edgeDistance && (t.edgeDistance = t.margin);
  }
  function Wd(t) {
    t && t.downplay && !t.blur && (t.blur = t.downplay);
  }
  function Hd(e, t) {
    Rd(e, t), e.series = _o(e.series), E(e.series, function (t) {
      if (O(t)) {
        var e,
          n = t.type;
        if ("line" === n) null != t.clipOverflow && (t.clip = t.clipOverflow);else if ("pie" === n || "gauge" === n) {
          if (null != t.clockWise && (t.clockwise = t.clockWise), Vd(t.label), (e = t.data) && !yt(e)) for (var i = 0; i < e.length; i++) {
            Vd(e[i]);
          }
          null != t.hoverOffset && (t.emphasis = t.emphasis || {}, t.emphasis.scaleSize = null) && (t.emphasis.scaleSize = t.hoverOffset);
        } else if ("gauge" === n) {
          var r = function (t, e) {
            for (var n = e.split(","), i = t, r = 0; r < n.length && null != (i = i && i[n[r]]); r++) {
              ;
            }
            return i;
          }(t, "pointer.color");
          if (null != r) {
            var o = t;
            var a = "itemStyle.color";
            var s = void 0;
            for (var l, u = a.split(","), h = o, c = 0; c < u.length - 1; c++) {
              null == h[l = u[c]] && (h[l] = {}), h = h[l];
            }
            !s && null != h[u[c]] || (h[u[c]] = r);
          }
        } else if ("bar" === n) {
          if (Fd(t), Fd(t.backgroundStyle), Fd(t.emphasis), (e = t.data) && !yt(e)) for (i = 0; i < e.length; i++) {
            "object" == _typeof(e[i]) && (Fd(e[i]), Fd(e[i] && e[i].emphasis));
          }
        } else "sunburst" === n ? ((a = t.highlightPolicy) && (t.emphasis = t.emphasis || {}, t.emphasis.focus || (t.emphasis.focus = a)), Wd(t), function t(e, n) {
          if (e) for (var i = 0; i < e.length; i++) {
            n(e[i]), e[i] && t(e[i].children, n);
          }
        }(t.data, Wd)) : "graph" === n || "sankey" === n ? (o = t) && null != o.focusNodeAdjacency && (o.emphasis = o.emphasis || {}, null == o.emphasis.focus) && (o.emphasis.focus = "adjacency") : "map" === n && (t.mapType && !t.map && (t.map = t.mapType), t.mapLocation) && B(t, t.mapLocation);
        null != t.hoverAnimation && (t.emphasis = t.emphasis || {}, t.emphasis) && null == t.emphasis.scale && (t.emphasis.scale = t.hoverAnimation), Nd(t);
      }
    }), e.dataRange && (e.visualMap = e.dataRange), E(Bd, function (t) {
      t = e[t];
      t && E(t = F(t) ? t : [t], function (t) {
        Nd(t);
      });
    });
  }
  function Gd(_) {
    E(_, function (p, d) {
      var f = [],
        g = [NaN, NaN],
        t = [p.stackResultDimension, p.stackedOverDimension],
        y = p.data,
        m = p.isStackedByIndex,
        v = p.seriesModel.get("stackStrategy") || "samesign";
      y.modify(t, function (t, e, n) {
        var i,
          r,
          o = y.get(p.stackedDimension, n);
        if (isNaN(o)) return g;
        m ? r = y.getRawIndex(n) : i = y.get(p.stackedByDimension, n);
        for (var a, s, l, u = NaN, h = d - 1; 0 <= h; h--) {
          var c = _[h];
          if (0 <= (r = m ? r : c.data.rawIndexOf(c.stackedByDimension, i))) {
            c = c.data.getByRawIndex(c.stackResultDimension, r);
            if ("all" === v || "positive" === v && 0 < c || "negative" === v && c < 0 || "samesign" === v && 0 <= o && 0 < c || "samesign" === v && o <= 0 && c < 0) {
              a = o, s = c, l = void 0, l = Math.max(no(a), no(s)), a += s, o = Jr < l ? a : eo(a, l), u = c;
              break;
            }
          }
        }
        return f[0] = o, f[1] = u, f;
      });
    });
  }
  var Ud,
    qd,
    Xd = function Xd(t) {
      this.data = t.data || (t.sourceFormat === Up ? {} : []), this.sourceFormat = t.sourceFormat || Xp, this.seriesLayoutBy = t.seriesLayoutBy || Yp, this.startIndex = t.startIndex || 0, this.dimensionsDetectedCount = t.dimensionsDetectedCount, this.metaRawOption = t.metaRawOption;
      var e = this.dimensionsDefine = t.dimensionsDefine;
      if (e) for (var n = 0; n < e.length; n++) {
        var i = e[n];
        null == i.type && td(this, n) === jp.Must && (i.type = "ordinal");
      }
    };
  function Yd(t) {
    return t instanceof Xd;
  }
  function Zd(t, e, n) {
    n = n || Kd(t);
    var i = e.seriesLayoutBy,
      r = function (t, e, n, i, r) {
        var o, a;
        if (!t) return {
          dimensionsDefine: $d(r),
          startIndex: a,
          dimensionsDetectedCount: o
        };
        {
          var s;
          e === Hp ? (s = t, "auto" === i || null == i ? Qd(function (t) {
            null != t && "-" !== t && (V(t) ? null == a && (a = 1) : a = 0);
          }, n, s, 10) : a = W(i) ? i : i ? 1 : 0, r || 1 !== a || (r = [], Qd(function (t, e) {
            r[e] = null != t ? t + "" : "";
          }, n, s, 1 / 0)), o = r ? r.length : n === Zp ? s.length : s[0] ? s[0].length : null) : e === Gp ? r = r || function (t) {
            var e,
              n = 0;
            for (; n < t.length && !(e = t[n++]);) {
              ;
            }
            if (e) return ct(e);
          }(t) : e === Up ? r || (r = [], E(t, function (t, e) {
            r.push(e);
          })) : e === Wp && (i = bo(t[0]), o = F(i) && i.length || 1);
        }
        return {
          startIndex: a,
          dimensionsDefine: $d(r),
          dimensionsDetectedCount: o
        };
      }(t, n, i, e.sourceHeader, e.dimensions);
    return new Xd({
      data: t,
      sourceFormat: n,
      seriesLayoutBy: i,
      dimensionsDefine: r.dimensionsDefine,
      startIndex: r.startIndex,
      dimensionsDetectedCount: r.dimensionsDetectedCount,
      metaRawOption: y(e)
    });
  }
  function jd(t) {
    return new Xd({
      data: t,
      sourceFormat: yt(t) ? qp : Wp
    });
  }
  function Kd(t) {
    var e = Xp;
    if (yt(t)) e = qp;else if (F(t)) {
      0 === t.length && (e = Hp);
      for (var n = 0, i = t.length; n < i; n++) {
        var r = t[n];
        if (null != r) {
          if (F(r) || yt(r)) {
            e = Hp;
            break;
          }
          if (O(r)) {
            e = Gp;
            break;
          }
        }
      }
    } else if (O(t)) for (var o in t) {
      if (Ft(t, o) && st(t[o])) {
        e = Up;
        break;
      }
    }
    return e;
  }
  function $d(t) {
    var i;
    if (t) return i = N(), z(t, function (t, e) {
      var n,
        t = {
          name: (t = O(t) ? t : {
            name: t
          }).name,
          displayName: t.displayName,
          type: t.type
        };
      return null != t.name && (t.name += "", null == t.displayName && (t.displayName = t.name), (n = i.get(t.name)) ? t.name += "-" + n.count++ : i.set(t.name, {
        count: 1
      })), t;
    });
  }
  function Qd(t, e, n, i) {
    if (e === Zp) for (var r = 0; r < n.length && r < i; r++) {
      t(n[r] ? n[r][0] : null, r);
    } else for (var o = n[0] || [], r = 0; r < o.length && r < i; r++) {
      t(o[r], r);
    }
  }
  function Jd(t) {
    t = t.sourceFormat;
    return t === Gp || t === Up;
  }
  of.prototype.getSource = function () {
    return this._source;
  }, of.prototype.count = function () {
    return 0;
  }, of.prototype.getItem = function (t, e) {}, of.prototype.appendData = function (t) {}, of.prototype.clean = function () {}, of.protoInitialize = ((jh = of.prototype).pure = !1, void (jh.persistent = !0)), of.internalField = (qd = function qd(t, e, n) {
    var i,
      r = n.sourceFormat,
      o = n.seriesLayoutBy,
      a = n.startIndex,
      n = n.dimensionsDefine;
    L(t, Ud[yf(r, o)]), r === qp ? (t.getItem = tf, t.count = nf, t.fillStorage = ef) : (i = uf(r, o), t.getItem = pt(i, null, e, a, n), i = pf(r, o), t.count = pt(i, null, e, a, n));
  }, tf = function tf(t, e) {
    t -= this._offset, e = e || [];
    for (var n = this._data, i = this._dimSize, r = i * t, o = 0; o < i; o++) {
      e[o] = n[r + o];
    }
    return e;
  }, ef = function ef(t, e, n, i) {
    for (var r = this._data, o = this._dimSize, a = 0; a < o; a++) {
      for (var s = i[a], l = null == s[0] ? 1 / 0 : s[0], u = null == s[1] ? -1 / 0 : s[1], h = e - t, c = n[a], p = 0; p < h; p++) {
        var d = r[p * o + a];
        (c[t + p] = d) < l && (l = d), u < d && (u = d);
      }
      s[0] = l, s[1] = u;
    }
  }, nf = function nf() {
    return this._data ? this._data.length / this._dimSize : 0;
  }, (jh = {})[Hp + "_" + Yp] = {
    pure: !0,
    appendData: af
  }, jh[Hp + "_" + Zp] = {
    pure: !0,
    appendData: function appendData() {
      throw new Error('Do not support appendData when set seriesLayoutBy: "row".');
    }
  }, jh[Gp] = {
    pure: !0,
    appendData: af
  }, jh[Up] = {
    pure: !0,
    appendData: function appendData(t) {
      var r = this._data;
      E(t, function (t, e) {
        for (var n = r[e] || (r[e] = []), i = 0; i < (t || []).length; i++) {
          n.push(t[i]);
        }
      });
    }
  }, jh[Wp] = {
    appendData: af
  }, jh[qp] = {
    persistent: !1,
    pure: !0,
    appendData: function appendData(t) {
      this._data = t;
    },
    clean: function clean() {
      this._offset += this.count(), this._data = null;
    }
  }, void (Ud = jh));
  var tf,
    ef,
    nf,
    rf = of;
  function of(t, e) {
    var t = Yd(t) ? t : jd(t),
      n = (this._source = t, this._data = t.data);
    t.sourceFormat === qp && (this._offset = 0, this._dimSize = e, this._data = n), qd(this, n, t);
  }
  function af(t) {
    for (var e = 0; e < t.length; e++) {
      this._data.push(t[e]);
    }
  }
  function sf(t, e, n, i) {
    return t[i];
  }
  (Kc = {})[Hp + "_" + Yp] = function (t, e, n, i) {
    return t[i + e];
  }, Kc[Hp + "_" + Zp] = function (t, e, n, i, r) {
    i += e;
    for (var o = r || [], a = t, s = 0; s < a.length; s++) {
      var l = a[s];
      o[s] = l ? l[i] : null;
    }
    return o;
  }, Kc[Gp] = sf, Kc[Up] = function (t, e, n, i, r) {
    for (var o = r || [], a = 0; a < n.length; a++) {
      var s = t[n[a].name];
      o[a] = s ? s[i] : null;
    }
    return o;
  }, Kc[Wp] = sf;
  var lf = Kc;
  function uf(t, e) {
    return lf[yf(t, e)];
  }
  function hf(t, e, n) {
    return t.length;
  }
  (Cc = {})[Hp + "_" + Yp] = function (t, e, n) {
    return Math.max(0, t.length - e);
  }, Cc[Hp + "_" + Zp] = function (t, e, n) {
    t = t[0];
    return t ? Math.max(0, t.length - e) : 0;
  }, Cc[Gp] = hf, Cc[Up] = function (t, e, n) {
    t = t[n[0].name];
    return t ? t.length : 0;
  }, Cc[Wp] = hf;
  var cf = Cc;
  function pf(t, e) {
    return cf[yf(t, e)];
  }
  function df(t, e, n) {
    return t[e];
  }
  (Ko = {})[Hp] = df, Ko[Gp] = function (t, e, n) {
    return t[n];
  }, Ko[Up] = df, Ko[Wp] = function (t, e, n) {
    t = bo(t);
    return t instanceof Array ? t[e] : t;
  }, Ko[qp] = df;
  var ff = Ko;
  function gf(t) {
    return ff[t];
  }
  function yf(t, e) {
    return t === Hp ? t + "_" + e : t;
  }
  function mf(t, e, n) {
    if (t) {
      var i,
        r,
        e = t.getRawDataItem(e);
      if (null != e) return i = (r = t.getStore()).getSource().sourceFormat, null != n ? (t = t.getDimensionIndex(n), n = r.getDimensionProperty(t), gf(i)(e, t, n)) : (r = e, i === Wp ? bo(e) : r);
    }
  }
  var vf = /\{@(.+?)\}/g,
    Pc = (_f.prototype.getDataParams = function (t, e) {
      var n = this.getData(e),
        i = this.getRawValue(t, e),
        r = n.getRawIndex(t),
        o = n.getName(t),
        a = n.getRawDataItem(t),
        s = n.getItemVisual(t, "style"),
        t = s && s[n.getItemVisual(t, "drawType") || "fill"],
        s = s && s.stroke,
        l = this.mainType,
        u = "series" === l,
        n = n.userOutput && n.userOutput.get();
      return {
        componentType: l,
        componentSubType: this.subType,
        componentIndex: this.componentIndex,
        seriesType: u ? this.subType : null,
        seriesIndex: this.seriesIndex,
        seriesId: u ? this.id : null,
        seriesName: u ? this.name : null,
        name: o,
        dataIndex: r,
        data: a,
        dataType: e,
        value: i,
        color: t,
        borderColor: s,
        dimensionNames: n ? n.fullDimensions : null,
        encode: n ? n.encode : null,
        $vars: ["seriesName", "name", "value"]
      };
    }, _f.prototype.getFormattedLabel = function (i, t, e, n, r, o) {
      t = t || "normal";
      var a = this.getData(e),
        e = this.getDataParams(i, e);
      return o && (e.value = o.interpolatedValue), null != n && F(e.value) && (e.value = e.value[n]), D(r = r || a.getItemModel(i).get("normal" === t ? ["label", "formatter"] : [t, "label", "formatter"])) ? (e.status = t, e.dimensionIndex = n, r(e)) : V(r) ? bp(r, e).replace(vf, function (t, e) {
        var n = e.length,
          n = ("[" === e.charAt(0) && "]" === e.charAt(n - 1) && (e = +e.slice(1, n - 1)), mf(a, i, e));
        return null != (n = o && F(o.interpolatedValue) && 0 <= (e = a.getDimensionIndex(e)) ? o.interpolatedValue[e] : n) ? n + "" : "";
      }) : void 0;
    }, _f.prototype.getRawValue = function (t, e) {
      return mf(this.getData(e), t);
    }, _f.prototype.formatTooltip = function (t, e, n) {}, _f);
  function _f() {}
  function xf(t) {
    return new wf(t);
  }
  bf.prototype.perform = function (t) {
    var e,
      n,
      i = this._upstream,
      r = t && t.skip,
      o = (this._dirty && i && ((o = this.context).data = o.outputData = i.context.outputData), this.__pipeline && (this.__pipeline.currentTask = this), this._plan && !r && (e = this._plan(this.context)), u(this._modBy)),
      a = this._modDataCount || 0,
      s = u(t && t.modBy),
      l = t && t.modDataCount || 0;
    function u(t) {
      return t = 1 <= t ? t : 1;
    }
    o === s && a === l || (e = "reset"), !this._dirty && "reset" !== e || (this._dirty = !1, n = this._doReset(r)), this._modBy = s, this._modDataCount = l;
    o = t && t.step;
    if (this._dueEnd = i ? i._outputDueEnd : this._count ? this._count(this.context) : 1 / 0, this._progress) {
      var h = this._dueIndex,
        c = Math.min(null != o ? this._dueIndex + o : 1 / 0, this._dueEnd);
      if (!r && (n || h < c)) {
        var p = this._progress;
        if (F(p)) for (var d = 0; d < p.length; d++) {
          this._doProgress(p[d], h, c, s, l);
        } else this._doProgress(p, h, c, s, l);
      }
      this._dueIndex = c;
      a = null != this._settedOutputEnd ? this._settedOutputEnd : c;
      this._outputDueEnd = a;
    } else this._dueIndex = this._outputDueEnd = null != this._settedOutputEnd ? this._settedOutputEnd : this._dueEnd;
    return this.unfinished();
  }, bf.prototype.dirty = function () {
    this._dirty = !0, this._onDirty && this._onDirty(this.context);
  }, bf.prototype._doProgress = function (t, e, n, i, r) {
    kf.reset(e, n, i, r), this._callingProgress = t, this._callingProgress({
      start: e,
      end: n,
      count: n - e,
      next: kf.next
    }, this.context);
  }, bf.prototype._doReset = function (t) {
    this._dueIndex = this._outputDueEnd = this._dueEnd = 0, this._settedOutputEnd = null, !t && this._reset && ((e = this._reset(this.context)) && e.progress && (n = e.forceFirstProgress, e = e.progress), F(e)) && !e.length && (e = null), this._progress = e, this._modBy = this._modDataCount = null;
    var e,
      n,
      t = this._downstream;
    return t && t.dirty(), n;
  }, bf.prototype.unfinished = function () {
    return this._progress && this._dueIndex < this._dueEnd;
  }, bf.prototype.pipe = function (t) {
    this._downstream === t && !this._dirty || ((this._downstream = t)._upstream = this, t.dirty());
  }, bf.prototype.dispose = function () {
    this._disposed || (this._upstream && (this._upstream._downstream = null), this._downstream && (this._downstream._upstream = null), this._dirty = !1, this._disposed = !0);
  }, bf.prototype.getUpstream = function () {
    return this._upstream;
  }, bf.prototype.getDownstream = function () {
    return this._downstream;
  }, bf.prototype.setOutputEnd = function (t) {
    this._outputDueEnd = this._settedOutputEnd = t;
  };
  var wf = bf;
  function bf(t) {
    this._reset = (t = t || {}).reset, this._plan = t.plan, this._count = t.count, this._onDirty = t.onDirty, this._dirty = !0;
  }
  var Sf,
    Mf,
    Tf,
    If,
    Cf,
    Df,
    kf = Df = {
      reset: function reset(t, e, n, i) {
        Mf = t, Sf = e, Tf = n, If = i, Cf = Math.ceil(If / Tf), Df.next = 1 < Tf && 0 < If ? Pf : Af;
      }
    };
  function Af() {
    return Mf < Sf ? Mf++ : null;
  }
  function Pf() {
    var t = Mf % Cf * Tf + Math.ceil(Mf / Cf),
      t = Sf <= Mf ? null : t < If ? t : Mf;
    return Mf++, t;
  }
  function Lf(t, e) {
    e = e && e.type;
    return "ordinal" === e ? t : null == (t = "time" !== e || W(t) || null == t || "-" === t ? t : +uo(t)) || "" === t ? NaN : Number(t);
  }
  var Of = N({
    number: function number(t) {
      return parseFloat(t);
    },
    time: function time(t) {
      return +uo(t);
    },
    trim: function trim(t) {
      return V(t) ? Ct(t) : t;
    }
  });
  function Rf(t) {
    return Of.get(t);
  }
  var Nf = {
      lt: function lt(t, e) {
        return t < e;
      },
      lte: function lte(t, e) {
        return t <= e;
      },
      gt: function gt(t, e) {
        return e < t;
      },
      gte: function gte(t, e) {
        return e <= t;
      }
    },
    Ef = (Bf.prototype.evaluate = function (t) {
      return W(t) ? this._opFn(t, this._rvalFloat) : this._opFn(fo(t), this._rvalFloat);
    }, Bf);
  function Bf(t, e) {
    W(e) || f(""), this._opFn = Nf[t], this._rvalFloat = fo(e);
  }
  Ff.prototype.evaluate = function (t, e) {
    var n = W(t) ? t : fo(t),
      i = W(e) ? e : fo(e),
      r = isNaN(n),
      o = isNaN(i);
    return r && (n = this._incomparable), o && (i = this._incomparable), r && o && (r = V(t), o = V(e), r && (n = o ? t : 0), o) && (i = r ? e : 0), n < i ? this._resultLT : i < n ? -this._resultLT : 0;
  };
  var zf = Ff;
  function Ff(t, e) {
    t = "desc" === t;
    this._resultLT = t ? 1 : -1, this._incomparable = "min" === (e = null == e ? t ? "min" : "max" : e) ? -1 / 0 : 1 / 0;
  }
  Wf.prototype.evaluate = function (t) {
    var e,
      n = t === this._rval;
    return n || (e = _typeof(t)) === this._rvalTypeof || "number" != e && "number" !== this._rvalTypeof || (n = fo(t) === this._rvalFloat), this._isEQ ? n : !n;
  };
  var Vf = Wf;
  function Wf(t, e) {
    this._rval = e, this._isEQ = t, this._rvalTypeof = _typeof(e), this._rvalFloat = fo(e);
  }
  Gf.prototype.getRawData = function () {
    throw new Error("not supported");
  }, Gf.prototype.getRawDataItem = function (t) {
    throw new Error("not supported");
  }, Gf.prototype.cloneRawData = function () {}, Gf.prototype.getDimensionInfo = function (t) {}, Gf.prototype.cloneAllDimensionInfo = function () {}, Gf.prototype.count = function () {}, Gf.prototype.retrieveValue = function (t, e) {}, Gf.prototype.retrieveValueFromItem = function (t, e) {}, Gf.prototype.convertValue = Lf;
  var Hf = Gf;
  function Gf() {}
  function Uf(t) {
    return Kf(t.sourceFormat) || f(""), t.data;
  }
  function qf(t) {
    var e = t.sourceFormat,
      n = t.data;
    if (Kf(e) || f(""), e === Hp) {
      for (var i = [], r = 0, o = n.length; r < o; r++) {
        i.push(n[r].slice());
      }
      return i;
    }
    if (e === Gp) {
      for (i = [], r = 0, o = n.length; r < o; r++) {
        i.push(L({}, n[r]));
      }
      return i;
    }
  }
  function Xf(t, e, n) {
    if (null != n) return W(n) || !isNaN(n) && !Ft(e, n) ? t[n] : Ft(e, n) ? e[n] : void 0;
  }
  function Yf(t) {
    return y(t);
  }
  var Zf = N();
  function jf(t, e) {
    var n = _o(t),
      t = n.length;
    t || f("");
    for (var i = 0, r = t; i < r; i++) {
      e = function (t, i) {
        i.length || f("");
        O(t) || f("");
        var e = t.type,
          d = Zf.get(e);
        d || f("");
        e = z(i, function (t) {
          var e = t,
            t = d,
            n = new Hf(),
            i = e.data,
            r = n.sourceFormat = e.sourceFormat,
            o = e.startIndex,
            a = (e.seriesLayoutBy !== Yp && f(""), []),
            s = {};
          if (h = e.dimensionsDefine) E(h, function (t, e) {
            var n = t.name,
              e = {
                index: e,
                name: n,
                displayName: t.displayName
              };
            a.push(e), null != n && (Ft(s, n) && f(""), s[n] = e);
          });else for (var l = 0; l < e.dimensionsDetectedCount; l++) {
            a.push({
              index: l
            });
          }
          var u = uf(r, Yp),
            h = (t.__isBuiltIn && (n.getRawDataItem = function (t) {
              return u(i, o, a, t);
            }, n.getRawData = pt(Uf, null, e)), n.cloneRawData = pt(qf, null, e), pf(r, Yp)),
            c = (n.count = pt(h, null, i, o, a), gf(r)),
            p = (n.retrieveValue = function (t, e) {
              t = u(i, o, a, t);
              return p(t, e);
            }, n.retrieveValueFromItem = function (t, e) {
              var n;
              return null != t && (n = a[e]) ? c(t, e, n.name) : void 0;
            });
          return n.getDimensionInfo = pt(Xf, null, a, s), n.cloneAllDimensionInfo = pt(Yf, null, a), n;
        });
        return z(_o(d.transform({
          upstream: e[0],
          upstreamList: e,
          config: y(t.config)
        })), function (t, e) {
          O(t) || f(""), t.data || f("");
          Kf(Kd(t.data)) || f("");
          var n = i[0],
            e = n && 0 === e && !t.dimensions ? ((e = n.startIndex) && (t.data = n.data.slice(0, e).concat(t.data)), {
              seriesLayoutBy: Yp,
              sourceHeader: e,
              dimensions: n.metaRawOption.dimensions
            }) : {
              seriesLayoutBy: Yp,
              sourceHeader: 0,
              dimensions: t.dimensions
            };
          return Zd(t.data, e, null);
        });
      }(n[i], e), i !== r - 1 && (e.length = Math.max(e.length, 1));
    }
    return e;
  }
  function Kf(t) {
    return t === Hp || t === Gp;
  }
  var $f,
    jh = "undefined",
    Qf = (typeof Uint32Array === "undefined" ? "undefined" : _typeof(Uint32Array)) == jh ? Array : Uint32Array,
    Jf = (typeof Uint16Array === "undefined" ? "undefined" : _typeof(Uint16Array)) == jh ? Array : Uint16Array,
    tg = (typeof Int32Array === "undefined" ? "undefined" : _typeof(Int32Array)) == jh ? Array : Int32Array,
    Kc = (typeof Float64Array === "undefined" ? "undefined" : _typeof(Float64Array)) == jh ? Array : Float64Array,
    eg = {
      float: Kc,
      int: tg,
      ordinal: Array,
      number: Array,
      time: Kc
    };
  function ng(t) {
    return 65535 < t ? Qf : Jf;
  }
  function ig() {
    return [1 / 0, -1 / 0];
  }
  function rg(t, e, n, i, r) {
    n = eg[n || "float"];
    if (r) {
      var o = t[e],
        a = o && o.length;
      if (a !== i) {
        for (var s = new n(i), l = 0; l < a; l++) {
          s[l] = o[l];
        }
        t[e] = s;
      }
    } else t[e] = new n(i);
  }
  l.prototype.initData = function (t, e, n) {
    this._provider = t, this._chunks = [], this._indices = null, this.getRawIndex = this._getRawIdxIdentity;
    var i = t.getSource(),
      r = this.defaultDimValueGetter = $f[i.sourceFormat];
    this._dimValueGetter = n || r, this._rawExtent = [], Jd(i), this._dimensions = z(e, function (t) {
      return {
        type: t.type,
        property: t.property
      };
    }), this._initDataFromProvider(0, t.count());
  }, l.prototype.getProvider = function () {
    return this._provider;
  }, l.prototype.getSource = function () {
    return this._provider.getSource();
  }, l.prototype.ensureCalculationDimension = function (t, e) {
    var n = this._calcDimNameToIdx,
      i = this._dimensions,
      r = n.get(t);
    if (null != r) {
      if (i[r].type === e) return r;
    } else r = i.length;
    return i[r] = {
      type: e
    }, n.set(t, r), this._chunks[r] = new eg[e || "float"](this._rawCount), this._rawExtent[r] = ig(), r;
  }, l.prototype.collectOrdinalMeta = function (t, e) {
    for (var n = this._chunks[t], i = this._dimensions[t], r = this._rawExtent, o = i.ordinalOffset || 0, a = n.length, s = (0 === o && (r[t] = ig()), r[t]), l = o; l < a; l++) {
      var u = n[l] = e.parseAndCollect(n[l]);
      isNaN(u) || (s[0] = Math.min(u, s[0]), s[1] = Math.max(u, s[1]));
    }
    i.ordinalMeta = e, i.ordinalOffset = a, i.type = "ordinal";
  }, l.prototype.getOrdinalMeta = function (t) {
    return this._dimensions[t].ordinalMeta;
  }, l.prototype.getDimensionProperty = function (t) {
    t = this._dimensions[t];
    return t && t.property;
  }, l.prototype.appendData = function (t) {
    var e = this._provider,
      n = this.count(),
      t = (e.appendData(t), e.count());
    return e.persistent || (t += n), n < t && this._initDataFromProvider(n, t, !0), [n, t];
  }, l.prototype.appendValues = function (t, e) {
    for (var n = this._chunks, i = this._dimensions, r = i.length, o = this._rawExtent, a = this.count(), s = a + Math.max(t.length, e || 0), l = 0; l < r; l++) {
      rg(n, l, (d = i[l]).type, s, !0);
    }
    for (var u = [], h = a; h < s; h++) {
      for (var c = h - a, p = 0; p < r; p++) {
        var d = i[p],
          f = $f.arrayRows.call(this, t[c] || u, d.property, c, p),
          g = (n[p][h] = f, o[p]);
        f < g[0] && (g[0] = f), f > g[1] && (g[1] = f);
      }
    }
    return {
      start: a,
      end: this._rawCount = this._count = s
    };
  }, l.prototype._initDataFromProvider = function (t, e, n) {
    for (var i = this._provider, r = this._chunks, o = this._dimensions, a = o.length, s = this._rawExtent, l = z(o, function (t) {
        return t.property;
      }), u = 0; u < a; u++) {
      var h = o[u];
      s[u] || (s[u] = ig()), rg(r, u, h.type, e, n);
    }
    if (i.fillStorage) i.fillStorage(t, e, r, s);else for (var c = [], p = t; p < e; p++) {
      for (var c = i.getItem(p, c), d = 0; d < a; d++) {
        var f = r[d],
          g = this._dimValueGetter(c, l[d], p, d),
          f = (f[p] = g, s[d]);
        g < f[0] && (f[0] = g), g > f[1] && (f[1] = g);
      }
    }
    !i.persistent && i.clean && i.clean(), this._rawCount = this._count = e, this._extent = [];
  }, l.prototype.count = function () {
    return this._count;
  }, l.prototype.get = function (t, e) {
    return 0 <= e && e < this._count && (t = this._chunks[t]) ? t[this.getRawIndex(e)] : NaN;
  }, l.prototype.getValues = function (t, e) {
    var n = [],
      i = [];
    if (null == e) {
      e = t, t = [];
      for (var r = 0; r < this._dimensions.length; r++) {
        i.push(r);
      }
    } else i = t;
    for (var r = 0, o = i.length; r < o; r++) {
      n.push(this.get(i[r], e));
    }
    return n;
  }, l.prototype.getByRawIndex = function (t, e) {
    return 0 <= e && e < this._rawCount && (t = this._chunks[t]) ? t[e] : NaN;
  }, l.prototype.getSum = function (t) {
    var e = 0;
    if (this._chunks[t]) for (var n = 0, i = this.count(); n < i; n++) {
      var r = this.get(t, n);
      isNaN(r) || (e += r);
    }
    return e;
  }, l.prototype.getMedian = function (t) {
    var e = [],
      t = (this.each([t], function (t) {
        isNaN(t) || e.push(t);
      }), e.sort(function (t, e) {
        return t - e;
      })),
      n = this.count();
    return 0 === n ? 0 : n % 2 == 1 ? t[(n - 1) / 2] : (t[n / 2] + t[n / 2 - 1]) / 2;
  }, l.prototype.indexOfRawIndex = function (t) {
    if (!(t >= this._rawCount || t < 0)) {
      if (!this._indices) return t;
      var e = this._indices,
        n = e[t];
      if (null != n && n < this._count && n === t) return t;
      for (var i = 0, r = this._count - 1; i <= r;) {
        var o = (i + r) / 2 | 0;
        if (e[o] < t) i = 1 + o;else {
          if (!(e[o] > t)) return o;
          r = o - 1;
        }
      }
    }
    return -1;
  }, l.prototype.indicesOfNearest = function (t, e, n) {
    var i = this._chunks[t],
      r = [];
    if (i) {
      null == n && (n = 1 / 0);
      for (var o = 1 / 0, a = -1, s = 0, l = 0, u = this.count(); l < u; l++) {
        var h = e - i[this.getRawIndex(l)],
          c = Math.abs(h);
        c <= n && ((c < o || c === o && 0 <= h && a < 0) && (o = c, a = h, s = 0), h === a) && (r[s++] = l);
      }
      r.length = s;
    }
    return r;
  }, l.prototype.getIndices = function () {
    var t = this._indices;
    if (t) {
      var e = t.constructor,
        n = this._count;
      if (e === Array) for (var i = new e(n), r = 0; r < n; r++) {
        i[r] = t[r];
      } else i = new e(t.buffer, 0, n);
    } else {
      i = new (e = ng(this._rawCount))(this.count());
      for (r = 0; r < i.length; r++) {
        i[r] = r;
      }
    }
    return i;
  }, l.prototype.filter = function (t, e) {
    if (!this._count) return this;
    for (var n = this.clone(), i = n.count(), r = new (ng(n._rawCount))(i), o = [], a = t.length, s = 0, l = t[0], u = n._chunks, h = 0; h < i; h++) {
      var c = void 0,
        p = n.getRawIndex(h);
      if (0 === a) c = e(h);else if (1 === a) c = e(u[l][p], h);else {
        for (var d = 0; d < a; d++) {
          o[d] = u[t[d]][p];
        }
        o[d] = h, c = e.apply(null, o);
      }
      c && (r[s++] = p);
    }
    return s < i && (n._indices = r), n._count = s, n._extent = [], n._updateGetRawIdx(), n;
  }, l.prototype.selectRange = function (t) {
    var e = this.clone(),
      n = e._count;
    if (!n) return this;
    var i = ct(t),
      r = i.length;
    if (!r) return this;
    var o = e.count(),
      a = new (ng(e._rawCount))(o),
      s = 0,
      l = i[0],
      u = t[l][0],
      h = t[l][1],
      c = e._chunks,
      l = !1;
    if (!e._indices) {
      var p = 0;
      if (1 === r) {
        for (var d = c[i[0]], f = 0; f < n; f++) {
          (u <= (v = d[f]) && v <= h || isNaN(v)) && (a[s++] = p), p++;
        }
        l = !0;
      } else if (2 === r) {
        for (var d = c[i[0]], g = c[i[1]], y = t[i[1]][0], m = t[i[1]][1], f = 0; f < n; f++) {
          var v = d[f],
            _ = g[f];
          (u <= v && v <= h || isNaN(v)) && (y <= _ && _ <= m || isNaN(_)) && (a[s++] = p), p++;
        }
        l = !0;
      }
    }
    if (!l) if (1 === r) for (f = 0; f < o; f++) {
      var x = e.getRawIndex(f);
      (u <= (v = c[i[0]][x]) && v <= h || isNaN(v)) && (a[s++] = x);
    } else for (f = 0; f < o; f++) {
      for (var w = !0, x = e.getRawIndex(f), b = 0; b < r; b++) {
        var S = i[b];
        ((v = c[S][x]) < t[S][0] || v > t[S][1]) && (w = !1);
      }
      w && (a[s++] = e.getRawIndex(f));
    }
    return s < o && (e._indices = a), e._count = s, e._extent = [], e._updateGetRawIdx(), e;
  }, l.prototype.map = function (t, e) {
    var n = this.clone(t);
    return this._updateDims(n, t, e), n;
  }, l.prototype.modify = function (t, e) {
    this._updateDims(this, t, e);
  }, l.prototype._updateDims = function (t, e, n) {
    for (var i = t._chunks, r = [], o = e.length, a = t.count(), s = [], l = t._rawExtent, u = 0; u < e.length; u++) {
      l[e[u]] = ig();
    }
    for (var h = 0; h < a; h++) {
      for (var c = t.getRawIndex(h), p = 0; p < o; p++) {
        s[p] = i[e[p]][c];
      }
      s[o] = h;
      var d = n && n.apply(null, s);
      if (null != d) {
        "object" != _typeof(d) && (r[0] = d, d = r);
        for (u = 0; u < d.length; u++) {
          var f = e[u],
            g = d[u],
            y = l[f],
            f = i[f];
          f && (f[c] = g), g < y[0] && (y[0] = g), g > y[1] && (y[1] = g);
        }
      }
    }
  }, l.prototype.lttbDownSample = function (t, e) {
    var n,
      i = this.clone([t], !0),
      r = i._chunks[t],
      o = this.count(),
      a = 0,
      s = Math.floor(1 / e),
      l = this.getRawIndex(0),
      u = new (ng(this._rawCount))(Math.min(2 * (Math.ceil(o / s) + 2), o));
    u[a++] = l;
    for (var h = 1; h < o - 1; h += s) {
      for (var c = Math.min(h + s, o - 1), p = Math.min(h + 2 * s, o), d = (p + c) / 2, f = 0, g = c; g < p; g++) {
        var y = r[M = this.getRawIndex(g)];
        isNaN(y) || (f += y);
      }
      f /= p - c;
      for (var c = h, m = Math.min(h + s, o), v = h - 1, _ = r[l], x = -1, w = c, b = -1, S = 0, g = c; g < m; g++) {
        var M,
          y = r[M = this.getRawIndex(g)];
        isNaN(y) ? (S++, b < 0 && (b = M)) : x < (n = Math.abs((v - d) * (y - _) - (v - g) * (f - _))) && (x = n, w = M);
      }
      0 < S && S < m - c && (u[a++] = Math.min(b, w), w = Math.max(b, w)), l = u[a++] = w;
    }
    return u[a++] = this.getRawIndex(o - 1), i._count = a, i._indices = u, i.getRawIndex = this._getRawIdx, i;
  }, l.prototype.minmaxDownSample = function (t, e) {
    for (var n = this.clone([t], !0), i = n._chunks, r = Math.floor(1 / e), o = i[t], a = this.count(), s = new (ng(this._rawCount))(2 * Math.ceil(a / r)), l = 0, u = 0; u < a; u += r) {
      var h = u,
        c = o[this.getRawIndex(h)],
        p = u,
        d = o[this.getRawIndex(p)],
        f = r;
      a < u + r && (f = a - u);
      for (var g = 0; g < f; g++) {
        var y = o[this.getRawIndex(u + g)];
        y < c && (c = y, h = u + g), d < y && (d = y, p = u + g);
      }
      var m = this.getRawIndex(h),
        v = this.getRawIndex(p);
      h < p ? (s[l++] = m, s[l++] = v) : (s[l++] = v, s[l++] = m);
    }
    return n._count = l, n._indices = s, n._updateGetRawIdx(), n;
  }, l.prototype.downSample = function (t, e, n, i) {
    for (var r = this.clone([t], !0), o = r._chunks, a = [], s = Math.floor(1 / e), l = o[t], u = this.count(), h = r._rawExtent[t] = ig(), c = new (ng(this._rawCount))(Math.ceil(u / s)), p = 0, d = 0; d < u; d += s) {
      u - d < s && (a.length = s = u - d);
      for (var f = 0; f < s; f++) {
        var g = this.getRawIndex(d + f);
        a[f] = l[g];
      }
      var y = n(a),
        m = this.getRawIndex(Math.min(d + i(a, y) || 0, u - 1));
      (l[m] = y) < h[0] && (h[0] = y), y > h[1] && (h[1] = y), c[p++] = m;
    }
    return r._count = p, r._indices = c, r._updateGetRawIdx(), r;
  }, l.prototype.each = function (t, e) {
    if (this._count) for (var n = t.length, i = this._chunks, r = 0, o = this.count(); r < o; r++) {
      var a = this.getRawIndex(r);
      switch (n) {
        case 0:
          e(r);
          break;
        case 1:
          e(i[t[0]][a], r);
          break;
        case 2:
          e(i[t[0]][a], i[t[1]][a], r);
          break;
        default:
          for (var s = 0, l = []; s < n; s++) {
            l[s] = i[t[s]][a];
          }
          l[s] = r, e.apply(null, l);
      }
    }
  }, l.prototype.getDataExtent = function (t) {
    var e = this._chunks[t],
      n = ig();
    if (!e) return n;
    var i = this.count();
    if (!this._indices) return this._rawExtent[t].slice();
    if (r = this._extent[t]) return r.slice();
    for (var r, o = (r = n)[0], a = r[1], s = 0; s < i; s++) {
      var l = e[this.getRawIndex(s)];
      l < o && (o = l), a < l && (a = l);
    }
    return this._extent[t] = r = [o, a];
  }, l.prototype.getRawDataItem = function (t) {
    var e = this.getRawIndex(t);
    if (this._provider.persistent) return this._provider.getItem(e);
    for (var n = [], i = this._chunks, r = 0; r < i.length; r++) {
      n.push(i[r][e]);
    }
    return n;
  }, l.prototype.clone = function (t, e) {
    var n,
      i,
      r = new l(),
      o = this._chunks,
      a = t && lt(t, function (t, e) {
        return t[e] = !0, t;
      }, {});
    if (a) for (var s = 0; s < o.length; s++) {
      r._chunks[s] = a[s] ? (n = o[s], i = void 0, (i = n.constructor) === Array ? n.slice() : new i(n)) : o[s];
    } else r._chunks = o;
    return this._copyCommonProps(r), e || (r._indices = this._cloneIndices()), r._updateGetRawIdx(), r;
  }, l.prototype._copyCommonProps = function (t) {
    t._count = this._count, t._rawCount = this._rawCount, t._provider = this._provider, t._dimensions = this._dimensions, t._extent = y(this._extent), t._rawExtent = y(this._rawExtent);
  }, l.prototype._cloneIndices = function () {
    if (this._indices) {
      var t = this._indices.constructor,
        e = void 0;
      if (t === Array) for (var n = this._indices.length, e = new t(n), i = 0; i < n; i++) {
        e[i] = this._indices[i];
      } else e = new t(this._indices);
      return e;
    }
    return null;
  }, l.prototype._getRawIdxIdentity = function (t) {
    return t;
  }, l.prototype._getRawIdx = function (t) {
    return t < this._count && 0 <= t ? this._indices[t] : -1;
  }, l.prototype._updateGetRawIdx = function () {
    this.getRawIndex = this._indices ? this._getRawIdx : this._getRawIdxIdentity;
  }, l.internalField = void ($f = {
    arrayRows: ag,
    objectRows: function objectRows(t, e, n, i) {
      return Lf(t[e], this._dimensions[i]);
    },
    keyedColumns: ag,
    original: function original(t, e, n, i) {
      t = t && (null == t.value ? t : t.value);
      return Lf(t instanceof Array ? t[i] : t, this._dimensions[i]);
    },
    typedArray: function typedArray(t, e, n, i) {
      return t[i];
    }
  });
  var og = l;
  function l() {
    this._chunks = [], this._rawExtent = [], this._extent = [], this._count = 0, this._rawCount = 0, this._calcDimNameToIdx = N();
  }
  function ag(t, e, n, i) {
    return Lf(t[i], this._dimensions[i]);
  }
  lg.prototype.dirty = function () {
    this._setLocalSource([], []), this._storeList = [], this._dirty = !0;
  }, lg.prototype._setLocalSource = function (t, e) {
    this._sourceList = t, this._upstreamSignList = e, this._versionSignBase++, 9e10 < this._versionSignBase && (this._versionSignBase = 0);
  }, lg.prototype._getVersionSign = function () {
    return this._sourceHost.uid + "_" + this._versionSignBase;
  }, lg.prototype.prepareSource = function () {
    this._isDirty() && (this._createSource(), this._dirty = !1);
  }, lg.prototype._createSource = function () {
    this._setLocalSource([], []);
    var t,
      e,
      n,
      i,
      r,
      o,
      a,
      s = this._sourceHost,
      l = this._getUpstreamSourceManagers(),
      u = !!l.length;
    hg(s) ? (i = s, r = t = o = void 0, e = u ? ((e = l[0]).prepareSource(), o = (r = e.getSource()).data, t = r.sourceFormat, [e._getVersionSign()]) : (t = yt(o = i.get("data", !0)) ? qp : Wp, []), i = this._getSourceMetaRawOption() || {}, r = r && r.metaRawOption || {}, a = R(i.seriesLayoutBy, r.seriesLayoutBy) || null, n = R(i.sourceHeader, r.sourceHeader), i = R(i.dimensions, r.dimensions), r = a !== r.seriesLayoutBy || !!n != !!r.sourceHeader || i ? [Zd(o, {
      seriesLayoutBy: a,
      sourceHeader: n,
      dimensions: i
    }, t)] : []) : (o = s, e = u ? (r = (a = this._applyTransform(l)).sourceList, a.upstreamSignList) : (r = [Zd(o.get("source", !0), this._getSourceMetaRawOption(), null)], [])), this._setLocalSource(r, e);
  }, lg.prototype._applyTransform = function (t) {
    var e,
      n = this._sourceHost,
      i = n.get("transform", !0),
      r = n.get("fromTransformResult", !0),
      o = (null != r && 1 !== t.length && cg(""), []),
      a = [];
    return E(t, function (t) {
      t.prepareSource();
      var e = t.getSource(r || 0);
      null == r || e || cg(""), o.push(e), a.push(t._getVersionSign());
    }), i ? e = jf(i, o, n.componentIndex) : null != r && (e = [new Xd({
      data: (t = o[0]).data,
      sourceFormat: t.sourceFormat,
      seriesLayoutBy: t.seriesLayoutBy,
      dimensionsDefine: y(t.dimensionsDefine),
      startIndex: t.startIndex,
      dimensionsDetectedCount: t.dimensionsDetectedCount
    })]), {
      sourceList: e,
      upstreamSignList: a
    };
  }, lg.prototype._isDirty = function () {
    if (this._dirty) return !0;
    for (var t = this._getUpstreamSourceManagers(), e = 0; e < t.length; e++) {
      var n = t[e];
      if (n._isDirty() || this._upstreamSignList[e] !== n._getVersionSign()) return !0;
    }
  }, lg.prototype.getSource = function (t) {
    var e = this._sourceList[t = t || 0];
    return e || (e = this._getUpstreamSourceManagers())[0] && e[0].getSource(t);
  }, lg.prototype.getSharedDataStore = function (t) {
    var e = t.makeStoreSchema();
    return this._innerGetDataStore(e.dimensions, t.source, e.hash);
  }, lg.prototype._innerGetDataStore = function (t, e, n) {
    var i,
      r = this._storeList,
      o = r[0],
      r = (o = o || (r[0] = {}))[n];
    return r || (i = this._getUpstreamSourceManagers()[0], hg(this._sourceHost) && i ? r = i._innerGetDataStore(t, e, n) : (r = new og()).initData(new rf(e, t.length), t), o[n] = r), r;
  }, lg.prototype._getUpstreamSourceManagers = function () {
    var t,
      e = this._sourceHost;
    return hg(e) ? (t = Jp(e)) ? [t.getSourceManager()] : [] : z((t = e).get("transform", !0) || t.get("fromTransformResult", !0) ? Eo(t.ecModel, "dataset", {
      index: t.get("fromDatasetIndex", !0),
      id: t.get("fromDatasetId", !0)
    }, No).models : [], function (t) {
      return t.getSourceManager();
    });
  }, lg.prototype._getSourceMetaRawOption = function () {
    var t,
      e,
      n,
      i = this._sourceHost;
    return hg(i) ? (t = i.get("seriesLayoutBy", !0), e = i.get("sourceHeader", !0), n = i.get("dimensions", !0)) : this._getUpstreamSourceManagers().length || (t = (i = i).get("seriesLayoutBy", !0), e = i.get("sourceHeader", !0), n = i.get("dimensions", !0)), {
      seriesLayoutBy: t,
      sourceHeader: e,
      dimensions: n
    };
  };
  var sg = lg;
  function lg(t) {
    this._sourceList = [], this._storeList = [], this._upstreamSignList = [], this._versionSignBase = 0, this._dirty = !0, this._sourceHost = t;
  }
  function ug(t) {
    t.option.transform && kt(t.option.transform);
  }
  function hg(t) {
    return "series" === t.mainType;
  }
  function cg(t) {
    throw new Error(t);
  }
  function pg(t, e) {
    return e.type = t, e;
  }
  function dg(t, e) {
    var n,
      e = t.getData().getItemVisual(e, "style")[t.visualDrawType];
    return n = n || "transparent", V(t = e) ? t : O(t) && t.colorStops && (t.colorStops[0] || {}).color || n;
  }
  function fg(t) {
    var e,
      n,
      i,
      r,
      o,
      a,
      s,
      l,
      u,
      h,
      c,
      p = t.series,
      d = t.dataIndex,
      t = t.multipleSeries,
      f = p.getData(),
      g = f.mapDimensionsAll("defaultedTooltip"),
      y = g.length,
      m = p.getRawValue(d),
      v = F(m),
      _ = dg(p, d);
    function x(t, e) {
      e = s.getDimensionInfo(e);
      e && !1 !== e.otherDims.tooltip && (l ? c.push(pg("nameValue", {
        markerType: "subItem",
        markerColor: a,
        name: e.displayName,
        value: t,
        valueType: e.type
      })) : (u.push(t), h.push(e.type)));
    }
    1 < y || v && !y ? (i = m, r = d, o = g, a = _, s = p.getData(), l = lt(i, function (t, e, n) {
      n = s.getDimensionInfo(n);
      return t || n && !1 !== n.tooltip && null != n.displayName;
    }, !1), u = [], h = [], c = [], o.length ? E(o, function (t) {
      x(mf(s, r, t), t);
    }) : E(i, x), i = (o = {
      inlineValues: u,
      inlineValueTypes: h,
      blocks: c
    }).inlineValueTypes, e = o.blocks, n = (o = o.inlineValues)[0]) : y ? (y = f.getDimensionInfo(g[0]), n = o = mf(f, d, g[0]), i = y.type) : n = o = v ? m[0] : m;
    g = Co(p), y = g && p.name || "", v = f.getName(d), m = t ? y : v;
    return pg("section", {
      header: y,
      noHeader: t || !g,
      sortParam: n,
      blocks: [pg("nameValue", {
        markerType: "item",
        markerColor: _,
        name: m,
        noName: !Ct(m),
        value: o,
        valueType: i,
        dataIndex: d
      })].concat(e || [])
    });
  }
  var gg = Po();
  function yg(t, e) {
    return t.getName(e) || t.getId(e);
  }
  u(h, mg = g), h.prototype.init = function (t, e, n) {
    this.seriesIndex = this.componentIndex, this.dataTask = xf({
      count: xg,
      reset: wg
    }), this.dataTask.context = {
      model: this
    }, this.mergeDefaultAndTheme(t, n);
    (gg(this).sourceManager = new sg(this)).prepareSource();
    t = this.getInitialData(t, n);
    Sg(t, this), this.dataTask.context.data = t, gg(this).dataBeforeProcessed = t, _g(this), this._initSelectedMapFromData(t);
  }, h.prototype.mergeDefaultAndTheme = function (t, e) {
    var n = kp(this),
      i = n ? Pp(t) : {},
      r = this.subType;
    g.hasClass(r), d(t, e.getTheme().get(this.subType)), d(t, this.getDefaultOption()), xo(t, "label", ["show"]), this.fillDataTextStyle(t.data), n && Ap(t, i, n);
  }, h.prototype.mergeOption = function (t, e) {
    t = d(this.option, t, !0), this.fillDataTextStyle(t.data);
    var n = kp(this),
      n = (n && Ap(this.option, t, n), gg(this).sourceManager),
      n = (n.dirty(), n.prepareSource(), this.getInitialData(t, e));
    Sg(n, this), this.dataTask.dirty(), this.dataTask.context.data = n, gg(this).dataBeforeProcessed = n, _g(this), this._initSelectedMapFromData(n);
  }, h.prototype.fillDataTextStyle = function (t) {
    if (t && !yt(t)) for (var e = ["show"], n = 0; n < t.length; n++) {
      t[n] && t[n].label && xo(t[n], "label", e);
    }
  }, h.prototype.getInitialData = function (t, e) {}, h.prototype.appendData = function (t) {
    this.getRawData().appendData(t.data);
  }, h.prototype.getData = function (t) {
    var e = Tg(this);
    return e ? (e = e.context.data, null != t && e.getLinkedData ? e.getLinkedData(t) : e) : gg(this).data;
  }, h.prototype.getAllData = function () {
    var t = this.getData();
    return t && t.getLinkedDataAll ? t.getLinkedDataAll() : [{
      data: t
    }];
  }, h.prototype.setData = function (t) {
    var e,
      n = Tg(this);
    n && ((e = n.context).outputData = t, n !== this.dataTask) && (e.data = t), gg(this).data = t;
  }, h.prototype.getEncode = function () {
    var t = this.get("encode", !0);
    if (t) return N(t);
  }, h.prototype.getSourceManager = function () {
    return gg(this).sourceManager;
  }, h.prototype.getSource = function () {
    return this.getSourceManager().getSource();
  }, h.prototype.getRawData = function () {
    return gg(this).dataBeforeProcessed;
  }, h.prototype.getColorBy = function () {
    return this.get("colorBy") || "series";
  }, h.prototype.isColorBySeries = function () {
    return "series" === this.getColorBy();
  }, h.prototype.getBaseAxis = function () {
    var t = this.coordinateSystem;
    return t && t.getBaseAxis && t.getBaseAxis();
  }, h.prototype.formatTooltip = function (t, e, n) {
    return fg({
      series: this,
      dataIndex: t,
      multipleSeries: e
    });
  }, h.prototype.isAnimationEnabled = function () {
    var t = this.ecModel;
    return !!(!b.node || t && t.ssr) && !!(t = (t = this.getShallow("animation")) && this.getData().count() > this.getShallow("animationThreshold") ? !1 : t);
  }, h.prototype.restoreData = function () {
    this.dataTask.dirty();
  }, h.prototype.getColorFromPalette = function (t, e, n) {
    var i = this.ecModel;
    return sd.prototype.getColorFromPalette.call(this, t, e, n) || i.getColorFromPalette(t, e, n);
  }, h.prototype.coordDimToDataDim = function (t) {
    return this.getRawData().mapDimensionsAll(t);
  }, h.prototype.getProgressive = function () {
    return this.get("progressive");
  }, h.prototype.getProgressiveThreshold = function () {
    return this.get("progressiveThreshold");
  }, h.prototype.select = function (t, e) {
    this._innerSelect(this.getData(e), t);
  }, h.prototype.unselect = function (t, e) {
    var n = this.option.selectedMap;
    if (n) {
      var i = this.option.selectedMode,
        r = this.getData(e);
      if ("series" === i || "all" === n) this.option.selectedMap = {}, this._selectedDataIndicesMap = {};else for (var o = 0; o < t.length; o++) {
        var a = yg(r, t[o]);
        n[a] = !1, this._selectedDataIndicesMap[a] = -1;
      }
    }
  }, h.prototype.toggleSelect = function (t, e) {
    for (var n = [], i = 0; i < t.length; i++) {
      n[0] = t[i], this.isSelected(t[i], e) ? this.unselect(n, e) : this.select(n, e);
    }
  }, h.prototype.getSelectedDataIndices = function () {
    if ("all" === this.option.selectedMap) return [].slice.call(this.getData().getIndices());
    for (var t = this._selectedDataIndicesMap, e = ct(t), n = [], i = 0; i < e.length; i++) {
      var r = t[e[i]];
      0 <= r && n.push(r);
    }
    return n;
  }, h.prototype.isSelected = function (t, e) {
    var n = this.option.selectedMap;
    return !!n && (e = this.getData(e), "all" === n || n[yg(e, t)]) && !e.getItemModel(t).get(["select", "disabled"]);
  }, h.prototype.isUniversalTransitionEnabled = function () {
    var t;
    return !!this.__universalTransitionEnabled || !!(t = this.option.universalTransition) && (!0 === t || t && t.enabled);
  }, h.prototype._innerSelect = function (t, e) {
    var n = this.option,
      i = n.selectedMode,
      r = e.length;
    if (i && r) if ("series" === i) n.selectedMap = "all";else if ("multiple" === i) {
      O(n.selectedMap) || (n.selectedMap = {});
      for (var o = n.selectedMap, a = 0; a < r; a++) {
        var s,
          l = e[a];
        o[s = yg(t, l)] = !0, this._selectedDataIndicesMap[s] = t.getRawIndex(l);
      }
    } else "single" !== i && !0 !== i || (s = yg(t, i = e[r - 1]), n.selectedMap = ((n = {})[s] = !0, n), this._selectedDataIndicesMap = ((n = {})[s] = t.getRawIndex(i), n));
  }, h.prototype._initSelectedMapFromData = function (n) {
    var i;
    this.option.selectedMap || (i = [], n.hasItemOption && n.each(function (t) {
      var e = n.getRawDataItem(t);
      e && e.selected && i.push(t);
    }), 0 < i.length && this._innerSelect(n, i));
  }, h.registerClass = function (t) {
    return g.registerClass(t);
  }, h.protoInitialize = ((Cc = h.prototype).type = "series.__base__", Cc.seriesIndex = 0, Cc.ignoreStyleOnData = !1, Cc.hasSymbolVisual = !1, Cc.defaultSymbol = "circle", Cc.visualStyleAccessPath = "itemStyle", void (Cc.visualDrawType = "fill"));
  var mg,
    vg = h;
  function h() {
    var t = null !== mg && mg.apply(this, arguments) || this;
    return t._selectedDataIndicesMap = {}, t;
  }
  function _g(t) {
    var e,
      n,
      i = t.name;
    Co(t) || (t.name = (t = (e = (t = t).getRawData()).mapDimensionsAll("seriesName"), n = [], E(t, function (t) {
      t = e.getDimensionInfo(t);
      t.displayName && n.push(t.displayName);
    }), n.join(" ") || i));
  }
  function xg(t) {
    return t.model.getRawData().count();
  }
  function wg(t) {
    t = t.model;
    return t.setData(t.getRawData().cloneShallow()), bg;
  }
  function bg(t, e) {
    e.outputData && t.end > e.outputData.count() && e.model.getRawData().cloneShallow(e.outputData);
  }
  function Sg(e, n) {
    E(Et(e.CHANGABLE_METHODS, e.DOWNSAMPLE_METHODS), function (t) {
      e.wrapMethod(t, dt(Mg, n));
    });
  }
  function Mg(t, e) {
    t = Tg(t);
    return t && t.setOutputEnd((e || this).count()), e;
  }
  function Tg(t) {
    var e,
      n = (t.ecModel || {}).scheduler,
      n = n && n.getPipeline(t.uid);
    if (n) return (n = n.currentTask) && (e = n.agentStubMap) ? e.get(t.uid) : n;
  }
  at(vg, Pc), at(vg, sd), Go(vg, g);
  Cg.prototype.init = function (t, e) {}, Cg.prototype.render = function (t, e, n, i) {}, Cg.prototype.dispose = function (t, e) {}, Cg.prototype.updateView = function (t, e, n, i) {}, Cg.prototype.updateLayout = function (t, e, n, i) {}, Cg.prototype.updateVisual = function (t, e, n, i) {}, Cg.prototype.toggleBlurSeries = function (t, e, n) {}, Cg.prototype.eachRendered = function (t) {
    var e = this.group;
    e && e.traverse(t);
  };
  var Ig = Cg;
  function Cg() {
    this.group = new Hr(), this.uid = Bc("viewComponent");
  }
  Ho(Ig), Yo(Ig);
  var Dg,
    kg = Po(),
    Ag = (Dg = Po(), function (t) {
      var e = Dg(t),
        t = t.pipelineContext,
        n = !!e.large,
        i = !!e.progressiveRender,
        r = e.large = !(!t || !t.large),
        e = e.progressiveRender = !(!t || !t.progressiveRender);
      return !(n == r && i == e) && "reset";
    }),
    Pg = (Lg.prototype.init = function (t, e) {}, Lg.prototype.render = function (t, e, n, i) {}, Lg.prototype.highlight = function (t, e, n, i) {
      t = t.getData(i && i.dataType);
      t && Rg(t, i, "emphasis");
    }, Lg.prototype.downplay = function (t, e, n, i) {
      t = t.getData(i && i.dataType);
      t && Rg(t, i, "normal");
    }, Lg.prototype.remove = function (t, e) {
      this.group.removeAll();
    }, Lg.prototype.dispose = function (t, e) {}, Lg.prototype.updateView = function (t, e, n, i) {
      this.render(t, e, n, i);
    }, Lg.prototype.updateLayout = function (t, e, n, i) {
      this.render(t, e, n, i);
    }, Lg.prototype.updateVisual = function (t, e, n, i) {
      this.render(t, e, n, i);
    }, Lg.prototype.eachRendered = function (t) {
      ac(this.group, t);
    }, Lg.markUpdateMethod = function (t, e) {
      kg(t).updateMethod = e;
    }, Lg.protoInitialize = void (Lg.prototype.type = "chart"), Lg);
  function Lg() {
    this.group = new Hr(), this.uid = Bc("viewChart"), this.renderTask = xf({
      plan: Ng,
      reset: Eg
    }), this.renderTask.context = {
      view: this
    };
  }
  function Og(t, e, n) {
    t && Vl(t) && ("emphasis" === e ? Sl : Ml)(t, n);
  }
  function Rg(e, t, n) {
    var i,
      r = Ao(e, t),
      o = t && null != t.highlightKey ? (t = t.highlightKey, i = null == (i = js[t]) && Zs <= 32 ? js[t] = Zs++ : i) : null;
    null != r ? E(_o(r), function (t) {
      Og(e.getItemGraphicEl(t), n, o);
    }) : e.eachItemGraphicEl(function (t) {
      Og(t, n, o);
    });
  }
  function Ng(t) {
    return Ag(t.model);
  }
  function Eg(t) {
    var e = t.model,
      n = t.ecModel,
      i = t.api,
      r = t.payload,
      o = e.pipelineContext.progressiveRender,
      t = t.view,
      a = r && kg(r).updateMethod,
      o = o ? "incrementalPrepareRender" : a && t[a] ? a : "render";
    return "render" !== o && t[o](e, n, i, r), Bg[o];
  }
  Ho(Pg), Yo(Pg);
  var Bg = {
      incrementalPrepareRender: {
        progress: function progress(t, e) {
          e.view.incrementalRender(t, e.model, e.ecModel, e.api, e.payload);
        }
      },
      render: {
        forceFirstProgress: !0,
        progress: function progress(t, e) {
          e.view.render(e.model, e.ecModel, e.api, e.payload);
        }
      }
    },
    zg = "\0__throttleOriginMethod",
    Fg = "\0__throttleRate",
    Vg = "\0__throttleType";
  function Wg(t, r, o) {
    var a,
      s,
      l,
      u,
      h,
      c = 0,
      p = 0,
      d = null;
    function f() {
      p = new Date().getTime(), d = null, t.apply(l, u || []);
    }
    r = r || 0;
    function e() {
      for (var t = [], e = 0; e < arguments.length; e++) {
        t[e] = arguments[e];
      }
      a = new Date().getTime(), l = this, u = t;
      var n = h || r,
        i = h || o;
      h = null, s = a - (i ? c : p) - n, clearTimeout(d), i ? d = setTimeout(f, n) : 0 <= s ? f() : d = setTimeout(f, -s), c = a;
    }
    return e.clear = function () {
      d && (clearTimeout(d), d = null);
    }, e.debounceNextCall = function (t) {
      h = t;
    }, e;
  }
  var Hg = Po(),
    Gg = {
      itemStyle: Zo(kc, !0),
      lineStyle: Zo(Tc, !0)
    },
    Ug = {
      lineStyle: "stroke",
      itemStyle: "fill"
    };
  function qg(t, e) {
    t = t.visualStyleMapper || Gg[e];
    return t || (console.warn("Unknown style type '" + e + "'."), Gg.itemStyle);
  }
  function Xg(t, e) {
    t = t.visualDrawType || Ug[e];
    return t || (console.warn("Unknown style type '" + e + "'."), "fill");
  }
  var Ko = {
      createOnAllSeries: !0,
      performRawSeries: !0,
      reset: function reset(r, t) {
        var e = r.getData(),
          n = r.visualStyleAccessPath || "itemStyle",
          i = r.getModel(n),
          o = qg(r, n)(i),
          i = i.getShallow("decal"),
          a = (i && (e.setVisual("decal", i), i.dirty = !0), Xg(r, n)),
          i = o[a],
          s = D(i) ? i : null,
          n = "auto" === o.fill || "auto" === o.stroke;
        if (o[a] && !s && !n || (i = r.getColorFromPalette(r.name, null, t.getSeriesCount()), o[a] || (o[a] = i, e.setVisual("colorFromPalette", !0)), o.fill = "auto" === o.fill || D(o.fill) ? i : o.fill, o.stroke = "auto" === o.stroke || D(o.stroke) ? i : o.stroke), e.setVisual("style", o), e.setVisual("drawType", a), !t.isSeriesFiltered(r) && s) return e.setVisual("colorFromPalette", !1), {
          dataEach: function dataEach(t, e) {
            var n = r.getDataParams(e),
              i = L({}, o);
            i[a] = s(n), t.setItemVisual(e, "style", i);
          }
        };
      }
    },
    Yg = new Rc(),
    jh = {
      createOnAllSeries: !0,
      performRawSeries: !0,
      reset: function reset(t, e) {
        var i, r, o;
        if (!t.ignoreStyleOnData && !e.isSeriesFiltered(t)) return e = t.getData(), i = t.visualStyleAccessPath || "itemStyle", r = qg(t, i), o = e.getVisual("drawType"), {
          dataEach: e.hasItemOption ? function (t, e) {
            var n = t.getRawDataItem(e);
            n && n[i] && (Yg.option = n[i], n = r(Yg), L(t.ensureUniqueItemVisual(e, "style"), n), Yg.option.decal && (t.setItemVisual(e, "decal", Yg.option.decal), Yg.option.decal.dirty = !0), o in n) && t.setItemVisual(e, "colorFromPalette", !1);
          } : null
        };
      }
    },
    Kc = {
      performRawSeries: !0,
      overallReset: function overallReset(e) {
        var i = N();
        e.eachSeries(function (t) {
          var e,
            n = t.getColorBy();
          t.isColorBySeries() || (n = t.type + "-" + n, (e = i.get(n)) || i.set(n, e = {}), Hg(t).scope = e);
        }), e.eachSeries(function (i) {
          var r, o, a, s, t, l;
          i.isColorBySeries() || e.isSeriesFiltered(i) || (r = i.getRawData(), o = {}, a = i.getData(), s = Hg(i).scope, t = i.visualStyleAccessPath || "itemStyle", l = Xg(i, t), a.each(function (t) {
            var e = a.getRawIndex(t);
            o[e] = t;
          }), r.each(function (t) {
            var e,
              n = o[t];
            a.getItemVisual(n, "colorFromPalette") && (n = a.ensureUniqueItemVisual(n, "style"), t = r.getName(t) || t + "", e = r.count(), n[l] = i.getColorFromPalette(t, s, e));
          }));
        });
      }
    },
    Zg = Math.PI;
  Kg.prototype.restoreData = function (t, e) {
    t.restoreData(e), this._stageTaskMap.each(function (t) {
      t = t.overallTask;
      t && t.dirty();
    });
  }, Kg.prototype.getPerformArgs = function (t, e) {
    var n, i;
    if (t.__pipeline) return i = (n = this._pipelineMap.get(t.__pipeline.id)).context, {
      step: e = !e && n.progressiveEnabled && (!i || i.progressiveRender) && t.__idxInPipeline > n.blockIndex ? n.step : null,
      modBy: null != (t = i && i.modDataCount) ? Math.ceil(t / e) : null,
      modDataCount: t
    };
  }, Kg.prototype.getPipeline = function (t) {
    return this._pipelineMap.get(t);
  }, Kg.prototype.updateStreamModes = function (t, e) {
    var n = this._pipelineMap.get(t.uid),
      i = t.getData().count(),
      e = n.progressiveEnabled && e.incrementalPrepareRender && i >= n.threshold,
      r = t.get("large") && i >= t.get("largeThreshold"),
      i = "mod" === t.get("progressiveChunkMode") ? i : null;
    t.pipelineContext = n.context = {
      progressiveRender: e,
      modDataCount: i,
      large: r
    };
  }, Kg.prototype.restorePipelines = function (t) {
    var i = this,
      r = i._pipelineMap = N();
    t.eachSeries(function (t) {
      var e = t.getProgressive(),
        n = t.uid;
      r.set(n, {
        id: n,
        head: null,
        tail: null,
        threshold: t.getProgressiveThreshold(),
        progressiveEnabled: e && !(t.preventIncremental && t.preventIncremental()),
        blockIndex: -1,
        step: Math.round(e || 700),
        count: 0
      }), i._pipe(t, t.dataTask);
    });
  }, Kg.prototype.prepareStageTasks = function () {
    var n = this._stageTaskMap,
      i = this.api.getModel(),
      r = this.api;
    E(this._allHandlers, function (t) {
      var e = n.get(t.uid) || n.set(t.uid, {});
      It(!(t.reset && t.overallReset), ""), t.reset && this._createSeriesStageTask(t, e, i, r), t.overallReset && this._createOverallStageTask(t, e, i, r);
    }, this);
  }, Kg.prototype.prepareView = function (t, e, n, i) {
    var r = t.renderTask,
      o = r.context;
    o.model = e, o.ecModel = n, o.api = i, r.__block = !t.incrementalPrepareRender, this._pipe(e, r);
  }, Kg.prototype.performDataProcessorTasks = function (t, e) {
    this._performStageTasks(this._dataProcessorHandlers, t, e, {
      block: !0
    });
  }, Kg.prototype.performVisualTasks = function (t, e, n) {
    this._performStageTasks(this._visualHandlers, t, e, n);
  }, Kg.prototype._performStageTasks = function (t, s, l, u) {
    u = u || {};
    var h = !1,
      c = this;
    function p(t, e) {
      return t.setDirty && (!t.dirtyMap || t.dirtyMap.get(e.__pipeline.id));
    }
    E(t, function (i, t) {
      var e, n, r, o, a;
      u.visualType && u.visualType !== i.visualType || (e = (n = c._stageTaskMap.get(i.uid)).seriesTaskMap, (n = n.overallTask) ? ((o = n.agentStubMap).each(function (t) {
        p(u, t) && (t.dirty(), r = !0);
      }), r && n.dirty(), c.updatePayload(n, l), a = c.getPerformArgs(n, u.block), o.each(function (t) {
        t.perform(a);
      }), n.perform(a) && (h = !0)) : e && e.each(function (t, e) {
        p(u, t) && t.dirty();
        var n = c.getPerformArgs(t, u.block);
        n.skip = !i.performRawSeries && s.isSeriesFiltered(t.context.model), c.updatePayload(t, l), t.perform(n) && (h = !0);
      }));
    }), this.unfinished = h || this.unfinished;
  }, Kg.prototype.performSeriesTasks = function (t) {
    var e;
    t.eachSeries(function (t) {
      e = t.dataTask.perform() || e;
    }), this.unfinished = e || this.unfinished;
  }, Kg.prototype.plan = function () {
    this._pipelineMap.each(function (t) {
      var e = t.tail;
      do {
        if (e.__block) {
          t.blockIndex = e.__idxInPipeline;
          break;
        }
      } while (e = e.getUpstream());
    });
  }, Kg.prototype.updatePayload = function (t, e) {
    "remain" !== e && (t.context.payload = e);
  }, Kg.prototype._createSeriesStageTask = function (n, t, i, r) {
    var o = this,
      a = t.seriesTaskMap,
      s = t.seriesTaskMap = N(),
      t = n.seriesType,
      e = n.getTargetSeries;
    function l(t) {
      var e = t.uid,
        e = s.set(e, a && a.get(e) || xf({
          plan: ey,
          reset: ny,
          count: oy
        }));
      e.context = {
        model: t,
        ecModel: i,
        api: r,
        useClearVisual: n.isVisual && !n.isLayout,
        plan: n.plan,
        reset: n.reset,
        scheduler: o
      }, o._pipe(t, e);
    }
    n.createOnAllSeries ? i.eachRawSeries(l) : t ? i.eachRawSeriesByType(t, l) : e && e(i, r).each(l);
  }, Kg.prototype._createOverallStageTask = function (t, e, n, i) {
    var r = this,
      o = e.overallTask = e.overallTask || xf({
        reset: $g
      }),
      a = (o.context = {
        ecModel: n,
        api: i,
        overallReset: t.overallReset,
        scheduler: r
      }, o.agentStubMap),
      s = o.agentStubMap = N(),
      e = t.seriesType,
      l = t.getTargetSeries,
      u = !0,
      h = !1;
    function c(t) {
      var e = t.uid,
        e = s.set(e, a && a.get(e) || (h = !0, xf({
          reset: Qg,
          onDirty: ty
        })));
      e.context = {
        model: t,
        overallProgress: u
      }, e.agent = o, e.__block = u, r._pipe(t, e);
    }
    It(!t.createOnAllSeries, ""), e ? n.eachRawSeriesByType(e, c) : l ? l(n, i).each(c) : (u = !1, E(n.getSeries(), c)), h && o.dirty();
  }, Kg.prototype._pipe = function (t, e) {
    t = t.uid, t = this._pipelineMap.get(t);
    t.head || (t.head = e), t.tail && t.tail.pipe(e), (t.tail = e).__idxInPipeline = t.count++, e.__pipeline = t;
  }, Kg.wrapStageHandler = function (t, e) {
    return (t = D(t) ? {
      overallReset: t,
      seriesType: function (t) {
        ay = null;
        try {
          t(sy, ly);
        } catch (t) {}
        return ay;
      }(t)
    } : t).uid = Bc("stageHandler"), e && (t.visualType = e), t;
  };
  var jg = Kg;
  function Kg(t, e, n, i) {
    this._stageTaskMap = N(), this.ecInstance = t, this.api = e, n = this._dataProcessorHandlers = n.slice(), i = this._visualHandlers = i.slice(), this._allHandlers = n.concat(i);
  }
  function $g(t) {
    t.overallReset(t.ecModel, t.api, t.payload);
  }
  function Qg(t) {
    return t.overallProgress && Jg;
  }
  function Jg() {
    this.agent.dirty(), this.getDownstream().dirty();
  }
  function ty() {
    this.agent && this.agent.dirty();
  }
  function ey(t) {
    return t.plan ? t.plan(t.model, t.ecModel, t.api, t.payload) : null;
  }
  function ny(t) {
    t.useClearVisual && t.data.clearAllVisual();
    t = t.resetDefines = _o(t.reset(t.model, t.ecModel, t.api, t.payload));
    return 1 < t.length ? z(t, function (t, e) {
      return ry(e);
    }) : iy;
  }
  var iy = ry(0);
  function ry(o) {
    return function (t, e) {
      var n = e.data,
        i = e.resetDefines[o];
      if (i && i.dataEach) for (var r = t.start; r < t.end; r++) {
        i.dataEach(n, r);
      } else i && i.progress && i.progress(t, n);
    };
  }
  function oy(t) {
    return t.data.count();
  }
  var ay,
    sy = {},
    ly = {};
  function uy(t, e) {
    for (var n in e.prototype) {
      t[n] = Vt;
    }
  }
  uy(sy, pd), uy(ly, yd), sy.eachSeriesByType = sy.eachRawSeriesByType = function (t) {
    ay = t;
  }, sy.eachComponent = function (t) {
    "series" === t.mainType && t.subType && (ay = t.subType);
  };
  function hy() {
    return {
      axisLine: {
        lineStyle: {
          color: cy
        }
      },
      splitLine: {
        lineStyle: {
          color: "#484753"
        }
      },
      splitArea: {
        areaStyle: {
          color: ["rgba(255,255,255,0.02)", "rgba(255,255,255,0.05)"]
        }
      },
      minorSplitLine: {
        lineStyle: {
          color: "#20203B"
        }
      }
    };
  }
  var Cc = ["#37A2DA", "#32C5E9", "#67E0E3", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#E062AE", "#E690D1", "#e7bcf3", "#9d96f5", "#8378EA", "#96BFFF"],
    Pc = {
      color: Cc,
      colorLayer: [["#37A2DA", "#ffd85c", "#fd7b5f"], ["#37A2DA", "#67E0E3", "#FFDB5C", "#ff9f7f", "#E062AE", "#9d96f5"], ["#37A2DA", "#32C5E9", "#9FE6B8", "#FFDB5C", "#ff9f7f", "#fb7293", "#e7bcf3", "#8378EA", "#96BFFF"], Cc]
    },
    cy = "#B9B8CE",
    kc = "#100C2A",
    Tc = ["#4992ff", "#7cffb2", "#fddd60", "#ff6e76", "#58d9f9", "#05c091", "#ff8a45", "#8d48e3", "#dd79ff"],
    Cc = {
      darkMode: !0,
      color: Tc,
      backgroundColor: kc,
      axisPointer: {
        lineStyle: {
          color: "#817f91"
        },
        crossStyle: {
          color: "#817f91"
        },
        label: {
          color: "#fff"
        }
      },
      legend: {
        textStyle: {
          color: cy
        },
        pageTextStyle: {
          color: cy
        }
      },
      textStyle: {
        color: cy
      },
      title: {
        textStyle: {
          color: "#EEF1FA"
        },
        subtextStyle: {
          color: "#B9B8CE"
        }
      },
      toolbox: {
        iconStyle: {
          borderColor: cy
        }
      },
      dataZoom: {
        borderColor: "#71708A",
        textStyle: {
          color: cy
        },
        brushStyle: {
          color: "rgba(135,163,206,0.3)"
        },
        handleStyle: {
          color: "#353450",
          borderColor: "#C5CBE3"
        },
        moveHandleStyle: {
          color: "#B0B6C3",
          opacity: .3
        },
        fillerColor: "rgba(135,163,206,0.2)",
        emphasis: {
          handleStyle: {
            borderColor: "#91B7F2",
            color: "#4D587D"
          },
          moveHandleStyle: {
            color: "#636D9A",
            opacity: .7
          }
        },
        dataBackground: {
          lineStyle: {
            color: "#71708A",
            width: 1
          },
          areaStyle: {
            color: "#71708A"
          }
        },
        selectedDataBackground: {
          lineStyle: {
            color: "#87A3CE"
          },
          areaStyle: {
            color: "#87A3CE"
          }
        }
      },
      visualMap: {
        textStyle: {
          color: cy
        }
      },
      timeline: {
        lineStyle: {
          color: cy
        },
        label: {
          color: cy
        },
        controlStyle: {
          color: cy,
          borderColor: cy
        }
      },
      calendar: {
        itemStyle: {
          color: kc
        },
        dayLabel: {
          color: cy
        },
        monthLabel: {
          color: cy
        },
        yearLabel: {
          color: cy
        }
      },
      timeAxis: hy(),
      logAxis: hy(),
      valueAxis: hy(),
      categoryAxis: hy(),
      line: {
        symbol: "circle"
      },
      graph: {
        color: Tc
      },
      gauge: {
        title: {
          color: cy
        },
        axisLine: {
          lineStyle: {
            color: [[1, "rgba(207,212,219,0.2)"]]
          }
        },
        axisLabel: {
          color: cy
        },
        detail: {
          color: "#EEF1FA"
        }
      },
      candlestick: {
        itemStyle: {
          color: "#f64e56",
          color0: "#54ea92",
          borderColor: "#f64e56",
          borderColor0: "#54ea92"
        }
      }
    },
    py = (Cc.categoryAxis.splitLine.show = !1, dy.prototype.normalizeQuery = function (t) {
      var e,
        a,
        s,
        l = {},
        u = {},
        h = {};
      return V(t) ? (e = Wo(t), l.mainType = e.main || null, l.subType = e.sub || null) : (a = ["Index", "Name", "Id"], s = {
        name: 1,
        dataIndex: 1,
        dataType: 1
      }, E(t, function (t, e) {
        for (var n = !1, i = 0; i < a.length; i++) {
          var r = a[i],
            o = e.lastIndexOf(r);
          0 < o && o === e.length - r.length && "data" !== (o = e.slice(0, o)) && (l.mainType = o, l[r.toLowerCase()] = t, n = !0);
        }
        s.hasOwnProperty(e) && (u[e] = t, n = !0), n || (h[e] = t);
      })), {
        cptQuery: l,
        dataQuery: u,
        otherQuery: h
      };
    }, dy.prototype.filter = function (t, e) {
      var n,
        i,
        r,
        o,
        a,
        s = this.eventInfo;
      return !s || (n = s.targetEl, i = s.packedEvent, r = s.model, s = s.view, !r) || !s || (o = e.cptQuery, a = e.dataQuery, l(o, r, "mainType") && l(o, r, "subType") && l(o, r, "index", "componentIndex") && l(o, r, "name") && l(o, r, "id") && l(a, i, "name") && l(a, i, "dataIndex") && l(a, i, "dataType") && (!s.filterForExposedEvent || s.filterForExposedEvent(t, e.otherQuery, n, i)));
      function l(t, e, n, i) {
        return null == t[n] || e[i || n] === t[n];
      }
    }, dy.prototype.afterTrigger = function () {
      this.eventInfo = null;
    }, dy);
  function dy() {}
  var fy = ["symbol", "symbolSize", "symbolRotate", "symbolOffset"],
    gy = fy.concat(["symbolKeepAspect"]),
    kc = {
      createOnAllSeries: !0,
      performRawSeries: !0,
      reset: function reset(a, t) {
        var e = a.getData();
        if (a.legendIcon && e.setVisual("legendIcon", a.legendIcon), a.hasSymbolVisual) {
          for (var s, n = {}, l = {}, i = !1, r = 0; r < fy.length; r++) {
            var o = fy[r],
              u = a.get(o);
            D(u) ? (i = !0, l[o] = u) : n[o] = u;
          }
          if (n.symbol = n.symbol || a.defaultSymbol, e.setVisual(L({
            legendIcon: a.legendIcon || n.symbol,
            symbolKeepAspect: a.get("symbolKeepAspect")
          }, n)), !t.isSeriesFiltered(a)) return s = ct(l), {
            dataEach: i ? function (t, e) {
              for (var n = a.getRawValue(e), i = a.getDataParams(e), r = 0; r < s.length; r++) {
                var o = s[r];
                t.setItemVisual(e, o, l[o](n, i));
              }
            } : null
          };
        }
      }
    },
    Tc = {
      createOnAllSeries: !0,
      performRawSeries: !0,
      reset: function reset(t, e) {
        if (t.hasSymbolVisual && !e.isSeriesFiltered(t)) return {
          dataEach: t.getData().hasItemOption ? function (t, e) {
            for (var n = t.getItemModel(e), i = 0; i < gy.length; i++) {
              var r = gy[i],
                o = n.getShallow(r, !0);
              null != o && t.setItemVisual(e, r, o);
            }
          } : null
        };
      }
    };
  function yy(o, t) {
    E([[o + "ToggleSelect", "toggleSelect"], [o + "Select", "select"], [o + "UnSelect", "unselect"]], function (r) {
      t(r[0], function (t, e, n) {
        var i;
        t = L({}, t), n.dispatchAction(L(t, {
          type: r[1],
          seriesIndex: (n = t, i = [], e.eachComponent({
            mainType: "series",
            subType: o,
            query: n
          }, function (t) {
            i.push(t.seriesIndex);
          }), i)
        }));
      });
    });
  }
  function my(t, e, s, n, l) {
    var u = t + e;
    s.isSilent(u) || n.eachComponent({
      mainType: "series",
      subType: "pie"
    }, function (t) {
      for (var e, n, i = t.seriesIndex, r = t.option.selectedMap, o = l.selected, a = 0; a < o.length; a++) {
        o[a].seriesIndex === i && (n = Ao(e = t.getData(), l.fromActionPayload), s.trigger(u, {
          type: u,
          seriesId: t.id,
          name: F(n) ? e.getName(n[0]) : e.getName(n),
          selected: V(r) ? r : L({}, r)
        }));
      }
    });
  }
  function vy(t, e, n) {
    for (var i; t && (!e(t) || (i = t, !n));) {
      t = t.__hostTarget || t.parent;
    }
    return i;
  }
  var _y = Math.round(9 * Math.random()),
    xy = "function" == typeof Object.defineProperty,
    wy = (by.prototype.get = function (t) {
      return this._guard(t)[this._id];
    }, by.prototype.set = function (t, e) {
      t = this._guard(t);
      return xy ? Object.defineProperty(t, this._id, {
        value: e,
        enumerable: !1,
        configurable: !0
      }) : t[this._id] = e, this;
    }, by.prototype.delete = function (t) {
      return !!this.has(t) && (delete this._guard(t)[this._id], !0);
    }, by.prototype.has = function (t) {
      return !!this._guard(t)[this._id];
    }, by.prototype._guard = function (t) {
      if (t !== Object(t)) throw TypeError("Value of WeakMap is not a non-null object.");
      return t;
    }, by);
  function by() {
    this._id = "__ec_inner_" + _y++;
  }
  var Sy = ds.extend({
      type: "triangle",
      shape: {
        cx: 0,
        cy: 0,
        width: 0,
        height: 0
      },
      buildPath: function buildPath(t, e) {
        var n = e.cx,
          i = e.cy,
          r = e.width / 2,
          e = e.height / 2;
        t.moveTo(n, i - e), t.lineTo(n + r, i + e), t.lineTo(n - r, i + e), t.closePath();
      }
    }),
    My = ds.extend({
      type: "diamond",
      shape: {
        cx: 0,
        cy: 0,
        width: 0,
        height: 0
      },
      buildPath: function buildPath(t, e) {
        var n = e.cx,
          i = e.cy,
          r = e.width / 2,
          e = e.height / 2;
        t.moveTo(n, i - e), t.lineTo(n + r, i), t.lineTo(n, i + e), t.lineTo(n - r, i), t.closePath();
      }
    }),
    Ty = ds.extend({
      type: "pin",
      shape: {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      },
      buildPath: function buildPath(t, e) {
        var n = e.x,
          i = e.y,
          r = e.width / 5 * 3,
          e = Math.max(r, e.height),
          r = r / 2,
          o = r * r / (e - r),
          e = i - e + r + o,
          a = Math.asin(o / r),
          s = Math.cos(a) * r,
          l = Math.sin(a),
          u = Math.cos(a),
          h = .6 * r,
          c = .7 * r;
        t.moveTo(n - s, e + o), t.arc(n, e, r, Math.PI - a, 2 * Math.PI + a), t.bezierCurveTo(n + s - l * h, e + o + u * h, n, i - c, n, i), t.bezierCurveTo(n, i - c, n - s + l * h, e + o + u * h, n - s, e + o), t.closePath();
      }
    }),
    Iy = ds.extend({
      type: "arrow",
      shape: {
        x: 0,
        y: 0,
        width: 0,
        height: 0
      },
      buildPath: function buildPath(t, e) {
        var n = e.height,
          i = e.width,
          r = e.x,
          e = e.y,
          i = i / 3 * 2;
        t.moveTo(r, e), t.lineTo(r + i, e + n), t.lineTo(r, e + n / 4 * 3), t.lineTo(r - i, e + n), t.lineTo(r, e), t.closePath();
      }
    }),
    Cy = {
      line: function line(t, e, n, i, r) {
        r.x1 = t, r.y1 = e + i / 2, r.x2 = t + n, r.y2 = e + i / 2;
      },
      rect: function rect(t, e, n, i, r) {
        r.x = t, r.y = e, r.width = n, r.height = i;
      },
      roundRect: function roundRect(t, e, n, i, r) {
        r.x = t, r.y = e, r.width = n, r.height = i, r.r = Math.min(n, i) / 4;
      },
      square: function square(t, e, n, i, r) {
        n = Math.min(n, i);
        r.x = t, r.y = e, r.width = n, r.height = n;
      },
      circle: function circle(t, e, n, i, r) {
        r.cx = t + n / 2, r.cy = e + i / 2, r.r = Math.min(n, i) / 2;
      },
      diamond: function diamond(t, e, n, i, r) {
        r.cx = t + n / 2, r.cy = e + i / 2, r.width = n, r.height = i;
      },
      pin: function pin(t, e, n, i, r) {
        r.x = t + n / 2, r.y = e + i / 2, r.width = n, r.height = i;
      },
      arrow: function arrow(t, e, n, i, r) {
        r.x = t + n / 2, r.y = e + i / 2, r.width = n, r.height = i;
      },
      triangle: function triangle(t, e, n, i, r) {
        r.cx = t + n / 2, r.cy = e + i / 2, r.width = n, r.height = i;
      }
    },
    Dy = {},
    ky = (E({
      line: ju,
      rect: As,
      roundRect: As,
      square: As,
      circle: hu,
      diamond: My,
      pin: Ty,
      arrow: Iy,
      triangle: Sy
    }, function (t, e) {
      Dy[e] = new t();
    }), ds.extend({
      type: "symbol",
      shape: {
        symbolType: "",
        x: 0,
        y: 0,
        width: 0,
        height: 0
      },
      calculateTextPosition: function calculateTextPosition(t, e, n) {
        var t = kr(t, e, n),
          i = this.shape;
        return i && "pin" === i.symbolType && "inside" === e.position && (t.y = n.y + .4 * n.height), t;
      },
      buildPath: function buildPath(t, e, n) {
        var i,
          r = e.symbolType;
        "none" !== r && (i = (i = Dy[r]) || Dy[r = "rect"], Cy[r](e.x, e.y, e.width, e.height, i.shape), i.buildPath(t, i.shape, n));
      }
    }));
  function Ay(t, e) {
    var n;
    "image" !== this.type && (n = this.style, this.__isEmptyBrush ? (n.stroke = t, n.fill = e || "#fff", n.lineWidth = 2) : "line" === this.shape.symbolType ? n.stroke = t : n.fill = t, this.markRedraw());
  }
  function Py(t, e, n, i, r, o, a) {
    var s = 0 === t.indexOf("empty");
    return (a = 0 === (t = s ? t.substr(5, 1).toLowerCase() + t.substr(6) : t).indexOf("image://") ? Uh(t.slice(8), new q(e, n, i, r), a ? "center" : "cover") : 0 === t.indexOf("path://") ? Gh(t.slice(7), {}, new q(e, n, i, r), a ? "center" : "cover") : new ky({
      shape: {
        symbolType: t,
        x: e,
        y: n,
        width: i,
        height: r
      }
    })).__isEmptyBrush = s, a.setColor = Ay, o && a.setColor(o), a;
  }
  function Ly(t) {
    return isFinite(t);
  }
  function Oy(t, e, n) {
    for (var i, r, o, a, s, l, u, h, c, p = "radial" === e.type ? (i = t, r = e, a = (o = n).width, s = o.height, l = Math.min(a, s), u = null == r.x ? .5 : r.x, h = null == r.y ? .5 : r.y, c = null == r.r ? .5 : r.r, r.global || (u = u * a + o.x, h = h * s + o.y, c *= l), u = Ly(u) ? u : .5, h = Ly(h) ? h : .5, c = 0 <= c && Ly(c) ? c : .5, i.createRadialGradient(u, h, 0, u, h, c)) : (r = t, a = n, o = null == (s = e).x ? 0 : s.x, l = null == s.x2 ? 1 : s.x2, i = null == s.y ? 0 : s.y, u = null == s.y2 ? 0 : s.y2, s.global || (o = o * a.width + a.x, l = l * a.width + a.x, i = i * a.height + a.y, u = u * a.height + a.y), o = Ly(o) ? o : 0, l = Ly(l) ? l : 1, i = Ly(i) ? i : 0, u = Ly(u) ? u : 0, r.createLinearGradient(o, i, l, u)), d = e.colorStops, f = 0; f < d.length; f++) {
      p.addColorStop(d[f].offset, d[f].color);
    }
    return p;
  }
  function Ry(t) {
    return parseInt(t, 10);
  }
  function Ny(t, e, n) {
    var i = ["width", "height"][e],
      r = ["clientWidth", "clientHeight"][e],
      o = ["paddingLeft", "paddingTop"][e],
      e = ["paddingRight", "paddingBottom"][e];
    return null != n[i] && "auto" !== n[i] ? parseFloat(n[i]) : (n = document.defaultView.getComputedStyle(t), (t[r] || Ry(n[i]) || Ry(t.style[i])) - (Ry(n[o]) || 0) - (Ry(n[e]) || 0) | 0);
  }
  function Ey(t) {
    var e,
      n = t.style,
      i = n.lineDash && 0 < n.lineWidth && (r = n.lineDash, i = n.lineWidth, r && "solid" !== r && 0 < i ? "dashed" === r ? [4 * i, 2 * i] : "dotted" === r ? [i] : W(r) ? [r] : F(r) ? r : null : null),
      r = n.lineDashOffset;
    return i && (e = n.strokeNoScale && t.getLineScale ? t.getLineScale() : 1) && 1 !== e && (i = z(i, function (t) {
      return t / e;
    }), r /= e), [i, r];
  }
  var By = new ja(!0);
  function zy(t) {
    var e = t.stroke;
    return !(null == e || "none" === e || !(0 < t.lineWidth));
  }
  function Fy(t) {
    return "string" == typeof t && "none" !== t;
  }
  function Vy(t) {
    t = t.fill;
    return null != t && "none" !== t;
  }
  function Wy(t, e) {
    var n;
    null != e.fillOpacity && 1 !== e.fillOpacity ? (n = t.globalAlpha, t.globalAlpha = e.fillOpacity * e.opacity, t.fill(), t.globalAlpha = n) : t.fill();
  }
  function Hy(t, e) {
    var n;
    null != e.strokeOpacity && 1 !== e.strokeOpacity ? (n = t.globalAlpha, t.globalAlpha = e.strokeOpacity * e.opacity, t.stroke(), t.globalAlpha = n) : t.stroke();
  }
  function Gy(t, e, n) {
    var n = Jo(e.image, e.__image, n);
    if (ea(n)) return t = t.createPattern(n, e.repeat || "repeat"), "function" == typeof DOMMatrix && t && t.setTransform && ((n = new DOMMatrix()).translateSelf(e.x || 0, e.y || 0), n.rotateSelf(0, 0, (e.rotation || 0) * Wt), n.scaleSelf(e.scaleX || 1, e.scaleY || 1), t.setTransform(n)), t;
  }
  var Uy = ["shadowBlur", "shadowOffsetX", "shadowOffsetY"],
    qy = [["lineCap", "butt"], ["lineJoin", "miter"], ["miterLimit", 10]];
  function Xy(t, e, n, i, r) {
    var o,
      a = !1;
    if (!i && e === (n = n || {})) return !1;
    !i && e.opacity === n.opacity || (Jy(t, r), a = !0, o = Math.max(Math.min(e.opacity, 1), 0), t.globalAlpha = isNaN(o) ? ga.opacity : o), !i && e.blend === n.blend || (a || (Jy(t, r), a = !0), t.globalCompositeOperation = e.blend || ga.blend);
    for (var s = 0; s < Uy.length; s++) {
      var l = Uy[s];
      !i && e[l] === n[l] || (a || (Jy(t, r), a = !0), t[l] = t.dpr * (e[l] || 0));
    }
    return !i && e.shadowColor === n.shadowColor || (a || (Jy(t, r), a = !0), t.shadowColor = e.shadowColor || ga.shadowColor), a;
  }
  function Yy(t, e, n, i, r) {
    var o = t0(e, r.inHover),
      a = i ? null : n && t0(n, r.inHover) || {};
    if (o !== a) {
      var s = Xy(t, o, a, i, r);
      (i || o.fill !== a.fill) && (s || (Jy(t, r), s = !0), Fy(o.fill)) && (t.fillStyle = o.fill), (i || o.stroke !== a.stroke) && (s || (Jy(t, r), s = !0), Fy(o.stroke)) && (t.strokeStyle = o.stroke), !i && o.opacity === a.opacity || (s || (Jy(t, r), s = !0), t.globalAlpha = null == o.opacity ? 1 : o.opacity), e.hasStroke() && (n = o.lineWidth / (o.strokeNoScale && e.getLineScale ? e.getLineScale() : 1), t.lineWidth !== n) && (s || (Jy(t, r), s = !0), t.lineWidth = n);
      for (var l = 0; l < qy.length; l++) {
        var u = qy[l],
          h = u[0];
        !i && o[h] === a[h] || (s || (Jy(t, r), s = !0), t[h] = o[h] || u[1]);
      }
    }
  }
  function Zy(t, e) {
    var e = e.transform,
      n = t.dpr || 1;
    e ? t.setTransform(n * e[0], n * e[1], n * e[2], n * e[3], n * e[4], n * e[5]) : t.setTransform(n, 0, 0, n, 0, 0);
  }
  var jy = 1,
    Ky = 2,
    $y = 3,
    Qy = 4;
  function Jy(t, e) {
    e.batchFill && t.fill(), e.batchStroke && t.stroke(), e.batchFill = "", e.batchStroke = "";
  }
  function t0(t, e) {
    return e && t.__hoverStyle || t.style;
  }
  function e0(t, e) {
    n0(t, e, {
      inHover: !1,
      viewWidth: 0,
      viewHeight: 0
    }, !0);
  }
  function n0(t, e, n, E) {
    var i = e.transform;
    if (e.shouldBePainted(n.viewWidth, n.viewHeight, !1, !1)) {
      var r = e.__clipPaths,
        o = n.prevElClipPaths,
        a = !1,
        s = !1;
      if (!o || function (t, e) {
        if (t !== e && (t || e)) {
          if (!t || !e || t.length !== e.length) return 1;
          for (var n = 0; n < t.length; n++) {
            if (t[n] !== e[n]) return 1;
          }
        }
      }(r, o)) {
        if (o && o.length && (Jy(t, n), t.restore(), s = a = !0, n.prevElClipPaths = null, n.allClipped = !1, n.prevEl = null), r && r.length) {
          Jy(t, n), t.save();
          for (var B = r, l = t, o = n, z = !1, F = 0; F < B.length; F++) {
            var V = B[F],
              z = z || V.isZeroArea();
            Zy(l, V), l.beginPath(), V.buildPath(l, V.shape), l.clip();
          }
          o.allClipped = z, a = !0;
        }
        n.prevElClipPaths = r;
      }
      if (n.allClipped) e.__isRendered = !1;else {
        e.beforeBrush && e.beforeBrush(), e.innerBeforeBrush();
        var u,
          h,
          c,
          p,
          d,
          f,
          g,
          y,
          m,
          v,
          _,
          x,
          w,
          W,
          b,
          S,
          M,
          T,
          I,
          C,
          D,
          k,
          A,
          o = n.prevEl,
          P = (o || (s = a = !0), e instanceof ds && e.autoBatch && (r = e.style, P = Vy(r), u = zy(r), !(r.lineDash || !(+P ^ +u) || P && "string" != typeof r.fill || u && "string" != typeof r.stroke || r.strokePercent < 1 || r.strokeOpacity < 1 || r.fillOpacity < 1))),
          a = (a || (u = i, r = o.transform, u && r ? u[0] !== r[0] || u[1] !== r[1] || u[2] !== r[2] || u[3] !== r[3] || u[4] !== r[4] || u[5] !== r[5] : u || r) ? (Jy(t, n), Zy(t, e)) : P || Jy(t, n), t0(e, n.inHover));
        if (e instanceof ds) n.lastDrawType !== jy && (s = !0, n.lastDrawType = jy), Yy(t, e, o, s, n), P && (n.batchFill || n.batchStroke) || t.beginPath(), i = t, r = e, R = P, b = zy(p = a), S = Vy(p), M = p.strokePercent, T = M < 1, I = !r.path, r.silent && !T || !I || r.createPathProxy(), C = r.path || By, D = r.__dirty, R || (d = p.fill, A = p.stroke, f = S && !!d.colorStops, g = b && !!A.colorStops, y = S && !!d.image, m = b && !!A.image, k = w = x = _ = v = void 0, (f || g) && (k = r.getBoundingRect()), f && (v = D ? Oy(i, d, k) : r.__canvasFillGradient, r.__canvasFillGradient = v), g && (_ = D ? Oy(i, A, k) : r.__canvasStrokeGradient, r.__canvasStrokeGradient = _), y && (x = D || !r.__canvasFillPattern ? Gy(i, d, r) : r.__canvasFillPattern, r.__canvasFillPattern = x), m && (w = D || !r.__canvasStrokePattern ? Gy(i, A, r) : r.__canvasStrokePattern, r.__canvasStrokePattern = x), f ? i.fillStyle = v : y && (x ? i.fillStyle = x : S = !1), g ? i.strokeStyle = _ : m && (w ? i.strokeStyle = w : b = !1)), k = r.getGlobalScale(), C.setScale(k[0], k[1], r.segmentIgnoreThreshold), i.setLineDash && p.lineDash && (W = (d = Ey(r))[0], O = d[1]), A = !0, (I || D & _n) && (C.setDPR(i.dpr), T ? C.setContext(null) : (C.setContext(i), A = !1), C.reset(), r.buildPath(C, r.shape, R), C.toStatic(), r.pathUpdated()), A && C.rebuildPath(i, T ? M : 1), W && (i.setLineDash(W), i.lineDashOffset = O), R || (p.strokeFirst ? (b && Hy(i, p), S && Wy(i, p)) : (S && Wy(i, p), b && Hy(i, p))), W && i.setLineDash([]), P && (n.batchFill = a.fill || "", n.batchStroke = a.stroke || "");else if (e instanceof ys) n.lastDrawType !== $y && (s = !0, n.lastDrawType = $y), Yy(t, e, o, s, n), f = t, v = e, null != (x = (y = a).text) && (x += ""), x && (f.font = y.font || j, f.textAlign = y.textAlign, f.textBaseline = y.textBaseline, _ = g = void 0, f.setLineDash && y.lineDash && (g = (v = Ey(v))[0], _ = v[1]), g && (f.setLineDash(g), f.lineDashOffset = _), y.strokeFirst ? (zy(y) && f.strokeText(x, y.x, y.y), Vy(y) && f.fillText(x, y.x, y.y)) : (Vy(y) && f.fillText(x, y.x, y.y), zy(y) && f.strokeText(x, y.x, y.y)), g) && f.setLineDash([]);else if (e instanceof ws) n.lastDrawType !== Ky && (s = !0, n.lastDrawType = Ky), m = o, w = s, Xy(t, t0(e, (k = n).inHover), m && t0(m, k.inHover), w, k), d = t, I = a, (r = (D = e).__image = Jo(I.image, D.__image, D, D.onload)) && ea(r) && (A = I.x || 0, C = I.y || 0, T = D.getWidth(), D = D.getHeight(), M = r.width / r.height, null == T && null != D ? T = D * M : null == D && null != T ? D = T / M : null == T && null == D && (T = r.width, D = r.height), I.sWidth && I.sHeight ? (h = I.sx || 0, c = I.sy || 0, d.drawImage(r, h, c, I.sWidth, I.sHeight, A, C, T, D)) : I.sx && I.sy ? (h = I.sx, c = I.sy, d.drawImage(r, h, c, T - h, D - c, A, C, T, D)) : d.drawImage(r, A, C, T, D));else if (e.getTemporalDisplayables) {
          n.lastDrawType !== Qy && (s = !0, n.lastDrawType = Qy);
          var L,
            H,
            G = t,
            O = e,
            R = n,
            U = O.getDisplayables(),
            q = O.getTemporalDisplayables(),
            X = (G.save(), {
              prevElClipPaths: null,
              prevEl: null,
              allClipped: !1,
              viewWidth: R.viewWidth,
              viewHeight: R.viewHeight,
              inHover: R.inHover
            });
          for (L = O.getCursor(), H = U.length; L < H; L++) {
            (N = U[L]).beforeBrush && N.beforeBrush(), N.innerBeforeBrush(), n0(G, N, X, L === H - 1), N.innerAfterBrush(), N.afterBrush && N.afterBrush(), X.prevEl = N;
          }
          for (var N, Y = 0, Z = q.length; Y < Z; Y++) {
            (N = q[Y]).beforeBrush && N.beforeBrush(), N.innerBeforeBrush(), n0(G, N, X, Y === Z - 1), N.innerAfterBrush(), N.afterBrush && N.afterBrush(), X.prevEl = N;
          }
          O.clearTemporalDisplayables(), O.notClear = !0, G.restore();
        }
        P && E && Jy(t, n), e.innerAfterBrush(), e.afterBrush && e.afterBrush(), (n.prevEl = e).__dirty = 0, e.__isRendered = !0;
      }
    } else e.__dirty &= ~vn, e.__isRendered = !1;
  }
  var i0 = new wy(),
    r0 = new ei(100),
    o0 = ["symbol", "symbolSize", "symbolKeepAspect", "color", "backgroundColor", "dashArrayX", "dashArrayY", "maxTileWidth", "maxTileHeight"];
  function a0(t, e) {
    if ("none" === t) return null;
    var a = e.getDevicePixelRatio(),
      s = e.getZr(),
      l = "svg" === s.painter.type,
      e = (t.dirty && i0.delete(t), i0.get(t));
    if (e) return e;
    for (var n, u = B(t, {
        symbol: "rect",
        symbolSize: 1,
        symbolKeepAspect: !0,
        color: "rgba(0, 0, 0, 0.2)",
        backgroundColor: null,
        dashArrayX: 5,
        dashArrayY: 5,
        rotation: 0,
        maxTileWidth: 512,
        maxTileHeight: 512
      }), e = ("none" === u.backgroundColor && (u.backgroundColor = null), {
        repeat: "repeat"
      }), i = e, r = [a], o = !0, h = 0; h < o0.length; ++h) {
      var c = u[o0[h]];
      if (null != c && !F(c) && !V(c) && !W(c) && "boolean" != typeof c) {
        o = !1;
        break;
      }
      r.push(c);
    }
    o && (n = r.join(",") + (l ? "-svg" : ""), v = r0.get(n)) && (l ? i.svgElement = v : i.image = v);
    var p,
      d = function t(e) {
        if (!e || 0 === e.length) return [[0, 0]];
        if (W(e)) return [[o = Math.ceil(e), o]];
        var n = !0;
        for (var i = 0; i < e.length; ++i) {
          if (!W(e[i])) {
            n = !1;
            break;
          }
        }
        if (n) return t([e]);
        var r = [];
        for (i = 0; i < e.length; ++i) {
          var o;
          W(e[i]) ? (o = Math.ceil(e[i]), r.push([o, o])) : (o = z(e[i], function (t) {
            return Math.ceil(t);
          })).length % 2 == 1 ? r.push(o.concat(o)) : r.push(o);
        }
        return r;
      }(u.dashArrayX),
      f = function (t) {
        if (!t || "object" == _typeof(t) && 0 === t.length) return [0, 0];
        if (W(t)) return [e = Math.ceil(t), e];
        var e = z(t, function (t) {
          return Math.ceil(t);
        });
        return t.length % 2 ? e.concat(e) : e;
      }(u.dashArrayY),
      g = function t(e) {
        if (!e || 0 === e.length) return [["rect"]];
        if (V(e)) return [[e]];
        var n = !0;
        for (var i = 0; i < e.length; ++i) {
          if (!V(e[i])) {
            n = !1;
            break;
          }
        }
        if (n) return t([e]);
        var r = [];
        for (i = 0; i < e.length; ++i) {
          V(e[i]) ? r.push([e[i]]) : r.push(e[i]);
        }
        return r;
      }(u.symbol),
      y = function (t) {
        return z(t, s0);
      }(d),
      m = s0(f),
      v = !l && Y.createCanvas(),
      _ = l && {
        tag: "g",
        attrs: {},
        key: "dcl",
        children: []
      },
      x = function () {
        for (var t = 1, e = 0, n = y.length; e < n; ++e) {
          t = yo(t, y[e]);
        }
        for (var i = 1, e = 0, n = g.length; e < n; ++e) {
          i = yo(i, g[e].length);
        }
        t *= i;
        var r = m * y.length * g.length;
        return {
          width: Math.max(1, Math.min(t, u.maxTileWidth)),
          height: Math.max(1, Math.min(r, u.maxTileHeight))
        };
      }();
    v && (v.width = x.width * a, v.height = x.height * a, p = v.getContext("2d")), p && (p.clearRect(0, 0, v.width, v.height), u.backgroundColor) && (p.fillStyle = u.backgroundColor, p.fillRect(0, 0, v.width, v.height));
    for (var w = 0, b = 0; b < f.length; ++b) {
      w += f[b];
    }
    if (!(w <= 0)) for (var S = -m, M = 0, T = 0, I = 0; S < x.height;) {
      if (M % 2 == 0) {
        for (var C = T / 2 % g.length, D = 0, k = 0, A = 0; D < 2 * x.width;) {
          for (var P, L, O, R, N, E = 0, b = 0; b < d[I].length; ++b) {
            E += d[I][b];
          }
          if (E <= 0) break;
          k % 2 == 0 && (L = .5 * (1 - u.symbolSize), P = D + d[I][k] * L, L = S + f[M] * L, O = d[I][k] * u.symbolSize, R = f[M] * u.symbolSize, N = A / 2 % g[C].length, function (t, e, n, i, r) {
            var o = l ? 1 : a,
              r = Py(r, t * o, e * o, n * o, i * o, u.color, u.symbolKeepAspect);
            l ? (t = s.painter.renderOneToVNode(r)) && _.children.push(t) : e0(p, r);
          }(P, L, O, R, g[C][N])), D += d[I][k], ++A, ++k === d[I].length && (k = 0);
        }
        ++I === d.length && (I = 0);
      }
      S += f[M], ++T, ++M === f.length && (M = 0);
    }
    return o && r0.put(n, v || _), i.image = v, i.svgElement = _, i.svgWidth = x.width, i.svgHeight = x.height, e.rotation = u.rotation, e.scaleX = e.scaleY = l ? 1 : 1 / a, i0.set(t, e), t.dirty = !1, e;
  }
  function s0(t) {
    for (var e = 0, n = 0; n < t.length; ++n) {
      e += t[n];
    }
    return t.length % 2 == 1 ? 2 * e : e;
  }
  var l0 = new ue(),
    u0 = {};
  var My = {
      PROCESSOR: {
        FILTER: 1e3,
        SERIES_FILTER: 800,
        STATISTIC: 5e3
      },
      VISUAL: {
        LAYOUT: 1e3,
        PROGRESSIVE_LAYOUT: 1100,
        GLOBAL: 2e3,
        CHART: 3e3,
        POST_CHART_LAYOUT: 4600,
        COMPONENT: 4e3,
        BRUSH: 5e3,
        CHART_ITEM: 4500,
        ARIA: 6e3,
        DECAL: 7e3
      }
    },
    h0 = "__flagInMainProcess",
    c0 = "__pendingUpdate",
    p0 = "__needsUpdateStatus",
    d0 = /^[a-zA-Z0-9_]+$/,
    f0 = "__connectUpdateStatus";
  function g0(n) {
    return function () {
      for (var t = [], e = 0; e < arguments.length; e++) {
        t[e] = arguments[e];
      }
      if (!this.isDisposed()) return m0(this, n, t);
      this.id;
    };
  }
  function y0(n) {
    return function () {
      for (var t = [], e = 0; e < arguments.length; e++) {
        t[e] = arguments[e];
      }
      return m0(this, n, t);
    };
  }
  function m0(t, e, n) {
    return n[0] = n[0] && n[0].toLowerCase(), ue.prototype[e].apply(t, n);
  }
  u(x0, v0 = ue);
  var v0,
    _0 = x0;
  function x0() {
    return null !== v0 && v0.apply(this, arguments) || this;
  }
  var w0,
    b0,
    S0,
    M0,
    T0,
    I0,
    C0,
    D0,
    k0,
    A0,
    P0,
    L0,
    O0,
    R0,
    N0,
    E0,
    B0,
    z0,
    F0,
    Ty = _0.prototype,
    V0 = (Ty.on = y0("on"), Ty.off = y0("off"), u(c, F0 = ue), c.prototype._onframe = function () {
      if (!this._disposed) {
        z0(this);
        var t = this._scheduler;
        if (this[c0]) {
          var e = this[c0].silent;
          this[h0] = !0;
          try {
            w0(this), M0.update.call(this, null, this[c0].updateParams);
          } catch (t) {
            throw this[h0] = !1, this[c0] = null, t;
          }
          this._zr.flush(), this[h0] = !1, this[c0] = null, D0.call(this, e), k0.call(this, e);
        } else if (t.unfinished) {
          var n = 1,
            i = this._model,
            r = this._api;
          t.unfinished = !1;
          do {
            var o = +new Date();
          } while ((t.performSeriesTasks(i), t.performDataProcessorTasks(i), I0(this, i), t.performVisualTasks(i), R0(this, this._model, r, "remain", {}), 0 < (n -= +new Date() - o) && t.unfinished));
          t.unfinished || this._zr.flush();
        }
      }
    }, c.prototype.getDom = function () {
      return this._dom;
    }, c.prototype.getId = function () {
      return this.id;
    }, c.prototype.getZr = function () {
      return this._zr;
    }, c.prototype.isSSR = function () {
      return this._ssr;
    }, c.prototype.setOption = function (t, e, n) {
      if (!this[h0]) if (this._disposed) this.id;else {
        O(e) && (n = e.lazyUpdate, i = e.silent, r = e.replaceMerge, o = e.transition, e = e.notMerge), this[h0] = !0, this._model && !e || (e = new bd(this._api), a = this._theme, (s = this._model = new pd()).scheduler = this._scheduler, s.ssr = this._ssr, s.init(null, null, null, a, this._locale, e)), this._model.setOption(t, {
          replaceMerge: r
        }, K0);
        var i,
          r,
          o,
          a,
          s = {
            seriesTransition: o,
            optionChanged: !0
          };
        if (n) this[c0] = {
          silent: i,
          updateParams: s
        }, this[h0] = !1, this.getZr().wakeUp();else {
          try {
            w0(this), M0.update.call(this, null, s);
          } catch (t) {
            throw this[c0] = null, this[h0] = !1, t;
          }
          this._ssr || this._zr.flush(), this[c0] = null, this[h0] = !1, D0.call(this, i), k0.call(this, i);
        }
      }
    }, c.prototype.setTheme = function () {}, c.prototype.getModel = function () {
      return this._model;
    }, c.prototype.getOption = function () {
      return this._model && this._model.getOption();
    }, c.prototype.getWidth = function () {
      return this._zr.getWidth();
    }, c.prototype.getHeight = function () {
      return this._zr.getHeight();
    }, c.prototype.getDevicePixelRatio = function () {
      return this._zr.painter.dpr || b.hasGlobalWindow && window.devicePixelRatio || 1;
    }, c.prototype.getRenderedCanvas = function (t) {
      return this.renderToCanvas(t);
    }, c.prototype.renderToCanvas = function (t) {
      return this._zr.painter.getRenderedCanvas({
        backgroundColor: (t = t || {}).backgroundColor || this._model.get("backgroundColor"),
        pixelRatio: t.pixelRatio || this.getDevicePixelRatio()
      });
    }, c.prototype.renderToSVGString = function (t) {
      return this._zr.painter.renderToString({
        useViewBox: (t = t || {}).useViewBox
      });
    }, c.prototype.getSvgDataURL = function () {
      var t;
      if (b.svgSupported) return E((t = this._zr).storage.getDisplayList(), function (t) {
        t.stopAnimation(null, !0);
      }), t.painter.toDataURL();
    }, c.prototype.getDataURL = function (t) {
      var e, n, i, r;
      if (!this._disposed) return r = (t = t || {}).excludeComponents, e = this._model, n = [], i = this, E(r, function (t) {
        e.eachComponent({
          mainType: t
        }, function (t) {
          t = i._componentsMap[t.__viewId];
          t.group.ignore || (n.push(t), t.group.ignore = !0);
        });
      }), r = "svg" === this._zr.painter.getType() ? this.getSvgDataURL() : this.renderToCanvas(t).toDataURL("image/" + (t && t.type || "png")), E(n, function (t) {
        t.group.ignore = !1;
      }), r;
      this.id;
    }, c.prototype.getConnectedDataURL = function (i) {
      var r, o, a, s, l, u, h, c, p, e, t, n, d, f, g;
      if (!this._disposed) return r = "svg" === i.type, o = this.group, a = Math.min, s = Math.max, em[o] ? (u = l = 1 / 0, c = h = -1 / 0, p = [], e = i && i.pixelRatio || this.getDevicePixelRatio(), E(tm, function (t, e) {
        var n;
        t.group === o && (n = r ? t.getZr().painter.getSvgDom().innerHTML : t.renderToCanvas(y(i)), t = t.getDom().getBoundingClientRect(), l = a(t.left, l), u = a(t.top, u), h = s(t.right, h), c = s(t.bottom, c), p.push({
          dom: n,
          left: t.left,
          top: t.top
        }));
      }), t = (h *= e) - (l *= e), n = (c *= e) - (u *= e), d = Y.createCanvas(), (f = jr(d, {
        renderer: r ? "svg" : "canvas"
      })).resize({
        width: t,
        height: n
      }), r ? (g = "", E(p, function (t) {
        var e = t.left - l,
          n = t.top - u;
        g += '<g transform="translate(' + e + "," + n + ')">' + t.dom + "</g>";
      }), f.painter.getSvgRoot().innerHTML = g, i.connectedBackgroundColor && f.painter.setBackgroundColor(i.connectedBackgroundColor), f.refreshImmediately(), f.painter.toDataURL()) : (i.connectedBackgroundColor && f.add(new As({
        shape: {
          x: 0,
          y: 0,
          width: t,
          height: n
        },
        style: {
          fill: i.connectedBackgroundColor
        }
      })), E(p, function (t) {
        t = new ws({
          style: {
            x: t.left * e - l,
            y: t.top * e - u,
            image: t.dom
          }
        });
        f.add(t);
      }), f.refreshImmediately(), d.toDataURL("image/" + (i && i.type || "png")))) : this.getDataURL(i);
      this.id;
    }, c.prototype.convertToPixel = function (t, e) {
      return T0(this, "convertToPixel", t, e);
    }, c.prototype.convertFromPixel = function (t, e) {
      return T0(this, "convertFromPixel", t, e);
    }, c.prototype.containPixel = function (t, i) {
      var r;
      if (!this._disposed) return E(Oo(this._model, t), function (t, n) {
        0 <= n.indexOf("Models") && E(t, function (t) {
          var e = t.coordinateSystem;
          e && e.containPoint ? r = r || !!e.containPoint(i) : "seriesModels" === n && (e = this._chartsMap[t.__viewId]) && e.containPoint && (r = r || e.containPoint(i, t));
        }, this);
      }, this), !!r;
      this.id;
    }, c.prototype.getVisual = function (t, e) {
      var t = Oo(this._model, t, {
          defaultMainType: "series"
        }),
        n = t.seriesModel.getData(),
        t = t.hasOwnProperty("dataIndexInside") ? t.dataIndexInside : t.hasOwnProperty("dataIndex") ? n.indexOfRawIndex(t.dataIndex) : null;
      if (null != t) {
        var i = n,
          r = t,
          o = e;
        switch (o) {
          case "color":
            return i.getItemVisual(r, "style")[i.getVisual("drawType")];
          case "opacity":
            return i.getItemVisual(r, "style").opacity;
          case "symbol":
          case "symbolSize":
          case "liftZ":
            return i.getItemVisual(r, o);
        }
      } else {
        var a = n,
          s = e;
        switch (s) {
          case "color":
            return a.getVisual("style")[a.getVisual("drawType")];
          case "opacity":
            return a.getVisual("style").opacity;
          case "symbol":
          case "symbolSize":
          case "liftZ":
            return a.getVisual(s);
        }
      }
    }, c.prototype.getViewOfComponentModel = function (t) {
      return this._componentsMap[t.__viewId];
    }, c.prototype.getViewOfSeriesModel = function (t) {
      return this._chartsMap[t.__viewId];
    }, c.prototype._initEvents = function () {
      var t,
        n,
        i,
        s = this;
      E(X0, function (a) {
        function t(t) {
          var n,
            e,
            i,
            r = s.getModel(),
            o = t.target;
          "globalout" === a ? n = {} : o && vy(o, function (t) {
            var e,
              t = Ys(t);
            return t && null != t.dataIndex ? (e = t.dataModel || r.getSeriesByIndex(t.seriesIndex), n = e && e.getDataParams(t.dataIndex, t.dataType, o) || {}, 1) : t.eventData && (n = L({}, t.eventData), 1);
          }, !0), n && (e = n.componentType, i = n.componentIndex, "markLine" !== e && "markPoint" !== e && "markArea" !== e || (e = "series", i = n.seriesIndex), i = (e = e && null != i && r.getComponent(e, i)) && s["series" === e.mainType ? "_chartsMap" : "_componentsMap"][e.__viewId], n.event = t, n.type = a, s._$eventProcessor.eventInfo = {
            targetEl: o,
            packedEvent: n,
            model: e,
            view: i
          }, s.trigger(a, n));
        }
        t.zrEventfulCallAtLast = !0, s._zr.on(a, t, s);
      }), E(Z0, function (t, e) {
        s._messageCenter.on(e, function (t) {
          this.trigger(e, t);
        }, s);
      }), E(["selectchanged"], function (e) {
        s._messageCenter.on(e, function (t) {
          this.trigger(e, t);
        }, s);
      }), t = this._messageCenter, i = (n = this)._api, t.on("selectchanged", function (t) {
        var e = i.getModel();
        t.isFromClick ? (my("map", "selectchanged", n, e, t), my("pie", "selectchanged", n, e, t)) : "select" === t.fromAction ? (my("map", "selected", n, e, t), my("pie", "selected", n, e, t)) : "unselect" === t.fromAction && (my("map", "unselected", n, e, t), my("pie", "unselected", n, e, t));
      });
    }, c.prototype.isDisposed = function () {
      return this._disposed;
    }, c.prototype.clear = function () {
      this._disposed ? this.id : this.setOption({
        series: []
      }, !0);
    }, c.prototype.dispose = function () {
      var t, e, n;
      this._disposed ? this.id : (this._disposed = !0, this.getDom() && Bo(this.getDom(), rm, ""), e = (t = this)._api, n = t._model, E(t._componentsViews, function (t) {
        t.dispose(n, e);
      }), E(t._chartsViews, function (t) {
        t.dispose(n, e);
      }), t._zr.dispose(), t._dom = t._model = t._chartsMap = t._componentsMap = t._chartsViews = t._componentsViews = t._scheduler = t._api = t._zr = t._throttledZrFlush = t._theme = t._coordSysMgr = t._messageCenter = null, delete tm[t.id]);
    }, c.prototype.resize = function (t) {
      if (!this[h0]) if (this._disposed) this.id;else {
        this._zr.resize(t);
        var e = this._model;
        if (this._loadingFX && this._loadingFX.resize(), e) {
          var e = e.resetOption("media"),
            n = t && t.silent;
          this[c0] && (null == n && (n = this[c0].silent), e = !0, this[c0] = null), this[h0] = !0;
          try {
            e && w0(this), M0.update.call(this, {
              type: "resize",
              animation: L({
                duration: 0
              }, t && t.animation)
            });
          } catch (t) {
            throw this[h0] = !1, t;
          }
          this[h0] = !1, D0.call(this, n), k0.call(this, n);
        }
      }
    }, c.prototype.showLoading = function (t, e) {
      this._disposed ? this.id : (O(t) && (e = t, t = ""), t = t || "default", this.hideLoading(), J0[t] && (t = J0[t](this._api, e), e = this._zr, this._loadingFX = t, e.add(t)));
    }, c.prototype.hideLoading = function () {
      this._disposed ? this.id : (this._loadingFX && this._zr.remove(this._loadingFX), this._loadingFX = null);
    }, c.prototype.makeActionFromEvent = function (t) {
      var e = L({}, t);
      return e.type = Z0[t.type], e;
    }, c.prototype.dispatchAction = function (t, e) {
      var n;
      this._disposed ? this.id : (O(e) || (e = {
        silent: !!e
      }), Y0[t.type] && this._model && (this[h0] ? this._pendingActions.push(t) : (n = e.silent, C0.call(this, t, n), (t = e.flush) ? this._zr.flush() : !1 !== t && b.browser.weChat && this._throttledZrFlush(), D0.call(this, n), k0.call(this, n))));
    }, c.prototype.updateLabelLayout = function () {
      l0.trigger("series:layoutlabels", this._model, this._api, {
        updatedSeries: []
      });
    }, c.prototype.appendData = function (t) {
      var e;
      this._disposed ? this.id : (e = t.seriesIndex, this.getModel().getSeriesByIndex(e).appendData(t), this._scheduler.unfinished = !0, this.getZr().wakeUp());
    }, c.internalField = (w0 = function w0(t) {
      var e = t._scheduler;
      e.restorePipelines(t._model), e.prepareStageTasks(), b0(t, !0), b0(t, !1), e.plan();
    }, b0 = function b0(t, r) {
      for (var o = t._model, a = t._scheduler, s = r ? t._componentsViews : t._chartsViews, l = r ? t._componentsMap : t._chartsMap, u = t._zr, h = t._api, e = 0; e < s.length; e++) {
        s[e].__alive = !1;
      }
      function n(t) {
        var e,
          n = t.__requireNewView,
          i = (t.__requireNewView = !1, "_ec_" + t.id + "_" + t.type),
          n = !n && l[i];
        n || (e = Wo(t.type), (n = new (r ? Ig.getClass(e.main, e.sub) : Pg.getClass(e.sub))()).init(o, h), l[i] = n, s.push(n), u.add(n.group)), t.__viewId = n.__id = i, n.__alive = !0, n.__model = t, n.group.__ecComponentInfo = {
          mainType: t.mainType,
          index: t.componentIndex
        }, r || a.prepareView(n, t, o, h);
      }
      r ? o.eachComponent(function (t, e) {
        "series" !== t && n(e);
      }) : o.eachSeries(n);
      for (e = 0; e < s.length;) {
        var i = s[e];
        i.__alive ? e++ : (r || i.renderTask.dispose(), u.remove(i.group), i.dispose(o, h), s.splice(e, 1), l[i.__id] === i && delete l[i.__id], i.__id = i.group.__ecComponentInfo = null);
      }
    }, S0 = function S0(c, e, p, n, t) {
      var i,
        d,
        r = c._model;
      function o(t) {
        t && t.__alive && t[e] && t[e](t.__model, r, c._api, p);
      }
      r.setUpdatePayload(p), n ? ((i = {})[n + "Id"] = p[n + "Id"], i[n + "Index"] = p[n + "Index"], i[n + "Name"] = p[n + "Name"], i = {
        mainType: n,
        query: i
      }, t && (i.subType = t), null != (t = p.excludeSeriesId) && (d = N(), E(_o(t), function (t) {
        t = Io(t, null);
        null != t && d.set(t, !0);
      })), r && r.eachComponent(i, function (t) {
        var e,
          n,
          i = d && null != d.get(t.id);
        if (!i) if (Hl(p)) {
          if (t instanceof vg) {
            if (p.type === il && !p.notBlur && !t.get(["emphasis", "disabled"])) {
              var i = t,
                r = p,
                o = c._api,
                a = i.seriesIndex,
                s = i.getData(r.dataType);
              if (s) {
                var r = (F(r = Ao(s, r)) ? r[0] : r) || 0,
                  l = s.getItemGraphicEl(r);
                if (!l) for (var u = s.count(), h = 0; !l && h < u;) {
                  l = s.getItemGraphicEl(h++);
                }
                l ? Al(a, (r = Ys(l)).focus, r.blurScope, o) : (r = i.get(["emphasis", "focus"]), i = i.get(["emphasis", "blurScope"]), null != r && Al(a, r, i, o));
              }
            }
          } else {
            a = Ll(t.mainType, t.componentIndex, p.name, c._api), r = a.focusSelf, i = a.dispatchers;
            p.type === il && r && !p.notBlur && Pl(t.mainType, t.componentIndex, c._api), i && E(i, function (t) {
              (p.type === il ? Sl : Ml)(t);
            });
          }
        } else Wl(p) && t instanceof vg && (o = t, i = p, c._api, Wl(i) && (e = i.dataType, F(n = Ao(o.getData(e), i)) || (n = [n]), o[i.type === sl ? "toggleSelect" : i.type === ol ? "select" : "unselect"](n, e)), Ol(t), B0(c));
      }, c), r && r.eachComponent(i, function (t) {
        d && null != d.get(t.id) || o(c["series" === n ? "_chartsMap" : "_componentsMap"][t.__viewId]);
      }, c)) : E([].concat(c._componentsViews).concat(c._chartsViews), o);
    }, M0 = {
      prepareAndUpdate: function prepareAndUpdate(t) {
        w0(this), M0.update.call(this, t, {
          optionChanged: null != t.newOption
        });
      },
      update: function update(t, e) {
        var n = this._model,
          i = this._api,
          r = this._zr,
          o = this._coordSysMgr,
          a = this._scheduler;
        n && (n.setUpdatePayload(t), a.restoreData(n, t), a.performSeriesTasks(n), o.create(n, i), a.performDataProcessorTasks(n, t), I0(this, n), o.update(n, i), W0(n), a.performVisualTasks(n, t), L0(this, n, i, t, e), o = n.get("backgroundColor") || "transparent", a = n.get("darkMode"), r.setBackgroundColor(o), null != a && "auto" !== a && r.setDarkMode(a), l0.trigger("afterupdate", n, i));
      },
      updateTransform: function updateTransform(n) {
        var i,
          r,
          o = this,
          a = this._model,
          s = this._api;
        a && (a.setUpdatePayload(n), i = [], a.eachComponent(function (t, e) {
          "series" !== t && (t = o.getViewOfComponentModel(e)) && t.__alive && (!t.updateTransform || (e = t.updateTransform(e, a, s, n)) && e.update) && i.push(t);
        }), r = N(), a.eachSeries(function (t) {
          var e = o._chartsMap[t.__viewId];
          (!e.updateTransform || (e = e.updateTransform(t, a, s, n)) && e.update) && r.set(t.uid, 1);
        }), W0(a), this._scheduler.performVisualTasks(a, n, {
          setDirty: !0,
          dirtyMap: r
        }), R0(this, a, s, n, {}, r), l0.trigger("afterupdate", a, s));
      },
      updateView: function updateView(t) {
        var e = this._model;
        e && (e.setUpdatePayload(t), Pg.markUpdateMethod(t, "updateView"), W0(e), this._scheduler.performVisualTasks(e, t, {
          setDirty: !0
        }), L0(this, e, this._api, t, {}), l0.trigger("afterupdate", e, this._api));
      },
      updateVisual: function updateVisual(n) {
        var i = this,
          r = this._model;
        r && (r.setUpdatePayload(n), r.eachSeries(function (t) {
          t.getData().clearAllVisual();
        }), Pg.markUpdateMethod(n, "updateVisual"), W0(r), this._scheduler.performVisualTasks(r, n, {
          visualType: "visual",
          setDirty: !0
        }), r.eachComponent(function (t, e) {
          "series" !== t && (t = i.getViewOfComponentModel(e)) && t.__alive && t.updateVisual(e, r, i._api, n);
        }), r.eachSeries(function (t) {
          i._chartsMap[t.__viewId].updateVisual(t, r, i._api, n);
        }), l0.trigger("afterupdate", r, this._api));
      },
      updateLayout: function updateLayout(t) {
        M0.update.call(this, t);
      }
    }, T0 = function T0(t, e, n, i) {
      if (t._disposed) t.id;else for (var r = t._model, o = t._coordSysMgr.getCoordinateSystems(), a = Oo(r, n), s = 0; s < o.length; s++) {
        var l = o[s];
        if (l[e] && null != (l = l[e](r, a, i))) return l;
      }
    }, I0 = function I0(t, e) {
      var n = t._chartsMap,
        i = t._scheduler;
      e.eachSeries(function (t) {
        i.updateStreamModes(t, n[t.__viewId]);
      });
    }, C0 = function C0(i, t) {
      var r,
        o,
        a = this,
        e = this.getModel(),
        n = i.type,
        s = i.escapeConnect,
        l = Y0[n],
        u = l.actionInfo,
        h = (u.update || "update").split(":"),
        c = h.pop(),
        p = null != h[0] && Wo(h[0]),
        h = (this[h0] = !0, [i]),
        d = !1,
        f = (i.batch && (d = !0, h = z(i.batch, function (t) {
          return (t = B(L({}, t), i)).batch = null, t;
        })), []),
        g = Wl(i),
        y = Hl(i);
      if (y && kl(this._api), E(h, function (t) {
        var e, n;
        (r = (r = l.action(t, a._model, a._api)) || L({}, t)).type = u.event || r.type, f.push(r), y ? (e = (n = Ro(i)).queryOptionMap, n = n.mainTypeSpecified ? e.keys()[0] : "series", S0(a, c, t, n), B0(a)) : g ? (S0(a, c, t, "series"), B0(a)) : p && S0(a, c, t, p.main, p.sub);
      }), "none" !== c && !y && !g && !p) try {
        this[c0] ? (w0(this), M0.update.call(this, i), this[c0] = null) : M0[c].call(this, i);
      } catch (t) {
        throw this[h0] = !1, t;
      }
      r = d ? {
        type: u.event || n,
        escapeConnect: s,
        batch: f
      } : f[0], this[h0] = !1, t || ((h = this._messageCenter).trigger(r.type, r), g && (d = {
        type: "selectchanged",
        escapeConnect: s,
        selected: (o = [], e.eachSeries(function (n) {
          E(n.getAllData(), function (t) {
            t.data;
            var t = t.type,
              e = n.getSelectedDataIndices();
            0 < e.length && (e = {
              dataIndex: e,
              seriesIndex: n.seriesIndex
            }, null != t && (e.dataType = t), o.push(e));
          });
        }), o),
        isFromClick: i.isFromClick || !1,
        fromAction: i.type,
        fromActionPayload: i
      }, h.trigger(d.type, d)));
    }, D0 = function D0(t) {
      for (var e = this._pendingActions; e.length;) {
        var n = e.shift();
        C0.call(this, n, t);
      }
    }, k0 = function k0(t) {
      t || this.trigger("updated");
    }, A0 = function A0(e, n) {
      e.on("rendered", function (t) {
        n.trigger("rendered", t), !e.animation.isFinished() || n[c0] || n._scheduler.unfinished || n._pendingActions.length || n.trigger("finished");
      });
    }, P0 = function P0(t, a) {
      t.on("mouseover", function (t) {
        var e,
          n,
          i,
          r,
          o = vy(t.target, Vl);
        o && (o = o, e = t, t = a._api, n = Ys(o), i = (r = Ll(n.componentMainType, n.componentIndex, n.componentHighDownName, t)).dispatchers, r = r.focusSelf, i ? (r && Pl(n.componentMainType, n.componentIndex, t), E(i, function (t) {
          return wl(t, e);
        })) : (Al(n.seriesIndex, n.focus, n.blurScope, t), "self" === n.focus && Pl(n.componentMainType, n.componentIndex, t), wl(o, e)), B0(a));
      }).on("mouseout", function (t) {
        var e,
          n,
          i = vy(t.target, Vl);
        i && (i = i, e = t, kl(t = a._api), (n = Ll((n = Ys(i)).componentMainType, n.componentIndex, n.componentHighDownName, t).dispatchers) ? E(n, function (t) {
          return bl(t, e);
        }) : bl(i, e), B0(a));
      }).on("click", function (t) {
        var e,
          t = vy(t.target, function (t) {
            return null != Ys(t).dataIndex;
          }, !0);
        t && (e = t.selected ? "unselect" : "select", t = Ys(t), a._api.dispatchAction({
          type: e,
          dataType: t.dataType,
          dataIndexInside: t.dataIndex,
          seriesIndex: t.seriesIndex,
          isFromClick: !0
        }));
      });
    }, L0 = function L0(t, e, n, i, r) {
      var o, a, s, l, u, h, c;
      u = [], c = !(h = []), (o = e).eachComponent(function (t, e) {
        var n = e.get("zlevel") || 0,
          i = e.get("z") || 0,
          r = e.getZLevelKey();
        c = c || !!r, ("series" === t ? h : u).push({
          zlevel: n,
          z: i,
          idx: e.componentIndex,
          type: t,
          key: r
        });
      }), c && (mn(a = u.concat(h), function (t, e) {
        return t.zlevel === e.zlevel ? t.z - e.z : t.zlevel - e.zlevel;
      }), E(a, function (t) {
        var e = o.getComponent(t.type, t.idx),
          n = t.zlevel,
          t = t.key;
        null != s && (n = Math.max(s, n)), t ? (n === s && t !== l && n++, l = t) : l && (n === s && n++, l = ""), s = n, e.setZLevel(n);
      })), O0(t, e, n, i, r), E(t._chartsViews, function (t) {
        t.__alive = !1;
      }), R0(t, e, n, i, r), E(t._chartsViews, function (t) {
        t.__alive || t.remove(e, n);
      });
    }, O0 = function O0(t, n, i, r, e, o) {
      E(o || t._componentsViews, function (t) {
        var e = t.__model;
        U0(0, t), t.render(e, n, i, r), G0(e, t), q0(e, t);
      });
    }, R0 = function R0(r, t, e, o, n, a) {
      var i,
        s,
        l,
        u,
        h = r._scheduler,
        c = (n = L(n || {}, {
          updatedSeries: t.getSeries()
        }), l0.trigger("series:beforeupdate", t, e, n), !1);
      t.eachSeries(function (t) {
        var e,
          n = r._chartsMap[t.__viewId],
          i = (n.__alive = !0, n.renderTask);
        h.updatePayload(i, o), U0(0, n), a && a.get(t.uid) && i.dirty(), i.perform(h.getPerformArgs(i)) && (c = !0), n.group.silent = !!t.get("silent"), i = n, e = t.get("blendMode") || null, i.eachRendered(function (t) {
          t.isGroup || (t.style.blend = e);
        }), Ol(t);
      }), h.unfinished = c || h.unfinished, l0.trigger("series:layoutlabels", t, e, n), l0.trigger("series:transition", t, e, n), t.eachSeries(function (t) {
        var e = r._chartsMap[t.__viewId];
        G0(t, e), q0(t, e);
      }), s = t, l = (i = r)._zr.storage, u = 0, l.traverse(function (t) {
        t.isGroup || u++;
      }), u > s.get("hoverLayerThreshold") && !b.node && !b.worker && s.eachSeries(function (t) {
        t.preventUsingHoverLayer || (t = i._chartsMap[t.__viewId]).__alive && t.eachRendered(function (t) {
          t.states.emphasis && (t.states.emphasis.hoverLayer = !0);
        });
      }), l0.trigger("series:afterupdate", t, e, n);
    }, B0 = function B0(t) {
      t[p0] = !0, t.getZr().wakeUp();
    }, z0 = function z0(t) {
      t[p0] && (t.getZr().storage.traverse(function (t) {
        Ah(t) || H0(t);
      }), t[p0] = !1);
    }, N0 = function N0(n) {
      return u(t, e = yd), t.prototype.getCoordinateSystems = function () {
        return n._coordSysMgr.getCoordinateSystems();
      }, t.prototype.getComponentByElement = function (t) {
        for (; t;) {
          var e = t.__ecComponentInfo;
          if (null != e) return n._model.getComponent(e.mainType, e.index);
          t = t.parent;
        }
      }, t.prototype.enterEmphasis = function (t, e) {
        Sl(t, e), B0(n);
      }, t.prototype.leaveEmphasis = function (t, e) {
        Ml(t, e), B0(n);
      }, t.prototype.enterBlur = function (t) {
        ml(t, pl), B0(n);
      }, t.prototype.leaveBlur = function (t) {
        Tl(t), B0(n);
      }, t.prototype.enterSelect = function (t) {
        Il(t), B0(n);
      }, t.prototype.leaveSelect = function (t) {
        Cl(t), B0(n);
      }, t.prototype.getModel = function () {
        return n.getModel();
      }, t.prototype.getViewOfComponentModel = function (t) {
        return n.getViewOfComponentModel(t);
      }, t.prototype.getViewOfSeriesModel = function (t) {
        return n.getViewOfSeriesModel(t);
      }, new t(n);
      function t() {
        return null !== e && e.apply(this, arguments) || this;
      }
      var e;
    }, void (E0 = function E0(i) {
      function r(t, e) {
        for (var n = 0; n < t.length; n++) {
          t[n][f0] = e;
        }
      }
      E(Z0, function (t, e) {
        i._messageCenter.on(e, function (t) {
          var e, n;
          !em[i.group] || 0 === i[f0] || t && t.escapeConnect || (e = i.makeActionFromEvent(t), n = [], E(tm, function (t) {
            t !== i && t.group === i.group && n.push(t);
          }), r(n, 0), E(n, function (t) {
            1 !== t[f0] && t.dispatchAction(e);
          }), r(n, 2));
        });
      });
    })), c);
  function c(t, e, n) {
    var i = F0.call(this, new py()) || this,
      t = (i._chartsViews = [], i._chartsMap = {}, i._componentsViews = [], i._componentsMap = {}, i._pendingActions = [], n = n || {}, V(e) && (e = Q0[e]), i._dom = t, n.ssr && $r(function (t) {
        var e,
          t = Ys(t),
          n = t.dataIndex;
        if (null != n) return (e = N()).set("series_index", t.seriesIndex), e.set("data_index", n), t.ssrType && e.set("ssr_type", t.ssrType), e;
      }), i._zr = jr(t, {
        renderer: n.renderer || "canvas",
        devicePixelRatio: n.devicePixelRatio,
        width: n.width,
        height: n.height,
        ssr: n.ssr,
        useDirtyRect: R(n.useDirtyRect, !1),
        useCoarsePointer: R(n.useCoarsePointer, "auto"),
        pointerSize: n.pointerSize
      })),
      n = (i._ssr = n.ssr, i._throttledZrFlush = Wg(pt(t.flush, t), 17), (e = y(e)) && Hd(e, !0), i._theme = e, i._locale = V(e = n.locale || Gc) ? (n = Wc[e.toUpperCase()] || {}, e === zc || e === Fc ? y(n) : d(y(n), y(Wc[Vc]), !1)) : d(y(e), y(Wc[Vc]), !1), i._coordSysMgr = new _d(), i._api = N0(i));
    function r(t, e) {
      return t.__prio - e.__prio;
    }
    return mn($0, r), mn(j0, r), i._scheduler = new jg(i, n, j0, $0), i._messageCenter = new _0(), i._initEvents(), i.resize = pt(i.resize, i), t.animation.on("frame", i._onframe, i), A0(t, i), P0(t, i), kt(i), i;
  }
  function W0(t) {
    t.clearColorPalette(), t.eachSeries(function (t) {
      t.clearColorPalette();
    });
  }
  function H0(t) {
    for (var e = [], n = t.currentStates, i = 0; i < n.length; i++) {
      var r = n[i];
      "emphasis" !== r && "blur" !== r && "select" !== r && e.push(r);
    }
    t.selected && t.states.select && e.push("select"), t.hoverState === tl && t.states.emphasis ? e.push("emphasis") : t.hoverState === Js && t.states.blur && e.push("blur"), t.useStates(e);
  }
  function G0(t, e) {
    var n, i;
    t.preventAutoZ || (n = t.get("z") || 0, i = t.get("zlevel") || 0, e.eachRendered(function (t) {
      return function t(e, n, i, r) {
        var o = e.getTextContent();
        var a = e.getTextGuideLine();
        var s = e.isGroup;
        if (s) for (var l = e.childrenRef(), u = 0; u < l.length; u++) {
          r = Math.max(t(l[u], n, i, r), r);
        } else e.z = n, e.zlevel = i, r = Math.max(e.z2, r);
        o && (o.z = n, o.zlevel = i, isFinite(r)) && (o.z2 = r + 2);
        a && (s = e.textGuideLineConfig, a.z = n, a.zlevel = i, isFinite(r)) && (a.z2 = r + (s && s.showAbove ? 1 : -1));
        return r;
      }(t, n, i, -1 / 0), !0;
    }));
  }
  function U0(t, e) {
    e.eachRendered(function (t) {
      var e, n;
      Ah(t) || (e = t.getTextContent(), n = t.getTextGuideLine(), t.stateTransition && (t.stateTransition = null), e && e.stateTransition && (e.stateTransition = null), n && n.stateTransition && (n.stateTransition = null), t.hasState() ? (t.prevStates = t.currentStates, t.clearStates()) : t.prevStates && (t.prevStates = null));
    });
  }
  function q0(t, e) {
    var n = t.getModel("stateAnimation"),
      r = t.isAnimationEnabled(),
      t = n.get("duration"),
      o = 0 < t ? {
        duration: t,
        delay: n.get("delay"),
        easing: n.get("easing")
      } : null;
    e.eachRendered(function (t) {
      var e, n, i;
      t.states && t.states.emphasis && (Ah(t) || (t instanceof ds && ((i = Ks(n = t)).normalFill = n.style.fill, i.normalStroke = n.style.stroke, n = n.states.select || {}, i.selectFill = n.style && n.style.fill || null, i.selectStroke = n.style && n.style.stroke || null), t.__dirty && (i = t.prevStates) && t.useStates(i), r && (t.stateTransition = o, n = t.getTextContent(), e = t.getTextGuideLine(), n && (n.stateTransition = o), e) && (e.stateTransition = o), t.__dirty && H0(t)));
    });
  }
  var Iy = V0.prototype,
    X0 = (Iy.on = g0("on"), Iy.off = g0("off"), Iy.one = function (i, r, t) {
      var o = this;
      this.on.call(this, i, function t() {
        for (var e = [], n = 0; n < arguments.length; n++) {
          e[n] = arguments[n];
        }
        r && r.apply && r.apply(this, e), o.off(i, t);
      }, t);
    }, ["click", "dblclick", "mouseover", "mouseout", "mousemove", "mousedown", "mouseup", "globalout", "contextmenu"]);
  var Y0 = {},
    Z0 = {},
    j0 = [],
    K0 = [],
    $0 = [],
    Q0 = {},
    J0 = {},
    tm = {},
    em = {},
    nm = +new Date(),
    im = +new Date(),
    rm = "_echarts_instance_";
  function om(t) {
    em[t] = !1;
  }
  Sy = om;
  function am(t) {
    return tm[(e = rm, (t = t).getAttribute ? t.getAttribute(e) : t[e])];
    var e;
  }
  function sm(t, e) {
    Q0[t] = e;
  }
  function lm(t) {
    C(K0, t) < 0 && K0.push(t);
  }
  function um(t, e) {
    vm(j0, t, e, 2e3);
  }
  function hm(t) {
    pm("afterinit", t);
  }
  function cm(t) {
    pm("afterupdate", t);
  }
  function pm(t, e) {
    l0.on(t, e);
  }
  function dm(t, e, n) {
    D(e) && (n = e, e = "");
    var i = O(t) ? t.type : [t, t = {
      event: e
    }][0];
    t.event = (t.event || i).toLowerCase(), e = t.event, Z0[e] || (It(d0.test(i) && d0.test(e)), Y0[i] || (Y0[i] = {
      action: n,
      actionInfo: t
    }), Z0[e] = i);
  }
  function fm(t, e) {
    _d.register(t, e);
  }
  function gm(t, e) {
    vm($0, t, e, 1e3, "layout");
  }
  function ym(t, e) {
    vm($0, t, e, 3e3, "visual");
  }
  var mm = [];
  function vm(t, e, n, i, r) {
    (D(e) || O(e)) && (n = e, e = i), 0 <= C(mm, n) || (mm.push(n), (i = jg.wrapStageHandler(n, r)).__prio = e, i.__raw = n, t.push(i));
  }
  function _m(t, e) {
    J0[t] = e;
  }
  function xm(t, e, n) {
    var i = u0.registerMap;
    i && i(t, e, n);
  }
  function wm(t) {
    var e = (t = y(t)).type,
      n = (e || f(""), e.split(":")),
      i = (2 !== n.length && f(""), !1);
    "echarts" === n[0] && (e = n[1], i = !0), t.__isBuiltIn = i, Zf.set(e, t);
  }
  ym(2e3, Ko), ym(4500, jh), ym(4500, Kc), ym(2e3, kc), ym(4500, Tc), ym(7e3, function (e, i) {
    e.eachRawSeries(function (t) {
      var n;
      !e.isSeriesFiltered(t) && ((n = t.getData()).hasItemVisual() && n.each(function (t) {
        var e = n.getItemVisual(t, "decal");
        e && (n.ensureUniqueItemVisual(t, "style").decal = a0(e, i));
      }), t = n.getVisual("decal")) && (n.getVisual("style").decal = a0(t, i));
    });
  }), lm(Hd), um(900, function (t) {
    var i = N();
    t.eachSeries(function (t) {
      var e,
        n = t.get("stack");
      n && (n = i.get(n) || i.set(n, []), (t = {
        stackResultDimension: (e = t.getData()).getCalculationInfo("stackResultDimension"),
        stackedOverDimension: e.getCalculationInfo("stackedOverDimension"),
        stackedDimension: e.getCalculationInfo("stackedDimension"),
        stackedByDimension: e.getCalculationInfo("stackedByDimension"),
        isStackedByIndex: e.getCalculationInfo("isStackedByIndex"),
        data: e,
        seriesModel: t
      }).stackedDimension) && (t.isStackedByIndex || t.stackedByDimension) && (n.length && e.setCalculationInfo("stackedOnSeries", n[n.length - 1].seriesModel), n.push(t));
    }), i.each(Gd);
  }), _m("default", function (i, r) {
    B(r = r || {}, {
      text: "loading",
      textColor: "#000",
      fontSize: 12,
      fontWeight: "normal",
      fontStyle: "normal",
      fontFamily: "sans-serif",
      maskColor: "rgba(255, 255, 255, 0.8)",
      showSpinner: !0,
      color: "#5470c6",
      spinnerRadius: 10,
      lineWidth: 5,
      zlevel: 0
    });
    var o,
      t = new Hr(),
      a = new As({
        style: {
          fill: r.maskColor
        },
        zlevel: r.zlevel,
        z: 1e4
      }),
      s = (t.add(a), new Ns({
        style: {
          text: r.text,
          fill: r.textColor,
          fontSize: r.fontSize,
          fontWeight: r.fontWeight,
          fontStyle: r.fontStyle,
          fontFamily: r.fontFamily
        },
        zlevel: r.zlevel,
        z: 10001
      })),
      l = new As({
        style: {
          fill: "none"
        },
        textContent: s,
        textConfig: {
          position: "right",
          distance: 10
        },
        zlevel: r.zlevel,
        z: 10001
      });
    return t.add(l), r.showSpinner && ((o = new oh({
      shape: {
        startAngle: -Zg / 2,
        endAngle: -Zg / 2 + .1,
        r: r.spinnerRadius
      },
      style: {
        stroke: r.color,
        lineCap: "round",
        lineWidth: r.lineWidth
      },
      zlevel: r.zlevel,
      z: 10001
    })).animateShape(!0).when(1e3, {
      endAngle: 3 * Zg / 2
    }).start("circularInOut"), o.animateShape(!0).when(1e3, {
      startAngle: 3 * Zg / 2
    }).delay(300).start("circularInOut"), t.add(o)), t.resize = function () {
      var t = s.getBoundingRect().width,
        e = r.showSpinner ? r.spinnerRadius : 0,
        t = (i.getWidth() - 2 * e - (r.showSpinner && t ? 10 : 0) - t) / 2 - (r.showSpinner && t ? 0 : 5 + t / 2) + (r.showSpinner ? 0 : t / 2) + (t ? 0 : e),
        n = i.getHeight() / 2;
      r.showSpinner && o.setShape({
        cx: t,
        cy: n
      }), l.setShape({
        x: t - e,
        y: n - e,
        width: 2 * e,
        height: 2 * e
      }), a.setShape({
        x: 0,
        y: 0,
        width: i.getWidth(),
        height: i.getHeight()
      });
    }, t.resize(), t;
  }), dm({
    type: il,
    event: il,
    update: il
  }, Vt), dm({
    type: rl,
    event: rl,
    update: rl
  }, Vt), dm({
    type: ol,
    event: ol,
    update: ol
  }, Vt), dm({
    type: al,
    event: al,
    update: al
  }, Vt), dm({
    type: sl,
    event: sl,
    update: sl
  }, Vt), sm("light", Pc), sm("dark", Cc);
  function bm(t) {
    return null == t ? 0 : t.length || 1;
  }
  function Sm(t) {
    return t;
  }
  Tm.prototype.add = function (t) {
    return this._add = t, this;
  }, Tm.prototype.update = function (t) {
    return this._update = t, this;
  }, Tm.prototype.updateManyToOne = function (t) {
    return this._updateManyToOne = t, this;
  }, Tm.prototype.updateOneToMany = function (t) {
    return this._updateOneToMany = t, this;
  }, Tm.prototype.updateManyToMany = function (t) {
    return this._updateManyToMany = t, this;
  }, Tm.prototype.remove = function (t) {
    return this._remove = t, this;
  }, Tm.prototype.execute = function () {
    this[this._diffModeMultiple ? "_executeMultiple" : "_executeOneToOne"]();
  }, Tm.prototype._executeOneToOne = function () {
    var t = this._old,
      e = this._new,
      n = {},
      i = new Array(t.length),
      r = new Array(e.length);
    this._initIndexMap(t, null, i, "_oldKeyGetter"), this._initIndexMap(e, n, r, "_newKeyGetter");
    for (var o = 0; o < t.length; o++) {
      var a,
        s = i[o],
        l = n[s],
        u = bm(l);
      1 < u ? (a = l.shift(), 1 === l.length && (n[s] = l[0]), this._update && this._update(a, o)) : 1 === u ? (n[s] = null, this._update && this._update(l, o)) : this._remove && this._remove(o);
    }
    this._performRestAdd(r, n);
  }, Tm.prototype._executeMultiple = function () {
    var t = this._old,
      e = this._new,
      n = {},
      i = {},
      r = [],
      o = [];
    this._initIndexMap(t, n, r, "_oldKeyGetter"), this._initIndexMap(e, i, o, "_newKeyGetter");
    for (var a = 0; a < r.length; a++) {
      var s = r[a],
        l = n[s],
        u = i[s],
        h = bm(l),
        c = bm(u);
      if (1 < h && 1 === c) this._updateManyToOne && this._updateManyToOne(u, l), i[s] = null;else if (1 === h && 1 < c) this._updateOneToMany && this._updateOneToMany(u, l), i[s] = null;else if (1 === h && 1 === c) this._update && this._update(u, l), i[s] = null;else if (1 < h && 1 < c) this._updateManyToMany && this._updateManyToMany(u, l), i[s] = null;else if (1 < h) for (var p = 0; p < h; p++) {
        this._remove && this._remove(l[p]);
      } else this._remove && this._remove(l);
    }
    this._performRestAdd(o, i);
  }, Tm.prototype._performRestAdd = function (t, e) {
    for (var n = 0; n < t.length; n++) {
      var i = t[n],
        r = e[i],
        o = bm(r);
      if (1 < o) for (var a = 0; a < o; a++) {
        this._add && this._add(r[a]);
      } else 1 === o && this._add && this._add(r);
      e[i] = null;
    }
  }, Tm.prototype._initIndexMap = function (t, e, n, i) {
    for (var r = this._diffModeMultiple, o = 0; o < t.length; o++) {
      var a,
        s,
        l = "_ec_" + this[i](t[o], o);
      r || (n[o] = l), e && (0 === (s = bm(a = e[l])) ? (e[l] = o, r && n.push(l)) : 1 === s ? e[l] = [a, o] : a.push(o));
    }
  };
  var Mm = Tm;
  function Tm(t, e, n, i, r, o) {
    this._old = t, this._new = e, this._oldKeyGetter = n || Sm, this._newKeyGetter = i || Sm, this.context = r, this._diffModeMultiple = "multiple" === o;
  }
  Cm.prototype.get = function () {
    return {
      fullDimensions: this._getFullDimensionNames(),
      encode: this._encode
    };
  }, Cm.prototype._getFullDimensionNames = function () {
    return this._cachedDimNames || (this._cachedDimNames = this._schema ? this._schema.makeOutputDimensionNames() : []), this._cachedDimNames;
  };
  var Im = Cm;
  function Cm(t, e) {
    this._encode = t, this._schema = e;
  }
  function Dm(o, t) {
    var e = {},
      a = e.encode = {},
      s = N(),
      l = [],
      u = [],
      h = {},
      i = (E(o.dimensions, function (t) {
        var e,
          n,
          i = o.getDimensionInfo(t),
          r = i.coordDim;
        r && (e = i.coordDimIndex, km(a, r)[e] = t, i.isExtraCoord || (s.set(r, 1), "ordinal" !== (n = i.type) && "time" !== n && (l[0] = t), km(h, r)[e] = o.getDimensionIndex(i.name)), i.defaultTooltip) && u.push(t), Vp.each(function (t, e) {
          var n = km(a, e),
            e = i.otherDims[e];
          null != e && !1 !== e && (n[e] = i.name);
        });
      }), []),
      r = {},
      n = (s.each(function (t, e) {
        var n = a[e];
        r[e] = n[0], i = i.concat(n);
      }), e.dataDimsOnCoord = i, e.dataDimIndicesOnCoord = z(i, function (t) {
        return o.getDimensionInfo(t).storeDimIndex;
      }), e.encodeFirstDimNotExtra = r, a.label),
      n = (n && n.length && (l = n.slice()), a.tooltip);
    return n && n.length ? u = n.slice() : u.length || (u = l.slice()), a.defaultedLabel = l, a.defaultedTooltip = u, e.userOutput = new Im(h, t), e;
  }
  function km(t, e) {
    return t.hasOwnProperty(e) || (t[e] = []), t[e];
  }
  var Am = function Am(t) {
      this.otherDims = {}, null != t && L(this, t);
    },
    Pm = Po(),
    Lm = {
      float: "f",
      int: "i",
      ordinal: "o",
      number: "n",
      time: "t"
    },
    Om = (Rm.prototype.isDimensionOmitted = function () {
      return this._dimOmitted;
    }, Rm.prototype._updateDimOmitted = function (t) {
      (this._dimOmitted = t) && !this._dimNameMap && (this._dimNameMap = Bm(this.source));
    }, Rm.prototype.getSourceDimensionIndex = function (t) {
      return R(this._dimNameMap.get(t), -1);
    }, Rm.prototype.getSourceDimension = function (t) {
      var e = this.source.dimensionsDefine;
      if (e) return e[t];
    }, Rm.prototype.makeStoreSchema = function () {
      for (var t = this._fullDimCount, e = Jd(this.source), n = !(30 < t), i = "", r = [], o = 0, a = 0; o < t; o++) {
        var s,
          l = void 0,
          u = void 0,
          h = void 0,
          c = this.dimensions[a];
        c && c.storeDimIndex === o ? (l = e ? c.name : null, u = c.type, h = c.ordinalMeta, a++) : (s = this.getSourceDimension(o)) && (l = e ? s.name : null, u = s.type), r.push({
          property: l,
          type: u,
          ordinalMeta: h
        }), !e || null == l || c && c.isCalculationCoord || (i += n ? l.replace(/\`/g, "`1").replace(/\$/g, "`2") : l), i = i + "$" + (Lm[u] || "f"), h && (i += h.uid), i += "$";
      }
      var p = this.source;
      return {
        dimensions: r,
        hash: [p.seriesLayoutBy, p.startIndex, i].join("$$")
      };
    }, Rm.prototype.makeOutputDimensionNames = function () {
      for (var t = [], e = 0, n = 0; e < this._fullDimCount; e++) {
        var i = void 0,
          r = this.dimensions[n];
        r && r.storeDimIndex === e ? (r.isCalculationCoord || (i = r.name), n++) : (r = this.getSourceDimension(e)) && (i = r.name), t.push(i);
      }
      return t;
    }, Rm.prototype.appendCalculationDimension = function (t) {
      this.dimensions.push(t), t.isCalculationCoord = !0, this._fullDimCount++, this._updateDimOmitted(!0);
    }, Rm);
  function Rm(t) {
    this.dimensions = t.dimensions, this._dimOmitted = t.dimensionOmitted, this.source = t.source, this._fullDimCount = t.fullDimensionCount, this._updateDimOmitted(t.dimensionOmitted);
  }
  function Nm(t) {
    return t instanceof Om;
  }
  function Em(t) {
    for (var e = N(), n = 0; n < (t || []).length; n++) {
      var i = t[n],
        i = O(i) ? i.name : i;
      null != i && null == e.get(i) && e.set(i, n);
    }
    return e;
  }
  function Bm(t) {
    var e = Pm(t);
    return e.dimNameMap || (e.dimNameMap = Em(t.dimensionsDefine));
  }
  var zm,
    Fm,
    Vm,
    Wm,
    Hm,
    Gm,
    Um,
    qm = O,
    Xm = z,
    Ym = "undefined" == typeof Int32Array ? Array : Int32Array,
    Zm = ["hasItemOption", "_nameList", "_idList", "_invertedIndicesMap", "_dimSummary", "userOutput", "_rawData", "_dimValueGetter", "_nameDimIdx", "_idDimIdx", "_nameRepeatCount"],
    jm = ["_approximateExtent"],
    Km = (p.prototype.getDimension = function (t) {
      var e;
      return null == (e = this._recognizeDimIndex(t)) ? t : (e = t, this._dimOmitted ? null != (t = this._dimIdxToName.get(e)) ? t : (t = this._schema.getSourceDimension(e)) ? t.name : void 0 : this.dimensions[e]);
    }, p.prototype.getDimensionIndex = function (t) {
      var e = this._recognizeDimIndex(t);
      return null != e ? e : null == t ? -1 : (e = this._getDimInfo(t)) ? e.storeDimIndex : this._dimOmitted ? this._schema.getSourceDimensionIndex(t) : -1;
    }, p.prototype._recognizeDimIndex = function (t) {
      if (W(t) || null != t && !isNaN(t) && !this._getDimInfo(t) && (!this._dimOmitted || this._schema.getSourceDimensionIndex(t) < 0)) return +t;
    }, p.prototype._getStoreDimIndex = function (t) {
      return this.getDimensionIndex(t);
    }, p.prototype.getDimensionInfo = function (t) {
      return this._getDimInfo(this.getDimension(t));
    }, p.prototype._initGetDimensionInfo = function (t) {
      var e = this._dimInfos;
      this._getDimInfo = t ? function (t) {
        return e.hasOwnProperty(t) ? e[t] : void 0;
      } : function (t) {
        return e[t];
      };
    }, p.prototype.getDimensionsOnCoord = function () {
      return this._dimSummary.dataDimsOnCoord.slice();
    }, p.prototype.mapDimension = function (t, e) {
      var n = this._dimSummary;
      return null == e ? n.encodeFirstDimNotExtra[t] : (n = n.encode[t]) ? n[e] : null;
    }, p.prototype.mapDimensionsAll = function (t) {
      return (this._dimSummary.encode[t] || []).slice();
    }, p.prototype.getStore = function () {
      return this._store;
    }, p.prototype.initData = function (t, e, n) {
      var i,
        r,
        o = this;
      (i = t instanceof og ? t : i) || (r = this.dimensions, t = Yd(t) || st(t) ? new rf(t, r.length) : t, i = new og(), r = Xm(r, function (t) {
        return {
          type: o._dimInfos[t].type,
          property: t
        };
      }), i.initData(t, r, n)), this._store = i, this._nameList = (e || []).slice(), this._idList = [], this._nameRepeatCount = {}, this._doInit(0, i.count()), this._dimSummary = Dm(this, this._schema), this.userOutput = this._dimSummary.userOutput;
    }, p.prototype.appendData = function (t) {
      t = this._store.appendData(t);
      this._doInit(t[0], t[1]);
    }, p.prototype.appendValues = function (t, e) {
      var t = this._store.appendValues(t, e && e.length),
        n = t.start,
        i = t.end,
        r = this._shouldMakeIdFromName();
      if (this._updateOrdinalMeta(), e) for (var o = n; o < i; o++) {
        this._nameList[o] = e[o - n], r && Um(this, o);
      }
    }, p.prototype._updateOrdinalMeta = function () {
      for (var t = this._store, e = this.dimensions, n = 0; n < e.length; n++) {
        var i = this._dimInfos[e[n]];
        i.ordinalMeta && t.collectOrdinalMeta(i.storeDimIndex, i.ordinalMeta);
      }
    }, p.prototype._shouldMakeIdFromName = function () {
      var t = this._store.getProvider();
      return null == this._idDimIdx && t.getSource().sourceFormat !== qp && !t.fillStorage;
    }, p.prototype._doInit = function (t, e) {
      if (!(e <= t)) {
        var n = this._store.getProvider(),
          i = (this._updateOrdinalMeta(), this._nameList),
          r = this._idList;
        if (n.getSource().sourceFormat === Wp && !n.pure) for (var o = [], a = t; a < e; a++) {
          var s,
            l = n.getItem(a, o);
          this.hasItemOption || !O(s = l) || s instanceof Array || (this.hasItemOption = !0), l && (s = l.name, null == i[a] && null != s && (i[a] = Io(s, null)), l = l.id, null == r[a]) && null != l && (r[a] = Io(l, null));
        }
        if (this._shouldMakeIdFromName()) for (a = t; a < e; a++) {
          Um(this, a);
        }
        zm(this);
      }
    }, p.prototype.getApproximateExtent = function (t) {
      return this._approximateExtent[t] || this._store.getDataExtent(this._getStoreDimIndex(t));
    }, p.prototype.setApproximateExtent = function (t, e) {
      e = this.getDimension(e), this._approximateExtent[e] = t.slice();
    }, p.prototype.getCalculationInfo = function (t) {
      return this._calculationInfo[t];
    }, p.prototype.setCalculationInfo = function (t, e) {
      qm(t) ? L(this._calculationInfo, t) : this._calculationInfo[t] = e;
    }, p.prototype.getName = function (t) {
      var t = this.getRawIndex(t),
        e = this._nameList[t];
      return e = null == (e = null == e && null != this._nameDimIdx ? Vm(this, this._nameDimIdx, t) : e) ? "" : e;
    }, p.prototype._getCategory = function (t, e) {
      e = this._store.get(t, e), t = this._store.getOrdinalMeta(t);
      return t ? t.categories[e] : e;
    }, p.prototype.getId = function (t) {
      return Fm(this, this.getRawIndex(t));
    }, p.prototype.count = function () {
      return this._store.count();
    }, p.prototype.get = function (t, e) {
      var n = this._store,
        t = this._dimInfos[t];
      if (t) return n.get(t.storeDimIndex, e);
    }, p.prototype.getByRawIndex = function (t, e) {
      var n = this._store,
        t = this._dimInfos[t];
      if (t) return n.getByRawIndex(t.storeDimIndex, e);
    }, p.prototype.getIndices = function () {
      return this._store.getIndices();
    }, p.prototype.getDataExtent = function (t) {
      return this._store.getDataExtent(this._getStoreDimIndex(t));
    }, p.prototype.getSum = function (t) {
      return this._store.getSum(this._getStoreDimIndex(t));
    }, p.prototype.getMedian = function (t) {
      return this._store.getMedian(this._getStoreDimIndex(t));
    }, p.prototype.getValues = function (t, e) {
      var n = this,
        i = this._store;
      return F(t) ? i.getValues(Xm(t, function (t) {
        return n._getStoreDimIndex(t);
      }), e) : i.getValues(t);
    }, p.prototype.hasValue = function (t) {
      for (var e = this._dimSummary.dataDimIndicesOnCoord, n = 0, i = e.length; n < i; n++) {
        if (isNaN(this._store.get(e[n], t))) return !1;
      }
      return !0;
    }, p.prototype.indexOfName = function (t) {
      for (var e = 0, n = this._store.count(); e < n; e++) {
        if (this.getName(e) === t) return e;
      }
      return -1;
    }, p.prototype.getRawIndex = function (t) {
      return this._store.getRawIndex(t);
    }, p.prototype.indexOfRawIndex = function (t) {
      return this._store.indexOfRawIndex(t);
    }, p.prototype.rawIndexOf = function (t, e) {
      t = t && this._invertedIndicesMap[t], t = t && t[e];
      return null == t || isNaN(t) ? -1 : t;
    }, p.prototype.indicesOfNearest = function (t, e, n) {
      return this._store.indicesOfNearest(this._getStoreDimIndex(t), e, n);
    }, p.prototype.each = function (t, e, n) {
      D(t) && (n = e, e = t, t = []);
      n = n || this, t = Xm(Wm(t), this._getStoreDimIndex, this);
      this._store.each(t, n ? pt(e, n) : e);
    }, p.prototype.filterSelf = function (t, e, n) {
      D(t) && (n = e, e = t, t = []);
      n = n || this, t = Xm(Wm(t), this._getStoreDimIndex, this);
      return this._store = this._store.filter(t, n ? pt(e, n) : e), this;
    }, p.prototype.selectRange = function (n) {
      var i = this,
        r = {};
      return E(ct(n), function (t) {
        var e = i._getStoreDimIndex(t);
        r[e] = n[t];
      }), this._store = this._store.selectRange(r), this;
    }, p.prototype.mapArray = function (t, e, n) {
      D(t) && (n = e, e = t, t = []);
      var i = [];
      return this.each(t, function () {
        i.push(e && e.apply(this, arguments));
      }, n = n || this), i;
    }, p.prototype.map = function (t, e, n, i) {
      n = n || i || this, i = Xm(Wm(t), this._getStoreDimIndex, this), t = Gm(this);
      return t._store = this._store.map(i, n ? pt(e, n) : e), t;
    }, p.prototype.modify = function (t, e, n, i) {
      n = n || i || this, i = Xm(Wm(t), this._getStoreDimIndex, this);
      this._store.modify(i, n ? pt(e, n) : e);
    }, p.prototype.downSample = function (t, e, n, i) {
      var r = Gm(this);
      return r._store = this._store.downSample(this._getStoreDimIndex(t), e, n, i), r;
    }, p.prototype.minmaxDownSample = function (t, e) {
      var n = Gm(this);
      return n._store = this._store.minmaxDownSample(this._getStoreDimIndex(t), e), n;
    }, p.prototype.lttbDownSample = function (t, e) {
      var n = Gm(this);
      return n._store = this._store.lttbDownSample(this._getStoreDimIndex(t), e), n;
    }, p.prototype.getRawDataItem = function (t) {
      return this._store.getRawDataItem(t);
    }, p.prototype.getItemModel = function (t) {
      var e = this.hostModel,
        t = this.getRawDataItem(t);
      return new Rc(t, e, e && e.ecModel);
    }, p.prototype.diff = function (e) {
      var n = this;
      return new Mm(e ? e.getStore().getIndices() : [], this.getStore().getIndices(), function (t) {
        return Fm(e, t);
      }, function (t) {
        return Fm(n, t);
      });
    }, p.prototype.getVisual = function (t) {
      var e = this._visual;
      return e && e[t];
    }, p.prototype.setVisual = function (t, e) {
      this._visual = this._visual || {}, qm(t) ? L(this._visual, t) : this._visual[t] = e;
    }, p.prototype.getItemVisual = function (t, e) {
      t = this._itemVisuals[t], t = t && t[e];
      return null == t ? this.getVisual(e) : t;
    }, p.prototype.hasItemVisual = function () {
      return 0 < this._itemVisuals.length;
    }, p.prototype.ensureUniqueItemVisual = function (t, e) {
      var n = this._itemVisuals,
        i = n[t],
        n = (i = i || (n[t] = {}))[e];
      return null == n && (F(n = this.getVisual(e)) ? n = n.slice() : qm(n) && (n = L({}, n)), i[e] = n), n;
    }, p.prototype.setItemVisual = function (t, e, n) {
      var i = this._itemVisuals[t] || {};
      this._itemVisuals[t] = i, qm(e) ? L(i, e) : i[e] = n;
    }, p.prototype.clearAllVisual = function () {
      this._visual = {}, this._itemVisuals = [];
    }, p.prototype.setLayout = function (t, e) {
      qm(t) ? L(this._layout, t) : this._layout[t] = e;
    }, p.prototype.getLayout = function (t) {
      return this._layout[t];
    }, p.prototype.getItemLayout = function (t) {
      return this._itemLayouts[t];
    }, p.prototype.setItemLayout = function (t, e, n) {
      this._itemLayouts[t] = n ? L(this._itemLayouts[t] || {}, e) : e;
    }, p.prototype.clearItemLayouts = function () {
      this._itemLayouts.length = 0;
    }, p.prototype.setItemGraphicEl = function (t, e) {
      var n,
        i,
        r,
        o,
        a = this.hostModel && this.hostModel.seriesIndex;
      n = a, i = this.dataType, r = t, (a = e) && ((o = Ys(a)).dataIndex = r, o.dataType = i, o.seriesIndex = n, o.ssrType = "chart", "group" === a.type) && a.traverse(function (t) {
        t = Ys(t);
        t.seriesIndex = n, t.dataIndex = r, t.dataType = i, t.ssrType = "chart";
      }), this._graphicEls[t] = e;
    }, p.prototype.getItemGraphicEl = function (t) {
      return this._graphicEls[t];
    }, p.prototype.eachItemGraphicEl = function (n, i) {
      E(this._graphicEls, function (t, e) {
        t && n && n.call(i, t, e);
      });
    }, p.prototype.cloneShallow = function (t) {
      return t = t || new p(this._schema || Xm(this.dimensions, this._getDimInfo, this), this.hostModel), Hm(t, this), t._store = this._store, t;
    }, p.prototype.wrapMethod = function (t, e) {
      var n = this[t];
      D(n) && (this.__wrappedMethods = this.__wrappedMethods || [], this.__wrappedMethods.push(t), this[t] = function () {
        var t = n.apply(this, arguments);
        return e.apply(this, [t].concat(Mt(arguments)));
      });
    }, p.internalField = (zm = function zm(a) {
      var s = a._invertedIndicesMap;
      E(s, function (t, e) {
        var n = a._dimInfos[e],
          i = n.ordinalMeta,
          r = a._store;
        if (i) {
          t = s[e] = new Ym(i.categories.length);
          for (var o = 0; o < t.length; o++) {
            t[o] = -1;
          }
          for (o = 0; o < r.count(); o++) {
            t[r.get(n.storeDimIndex, o)] = o;
          }
        }
      });
    }, Vm = function Vm(t, e, n) {
      return Io(t._getCategory(e, n), null);
    }, Fm = function Fm(t, e) {
      var n = t._idList[e];
      return n = null == (n = null == n && null != t._idDimIdx ? Vm(t, t._idDimIdx, e) : n) ? "e\0\0" + e : n;
    }, Wm = function Wm(t) {
      return t = F(t) ? t : null != t ? [t] : [];
    }, Gm = function Gm(t) {
      var e = new p(t._schema || Xm(t.dimensions, t._getDimInfo, t), t.hostModel);
      return Hm(e, t), e;
    }, Hm = function Hm(e, n) {
      E(Zm.concat(n.__wrappedMethods || []), function (t) {
        n.hasOwnProperty(t) && (e[t] = n[t]);
      }), e.__wrappedMethods = n.__wrappedMethods, E(jm, function (t) {
        e[t] = y(n[t]);
      }), e._calculationInfo = L({}, n._calculationInfo);
    }, void (Um = function Um(t, e) {
      var n = t._nameList,
        i = t._idList,
        r = t._nameDimIdx,
        o = t._idDimIdx,
        a = n[e],
        s = i[e];
      null == a && null != r && (n[e] = a = Vm(t, r, e)), null == s && null != o && (i[e] = s = Vm(t, o, e)), null == s && null != a && (s = a, 1 < (r = (n = t._nameRepeatCount)[a] = (n[a] || 0) + 1) && (s += "__ec__" + r), i[e] = s);
    })), p);
  function p(t, e) {
    this.type = "list", this._dimOmitted = !1, this._nameList = [], this._idList = [], this._visual = {}, this._layout = {}, this._itemVisuals = [], this._itemLayouts = [], this._graphicEls = [], this._approximateExtent = {}, this._calculationInfo = {}, this.hasItemOption = !1, this.TRANSFERABLE_METHODS = ["cloneShallow", "downSample", "minmaxDownSample", "lttbDownSample", "map"], this.CHANGABLE_METHODS = ["filterSelf", "selectRange"];
    for (var n, i, r = !(this.DOWNSAMPLE_METHODS = ["downSample", "minmaxDownSample", "lttbDownSample"]), o = (Nm(t) ? (n = t.dimensions, this._dimOmitted = t.isDimensionOmitted(), this._schema = t) : (r = !0, n = t), n = n || ["x", "y"], {}), a = [], s = {}, l = !1, u = {}, h = 0; h < n.length; h++) {
      var c = n[h],
        c = V(c) ? new Am({
          name: c
        }) : c instanceof Am ? c : new Am(c),
        p = c.name,
        d = (c.type = c.type || "float", c.coordDim || (c.coordDim = p, c.coordDimIndex = 0), c.otherDims = c.otherDims || {});
      a.push(p), null != u[p] && (l = !0), (o[p] = c).createInvertedIndices && (s[p] = []), 0 === d.itemName && (this._nameDimIdx = h), 0 === d.itemId && (this._idDimIdx = h), r && (c.storeDimIndex = h);
    }
    this.dimensions = a, this._dimInfos = o, this._initGetDimensionInfo(l), this.hostModel = e, this._invertedIndicesMap = s, this._dimOmitted && (i = this._dimIdxToName = N(), E(a, function (t) {
      i.set(o[t].storeDimIndex, t);
    }));
  }
  function $m(t, e) {
    Yd(t) || (t = jd(t));
    for (var n, i, r = (e = e || {}).coordDimensions || [], o = e.dimensionsDefine || t.dimensionsDefine || [], a = N(), s = [], l = (u = t, n = r, p = e.dimensionsCount, i = Math.max(u.dimensionsDetectedCount || 1, n.length, o.length, p || 0), E(n, function (t) {
        O(t) && (t = t.dimsDef) && (i = Math.max(i, t.length));
      }), i), u = e.canOmitUnusedDimensions && 30 < l, h = o === t.dimensionsDefine, c = h ? Bm(t) : Em(o), p = e.encodeDefine, d = N(p = !p && e.encodeDefaulter ? e.encodeDefaulter(t, l) : p), f = new tg(l), g = 0; g < f.length; g++) {
      f[g] = -1;
    }
    function y(t) {
      var e,
        n,
        i,
        r = f[t];
      return r < 0 ? (e = O(e = o[t]) ? e : {
        name: e
      }, n = new Am(), null != (i = e.name) && null != c.get(i) && (n.name = n.displayName = i), null != e.type && (n.type = e.type), null != e.displayName && (n.displayName = e.displayName), f[t] = s.length, n.storeDimIndex = t, s.push(n), n) : s[r];
    }
    if (!u) for (g = 0; g < l; g++) {
      y(g);
    }
    d.each(function (t, n) {
      var i,
        t = _o(t).slice();
      1 === t.length && !V(t[0]) && t[0] < 0 ? d.set(n, !1) : (i = d.set(n, []), E(t, function (t, e) {
        t = V(t) ? c.get(t) : t;
        null != t && t < l && v(y(i[e] = t), n, e);
      }));
    });
    var m = 0;
    function v(t, e, n) {
      null != Vp.get(e) ? t.otherDims[e] = n : (t.coordDim = e, t.coordDimIndex = n, a.set(e, !0));
    }
    E(r, function (t) {
      V(t) ? (o = t, r = {}) : (o = (r = t).name, t = r.ordinalMeta, r.ordinalMeta = null, (r = L({}, r)).ordinalMeta = t, n = r.dimsDef, i = r.otherDims, r.name = r.coordDim = r.coordDimIndex = r.dimsDef = r.otherDims = null);
      var n,
        i,
        r,
        o,
        e = d.get(o);
      if (!1 !== e) {
        if (!(e = _o(e)).length) for (var a = 0; a < (n && n.length || 1); a++) {
          for (; m < l && null != y(m).coordDim;) {
            m++;
          }
          m < l && e.push(m++);
        }
        E(e, function (t, e) {
          t = y(t);
          h && null != r.type && (t.type = r.type), v(B(t, r), o, e), null == t.name && n && (O(e = n[e]) || (e = {
            name: e
          }), t.name = t.displayName = e.name, t.defaultTooltip = e.defaultTooltip), i && B(t.otherDims, i);
        });
      }
    });
    var _ = e.generateCoord,
      x = null != (w = e.generateCoordCount),
      w = _ ? w || 1 : 0,
      b = _ || "value";
    function S(t) {
      null == t.name && (t.name = t.coordDim);
    }
    if (u) E(s, function (t) {
      S(t);
    }), s.sort(function (t, e) {
      return t.storeDimIndex - e.storeDimIndex;
    });else for (var M = 0; M < l; M++) {
      var T = y(M);
      null == T.coordDim && (T.coordDim = function (t, e, n) {
        if (n || e.hasKey(t)) {
          for (var i = 0; e.hasKey(t + i);) {
            i++;
          }
          t += i;
        }
        return e.set(t, !0), t;
      }(b, a, x), T.coordDimIndex = 0, (!_ || w <= 0) && (T.isExtraCoord = !0), w--), S(T), null != T.type || td(t, M) !== jp.Must && (!T.isExtraCoord || null == T.otherDims.itemName && null == T.otherDims.seriesName) || (T.type = "ordinal");
    }
    for (var I = s, C = N(), D = 0; D < I.length; D++) {
      var k = I[D],
        A = k.name,
        P = C.get(A) || 0;
      0 < P && (k.name = A + (P - 1)), P++, C.set(A, P);
    }
    return new Om({
      source: t,
      dimensions: s,
      fullDimensionCount: l,
      dimensionOmitted: u
    });
  }
  var Qm = function Qm(t) {
    this.coordSysDims = [], this.axisMap = N(), this.categoryAxisMap = N(), this.coordSysName = t;
  };
  var Jm = {
    cartesian2d: function cartesian2d(t, e, n, i) {
      var r = t.getReferringComponents("xAxis", No).models[0],
        t = t.getReferringComponents("yAxis", No).models[0];
      e.coordSysDims = ["x", "y"], n.set("x", r), n.set("y", t), tv(r) && (i.set("x", r), e.firstCategoryDimIndex = 0), tv(t) && (i.set("y", t), null == e.firstCategoryDimIndex) && (e.firstCategoryDimIndex = 1);
    },
    singleAxis: function singleAxis(t, e, n, i) {
      t = t.getReferringComponents("singleAxis", No).models[0];
      e.coordSysDims = ["single"], n.set("single", t), tv(t) && (i.set("single", t), e.firstCategoryDimIndex = 0);
    },
    polar: function polar(t, e, n, i) {
      var t = t.getReferringComponents("polar", No).models[0],
        r = t.findAxisModel("radiusAxis"),
        t = t.findAxisModel("angleAxis");
      e.coordSysDims = ["radius", "angle"], n.set("radius", r), n.set("angle", t), tv(r) && (i.set("radius", r), e.firstCategoryDimIndex = 0), tv(t) && (i.set("angle", t), null == e.firstCategoryDimIndex) && (e.firstCategoryDimIndex = 1);
    },
    geo: function geo(t, e, n, i) {
      e.coordSysDims = ["lng", "lat"];
    },
    parallel: function parallel(t, i, r, o) {
      var a = t.ecModel,
        t = a.getComponent("parallel", t.get("parallelIndex")),
        s = i.coordSysDims = t.dimensions.slice();
      E(t.parallelAxisIndex, function (t, e) {
        var t = a.getComponent("parallelAxis", t),
          n = s[e];
        r.set(n, t), tv(t) && (o.set(n, t), null == i.firstCategoryDimIndex) && (i.firstCategoryDimIndex = e);
      });
    }
  };
  function tv(t) {
    return "category" === t.get("type");
  }
  function ev(t, e, n) {
    var i,
      r,
      o,
      a,
      s,
      l,
      u,
      h,
      c,
      p = (n = n || {}).byIndex,
      d = n.stackedCoordDimension,
      f = (Nm(e.schema) ? (r = e.schema, i = r.dimensions, o = e.store) : i = e, !(!t || !t.get("stack")));
    return E(i, function (t, e) {
      V(t) && (i[e] = t = {
        name: t
      }), f && !t.isExtraCoord && (p || a || !t.ordinalMeta || (a = t), s || "ordinal" === t.type || "time" === t.type || d && d !== t.coordDim || (s = t));
    }), !s || p || a || (p = !0), s && (l = "__\0ecstackresult_" + t.id, u = "__\0ecstackedover_" + t.id, a && (a.createInvertedIndices = !0), h = s.coordDim, n = s.type, c = 0, E(i, function (t) {
      t.coordDim === h && c++;
    }), e = {
      name: l,
      coordDim: h,
      coordDimIndex: c,
      type: n,
      isExtraCoord: !0,
      isCalculationCoord: !0,
      storeDimIndex: i.length
    }, t = {
      name: u,
      coordDim: u,
      coordDimIndex: c + 1,
      type: n,
      isExtraCoord: !0,
      isCalculationCoord: !0,
      storeDimIndex: i.length + 1
    }, r ? (o && (e.storeDimIndex = o.ensureCalculationDimension(u, n), t.storeDimIndex = o.ensureCalculationDimension(l, n)), r.appendCalculationDimension(e), r.appendCalculationDimension(t)) : (i.push(e), i.push(t))), {
      stackedDimension: s && s.name,
      stackedByDimension: a && a.name,
      isStackedByIndex: p,
      stackedOverDimension: u,
      stackResultDimension: l
    };
  }
  function nv(t, e) {
    return !!e && e === t.getCalculationInfo("stackedDimension");
  }
  function iv(t, e) {
    return nv(t, e) ? t.getCalculationInfo("stackResultDimension") : e;
  }
  function rv(t, e, n) {
    n = n || {};
    var i,
      r,
      o,
      a,
      s,
      l,
      u = e.getSourceManager(),
      h = !1,
      t = (t ? (h = !0, i = jd(t)) : h = (i = u.getSource()).sourceFormat === Wp, function (t) {
        var e = t.get("coordinateSystem"),
          n = new Qm(e);
        if (e = Jm[e]) return e(t, n, n.axisMap, n.categoryAxisMap), n;
      }(e)),
      c = (r = t, c = (c = e).get("coordinateSystem"), c = _d.get(c), p = (p = r && r.coordSysDims ? z(r.coordSysDims, function (t) {
        var e = {
            name: t
          },
          t = r.axisMap.get(t);
        return t && (t = t.get("type"), e.type = "category" === (t = t) ? "ordinal" : "time" === t ? "time" : "float"), e;
      }) : p) || c && (c.getDimensionsInfo ? c.getDimensionsInfo() : c.dimensions.slice()) || ["x", "y"]),
      p = n.useEncodeDefaulter,
      p = D(p) ? p : p ? dt($p, c, e) : null,
      c = {
        coordDimensions: c,
        generateCoord: n.generateCoord,
        encodeDefine: e.getEncode(),
        encodeDefaulter: p,
        canOmitUnusedDimensions: !h
      },
      p = $m(i, c),
      d = (c = p.dimensions, o = n.createInvertedIndices, (a = t) && E(c, function (t, e) {
        var n = t.coordDim,
          n = a.categoryAxisMap.get(n);
        n && (null == s && (s = e), t.ordinalMeta = n.getOrdinalMeta(), o) && (t.createInvertedIndices = !0), null != t.otherDims.itemName && (l = !0);
      }), l || null == s || (c[s].otherDims.itemName = 0), s),
      n = h ? null : u.getSharedDataStore(p),
      t = ev(e, {
        schema: p,
        store: n
      }),
      c = new Km(p, e),
      p = (c.setCalculationInfo(t), null == d || (u = i).sourceFormat !== Wp || F(bo(function (t) {
        var e = 0;
        for (; e < t.length && null == t[e];) {
          e++;
        }
        return t[e];
      }(u.data || []))) ? null : function (t, e, n, i) {
        return i === d ? n : this.defaultDimValueGetter(t, e, n, i);
      });
    return c.hasItemOption = !1, c.initData(h ? i : n, null, p), c;
  }
  av.prototype.getSetting = function (t) {
    return this._setting[t];
  }, av.prototype.unionExtent = function (t) {
    var e = this._extent;
    t[0] < e[0] && (e[0] = t[0]), t[1] > e[1] && (e[1] = t[1]);
  }, av.prototype.unionExtentFromData = function (t, e) {
    this.unionExtent(t.getApproximateExtent(e));
  }, av.prototype.getExtent = function () {
    return this._extent.slice();
  }, av.prototype.setExtent = function (t, e) {
    var n = this._extent;
    isNaN(t) || (n[0] = t), isNaN(e) || (n[1] = e);
  }, av.prototype.isInExtentRange = function (t) {
    return this._extent[0] <= t && this._extent[1] >= t;
  }, av.prototype.isBlank = function () {
    return this._isBlank;
  }, av.prototype.setBlank = function (t) {
    this._isBlank = t;
  };
  var ov = av;
  function av(t) {
    this._setting = t || {}, this._extent = [1 / 0, -1 / 0];
  }
  Yo(ov);
  var sv = 0,
    lv = (uv.createByAxisModel = function (t) {
      var t = t.option,
        e = t.data,
        e = e && z(e, hv);
      return new uv({
        categories: e,
        needCollect: !e,
        deduplication: !1 !== t.dedplication
      });
    }, uv.prototype.getOrdinal = function (t) {
      return this._getOrCreateMap().get(t);
    }, uv.prototype.parseAndCollect = function (t) {
      var e,
        n,
        i = this._needCollect;
      return V(t) || i ? (i && !this._deduplication ? (n = this.categories.length, this.categories[n] = t) : null == (n = (e = this._getOrCreateMap()).get(t)) && (i ? (n = this.categories.length, this.categories[n] = t, e.set(t, n)) : n = NaN), n) : t;
    }, uv.prototype._getOrCreateMap = function () {
      return this._map || (this._map = N(this.categories));
    }, uv);
  function uv(t) {
    this.categories = t.categories || [], this._needCollect = t.needCollect, this._deduplication = t.deduplication, this.uid = ++sv;
  }
  function hv(t) {
    return O(t) && null != t.value ? t.value : t + "";
  }
  function cv(t, e, n, i) {
    var r = {},
      o = t[1] - t[0],
      o = r.interval = po(o / e, !0),
      e = (null != n && o < n && (o = r.interval = n), null != i && i < o && (o = r.interval = i), r.intervalPrecision = dv(o)),
      n = r.niceTickExtent = [eo(Math.ceil(t[0] / o) * o, e), eo(Math.floor(t[1] / o) * o, e)];
    return i = n, o = t, isFinite(i[0]) || (i[0] = o[0]), isFinite(i[1]) || (i[1] = o[1]), fv(i, 0, o), fv(i, 1, o), i[0] > i[1] && (i[0] = i[1]), r;
  }
  function pv(t) {
    var e = Math.pow(10, co(t)),
      t = t / e;
    return t ? 2 === t ? t = 3 : 3 === t ? t = 5 : t *= 2 : t = 1, eo(t * e);
  }
  function dv(t) {
    return no(t) + 2;
  }
  function fv(t, e, n) {
    t[e] = Math.max(Math.min(t[e], n[1]), n[0]);
  }
  function gv(t, e) {
    return t >= e[0] && t <= e[1];
  }
  function yv(t, e) {
    return e[1] === e[0] ? .5 : (t - e[0]) / (e[1] - e[0]);
  }
  function mv(t, e) {
    return t * (e[1] - e[0]) + e[0];
  }
  u(xv, vv = ov), xv.prototype.parse = function (t) {
    return null == t ? NaN : V(t) ? this._ordinalMeta.getOrdinal(t) : Math.round(t);
  }, xv.prototype.contain = function (t) {
    return gv(t = this.parse(t), this._extent) && null != this._ordinalMeta.categories[t];
  }, xv.prototype.normalize = function (t) {
    return yv(t = this._getTickNumber(this.parse(t)), this._extent);
  }, xv.prototype.scale = function (t) {
    return t = Math.round(mv(t, this._extent)), this.getRawOrdinalNumber(t);
  }, xv.prototype.getTicks = function () {
    for (var t = [], e = this._extent, n = e[0]; n <= e[1];) {
      t.push({
        value: n
      }), n++;
    }
    return t;
  }, xv.prototype.getMinorTicks = function (t) {}, xv.prototype.setSortInfo = function (t) {
    if (null == t) this._ordinalNumbersByTick = this._ticksByOrdinalNumber = null;else {
      for (var e = t.ordinalNumbers, n = this._ordinalNumbersByTick = [], i = this._ticksByOrdinalNumber = [], r = 0, o = this._ordinalMeta.categories.length, a = Math.min(o, e.length); r < a; ++r) {
        var s = e[r];
        i[n[r] = s] = r;
      }
      for (var l = 0; r < o; ++r) {
        for (; null != i[l];) {
          l++;
        }
        n.push(l), i[l] = r;
      }
    }
  }, xv.prototype._getTickNumber = function (t) {
    var e = this._ticksByOrdinalNumber;
    return e && 0 <= t && t < e.length ? e[t] : t;
  }, xv.prototype.getRawOrdinalNumber = function (t) {
    var e = this._ordinalNumbersByTick;
    return e && 0 <= t && t < e.length ? e[t] : t;
  }, xv.prototype.getLabel = function (t) {
    if (!this.isBlank()) return t = this.getRawOrdinalNumber(t.value), null == (t = this._ordinalMeta.categories[t]) ? "" : t + "";
  }, xv.prototype.count = function () {
    return this._extent[1] - this._extent[0] + 1;
  }, xv.prototype.unionExtentFromData = function (t, e) {
    this.unionExtent(t.getApproximateExtent(e));
  }, xv.prototype.isInExtentRange = function (t) {
    return t = this._getTickNumber(t), this._extent[0] <= t && this._extent[1] >= t;
  }, xv.prototype.getOrdinalMeta = function () {
    return this._ordinalMeta;
  }, xv.prototype.calcNiceTicks = function () {}, xv.prototype.calcNiceExtent = function () {}, xv.type = "ordinal";
  var vv,
    _v = xv;
  function xv(t) {
    var t = vv.call(this, t) || this,
      e = (t.type = "ordinal", t.getSetting("ordinalMeta"));
    return F(e = e || new lv({})) && (e = new lv({
      categories: z(e, function (t) {
        return O(t) ? t.value : t;
      })
    })), t._ordinalMeta = e, t._extent = t.getSetting("extent") || [0, e.categories.length - 1], t;
  }
  ov.registerClass(_v);
  var wv,
    bv = eo,
    Sv = (u(Mv, wv = ov), Mv.prototype.parse = function (t) {
      return t;
    }, Mv.prototype.contain = function (t) {
      return gv(t, this._extent);
    }, Mv.prototype.normalize = function (t) {
      return yv(t, this._extent);
    }, Mv.prototype.scale = function (t) {
      return mv(t, this._extent);
    }, Mv.prototype.setExtent = function (t, e) {
      var n = this._extent;
      isNaN(t) || (n[0] = parseFloat(t)), isNaN(e) || (n[1] = parseFloat(e));
    }, Mv.prototype.unionExtent = function (t) {
      var e = this._extent;
      t[0] < e[0] && (e[0] = t[0]), t[1] > e[1] && (e[1] = t[1]), this.setExtent(e[0], e[1]);
    }, Mv.prototype.getInterval = function () {
      return this._interval;
    }, Mv.prototype.setInterval = function (t) {
      this._interval = t, this._niceExtent = this._extent.slice(), this._intervalPrecision = dv(t);
    }, Mv.prototype.getTicks = function (t) {
      var e = this._interval,
        n = this._extent,
        i = this._niceExtent,
        r = this._intervalPrecision,
        o = [];
      if (e) {
        n[0] < i[0] && o.push(t ? {
          value: bv(i[0] - e, r)
        } : {
          value: n[0]
        });
        for (var a = i[0]; a <= i[1] && (o.push({
          value: a
        }), (a = bv(a + e, r)) !== o[o.length - 1].value);) {
          if (1e4 < o.length) return [];
        }
        var s = o.length ? o[o.length - 1].value : i[1];
        n[1] > s && o.push(t ? {
          value: bv(s + e, r)
        } : {
          value: n[1]
        });
      }
      return o;
    }, Mv.prototype.getMinorTicks = function (t) {
      for (var e = this.getTicks(!0), n = [], i = this.getExtent(), r = 1; r < e.length; r++) {
        for (var o = e[r], a = e[r - 1], s = 0, l = [], u = (o.value - a.value) / t; s < t - 1;) {
          var h = bv(a.value + (s + 1) * u);
          h > i[0] && h < i[1] && l.push(h), s++;
        }
        n.push(l);
      }
      return n;
    }, Mv.prototype.getLabel = function (t, e) {
      return null == t ? "" : (null == (e = e && e.precision) ? e = no(t.value) || 0 : "auto" === e && (e = this._intervalPrecision), vp(bv(t.value, e, !0)));
    }, Mv.prototype.calcNiceTicks = function (t, e, n) {
      t = t || 5;
      var i = this._extent,
        r = i[1] - i[0];
      isFinite(r) && (r < 0 && i.reverse(), r = cv(i, t, e, n), this._intervalPrecision = r.intervalPrecision, this._interval = r.interval, this._niceExtent = r.niceTickExtent);
    }, Mv.prototype.calcNiceExtent = function (t) {
      var e = this._extent,
        n = (e[0] === e[1] && (0 !== e[0] ? (n = Math.abs(e[0]), t.fixMax || (e[1] += n / 2), e[0] -= n / 2) : e[1] = 1), e[1] - e[0]),
        n = (isFinite(n) || (e[0] = 0, e[1] = 1), this.calcNiceTicks(t.splitNumber, t.minInterval, t.maxInterval), this._interval);
      t.fixMin || (e[0] = bv(Math.floor(e[0] / n) * n)), t.fixMax || (e[1] = bv(Math.ceil(e[1] / n) * n));
    }, Mv.prototype.setNiceExtent = function (t, e) {
      this._niceExtent = [t, e];
    }, Mv.type = "interval", Mv);
  function Mv() {
    var t = null !== wv && wv.apply(this, arguments) || this;
    return t.type = "interval", t._interval = 0, t._intervalPrecision = 2, t;
  }
  ov.registerClass(Sv);
  function Tv(t) {
    return t.get("stack") || "__ec_stack_" + t.seriesIndex;
  }
  function Iv(t) {
    return t.dim + t.index;
  }
  function Cv(t, e) {
    var n = [];
    return e.eachSeriesByType(t, function (t) {
      var e;
      (e = t).coordinateSystem && "cartesian2d" === e.coordinateSystem.type && n.push(t);
    }), n;
  }
  function Dv(t) {
    var a,
      d,
      u = function (t) {
        var e,
          l = {},
          n = (E(t, function (t) {
            var e = t.coordinateSystem.getBaseAxis();
            if ("time" === e.type || "value" === e.type) for (var t = t.getData(), n = e.dim + "_" + e.index, i = t.getDimensionIndex(t.mapDimension(e.dim)), r = t.getStore(), o = 0, a = r.count(); o < a; ++o) {
              var s = r.get(i, o);
              l[n] ? l[n].push(s) : l[n] = [s];
            }
          }), {});
        for (e in l) {
          if (l.hasOwnProperty(e)) {
            var i = l[e];
            if (i) {
              i.sort(function (t, e) {
                return t - e;
              });
              for (var r = null, o = 1; o < i.length; ++o) {
                var a = i[o] - i[o - 1];
                0 < a && (r = null === r ? a : Math.min(r, a));
              }
              n[e] = r;
            }
          }
        }
        return n;
      }(t),
      h = [];
    return E(t, function (t) {
      var e,
        n,
        i = t.coordinateSystem.getBaseAxis(),
        r = i.getExtent(),
        o = (e = "category" === i.type ? i.getBandWidth() : "value" === i.type || "time" === i.type ? (e = i.dim + "_" + i.index, e = u[e], o = Math.abs(r[1] - r[0]), n = i.scale.getExtent(), n = Math.abs(n[1] - n[0]), e ? o / n * e : o) : (n = t.getData(), Math.abs(r[1] - r[0]) / n.count()), G(t.get("barWidth"), e)),
        r = G(t.get("barMaxWidth"), e),
        a = G(t.get("barMinWidth") || ((n = t).pipelineContext && n.pipelineContext.large ? .5 : 1), e),
        s = t.get("barGap"),
        l = t.get("barCategoryGap");
      h.push({
        bandWidth: e,
        barWidth: o,
        barMaxWidth: r,
        barMinWidth: a,
        barGap: s,
        barCategoryGap: l,
        axisKey: Iv(i),
        stackId: Tv(t)
      });
    }), a = {}, E(h, function (t, e) {
      var n = t.axisKey,
        i = t.bandWidth,
        i = a[n] || {
          bandWidth: i,
          remainedWidth: i,
          autoWidthCount: 0,
          categoryGap: null,
          gap: "20%",
          stacks: {}
        },
        r = i.stacks,
        n = (a[n] = i, t.stackId),
        o = (r[n] || i.autoWidthCount++, r[n] = r[n] || {
          width: 0,
          maxWidth: 0
        }, t.barWidth),
        o = (o && !r[n].width && (r[n].width = o, o = Math.min(i.remainedWidth, o), i.remainedWidth -= o), t.barMaxWidth),
        o = (o && (r[n].maxWidth = o), t.barMinWidth),
        r = (o && (r[n].minWidth = o), t.barGap),
        n = (null != r && (i.gap = r), t.barCategoryGap);
      null != n && (i.categoryGap = n);
    }), d = {}, E(a, function (t, n) {
      d[n] = {};
      var i,
        e = t.stacks,
        r = t.bandWidth,
        o = t.categoryGap,
        a = (null == o && (a = ct(e).length, o = Math.max(35 - 4 * a, 15) + "%"), G(o, r)),
        s = G(t.gap, 1),
        l = t.remainedWidth,
        u = t.autoWidthCount,
        h = (l - a) / (u + (u - 1) * s),
        h = Math.max(h, 0),
        c = (E(e, function (t) {
          var e,
            n = t.maxWidth,
            i = t.minWidth;
          t.width ? (e = t.width, n && (e = Math.min(e, n)), i && (e = Math.max(e, i)), t.width = e, l -= e + s * e, u--) : (e = h, n && n < e && (e = Math.min(n, l)), (e = i && e < i ? i : e) !== h && (t.width = e, l -= e + s * e, u--));
        }), h = (l - a) / (u + (u - 1) * s), h = Math.max(h, 0), 0),
        p = (E(e, function (t, e) {
          t.width || (t.width = h), c += (i = t).width * (1 + s);
        }), i && (c -= i.width * s), -c / 2);
      E(e, function (t, e) {
        d[n][e] = d[n][e] || {
          bandWidth: r,
          offset: p,
          width: t.width
        }, p += t.width * (1 + s);
      });
    }), d;
  }
  u(Pv, kv = Sv), Pv.prototype.getLabel = function (t) {
    var e = this.getSetting("useUTC");
    return np(t.value, $c[function (t) {
      switch (t) {
        case "year":
        case "month":
          return "day";
        case "millisecond":
          return "millisecond";
        default:
          return "second";
      }
    }(ep(this._minLevelUnit))] || $c.second, e, this.getSetting("locale"));
  }, Pv.prototype.getFormattedLabel = function (t, e, n) {
    var i = this.getSetting("useUTC"),
      r = this.getSetting("locale"),
      o = null;
    if (V(n)) o = n;else if (D(n)) o = n(t.value, e, {
      level: t.level
    });else {
      var a = L({}, jc);
      if (0 < t.level) for (var s = 0; s < Qc.length; ++s) {
        a[Qc[s]] = "{primary|" + a[Qc[s]] + "}";
      }
      var l = n ? !1 === n.inherit ? n : B(n, a) : a,
        u = ip(t.value, i);
      if (l[u]) o = l[u];else if (l.inherit) {
        for (s = Jc.indexOf(u) - 1; 0 <= s; --s) {
          if (l[u]) {
            o = l[u];
            break;
          }
        }
        o = o || a.none;
      }
      F(o) && (e = null == t.level ? 0 : 0 <= t.level ? t.level : o.length + t.level, o = o[e = Math.min(e, o.length - 1)]);
    }
    return np(new Date(t.value), o, i, r);
  }, Pv.prototype.getTicks = function () {
    var t = this._interval,
      e = this._extent,
      n = [];
    return t && (n.push({
      value: e[0],
      level: 0
    }), t = this.getSetting("useUTC"), t = function (t, b, S, M) {
      var e = Jc,
        n = 0;
      function i(t, e, n) {
        var i = [],
          r = !e.length;
        if (!function (t, e, n, i) {
          function r(t) {
            return rp(c, t, i) === rp(p, t, i);
          }
          function o() {
            return r("year");
          }
          function a() {
            return o() && r("month");
          }
          function s() {
            return a() && r("day");
          }
          function l() {
            return s() && r("hour");
          }
          function u() {
            return l() && r("minute");
          }
          function h() {
            return u() && r("second");
          }
          var c = uo(e),
            p = uo(n);
          switch (t) {
            case "year":
              return o();
            case "month":
              return a();
            case "day":
              return s();
            case "hour":
              return l();
            case "minute":
              return u();
            case "second":
              return h();
            case "millisecond":
              return h() && r("millisecond");
          }
        }(ep(t), M[0], M[1], S)) {
          r && (e = [{
            value: function (t, e, n) {
              var i = new Date(t);
              switch (ep(e)) {
                case "year":
                case "month":
                  i[pp(n)](0);
                case "day":
                  i[dp(n)](1);
                case "hour":
                  i[fp(n)](0);
                case "minute":
                  i[gp(n)](0);
                case "second":
                  i[yp(n)](0), i[mp(n)](0);
              }
              return i.getTime();
            }(new Date(M[0]), t, S)
          }, {
            value: M[1]
          }]);
          for (var o, a, s = 0; s < e.length - 1; s++) {
            var l = e[s].value,
              u = e[s + 1].value;
            if (l !== u) {
              var h = void 0,
                c = void 0,
                p = void 0;
              switch (t) {
                case "year":
                  h = Math.max(1, Math.round(b / Zc / 365)), c = op(S), p = S ? "setUTCFullYear" : "setFullYear";
                  break;
                case "half-year":
                case "quarter":
                case "month":
                  a = b, h = 6 < (a /= 30 * Zc) ? 6 : 3 < a ? 3 : 2 < a ? 2 : 1, c = ap(S), p = pp(S);
                  break;
                case "week":
                case "half-week":
                case "day":
                  a = b, h = 16 < (a /= Zc) ? 16 : 7.5 < a ? 7 : 3.5 < a ? 4 : 1.5 < a ? 2 : 1, c = sp(S), p = dp(S), 0;
                  break;
                case "half-day":
                case "quarter-day":
                case "hour":
                  o = b, h = 12 < (o /= Yc) ? 12 : 6 < o ? 6 : 3.5 < o ? 4 : 2 < o ? 2 : 1, c = lp(S), p = fp(S);
                  break;
                case "minute":
                  h = Ov(b, !0), c = up(S), p = gp(S);
                  break;
                case "second":
                  h = Ov(b, !1), c = hp(S), p = yp(S);
                  break;
                case "millisecond":
                  h = po(b, !0), c = cp(S), p = mp(S);
              }
              w = x = _ = v = m = y = g = f = d = void 0;
              for (var d = h, f = l, g = u, y = c, m = p, v = i, _ = new Date(f), x = f, w = _[y](); x < g && x <= M[1];) {
                v.push({
                  value: x
                }), _[m](w += d), x = _.getTime();
              }
              v.push({
                value: x,
                notAdd: !0
              }), "year" === t && 1 < n.length && 0 === s && n.unshift({
                value: n[0].value - h
              });
            }
          }
          for (s = 0; s < i.length; s++) {
            n.push(i[s]);
          }
        }
      }
      for (var r = [], o = [], a = 0, s = 0, l = 0; l < e.length && n++ < 1e4; ++l) {
        var u = ep(e[l]);
        if (function (t) {
          return t === ep(t);
        }(e[l])) {
          i(e[l], r[r.length - 1] || [], o);
          var h = e[l + 1] ? ep(e[l + 1]) : null;
          if (u !== h) {
            if (o.length) {
              s = a, o.sort(function (t, e) {
                return t.value - e.value;
              });
              for (var c = [], p = 0; p < o.length; ++p) {
                var d = o[p].value;
                0 !== p && o[p - 1].value === d || (c.push(o[p]), d >= M[0] && d <= M[1] && a++);
              }
              u = (M[1] - M[0]) / b;
              if (1.5 * u < a && u / 1.5 < s) break;
              if (r.push(c), u < a || t === e[l]) break;
            }
            o = [];
          }
        }
      }
      for (var f = ut(z(r, function (t) {
          return ut(t, function (t) {
            return t.value >= M[0] && t.value <= M[1] && !t.notAdd;
          });
        }), function (t) {
          return 0 < t.length;
        }), g = [], y = f.length - 1, l = 0; l < f.length; ++l) {
        for (var m = f[l], v = 0; v < m.length; ++v) {
          g.push({
            value: m[v].value,
            level: y - l
          });
        }
      }
      g.sort(function (t, e) {
        return t.value - e.value;
      });
      for (var _ = [], l = 0; l < g.length; ++l) {
        0 !== l && g[l].value === g[l - 1].value || _.push(g[l]);
      }
      return _;
    }(this._minLevelUnit, this._approxInterval, t, e), (n = n.concat(t)).push({
      value: e[1],
      level: 0
    })), n;
  }, Pv.prototype.calcNiceExtent = function (t) {
    var e,
      n = this._extent;
    n[0] === n[1] && (n[0] -= Zc, n[1] += Zc), n[1] === -1 / 0 && n[0] === 1 / 0 && (e = new Date(), n[1] = +new Date(e.getFullYear(), e.getMonth(), e.getDate()), n[0] = n[1] - Zc), this.calcNiceTicks(t.splitNumber, t.minInterval, t.maxInterval);
  }, Pv.prototype.calcNiceTicks = function (t, e, n) {
    var i = this._extent,
      i = i[1] - i[0],
      i = (this._approxInterval = i / (t = t || 10), null != e && this._approxInterval < e && (this._approxInterval = e), null != n && this._approxInterval > n && (this._approxInterval = n), Lv.length),
      t = Math.min(function (t, e, n, i) {
        for (; n < i;) {
          var r = n + i >>> 1;
          t[r][1] < e ? n = 1 + r : i = r;
        }
        return n;
      }(Lv, this._approxInterval, 0, i), i - 1);
    this._interval = Lv[t][1], this._minLevelUnit = Lv[Math.max(t - 1, 0)][0];
  }, Pv.prototype.parse = function (t) {
    return W(t) ? t : +uo(t);
  }, Pv.prototype.contain = function (t) {
    return gv(this.parse(t), this._extent);
  }, Pv.prototype.normalize = function (t) {
    return yv(this.parse(t), this._extent);
  }, Pv.prototype.scale = function (t) {
    return mv(t, this._extent);
  }, Pv.type = "time";
  var kv,
    Av = Pv;
  function Pv(t) {
    t = kv.call(this, t) || this;
    return t.type = "time", t;
  }
  var Lv = [["second", qc], ["minute", Xc], ["hour", Yc], ["quarter-day", 6 * Yc], ["half-day", 12 * Yc], ["day", 1.2 * Zc], ["half-week", 3.5 * Zc], ["week", 7 * Zc], ["month", 31 * Zc], ["quarter", 95 * Zc], ["half-year", Uo / 2], ["year", Uo]];
  function Ov(t, e) {
    return 30 < (t /= e ? Xc : qc) ? 30 : 20 < t ? 20 : 15 < t ? 15 : 10 < t ? 10 : 5 < t ? 5 : 2 < t ? 2 : 1;
  }
  ov.registerClass(Av);
  var Rv,
    Nv = ov.prototype,
    Ev = Sv.prototype,
    Bv = eo,
    zv = Math.floor,
    Fv = Math.ceil,
    Vv = Math.pow,
    Wv = Math.log,
    Hv = (u(Gv, Rv = ov), Gv.prototype.getTicks = function (t) {
      var e = this._originalScale,
        n = this._extent,
        i = e.getExtent();
      return z(Ev.getTicks.call(this, t), function (t) {
        var t = t.value,
          e = eo(Vv(this.base, t)),
          e = t === n[0] && this._fixMin ? Uv(e, i[0]) : e;
        return {
          value: t === n[1] && this._fixMax ? Uv(e, i[1]) : e
        };
      }, this);
    }, Gv.prototype.setExtent = function (t, e) {
      var n = Wv(this.base);
      t = Wv(Math.max(0, t)) / n, e = Wv(Math.max(0, e)) / n, Ev.setExtent.call(this, t, e);
    }, Gv.prototype.getExtent = function () {
      var t = this.base,
        e = Nv.getExtent.call(this);
      e[0] = Vv(t, e[0]), e[1] = Vv(t, e[1]);
      t = this._originalScale.getExtent();
      return this._fixMin && (e[0] = Uv(e[0], t[0])), this._fixMax && (e[1] = Uv(e[1], t[1])), e;
    }, Gv.prototype.unionExtent = function (t) {
      this._originalScale.unionExtent(t);
      var e = this.base;
      t[0] = Wv(t[0]) / Wv(e), t[1] = Wv(t[1]) / Wv(e), Nv.unionExtent.call(this, t);
    }, Gv.prototype.unionExtentFromData = function (t, e) {
      this.unionExtent(t.getApproximateExtent(e));
    }, Gv.prototype.calcNiceTicks = function (t) {
      t = t || 10;
      var e = this._extent,
        n = e[1] - e[0];
      if (!(n == 1 / 0 || n <= 0)) {
        var i = ho(n);
        for (t / n * i <= .5 && (i *= 10); !isNaN(i) && Math.abs(i) < 1 && 0 < Math.abs(i);) {
          i *= 10;
        }
        t = [eo(Fv(e[0] / i) * i), eo(zv(e[1] / i) * i)];
        this._interval = i, this._niceExtent = t;
      }
    }, Gv.prototype.calcNiceExtent = function (t) {
      Ev.calcNiceExtent.call(this, t), this._fixMin = t.fixMin, this._fixMax = t.fixMax;
    }, Gv.prototype.parse = function (t) {
      return t;
    }, Gv.prototype.contain = function (t) {
      return gv(t = Wv(t) / Wv(this.base), this._extent);
    }, Gv.prototype.normalize = function (t) {
      return yv(t = Wv(t) / Wv(this.base), this._extent);
    }, Gv.prototype.scale = function (t) {
      return t = mv(t, this._extent), Vv(this.base, t);
    }, Gv.type = "log", Gv);
  function Gv() {
    var t = null !== Rv && Rv.apply(this, arguments) || this;
    return t.type = "log", t.base = 10, t._originalScale = new Sv(), t._interval = 0, t;
  }
  wy = Hv.prototype;
  function Uv(t, e) {
    return Bv(t, no(e));
  }
  wy.getMinorTicks = Ev.getMinorTicks, wy.getLabel = Ev.getLabel, ov.registerClass(Hv);
  Xv.prototype._prepareParams = function (t, e, n) {
    n[1] < n[0] && (n = [NaN, NaN]), this._dataMin = n[0], this._dataMax = n[1];
    var i = this._isOrdinal = "ordinal" === t.type,
      r = (this._needCrossZero = "interval" === t.type && e.getNeedCrossZero && e.getNeedCrossZero(), e.get("min", !0)),
      r = (null == r && (r = e.get("startValue", !0)), this._modelMinRaw = r),
      r = (D(r) ? this._modelMinNum = jv(t, r({
        min: n[0],
        max: n[1]
      })) : "dataMin" !== r && (this._modelMinNum = jv(t, r)), this._modelMaxRaw = e.get("max", !0));
    D(r) ? this._modelMaxNum = jv(t, r({
      min: n[0],
      max: n[1]
    })) : "dataMax" !== r && (this._modelMaxNum = jv(t, r)), i ? this._axisDataLen = e.getCategories().length : "boolean" == typeof (t = F(n = e.get("boundaryGap")) ? n : [n || 0, n || 0])[0] || "boolean" == typeof t[1] ? this._boundaryGapInner = [0, 0] : this._boundaryGapInner = [Dr(t[0], 1), Dr(t[1], 1)];
  }, Xv.prototype.calculate = function () {
    var t = this._isOrdinal,
      e = this._dataMin,
      n = this._dataMax,
      i = this._axisDataLen,
      r = this._boundaryGapInner,
      o = t ? null : n - e || Math.abs(e),
      a = "dataMin" === this._modelMinRaw ? e : this._modelMinNum,
      s = "dataMax" === this._modelMaxRaw ? n : this._modelMaxNum,
      l = null != a,
      u = null != s,
      e = (null == a && (a = t ? i ? 0 : NaN : e - r[0] * o), null == s && (s = t ? i ? i - 1 : NaN : n + r[1] * o), null != a && isFinite(a) || (a = NaN), null != s && isFinite(s) || (s = NaN), wt(a) || wt(s) || t && !i),
      n = (this._needCrossZero && (a = 0 < a && 0 < s && !l ? 0 : a) < 0 && s < 0 && !u && (s = 0), this._determinedMin),
      r = this._determinedMax;
    return null != n && (a = n, l = !0), null != r && (s = r, u = !0), {
      min: a,
      max: s,
      minFixed: l,
      maxFixed: u,
      isBlank: e
    };
  }, Xv.prototype.modifyDataMinMax = function (t, e) {
    this[Zv[t]] = e;
  }, Xv.prototype.setDeterminedMinMax = function (t, e) {
    this[Yv[t]] = e;
  }, Xv.prototype.freeze = function () {
    this.frozen = !0;
  };
  var qv = Xv;
  function Xv(t, e, n) {
    this._prepareParams(t, e, n);
  }
  var Yv = {
      min: "_determinedMin",
      max: "_determinedMax"
    },
    Zv = {
      min: "_dataMin",
      max: "_dataMax"
    };
  function jv(t, e) {
    return null == e ? null : wt(e) ? NaN : t.parse(e);
  }
  function Kv(t, e) {
    var n,
      i,
      r,
      o,
      a,
      s = t.type,
      l = (l = e, u = (h = t).getExtent(), (c = h.rawExtentInfo) || (c = new qv(h, l, u), h.rawExtentInfo = c), c.calculate()),
      u = (t.setBlank(l.isBlank), l.min),
      h = l.max,
      c = e.ecModel;
    return c && "time" === s && (t = Cv("bar", c), n = !1, E(t, function (t) {
      n = n || t.getBaseAxis() === e.axis;
    }), n) && (s = Dv(t), c = u, t = h, s = s, a = (i = e).axis.getExtent(), a = Math.abs(a[1] - a[0]), void 0 !== (s = function (t, e, n) {
      if (t && e) return null != (t = t[Iv(e)]) && null != n ? t[Tv(n)] : t;
    }(s, i.axis)) && (r = 1 / 0, E(s, function (t) {
      r = Math.min(t.offset, r);
    }), o = -1 / 0, E(s, function (t) {
      o = Math.max(t.offset + t.width, o);
    }), r = Math.abs(r), o = Math.abs(o), t += o / (i = r + o) * (a = (s = t - c) / (1 - (r + o) / a) - s), c -= r / i * a), u = (s = {
      min: c,
      max: t
    }).min, h = s.max), {
      extent: [u, h],
      fixMin: l.minFixed,
      fixMax: l.maxFixed
    };
  }
  function $v(t, e) {
    var n = Kv(t, e),
      i = n.extent,
      r = e.get("splitNumber"),
      o = (t instanceof Hv && (t.base = e.get("logBase")), t.type),
      a = e.get("interval"),
      o = "interval" === o || "time" === o;
    t.setExtent(i[0], i[1]), t.calcNiceExtent({
      splitNumber: r,
      fixMin: n.fixMin,
      fixMax: n.fixMax,
      minInterval: o ? e.get("minInterval") : null,
      maxInterval: o ? e.get("maxInterval") : null
    }), null != a && t.setInterval && t.setInterval(a);
  }
  function Qv(t, e) {
    if (e = e || t.get("type")) switch (e) {
      case "category":
        return new _v({
          ordinalMeta: t.getOrdinalMeta ? t.getOrdinalMeta() : t.getCategories(),
          extent: [1 / 0, -1 / 0]
        });
      case "time":
        return new Av({
          locale: t.ecModel.getLocaleModel(),
          useUTC: t.ecModel.get("useUTC")
        });
      default:
        return new (ov.getClass(e) || Sv)();
    }
  }
  function Jv(n) {
    var i,
      e,
      r,
      t = n.getLabelModel().get("formatter"),
      o = "category" === n.type ? n.scale.getExtent()[0] : null;
    return "time" === n.scale.type ? (r = t, function (t, e) {
      return n.scale.getFormattedLabel(t, e, r);
    }) : V(t) ? (e = t, function (t) {
      t = n.scale.getLabel(t);
      return e.replace("{value}", null != t ? t : "");
    }) : D(t) ? (i = t, function (t, e) {
      return null != o && (e = t.value - o), i(t_(n, t), e, null != t.level ? {
        level: t.level
      } : null);
    }) : function (t) {
      return n.scale.getLabel(t);
    };
  }
  function t_(t, e) {
    return "category" === t.type ? t.scale.getLabel(e) : e.value;
  }
  function e_(t) {
    t = t.get("interval");
    return null == t ? "auto" : t;
  }
  function n_(t) {
    return "category" === t.type && 0 === e_(t.getLabelModel());
  }
  function i_(e, t) {
    var n = {};
    return E(e.mapDimensionsAll(t), function (t) {
      n[iv(e, t)] = !0;
    }), ct(n);
  }
  o_.prototype.getNeedCrossZero = function () {
    return !this.option.scale;
  }, o_.prototype.getCoordSysModel = function () {};
  var r_ = o_;
  function o_() {}
  var Ty = Object.freeze({
      __proto__: null,
      createDimensions: function createDimensions(t, e) {
        return $m(t, e).dimensions;
      },
      createList: function createList(t) {
        return rv(null, t);
      },
      createScale: function createScale(t, e) {
        var n = e;
        return (e = Qv(n = e instanceof Rc ? n : new Rc(e))).setExtent(t[0], t[1]), $v(e, n), e;
      },
      createSymbol: Py,
      createTextStyle: function createTextStyle(t, e) {
        return dc(t, null, null, "normal" !== (e = e || {}).state);
      },
      dataStack: {
        isDimensionStacked: nv,
        enableDataStack: ev,
        getStackedDimension: iv
      },
      enableHoverEmphasis: Rl,
      getECData: Ys,
      getLayoutRect: Dp,
      mixinAxisModelCommonMethods: function mixinAxisModelCommonMethods(t) {
        at(t, r_);
      }
    }),
    a_ = [],
    s_ = {
      registerPreprocessor: lm,
      registerProcessor: um,
      registerPostInit: hm,
      registerPostUpdate: cm,
      registerUpdateLifecycle: pm,
      registerAction: dm,
      registerCoordinateSystem: fm,
      registerLayout: gm,
      registerVisual: ym,
      registerTransform: wm,
      registerLoading: _m,
      registerMap: xm,
      registerImpl: function registerImpl(t, e) {
        u0[t] = e;
      },
      PRIORITY: My,
      ComponentModel: g,
      ComponentView: Ig,
      SeriesModel: vg,
      ChartView: Pg,
      registerComponentModel: function registerComponentModel(t) {
        g.registerClass(t);
      },
      registerComponentView: function registerComponentView(t) {
        Ig.registerClass(t);
      },
      registerSeriesModel: function registerSeriesModel(t) {
        vg.registerClass(t);
      },
      registerChartView: function registerChartView(t) {
        Pg.registerClass(t);
      },
      registerSubTypeDefaulter: function registerSubTypeDefaulter(t, e) {
        g.registerSubTypeDefaulter(t, e);
      },
      registerPainter: function registerPainter(t, e) {
        Kr(t, e);
      }
    };
  function l_(t) {
    F(t) ? E(t, function (t) {
      l_(t);
    }) : 0 <= C(a_, t) || (a_.push(t), (t = D(t) ? {
      install: t
    } : t).install(s_));
  }
  var u_ = 1e-8;
  function h_(t, e) {
    return Math.abs(t - e) < u_;
  }
  function c_(t, e, n) {
    var i = 0,
      r = t[0];
    if (r) {
      for (var o = 1; o < t.length; o++) {
        var a = t[o];
        i += ts(r[0], r[1], a[0], a[1], e, n), r = a;
      }
      var s = t[0];
      return h_(r[0], s[0]) && h_(r[1], s[1]) || (i += ts(r[0], r[1], s[0], s[1], e, n)), 0 !== i;
    }
  }
  var p_ = [];
  function d_(t, e) {
    for (var n = 0; n < t.length; n++) {
      ne(t[n], t[n], e);
    }
  }
  function f_(t, e, n, i) {
    for (var r = 0; r < t.length; r++) {
      var o = t[r];
      (o = i ? i.project(o) : o) && isFinite(o[0]) && isFinite(o[1]) && (ie(e, e, o), re(n, n, o));
    }
  }
  g_.prototype.setCenter = function (t) {
    this._center = t;
  }, g_.prototype.getCenter = function () {
    return this._center || (this._center = this.calcCenter());
  };
  Iy = g_;
  function g_(t) {
    this.name = t;
  }
  var y_,
    m_,
    v_ = function v_(t, e) {
      this.type = "polygon", this.exterior = t, this.interiors = e;
    },
    __ = function __(t) {
      this.type = "linestring", this.points = t;
    },
    x_ = (u(w_, y_ = Iy), w_.prototype.calcCenter = function () {
      for (var t, e = this.geometries, n = 0, i = 0; i < e.length; i++) {
        var r = e[i],
          o = r.exterior,
          o = o && o.length;
        n < o && (t = r, n = o);
      }
      if (t) {
        for (var a = t.exterior, s = 0, l = 0, u = 0, h = a.length, c = a[h - 1][0], p = a[h - 1][1], d = 0; d < h; d++) {
          var f = a[d][0],
            g = a[d][1],
            y = c * g - f * p;
          s += y, l += (c + f) * y, u += (p + g) * y, c = f, p = g;
        }
        return s ? [l / s / 3, u / s / 3, s] : [a[0][0] || 0, a[0][1] || 0];
      }
      var m = this.getBoundingRect();
      return [m.x + m.width / 2, m.y + m.height / 2];
    }, w_.prototype.getBoundingRect = function (e) {
      var n,
        i,
        t = this._rect;
      return t && !e || (n = [1 / 0, 1 / 0], i = [-1 / 0, -1 / 0], E(this.geometries, function (t) {
        "polygon" === t.type ? f_(t.exterior, n, i, e) : E(t.points, function (t) {
          f_(t, n, i, e);
        });
      }), isFinite(n[0]) && isFinite(n[1]) && isFinite(i[0]) && isFinite(i[1]) || (n[0] = n[1] = i[0] = i[1] = 0), t = new q(n[0], n[1], i[0] - n[0], i[1] - n[1]), e) || (this._rect = t), t;
    }, w_.prototype.contain = function (t) {
      var e = this.getBoundingRect(),
        n = this.geometries;
      if (e.contain(t[0], t[1])) t: for (var i = 0, r = n.length; i < r; i++) {
        var o = n[i];
        if ("polygon" === o.type) {
          var a = o.exterior,
            s = o.interiors;
          if (c_(a, t[0], t[1])) {
            for (var l = 0; l < (s ? s.length : 0); l++) {
              if (c_(s[l], t[0], t[1])) continue t;
            }
            return !0;
          }
        }
      }
      return !1;
    }, w_.prototype.transformTo = function (t, e, n, i) {
      for (var r = this.getBoundingRect(), o = r.width / r.height, o = (n ? i = i || n / o : n = o * i, new q(t, e, n, i)), a = r.calculateTransform(o), s = this.geometries, l = 0; l < s.length; l++) {
        var u = s[l];
        "polygon" === u.type ? (d_(u.exterior, a), E(u.interiors, function (t) {
          d_(t, a);
        })) : E(u.points, function (t) {
          d_(t, a);
        });
      }
      (r = this._rect).copy(o), this._center = [r.x + r.width / 2, r.y + r.height / 2];
    }, w_.prototype.cloneShallow = function (t) {
      t = new w_(t = null == t ? this.name : t, this.geometries, this._center);
      return t._rect = this._rect, t.transformTo = null, t;
    }, w_);
  function w_(t, e, n) {
    t = y_.call(this, t) || this;
    return t.type = "geoJSON", t.geometries = e, t._center = n && [n[0], n[1]], t;
  }
  function b_(t, e) {
    t = m_.call(this, t) || this;
    return t.type = "geoSVG", t._elOnlyForCalculate = e, t;
  }
  function S_(t, e, n) {
    for (var i = 0; i < t.length; i++) {
      t[i] = M_(t[i], e[i], n);
    }
  }
  function M_(t, e, n) {
    for (var i = [], r = e[0], o = e[1], a = 0; a < t.length; a += 2) {
      var s = (s = t.charCodeAt(a) - 64) >> 1 ^ -(1 & s),
        l = (l = t.charCodeAt(a + 1) - 64) >> 1 ^ -(1 & l);
      i.push([(r = s += r) / n, (o = l += o) / n]);
    }
    return i;
  }
  function T_(t, o) {
    var e, n, r;
    return z(ut((t = (e = t).UTF8Encoding ? (null == (r = (n = e).UTF8Scale) && (r = 1024), E(n.features, function (t) {
      var e = t.geometry,
        n = e.encodeOffsets,
        i = e.coordinates;
      if (n) switch (e.type) {
        case "LineString":
          e.coordinates = M_(i, n, r);
          break;
        case "Polygon":
        case "MultiLineString":
          S_(i, n, r);
          break;
        case "MultiPolygon":
          E(i, function (t, e) {
            return S_(t, n[e], r);
          });
      }
    }), n.UTF8Encoding = !1, n) : e).features, function (t) {
      return t.geometry && t.properties && 0 < t.geometry.coordinates.length;
    }), function (t) {
      var e = t.properties,
        n = t.geometry,
        i = [];
      switch (n.type) {
        case "Polygon":
          var r = n.coordinates;
          i.push(new v_(r[0], r.slice(1)));
          break;
        case "MultiPolygon":
          E(n.coordinates, function (t) {
            t[0] && i.push(new v_(t[0], t.slice(1)));
          });
          break;
        case "LineString":
          i.push(new __([n.coordinates]));
          break;
        case "MultiLineString":
          i.push(new __(n.coordinates));
      }
      t = new x_(e[o || "name"], i, e.cp);
      return t.properties = e, t;
    });
  }
  u(b_, m_ = Iy), b_.prototype.calcCenter = function () {
    for (var t = this._elOnlyForCalculate, e = t.getBoundingRect(), e = [e.x + e.width / 2, e.y + e.height / 2], n = Oe(p_), i = t; i && !i.isGeoSVGGraphicRoot;) {
      Ne(n, i.getLocalTransform(), n), i = i.parent;
    }
    return Fe(n, n), ne(e, e, n), e;
  };
  var Ko = Object.freeze({
      __proto__: null,
      MAX_SAFE_INTEGER: 9007199254740991,
      asc: function asc(t) {
        return t.sort(function (t, e) {
          return t - e;
        }), t;
      },
      getPercentWithPrecision: function getPercentWithPrecision(t, e, n) {
        return t[e] && oo(t, n)[e] || 0;
      },
      getPixelPrecision: ro,
      getPrecision: no,
      getPrecisionSafe: io,
      isNumeric: go,
      isRadianAroundZero: so,
      linearMap: to,
      nice: po,
      numericToNumber: fo,
      parseDate: uo,
      quantile: function quantile(t, e) {
        var e = (t.length - 1) * e + 1,
          n = Math.floor(e),
          i = +t[n - 1];
        return (e = e - n) ? i + e * (t[n] - i) : i;
      },
      quantity: ho,
      quantityExponent: co,
      reformIntervals: function reformIntervals(t) {
        t.sort(function (t, e) {
          return function t(e, n, i) {
            return e.interval[i] < n.interval[i] || e.interval[i] === n.interval[i] && (e.close[i] - n.close[i] == (i ? -1 : 1) || !i && t(e, n, 1));
          }(t, e, 0) ? -1 : 1;
        });
        for (var e = -1 / 0, n = 1, i = 0; i < t.length;) {
          for (var r = t[i].interval, o = t[i].close, a = 0; a < 2; a++) {
            r[a] <= e && (r[a] = e, o[a] = a ? 1 : 1 - n), e = r[a], n = o[a];
          }
          r[0] === r[1] && o[0] * o[1] != 1 ? t.splice(i, 1) : i++;
        }
        return t;
      },
      remRadian: ao,
      round: eo
    }),
    jh = Object.freeze({
      __proto__: null,
      format: np,
      parse: uo
    }),
    Kc = Object.freeze({
      __proto__: null,
      Arc: oh,
      BezierCurve: eh,
      BoundingRect: q,
      Circle: hu,
      CompoundPath: lh,
      Ellipse: fu,
      Group: Hr,
      Image: ws,
      IncrementalDisplayable: n,
      Line: ju,
      LinearGradient: dh,
      Polygon: Vu,
      Polyline: Uu,
      RadialGradient: hh,
      Rect: As,
      Ring: Nu,
      Sector: Pu,
      Text: Ns,
      clipPointsByRect: tc,
      clipRectByRect: ec,
      createIcon: nc,
      extendPath: Vh,
      extendShape: zh,
      getShapeClass: Hh,
      getTransform: Kh,
      initProps: kh,
      makeImage: Uh,
      makePath: Gh,
      mergePath: Xh,
      registerShape: Wh,
      resizePath: Yh,
      updateProps: Dh
    }),
    kc = Object.freeze({
      __proto__: null,
      addCommas: vp,
      capitalFirst: function capitalFirst(t) {
        return t && t.charAt(0).toUpperCase() + t.substr(1);
      },
      encodeHTML: _e,
      formatTime: function formatTime(t, e, n) {
        "week" !== t && "month" !== t && "quarter" !== t && "half-year" !== t && "year" !== t || (t = "MM-dd\nyyyy");
        var i = (e = uo(e))[(n = n ? "getUTC" : "get") + "FullYear"](),
          r = e[n + "Month"]() + 1,
          o = e[n + "Date"](),
          a = e[n + "Hours"](),
          s = e[n + "Minutes"](),
          l = e[n + "Seconds"](),
          e = e[n + "Milliseconds"]();
        return t = t.replace("MM", tp(r, 2)).replace("M", r).replace("yyyy", i).replace("yy", tp(i % 100 + "", 2)).replace("dd", tp(o, 2)).replace("d", o).replace("hh", tp(a, 2)).replace("h", a).replace("mm", tp(s, 2)).replace("m", s).replace("ss", tp(l, 2)).replace("s", l).replace("SSS", tp(e, 3));
      },
      formatTpl: bp,
      getTextRect: function getTextRect(t, e, n, i, r, o, a, s) {
        return new Ns({
          style: {
            text: t,
            font: e,
            align: n,
            verticalAlign: i,
            padding: r,
            rich: o,
            overflow: a ? "truncate" : null,
            lineHeight: s
          }
        }).getBoundingRect();
      },
      getTooltipMarker: function getTooltipMarker(t, e) {
        var n = (t = V(t) ? {
            color: t,
            extraCssText: e
          } : t || {}).color,
          i = t.type,
          r = (e = t.extraCssText, t.renderMode || "html");
        return n ? "html" === r ? "subItem" === i ? '<span style="display:inline-block;vertical-align:middle;margin-right:8px;margin-left:3px;border-radius:4px;width:4px;height:4px;background-color:' + _e(n) + ";" + (e || "") + '"></span>' : '<span style="display:inline-block;margin-right:4px;border-radius:10px;width:10px;height:10px;background-color:' + _e(n) + ";" + (e || "") + '"></span>' : {
          renderMode: r,
          content: "{" + (t.markerId || "markerX") + "|}  ",
          style: "subItem" === i ? {
            width: 4,
            height: 4,
            borderRadius: 2,
            backgroundColor: n
          } : {
            width: 10,
            height: 10,
            borderRadius: 5,
            backgroundColor: n
          }
        } : "";
      },
      normalizeCssArray: xp,
      toCamelCase: function toCamelCase(t, e) {
        return t = (t || "").toLowerCase().replace(/-(.)/g, function (t, e) {
          return e.toUpperCase();
        }), t = e ? t && t.charAt(0).toUpperCase() + t.slice(1) : t;
      },
      truncateText: function truncateText(t, e, n, i, r) {
        var o = {};
        return ia(o, t, e, n, i, r), o.text;
      }
    }),
    Tc = Object.freeze({
      __proto__: null,
      bind: pt,
      clone: y,
      curry: dt,
      defaults: B,
      each: E,
      extend: L,
      filter: ut,
      indexOf: C,
      inherits: ot,
      isArray: F,
      isFunction: D,
      isObject: O,
      isString: V,
      map: z,
      merge: d,
      reduce: lt
    }),
    I_ = Po();
  function C_(e, t) {
    t = z(t, function (t) {
      return e.scale.parse(t);
    });
    return "time" === e.type && 0 < t.length && (t.sort(), t.unshift(t[0]), t.push(t[t.length - 1])), t;
  }
  function D_(n) {
    var i,
      e,
      r,
      o,
      t,
      a,
      s = n.getLabelModel().get("customValues");
    return s ? (i = Jv(n), e = n.scale.getExtent(), {
      labels: z(ut(C_(n, s), function (t) {
        return t >= e[0] && t <= e[1];
      }), function (t) {
        var e = {
          value: t
        };
        return {
          formattedLabel: i(e),
          rawLabel: n.scale.getLabel(e),
          tickValue: t
        };
      })
    }) : "category" === n.type ? (t = (s = n).getLabelModel(), a = A_(s, t), !t.get("show") || s.scale.isBlank() ? {
      labels: [],
      labelCategoryInterval: a.labelCategoryInterval
    } : a) : (t = (r = n).scale.getTicks(), o = Jv(r), {
      labels: z(t, function (t, e) {
        return {
          level: t.level,
          formattedLabel: o(t, e),
          rawLabel: r.scale.getLabel(t),
          tickValue: t.value
        };
      })
    });
  }
  function k_(t, e) {
    var n,
      i,
      r,
      o,
      a,
      s,
      l = t.getTickModel().get("customValues");
    return l ? (n = t.scale.getExtent(), {
      ticks: ut(C_(t, l), function (t) {
        return t >= n[0] && t <= n[1];
      })
    }) : "category" === t.type ? (l = e, o = P_(e = t, "ticks"), a = e_(l), (s = L_(o, a)) || (l.get("show") && !e.scale.isBlank() || (i = []), i = D(a) ? N_(e, a, !0) : "auto" === a ? (s = A_(e, e.getLabelModel()), r = s.labelCategoryInterval, z(s.labels, function (t) {
      return t.tickValue;
    })) : R_(e, r = a, !0), O_(o, a, {
      ticks: i,
      tickCategoryInterval: r
    }))) : {
      ticks: z(t.scale.getTicks(), function (t) {
        return t.value;
      })
    };
  }
  function A_(t, e) {
    var n,
      i = P_(t, "labels"),
      e = e_(e),
      r = L_(i, e);
    return r || O_(i, e, {
      labels: D(e) ? N_(t, e) : R_(t, n = "auto" === e ? null != (i = I_(r = t).autoInterval) ? i : I_(r).autoInterval = r.calculateCategoryInterval() : e),
      labelCategoryInterval: n
    });
  }
  function P_(t, e) {
    return I_(t)[e] || (I_(t)[e] = []);
  }
  function L_(t, e) {
    for (var n = 0; n < t.length; n++) {
      if (t[n].key === e) return t[n].value;
    }
  }
  function O_(t, e, n) {
    return t.push({
      key: e,
      value: n
    }), n;
  }
  function R_(t, e, n) {
    for (var i = Jv(t), r = t.scale, o = r.getExtent(), a = t.getLabelModel(), s = [], l = Math.max((e || 0) + 1, 1), e = o[0], u = r.count(), u = (0 !== e && 1 < l && 2 < u / l && (e = Math.round(Math.ceil(e / l) * l)), n_(t)), t = a.get("showMinLabel") || u, a = a.get("showMaxLabel") || u, h = (t && e !== o[0] && c(o[0]), e); h <= o[1]; h += l) {
      c(h);
    }
    function c(t) {
      var e = {
        value: t
      };
      s.push(n ? t : {
        formattedLabel: i(e),
        rawLabel: r.getLabel(e),
        tickValue: t
      });
    }
    return a && h - l !== o[1] && c(o[1]), s;
  }
  function N_(t, i, r) {
    var o = t.scale,
      a = Jv(t),
      s = [];
    return E(o.getTicks(), function (t) {
      var e = o.getLabel(t),
        n = t.value;
      i(t.value, e) && s.push(r ? n : {
        formattedLabel: a(t),
        rawLabel: e,
        tickValue: n
      });
    }), s;
  }
  var E_ = [0, 1],
    Pc = (B_.prototype.contain = function (t) {
      var e = this._extent,
        n = Math.min(e[0], e[1]),
        e = Math.max(e[0], e[1]);
      return n <= t && t <= e;
    }, B_.prototype.containData = function (t) {
      return this.scale.contain(t);
    }, B_.prototype.getExtent = function () {
      return this._extent.slice();
    }, B_.prototype.getPixelPrecision = function (t) {
      return ro(t || this.scale.getExtent(), this._extent);
    }, B_.prototype.setExtent = function (t, e) {
      var n = this._extent;
      n[0] = t, n[1] = e;
    }, B_.prototype.dataToCoord = function (t, e) {
      var n = this._extent,
        i = this.scale;
      return t = i.normalize(t), this.onBand && "ordinal" === i.type && z_(n = n.slice(), i.count()), to(t, E_, n, e);
    }, B_.prototype.coordToData = function (t, e) {
      var n = this._extent,
        i = this.scale,
        i = (this.onBand && "ordinal" === i.type && z_(n = n.slice(), i.count()), to(t, n, E_, e));
      return this.scale.scale(i);
    }, B_.prototype.pointToData = function (t, e) {}, B_.prototype.getTicksCoords = function (t) {
      var e,
        n,
        i,
        r,
        o,
        a,
        s,
        l = (t = t || {}).tickModel || this.getTickModel(),
        u = z(k_(this, l).ticks, function (t) {
          return {
            coord: this.dataToCoord("ordinal" === this.scale.type ? this.scale.getRawOrdinalNumber(t) : t),
            tickValue: t
          };
        }, this),
        l = l.get("alignWithLabel");
      function h(t, e) {
        return t = eo(t), e = eo(e), a ? e < t : t < e;
      }
      return e = this, n = u, l = l, t = t.clamp, s = n.length, e.onBand && !l && s && (l = e.getExtent(), 1 === s ? (n[0].coord = l[0], i = n[1] = {
        coord: l[1],
        tickValue: n[0].tickValue
      }) : (o = n[s - 1].tickValue - n[0].tickValue, r = (n[s - 1].coord - n[0].coord) / o, E(n, function (t) {
        t.coord -= r / 2;
      }), e = 1 + (o = e.scale.getExtent())[1] - n[s - 1].tickValue, i = {
        coord: n[s - 1].coord + r * e,
        tickValue: o[1] + 1
      }, n.push(i)), a = l[0] > l[1], h(n[0].coord, l[0]) && (t ? n[0].coord = l[0] : n.shift()), t && h(l[0], n[0].coord) && n.unshift({
        coord: l[0]
      }), h(l[1], i.coord) && (t ? i.coord = l[1] : n.pop()), t) && h(i.coord, l[1]) && n.push({
        coord: l[1]
      }), u;
    }, B_.prototype.getMinorTicksCoords = function () {
      var t;
      return "ordinal" === this.scale.type ? [] : (t = this.model.getModel("minorTick").get("splitNumber"), z(this.scale.getMinorTicks(t = 0 < t && t < 100 ? t : 5), function (t) {
        return z(t, function (t) {
          return {
            coord: this.dataToCoord(t),
            tickValue: t
          };
        }, this);
      }, this));
    }, B_.prototype.getViewLabels = function () {
      return D_(this).labels;
    }, B_.prototype.getLabelModel = function () {
      return this.model.getModel("axisLabel");
    }, B_.prototype.getTickModel = function () {
      return this.model.getModel("axisTick");
    }, B_.prototype.getBandWidth = function () {
      var t = this._extent,
        e = this.scale.getExtent(),
        e = e[1] - e[0] + (this.onBand ? 1 : 0),
        t = (0 === e && (e = 1), Math.abs(t[1] - t[0]));
      return Math.abs(t) / e;
    }, B_.prototype.calculateCategoryInterval = function () {
      r = (n = d = this).getLabelModel();
      var t = {
          axisRotate: n.getRotate ? n.getRotate() : n.isHorizontal && !n.isHorizontal() ? 90 : 0,
          labelRotate: r.get("rotate") || 0,
          font: r.getFont()
        },
        e = Jv(d),
        n = (t.axisRotate - t.labelRotate) / 180 * Math.PI,
        i = (r = d.scale).getExtent(),
        r = r.count();
      if (i[1] - i[0] < 1) return 0;
      for (var o = 1, a = (40 < r && (o = Math.max(1, Math.floor(r / 40))), i[0]), s = d.dataToCoord(a + 1) - d.dataToCoord(a), l = Math.abs(s * Math.cos(n)), s = Math.abs(s * Math.sin(n)), u = 0, h = 0; a <= i[1]; a += o) {
        var c = 1.3 * (p = Mr(e({
            value: a
          }), t.font, "center", "top")).width,
          p = 1.3 * p.height,
          u = Math.max(u, c, 7),
          h = Math.max(h, p, 7);
      }
      var n = u / l,
        l = h / s,
        s = (isNaN(n) && (n = 1 / 0), isNaN(l) && (l = 1 / 0), Math.max(0, Math.floor(Math.min(n, l)))),
        n = I_(d.model),
        l = d.getExtent(),
        d = n.lastAutoInterval,
        f = n.lastTickCount;
      return null != d && null != f && Math.abs(d - s) <= 1 && Math.abs(f - r) <= 1 && s < d && n.axisExtent0 === l[0] && n.axisExtent1 === l[1] ? s = d : (n.lastTickCount = r, n.lastAutoInterval = s, n.axisExtent0 = l[0], n.axisExtent1 = l[1]), s;
    }, B_);
  function B_(t, e, n) {
    this.onBand = !1, this.inverse = !1, this.dim = t, this.scale = e, this._extent = n || [0, 0];
  }
  function z_(t, e) {
    e = (t[1] - t[0]) / e / 2;
    t[0] += e, t[1] -= e;
  }
  var F_ = 2 * Math.PI,
    V_ = ja.CMD,
    W_ = ["top", "right", "bottom", "left"];
  function H_(t, e, n, i, r, o, a, s) {
    var l = r - t,
      u = o - e,
      n = n - t,
      i = i - e,
      h = Math.sqrt(n * n + i * i),
      l = (l * (n /= h) + u * (i /= h)) / h,
      u = (s && (l = Math.min(Math.max(l, 0), 1)), a[0] = t + (l *= h) * n),
      s = a[1] = e + l * i;
    return Math.sqrt((u - r) * (u - r) + (s - o) * (s - o));
  }
  function G_(t, e, n, i, r, o, a) {
    n < 0 && (t += n, n = -n), i < 0 && (e += i, i = -i);
    n = t + n, i = e + i, t = a[0] = Math.min(Math.max(r, t), n), n = a[1] = Math.min(Math.max(o, e), i);
    return Math.sqrt((t - r) * (t - r) + (n - o) * (n - o));
  }
  var U_ = [];
  function q_(t, e, n) {
    for (var i, r, o, a, s, l, u, h, c, p = 0, d = 0, f = 0, g = 0, y = 1 / 0, m = e.data, v = t.x, _ = t.y, x = 0; x < m.length;) {
      var w = m[x++],
        b = (1 === x && (f = p = m[x], g = d = m[x + 1]), y);
      switch (w) {
        case V_.M:
          p = f = m[x++], d = g = m[x++];
          break;
        case V_.L:
          b = H_(p, d, m[x], m[x + 1], v, _, U_, !0), p = m[x++], d = m[x++];
          break;
        case V_.C:
          b = Hn(p, d, m[x++], m[x++], m[x++], m[x++], m[x], m[x + 1], v, _, U_), p = m[x++], d = m[x++];
          break;
        case V_.Q:
          b = Yn(p, d, m[x++], m[x++], m[x], m[x + 1], v, _, U_), p = m[x++], d = m[x++];
          break;
        case V_.A:
          var S = m[x++],
            M = m[x++],
            T = m[x++],
            I = m[x++],
            C = m[x++],
            D = m[x++],
            k = (x += 1, !!(1 - m[x++])),
            A = Math.cos(C) * T + S,
            P = Math.sin(C) * I + M;
          x <= 1 && (f = A, g = P), P = (A = C) + D, k = k, a = (v - S) * (o = I) / T + S, s = _, l = U_, c = h = u = void 0, a -= i = S, s -= r = M, u = Math.sqrt(a * a + s * s), h = (a /= u) * o + i, c = (s /= u) * o + r, b = Math.abs(A - P) % F_ < 1e-4 || ((P = k ? (k = A, A = Qa(P), Qa(k)) : (A = Qa(A), Qa(P))) < A && (P += F_), (k = Math.atan2(s, a)) < 0 && (k += F_), A <= k && k <= P) || A <= k + F_ && k + F_ <= P ? (l[0] = h, l[1] = c, u - o) : (c = ((k = o * Math.cos(A) + i) - a) * (k - a) + ((h = o * Math.sin(A) + r) - s) * (h - s)) < (i = ((u = o * Math.cos(P) + i) - a) * (u - a) + ((A = o * Math.sin(P) + r) - s) * (A - s)) ? (l[0] = k, l[1] = h, Math.sqrt(c)) : (l[0] = u, l[1] = A, Math.sqrt(i)), p = Math.cos(C + D) * T + S, d = Math.sin(C + D) * I + M;
          break;
        case V_.R:
          b = G_(f = p = m[x++], g = d = m[x++], m[x++], m[x++], v, _, U_);
          break;
        case V_.Z:
          b = H_(p, d, f, g, v, _, U_, !0), p = f, d = g;
      }
      b < y && (y = b, n.set(U_[0], U_[1]));
    }
    return y;
  }
  var X_ = new H(),
    U = new H(),
    Y_ = new H(),
    Z_ = new H(),
    j_ = new H();
  function K_(t, e) {
    if (t) {
      var n = t.getTextGuideLine(),
        i = t.getTextContent();
      if (i && n) {
        var r = t.textGuideLineConfig || {},
          o = [[0, 0], [0, 0], [0, 0]],
          a = r.candidates || W_,
          s = i.getBoundingRect().clone(),
          l = (s.applyTransform(i.getComputedTransform()), 1 / 0),
          u = r.anchor,
          h = t.getComputedTransform(),
          c = h && Fe([], h),
          p = e.get("length2") || 0;
        u && Y_.copy(u);
        for (var d, f = 0; f < a.length; f++) {
          var g = a[f],
            y = (b = w = x = _ = v = m = y = void 0, g),
            m = 0,
            v = s,
            _ = X_,
            x = Z_,
            w = v.width,
            b = v.height;
          switch (y) {
            case "top":
              _.set(v.x + w / 2, v.y - m), x.set(0, -1);
              break;
            case "bottom":
              _.set(v.x + w / 2, v.y + b + m), x.set(0, 1);
              break;
            case "left":
              _.set(v.x - m, v.y + b / 2), x.set(-1, 0);
              break;
            case "right":
              _.set(v.x + w + m, v.y + b / 2), x.set(1, 0);
          }
          H.scaleAndAdd(U, X_, Z_, p), U.transform(c);
          g = t.getBoundingRect(), g = u ? u.distance(U) : t instanceof ds ? q_(U, t.path, Y_) : (y = Y_, d = G_((d = g).x, g.y, g.width, g.height, U.x, U.y, U_), y.set(U_[0], U_[1]), d);
          g < l && (l = g, U.transform(h), Y_.transform(h), Y_.toArray(o[0]), U.toArray(o[1]), X_.toArray(o[2]));
        }
        J_(o, e.get("minTurnAngle")), n.setShape({
          points: o
        });
      }
    }
  }
  var $_ = [],
    Q_ = new H();
  function J_(t, e) {
    var n, i;
    e <= 180 && 0 < e && (e = e / 180 * Math.PI, X_.fromArray(t[0]), U.fromArray(t[1]), Y_.fromArray(t[2]), H.sub(Z_, X_, U), H.sub(j_, Y_, U), i = Z_.len(), n = j_.len(), i < .001 || n < .001 || (Z_.scale(1 / i), j_.scale(1 / n), i = Z_.dot(j_), Math.cos(e) < i && (n = H_(U.x, U.y, Y_.x, Y_.y, X_.x, X_.y, $_, !1), Q_.fromArray($_), Q_.scaleAndAdd(j_, n / Math.tan(Math.PI - e)), i = Y_.x !== U.x ? (Q_.x - U.x) / (Y_.x - U.x) : (Q_.y - U.y) / (Y_.y - U.y), isNaN(i) || (i < 0 ? H.copy(Q_, U) : 1 < i && H.copy(Q_, Y_), Q_.toArray(t[1])))));
  }
  function t1(t, e, n, i) {
    var r = "normal" === n,
      n = r ? t : t.ensureState(n),
      e = (n.ignore = e, i.get("smooth")),
      e = (e && !0 === e && (e = .3), n.shape = n.shape || {}, 0 < e && (n.shape.smooth = e), i.getModel("lineStyle").getLineStyle());
    r ? t.useStyle(e) : n.style = e;
  }
  function e1(t, e) {
    var n = e.smooth,
      i = e.points;
    if (i) if (t.moveTo(i[0][0], i[0][1]), 0 < n && 3 <= i.length) {
      var e = Qt(i[0], i[1]),
        r = Qt(i[1], i[2]);
      e && r ? (n = Math.min(e, r) * n, e = ee([], i[1], i[0], n / e), n = ee([], i[1], i[2], n / r), r = ee([], e, n, .5), t.bezierCurveTo(e[0], e[1], e[0], e[1], r[0], r[1]), t.bezierCurveTo(n[0], n[1], n[0], n[1], i[2][0], i[2][1])) : (t.lineTo(i[1][0], i[1][1]), t.lineTo(i[2][0], i[2][1]));
    } else for (var o = 1; o < i.length; o++) {
      t.lineTo(i[o][0], i[o][1]);
    }
  }
  function n1(t, e, n) {
    var i = t.getTextGuideLine(),
      r = t.getTextContent();
    if (r) {
      for (var o = e.normal, a = o.get("show"), s = r.ignore, l = 0; l < nl.length; l++) {
        var u,
          h = nl[l],
          c = e[h],
          p = "normal" === h;
        c && (u = c.get("show"), (p ? s : R(r.states[h] && r.states[h].ignore, s)) || !R(u, a) ? ((u = p ? i : i && i.states[h]) && (u.ignore = !0), i && t1(i, !0, h, c)) : (i || (i = new Uu(), t.setTextGuideLine(i), p || !s && a || t1(i, !0, "normal", e.normal), t.stateProxy && (i.stateProxy = t.stateProxy)), t1(i, !1, h, c)));
      }
      i && (B(i.style, n), i.style.fill = null, n = o.get("showAbove"), (t.textGuideLineConfig = t.textGuideLineConfig || {}).showAbove = n || !1, i.buildPath = e1);
    } else i && t.removeTextGuideLine();
  }
  function i1(t, e) {
    for (var n = {
        normal: t.getModel(e = e || "labelLine")
      }, i = 0; i < el.length; i++) {
      var r = el[i];
      n[r] = t.getModel([r, e]);
    }
    return n;
  }
  function r1(t) {
    for (var e = [], n = 0; n < t.length; n++) {
      var i,
        r,
        o,
        a,
        s,
        l,
        u = t[n];
      u.defaultAttr.ignore || (r = (i = u.label).getComputedTransform(), o = i.getBoundingRect(), a = !r || r[1] < 1e-5 && r[2] < 1e-5, l = i.style.margin || 0, (s = o.clone()).applyTransform(r), s.x -= l / 2, s.y -= l / 2, s.width += l, s.height += l, l = a ? new wh(o, r) : null, e.push({
        label: i,
        labelLine: u.labelLine,
        rect: s,
        localRect: o,
        obb: l,
        priority: u.priority,
        defaultAttr: u.defaultAttr,
        layoutOption: u.computedLayoutOption,
        axisAligned: a,
        transform: r
      }));
    }
    return e;
  }
  function o1(s, l, u, t, e, n) {
    var h = s.length;
    if (!(h < 2)) {
      s.sort(function (t, e) {
        return t.rect[l] - e.rect[l];
      });
      for (var i = 0, o = !1, r = 0, a = 0; a < h; a++) {
        var c,
          p = s[a],
          d = p.rect;
        (c = d[l] - i) < 0 && (d[l] -= c, p.label[l] -= c, o = !0), r += Math.max(-c, 0), i = d[l] + d[u];
      }
      0 < r && n && x(-r / h, 0, h);
      var f,
        g,
        y = s[0],
        m = s[h - 1];
      return v(), f < 0 && w(-f, .8), g < 0 && w(g, .8), v(), _(f, g, 1), _(g, f, -1), v(), f < 0 && b(-f), g < 0 && b(g), o;
    }
    function v() {
      f = y.rect[l] - t, g = e - m.rect[l] - m.rect[u];
    }
    function _(t, e, n) {
      t < 0 && (0 < (e = Math.min(e, -t)) ? (x(e * n, 0, h), (e = e + t) < 0 && w(-e * n, 1)) : w(-t * n, 1));
    }
    function x(t, e, n) {
      0 !== t && (o = !0);
      for (var i = e; i < n; i++) {
        var r = s[i];
        r.rect[l] += t, r.label[l] += t;
      }
    }
    function w(t, e) {
      for (var n = [], i = 0, r = 1; r < h; r++) {
        var o = s[r - 1].rect,
          o = Math.max(s[r].rect[l] - o[l] - o[u], 0);
        n.push(o), i += o;
      }
      if (i) {
        var a = Math.min(Math.abs(t) / i, e);
        if (0 < t) for (r = 0; r < h - 1; r++) {
          x(n[r] * a, 0, r + 1);
        } else for (r = h - 1; 0 < r; r--) {
          x(-(n[r - 1] * a), r, h);
        }
      }
    }
    function b(t) {
      for (var e = t < 0 ? -1 : 1, n = (t = Math.abs(t), Math.ceil(t / (h - 1))), i = 0; i < h - 1; i++) {
        if (0 < e ? x(n, 0, i + 1) : x(-n, h - i - 1, h), (t -= n) <= 0) return;
      }
    }
  }
  function a1(t, e, n, i) {
    return o1(t, "y", "height", e, n, i);
  }
  function s1(t) {
    var e = [],
      n = (t.sort(function (t, e) {
        return e.priority - t.priority;
      }), new q(0, 0, 0, 0));
    function i(t) {
      var e;
      t.ignore || null == (e = t.ensureState("emphasis")).ignore && (e.ignore = !1), t.ignore = !0;
    }
    for (var r = 0; r < t.length; r++) {
      for (var o = t[r], a = o.axisAligned, s = o.localRect, l = o.transform, u = o.label, h = o.labelLine, c = (n.copy(o.rect), n.width -= .1, n.height -= .1, n.x += .05, n.y += .05, o.obb), p = !1, d = 0; d < e.length; d++) {
        var f = e[d];
        if (n.intersect(f.rect)) {
          if (a && f.axisAligned) {
            p = !0;
            break;
          }
          if (f.obb || (f.obb = new wh(f.localRect, f.transform)), (c = c || new wh(s, l)).intersect(f.obb)) {
            p = !0;
            break;
          }
        }
      }
      p ? (i(u), h && i(h)) : (u.attr("ignore", o.defaultAttr.ignore), h && h.attr("ignore", o.defaultAttr.labelGuideIgnore), e.push(o));
    }
  }
  function l1(t, e) {
    var n = t.label,
      e = e && e.getTextGuideLine();
    return {
      dataIndex: t.dataIndex,
      dataType: t.dataType,
      seriesIndex: t.seriesModel.seriesIndex,
      text: t.label.style.text,
      rect: t.hostRect,
      labelRect: t.rect,
      align: n.style.align,
      verticalAlign: n.style.verticalAlign,
      labelLinePoints: function (t) {
        if (t) {
          for (var e = [], n = 0; n < t.length; n++) {
            e.push(t[n].slice());
          }
          return e;
        }
      }(e && e.shape.points)
    };
  }
  var u1 = ["align", "verticalAlign", "width", "height", "fontSize"],
    h1 = new vr(),
    c1 = Po(),
    p1 = Po();
  function d1(t, e, n) {
    for (var i = 0; i < n.length; i++) {
      var r = n[i];
      null != e[r] && (t[r] = e[r]);
    }
  }
  var f1 = ["x", "y", "rotation"],
    g1 = (y1.prototype.clearLabels = function () {
      this._labelList = [], this._chartViewList = [];
    }, y1.prototype._addLabel = function (t, e, n, i, r) {
      var o,
        a = i.style,
        s = i.__hostTarget.textConfig || {},
        l = i.getComputedTransform(),
        u = i.getBoundingRect().plain(),
        l = (q.applyTransform(u, u, l), l ? h1.setLocalTransform(l) : (h1.x = h1.y = h1.rotation = h1.originX = h1.originY = 0, h1.scaleX = h1.scaleY = 1), h1.rotation = Qa(h1.rotation), i.__hostTarget),
        h = (l && (o = l.getBoundingRect().plain(), h = l.getComputedTransform(), q.applyTransform(o, o, h)), o && l.getTextGuideLine());
      this._labelList.push({
        label: i,
        labelLine: h,
        seriesModel: n,
        dataIndex: t,
        dataType: e,
        layoutOption: r,
        computedLayoutOption: null,
        rect: u,
        hostRect: o,
        priority: o ? o.width * o.height : 0,
        defaultAttr: {
          ignore: i.ignore,
          labelGuideIgnore: h && h.ignore,
          x: h1.x,
          y: h1.y,
          scaleX: h1.scaleX,
          scaleY: h1.scaleY,
          rotation: h1.rotation,
          style: {
            x: a.x,
            y: a.y,
            align: a.align,
            verticalAlign: a.verticalAlign,
            width: a.width,
            height: a.height,
            fontSize: a.fontSize
          },
          cursor: i.cursor,
          attachedPos: s.position,
          attachedRot: s.rotation
        }
      });
    }, y1.prototype.addLabelsOfSeries = function (t) {
      var n = this,
        i = (this._chartViewList.push(t), t.__model),
        r = i.get("labelLayout");
      (D(r) || ct(r).length) && t.group.traverse(function (t) {
        if (t.ignore) return !0;
        var e = t.getTextContent(),
          t = Ys(t);
        e && !e.disableLabelLayout && n._addLabel(t.dataIndex, t.dataType, i, e, r);
      });
    }, y1.prototype.updateLayoutConfig = function (t) {
      var e = t.getWidth(),
        n = t.getHeight();
      for (var i = 0; i < this._labelList.length; i++) {
        var r = this._labelList[i],
          o = r.label,
          a = o.__hostTarget,
          s = r.defaultAttr,
          l = void 0,
          l = D(r.layoutOption) ? r.layoutOption(l1(r, a)) : r.layoutOption,
          u = (r.computedLayoutOption = l = l || {}, Math.PI / 180),
          h = (a && a.setTextConfig({
            local: !1,
            position: null != l.x || null != l.y ? null : s.attachedPos,
            rotation: null != l.rotate ? l.rotate * u : s.attachedRot,
            offset: [l.dx || 0, l.dy || 0]
          }), !1);
        null != l.x ? (o.x = G(l.x, e), o.setStyle("x", 0), h = !0) : (o.x = s.x, o.setStyle("x", s.style.x)), null != l.y ? (o.y = G(l.y, n), o.setStyle("y", 0), h = !0) : (o.y = s.y, o.setStyle("y", s.style.y)), l.labelLinePoints && (c = a.getTextGuideLine()) && (c.setShape({
          points: l.labelLinePoints
        }), h = !1), c1(o).needsUpdateLabelLine = h, o.rotation = null != l.rotate ? l.rotate * u : s.rotation, o.scaleX = s.scaleX, o.scaleY = s.scaleY;
        for (var c, p = 0; p < u1.length; p++) {
          var d = u1[p];
          o.setStyle(d, (null != l[d] ? l : s.style)[d]);
        }
        l.draggable ? (o.draggable = !0, o.cursor = "move", a && (c = r.seriesModel, null != r.dataIndex && (c = r.seriesModel.getData(r.dataType).getItemModel(r.dataIndex)), o.on("drag", function (t, e) {
          return function () {
            K_(t, e);
          };
        }(a, c.getModel("labelLine"))))) : (o.off("drag"), o.cursor = s.cursor);
      }
    }, y1.prototype.layout = function (t) {
      var e,
        n = t.getWidth(),
        t = t.getHeight(),
        i = r1(this._labelList),
        r = ut(i, function (t) {
          return "shiftX" === t.layoutOption.moveOverlap;
        }),
        o = ut(i, function (t) {
          return "shiftY" === t.layoutOption.moveOverlap;
        });
      o1(r, "x", "width", 0, n, e), a1(o, 0, t), s1(ut(i, function (t) {
        return t.layoutOption.hideOverlap;
      }));
    }, y1.prototype.processLabelsOverall = function () {
      var a = this;
      E(this._chartViewList, function (t) {
        var i = t.__model,
          r = t.ignoreLabelLineUpdate,
          o = i.isAnimationEnabled();
        t.group.traverse(function (t) {
          if (t.ignore && !t.forceLabelAnimation) return !0;
          var e = !r,
            n = t.getTextContent();
          (e = !e && n ? c1(n).needsUpdateLabelLine : e) && a._updateLabelLine(t, i), o && a._animateLabels(t, i);
        });
      });
    }, y1.prototype._updateLabelLine = function (t, e) {
      var n = t.getTextContent(),
        i = Ys(t),
        r = i.dataIndex;
      n && null != r && (e = (n = e.getData(i.dataType)).getItemModel(r), i = {}, (r = n.getItemVisual(r, "style")) && (n = n.getVisual("drawType"), i.stroke = r[n]), r = e.getModel("labelLine"), n1(t, i1(e), i), K_(t, r));
    }, y1.prototype._animateLabels = function (t, e) {
      var n,
        i,
        r,
        o,
        a,
        s = t.getTextContent(),
        l = t.getTextGuideLine();
      !s || !t.forceLabelAnimation && (s.ignore || s.invisible || t.disableLabelAnimation || Ah(t)) || (o = (r = c1(s)).oldLayout, n = (i = Ys(t)).dataIndex, a = {
        x: s.x,
        y: s.y,
        rotation: s.rotation
      }, i = e.getData(i.dataType), o ? (s.attr(o), (t = t.prevStates) && (0 <= C(t, "select") && s.attr(r.oldLayoutSelect), 0 <= C(t, "emphasis")) && s.attr(r.oldLayoutEmphasis), Dh(s, a, e, n)) : (s.attr(a), _c(s).valueAnimation || (t = R(s.style.opacity, 1), s.style.opacity = 0, kh(s, {
        style: {
          opacity: t
        }
      }, e, n))), r.oldLayout = a, s.states.select && (d1(t = r.oldLayoutSelect = {}, a, f1), d1(t, s.states.select, f1)), s.states.emphasis && (d1(t = r.oldLayoutEmphasis = {}, a, f1), d1(t, s.states.emphasis, f1)), xc(s, n, i, e, e)), !l || l.ignore || l.invisible || (o = (r = p1(l)).oldLayout, a = {
        points: l.shape.points
      }, o ? (l.attr({
        shape: o
      }), Dh(l, {
        shape: a
      }, e)) : (l.setShape(a), l.style.strokePercent = 0, kh(l, {
        style: {
          strokePercent: 1
        }
      }, e)), r.oldLayout = a);
    }, y1);
  function y1() {
    this._labelList = [], this._chartViewList = [];
  }
  var m1 = Po();
  function v1(t) {
    t.registerUpdateLifecycle("series:beforeupdate", function (t, e, n) {
      (m1(e).labelManager || (m1(e).labelManager = new g1())).clearLabels();
    }), t.registerUpdateLifecycle("series:layoutlabels", function (t, e, n) {
      var i = m1(e).labelManager;
      n.updatedSeries.forEach(function (t) {
        i.addLabelsOfSeries(e.getViewOfSeriesModel(t));
      }), i.updateLayoutConfig(e), i.layout(e), i.processLabelsOverall();
    });
  }
  function _1(t, e, n) {
    var i = Y.createCanvas(),
      r = e.getWidth(),
      e = e.getHeight(),
      o = i.style;
    return o && (o.position = "absolute", o.left = "0", o.top = "0", o.width = r + "px", o.height = e + "px", i.setAttribute("data-zr-dom-id", t)), i.width = r * n, i.height = e * n, i;
  }
  l_(v1);
  u(b1, x1 = ue), b1.prototype.getElementCount = function () {
    return this.__endIndex - this.__startIndex;
  }, b1.prototype.afterBrush = function () {
    this.__prevStartIndex = this.__startIndex, this.__prevEndIndex = this.__endIndex;
  }, b1.prototype.initContext = function () {
    this.ctx = this.dom.getContext("2d"), this.ctx.dpr = this.dpr;
  }, b1.prototype.setUnpainted = function () {
    this.__firstTimePaint = !0;
  }, b1.prototype.createBackBuffer = function () {
    var t = this.dpr;
    this.domBack = _1("back-" + this.id, this.painter, t), this.ctxBack = this.domBack.getContext("2d"), 1 !== t && this.ctxBack.scale(t, t);
  }, b1.prototype.createRepaintRects = function (t, e, n, i) {
    if (this.__firstTimePaint) return this.__firstTimePaint = !1, null;
    var l = [],
      u = this.maxRepaintRectCount,
      h = !1,
      c = new q(0, 0, 0, 0);
    function r(t) {
      if (t.isFinite() && !t.isZero()) if (0 === l.length) (e = new q(0, 0, 0, 0)).copy(t), l.push(e);else {
        for (var e, n = !1, i = 1 / 0, r = 0, o = 0; o < l.length; ++o) {
          var a = l[o];
          if (a.intersect(t)) {
            var s = new q(0, 0, 0, 0);
            s.copy(a), s.union(t), l[o] = s, n = !0;
            break;
          }
          h && (c.copy(t), c.union(a), s = t.width * t.height, a = a.width * a.height, (a = c.width * c.height - s - a) < i) && (i = a, r = o);
        }
        h && (l[r].union(t), n = !0), n || ((e = new q(0, 0, 0, 0)).copy(t), l.push(e)), h = h || l.length >= u;
      }
    }
    for (var o, a = this.__startIndex; a < this.__endIndex; ++a) {
      (s = t[a]) && (d = s.shouldBePainted(n, i, !0, !0), (p = s.__isRendered && (s.__dirty & vn || !d) ? s.getPrevPaintRect() : null) && r(p), o = d && (s.__dirty & vn || !s.__isRendered) ? s.getPaintRect() : null) && r(o);
    }
    for (a = this.__prevStartIndex; a < this.__prevEndIndex; ++a) {
      var s,
        p,
        d = (s = e[a]) && s.shouldBePainted(n, i, !0, !0);
      !s || d && s.__zr || !s.__isRendered || (p = s.getPrevPaintRect()) && r(p);
    }
    do {
      for (var f = !1, a = 0; a < l.length;) {
        if (l[a].isZero()) l.splice(a, 1);else {
          for (var g = a + 1; g < l.length;) {
            l[a].intersect(l[g]) ? (f = !0, l[a].union(l[g]), l.splice(g, 1)) : g++;
          }
          a++;
        }
      }
    } while (f);
    return this._paintRects = l;
  }, b1.prototype.debugGetPaintRects = function () {
    return (this._paintRects || []).slice();
  }, b1.prototype.resize = function (t, e) {
    var n = this.dpr,
      i = this.dom,
      r = i.style,
      o = this.domBack;
    r && (r.width = t + "px", r.height = e + "px"), i.width = t * n, i.height = e * n, o && (o.width = t * n, o.height = e * n, 1 !== n) && this.ctxBack.scale(n, n);
  }, b1.prototype.clear = function (t, o, e) {
    var n = this.dom,
      a = this.ctx,
      i = n.width,
      r = n.height,
      s = (o = o || this.clearColor, this.motionBlur && !t),
      l = this.lastFrameAlpha,
      u = this.dpr,
      h = this,
      c = (s && (this.domBack || this.createBackBuffer(), this.ctxBack.globalCompositeOperation = "copy", this.ctxBack.drawImage(n, 0, 0, i / u, r / u)), this.domBack);
    function p(t, e, n, i) {
      var r;
      a.clearRect(t, e, n, i), o && "transparent" !== o && (r = void 0, vt(o) ? (r = (o.global || o.__width === n && o.__height === i) && o.__canvasGradient || Oy(a, o, {
        x: 0,
        y: 0,
        width: n,
        height: i
      }), o.__canvasGradient = r, o.__width = n, o.__height = i) : _t(o) && (o.scaleX = o.scaleX || u, o.scaleY = o.scaleY || u, r = Gy(a, o, {
        dirty: function dirty() {
          h.setUnpainted(), h.painter.refresh();
        }
      })), a.save(), a.fillStyle = r || o, a.fillRect(t, e, n, i), a.restore()), s && (a.save(), a.globalAlpha = l, a.drawImage(c, t, e, n, i), a.restore());
    }
    !e || s ? p(0, 0, i, r) : e.length && E(e, function (t) {
      p(t.x * u, t.y * u, t.width * u, t.height * u);
    });
  };
  var x1,
    w1 = b1;
  function b1(t, e, n) {
    var i,
      r = x1.call(this) || this,
      t = (r.motionBlur = !1, r.lastFrameAlpha = .7, r.dpr = 1, r.virtual = !1, r.config = {}, r.incremental = !1, r.zlevel = 0, r.maxRepaintRectCount = 5, r.__dirty = !0, r.__firstTimePaint = !0, r.__used = !1, r.__drawIndex = 0, r.__startIndex = 0, r.__endIndex = 0, r.__prevStartIndex = null, r.__prevEndIndex = null, n = n || ur, "string" == typeof t ? i = _1(t, e, n) : O(t) && (t = (i = t).id), r.id = t, (r.dom = i).style);
    return t && (zt(i), i.onselectstart = function () {
      return !1;
    }, t.padding = "0", t.margin = "0", t.borderWidth = "0"), r.painter = e, r.dpr = n, r;
  }
  var S1 = 314159;
  m.prototype.getType = function () {
    return "canvas";
  }, m.prototype.isSingleCanvas = function () {
    return this._singleCanvas;
  }, m.prototype.getViewportRoot = function () {
    return this._domRoot;
  }, m.prototype.getViewportRootOffset = function () {
    var t = this.getViewportRoot();
    if (t) return {
      offsetLeft: t.offsetLeft || 0,
      offsetTop: t.offsetTop || 0
    };
  }, m.prototype.refresh = function (t) {
    var e = this.storage.getDisplayList(!0),
      n = this._prevDisplayList,
      i = this._zlevelList;
    this._redrawId = Math.random(), this._paintList(e, n, t, this._redrawId);
    for (var r = 0; r < i.length; r++) {
      var o,
        a = i[r],
        a = this._layers[a];
      !a.__builtin__ && a.refresh && (o = 0 === r ? this._backgroundColor : null, a.refresh(o));
    }
    return this._opts.useDirtyRect && (this._prevDisplayList = e.slice()), this;
  }, m.prototype.refreshHover = function () {
    this._paintHoverList(this.storage.getDisplayList(!1));
  }, m.prototype._paintHoverList = function (t) {
    var e = t.length,
      n = this._hoverlayer;
    if (n && n.clear(), e) {
      for (var i, r = {
          inHover: !0,
          viewWidth: this._width,
          viewHeight: this._height
        }, o = 0; o < e; o++) {
        var a = t[o];
        a.__inHover && (n = n || (this._hoverlayer = this.getLayer(1e5)), i || (i = n.ctx).save(), n0(i, a, r, o === e - 1));
      }
      i && i.restore();
    }
  }, m.prototype.getHoverLayer = function () {
    return this.getLayer(1e5);
  }, m.prototype.paintOne = function (t, e) {
    e0(t, e);
  }, m.prototype._paintList = function (t, e, n, i) {
    var r, o, a;
    this._redrawId === i && (n = n || !1, this._updateLayerStatus(t), r = (o = this._doPaintList(t, e, n)).finished, o = o.needsRefreshHover, this._needsManuallyCompositing && this._compositeManually(), o && this._paintHoverList(t), r ? this.eachLayer(function (t) {
      t.afterBrush && t.afterBrush();
    }) : (a = this, Tn(function () {
      a._paintList(t, e, n, i);
    })));
  }, m.prototype._compositeManually = function () {
    var e = this.getLayer(S1).ctx,
      n = this._domRoot.width,
      i = this._domRoot.height;
    e.clearRect(0, 0, n, i), this.eachBuiltinLayer(function (t) {
      t.virtual && e.drawImage(t.dom, 0, 0, n, i);
    });
  }, m.prototype._doPaintList = function (d, f, g) {
    for (var y = this, m = [], v = this._opts.useDirtyRect, t = 0; t < this._zlevelList.length; t++) {
      var e = this._zlevelList[t],
        e = this._layers[e];
      e.__builtin__ && e !== this._hoverlayer && (e.__dirty || g) && m.push(e);
    }
    for (var _ = !0, x = !1, n = function n(t) {
        function e(t) {
          var e = {
            inHover: !1,
            allClipped: !1,
            prevEl: null,
            viewWidth: y._width,
            viewHeight: y._height
          };
          for (i = s; i < r.__endIndex; i++) {
            var n = d[i];
            if (n.__inHover && (x = !0), y._doPaintEl(n, r, v, t, e, i === r.__endIndex - 1), l) if (15 < Date.now() - u) break;
          }
          e.prevElClipPaths && o.restore();
        }
        var n,
          i,
          r = m[t],
          o = r.ctx,
          a = v && r.createRepaintRects(d, f, w._width, w._height),
          s = g ? r.__startIndex : r.__drawIndex,
          l = !g && r.incremental && Date.now,
          u = l && Date.now(),
          t = r.zlevel === w._zlevelList[0] ? w._backgroundColor : null;
        r.__startIndex !== r.__endIndex && (s !== r.__startIndex || (n = d[s]).incremental && n.notClear && !g) || r.clear(!1, t, a), -1 === s && (console.error("For some unknown reason. drawIndex is -1"), s = r.__startIndex);
        if (a) {
          if (0 === a.length) i = r.__endIndex;else for (var h = w.dpr, c = 0; c < a.length; ++c) {
            var p = a[c];
            o.save(), o.beginPath(), o.rect(p.x * h, p.y * h, p.width * h, p.height * h), o.clip(), e(p), o.restore();
          }
        } else o.save(), e(), o.restore();
        r.__drawIndex = i, r.__drawIndex < r.__endIndex && (_ = !1);
      }, w = this, i = 0; i < m.length; i++) {
      n(i);
    }
    return b.wxa && E(this._layers, function (t) {
      t && t.ctx && t.ctx.draw && t.ctx.draw();
    }), {
      finished: _,
      needsRefreshHover: x
    };
  }, m.prototype._doPaintEl = function (t, e, n, i, r, o) {
    e = e.ctx;
    n ? (n = t.getPaintRect(), (!i || n && n.intersect(i)) && (n0(e, t, r, o), t.setPrevPaintRect(n))) : n0(e, t, r, o);
  }, m.prototype.getLayer = function (t, e) {
    this._singleCanvas && !this._needsManuallyCompositing && (t = S1);
    var n = this._layers[t];
    return n || ((n = new w1("zr_" + t, this, this.dpr)).zlevel = t, n.__builtin__ = !0, this._layerConfig[t] ? d(n, this._layerConfig[t], !0) : this._layerConfig[t - .01] && d(n, this._layerConfig[t - .01], !0), e && (n.virtual = e), this.insertLayer(t, n), n.initContext()), n;
  }, m.prototype.insertLayer = function (t, e) {
    var n,
      i = this._layers,
      r = this._zlevelList,
      o = r.length,
      a = this._domRoot,
      s = null,
      l = -1;
    if (!i[t] && (n = e) && (n.__builtin__ || "function" == typeof n.resize && "function" == typeof n.refresh)) {
      if (0 < o && t > r[0]) {
        for (l = 0; l < o - 1 && !(r[l] < t && r[l + 1] > t); l++) {
          ;
        }
        s = i[r[l]];
      }
      r.splice(l + 1, 0, t), (i[t] = e).virtual || (s ? (n = s.dom).nextSibling ? a.insertBefore(e.dom, n.nextSibling) : a.appendChild(e.dom) : a.firstChild ? a.insertBefore(e.dom, a.firstChild) : a.appendChild(e.dom)), e.painter || (e.painter = this);
    }
  }, m.prototype.eachLayer = function (t, e) {
    for (var n = this._zlevelList, i = 0; i < n.length; i++) {
      var r = n[i];
      t.call(e, this._layers[r], r);
    }
  }, m.prototype.eachBuiltinLayer = function (t, e) {
    for (var n = this._zlevelList, i = 0; i < n.length; i++) {
      var r = n[i],
        o = this._layers[r];
      o.__builtin__ && t.call(e, o, r);
    }
  }, m.prototype.eachOtherLayer = function (t, e) {
    for (var n = this._zlevelList, i = 0; i < n.length; i++) {
      var r = n[i],
        o = this._layers[r];
      o.__builtin__ || t.call(e, o, r);
    }
  }, m.prototype.getLayers = function () {
    return this._layers;
  }, m.prototype._updateLayerStatus = function (t) {
    function e(t) {
      r && (r.__endIndex !== t && (r.__dirty = !0), r.__endIndex = t);
    }
    if (this.eachBuiltinLayer(function (t, e) {
      t.__dirty = t.__used = !1;
    }), this._singleCanvas) for (var n = 1; n < t.length; n++) {
      if ((s = t[n]).zlevel !== t[n - 1].zlevel || s.incremental) {
        this._needsManuallyCompositing = !0;
        break;
      }
    }
    for (var i, r = null, o = 0, a = 0; a < t.length; a++) {
      var s,
        l = (s = t[a]).zlevel,
        u = void 0;
      i !== l && (i = l, o = 0), s.incremental ? ((u = this.getLayer(l + .001, this._needsManuallyCompositing)).incremental = !0, o = 1) : u = this.getLayer(l + (0 < o ? .01 : 0), this._needsManuallyCompositing), u.__builtin__ || it("ZLevel " + l + " has been used by unkown layer " + u.id), u !== r && (u.__used = !0, u.__startIndex !== a && (u.__dirty = !0), u.__startIndex = a, u.incremental ? u.__drawIndex = -1 : u.__drawIndex = a, e(a), r = u), s.__dirty & vn && !s.__inHover && (u.__dirty = !0, u.incremental) && u.__drawIndex < 0 && (u.__drawIndex = a);
    }
    e(a), this.eachBuiltinLayer(function (t, e) {
      !t.__used && 0 < t.getElementCount() && (t.__dirty = !0, t.__startIndex = t.__endIndex = t.__drawIndex = 0), t.__dirty && t.__drawIndex < 0 && (t.__drawIndex = t.__startIndex);
    });
  }, m.prototype.clear = function () {
    return this.eachBuiltinLayer(this._clearLayer), this;
  }, m.prototype._clearLayer = function (t) {
    t.clear();
  }, m.prototype.setBackgroundColor = function (t) {
    this._backgroundColor = t, E(this._layers, function (t) {
      t.setUnpainted();
    });
  }, m.prototype.configLayer = function (t, e) {
    if (e) {
      var n = this._layerConfig;
      n[t] ? d(n[t], e, !0) : n[t] = e;
      for (var i = 0; i < this._zlevelList.length; i++) {
        var r = this._zlevelList[i];
        r !== t && r !== t + .01 || d(this._layers[r], n[t], !0);
      }
    }
  }, m.prototype.delLayer = function (t) {
    var e = this._layers,
      n = this._zlevelList,
      i = e[t];
    i && (i.dom.parentNode.removeChild(i.dom), delete e[t], n.splice(C(n, t), 1));
  }, m.prototype.resize = function (t, e) {
    if (this._domRoot.style) {
      var n = this._domRoot,
        i = (n.style.display = "none", this._opts),
        r = this.root;
      if (null != t && (i.width = t), null != e && (i.height = e), t = Ny(r, 0, i), e = Ny(r, 1, i), n.style.display = "", this._width !== t || e !== this._height) {
        for (var o in n.style.width = t + "px", n.style.height = e + "px", this._layers) {
          this._layers.hasOwnProperty(o) && this._layers[o].resize(t, e);
        }
        this.refresh(!0);
      }
      this._width = t, this._height = e;
    } else {
      if (null == t || null == e) return;
      this._width = t, this._height = e, this.getLayer(S1).resize(t, e);
    }
    return this;
  }, m.prototype.clearLayer = function (t) {
    t = this._layers[t];
    t && t.clear();
  }, m.prototype.dispose = function () {
    this.root.innerHTML = "", this.root = this.storage = this._domRoot = this._layers = null;
  }, m.prototype.getRenderedCanvas = function (t) {
    if (this._singleCanvas && !this._compositeManually) return this._layers[S1].dom;
    var e = new w1("image", this, (t = t || {}).pixelRatio || this.dpr),
      n = (e.initContext(), e.clear(!1, t.backgroundColor || this._backgroundColor), e.ctx);
    if (t.pixelRatio <= this.dpr) {
      this.refresh();
      var i = e.dom.width,
        r = e.dom.height;
      this.eachLayer(function (t) {
        t.__builtin__ ? n.drawImage(t.dom, 0, 0, i, r) : t.renderToCanvas && (n.save(), t.renderToCanvas(n), n.restore());
      });
    } else for (var o = {
        inHover: !1,
        viewWidth: this._width,
        viewHeight: this._height
      }, a = this.storage.getDisplayList(!0), s = 0, l = a.length; s < l; s++) {
      var u = a[s];
      n0(n, u, o, s === l - 1);
    }
    return e.dom;
  }, m.prototype.getWidth = function () {
    return this._width;
  }, m.prototype.getHeight = function () {
    return this._height;
  };
  var M1 = m;
  function m(t, e, n, i) {
    this.type = "canvas", this._zlevelList = [], this._prevDisplayList = [], this._layers = {}, this._layerConfig = {}, this._needsManuallyCompositing = !1, this.type = "canvas";
    var r = !t.nodeName || "CANVAS" === t.nodeName.toUpperCase();
    this._opts = n = L({}, n || {}), this.dpr = n.devicePixelRatio || ur, this._singleCanvas = r;
    (this.root = t).style && (zt(t), t.innerHTML = ""), this.storage = e;
    var o,
      a,
      e = this._zlevelList,
      s = (this._prevDisplayList = [], this._layers);
    r ? (o = (r = t).width, a = r.height, null != n.width && (o = n.width), null != n.height && (a = n.height), this.dpr = n.devicePixelRatio || 1, r.width = o * this.dpr, r.height = a * this.dpr, this._width = o, this._height = a, (o = new w1(r, this, this.dpr)).__builtin__ = !0, o.initContext(), (s[S1] = o).zlevel = S1, e.push(S1), this._domRoot = t) : (this._width = Ny(t, 0, n), this._height = Ny(t, 1, n), o = this._domRoot = (a = this._width, r = this._height, (s = document.createElement("div")).style.cssText = ["position:relative", "width:" + a + "px", "height:" + r + "px", "padding:0", "margin:0", "border-width:0"].join(";") + ";", s), t.appendChild(o));
  }
  u(C1, T1 = g), C1.prototype.init = function (t, e, n) {
    T1.prototype.init.call(this, t, e, n), this._sourceManager = new sg(this), ug(this);
  }, C1.prototype.mergeOption = function (t, e) {
    T1.prototype.mergeOption.call(this, t, e), ug(this);
  }, C1.prototype.optionUpdated = function () {
    this._sourceManager.dirty();
  }, C1.prototype.getSourceManager = function () {
    return this._sourceManager;
  }, C1.type = "dataset", C1.defaultOption = {
    seriesLayoutBy: Yp
  };
  var T1,
    I1 = C1;
  function C1() {
    var t = null !== T1 && T1.apply(this, arguments) || this;
    return t.type = "dataset", t;
  }
  u(A1, D1 = Ig), A1.type = "dataset";
  var D1,
    k1 = A1;
  function A1() {
    var t = null !== D1 && D1.apply(this, arguments) || this;
    return t.type = "dataset", t;
  }
  function P1(t) {
    t.registerComponentModel(I1), t.registerComponentView(k1);
  }
  l_([function (t) {
    t.registerPainter("canvas", M1);
  }, P1]), l_(v1);
  var L1 = 2 * Math.PI,
    O1 = Math.PI / 180;
  function R1(t, e) {
    return Dp(t.getBoxLayoutParams(), {
      width: e.getWidth(),
      height: e.getHeight()
    });
  }
  function N1(t, e) {
    var n,
      i = R1(t, e),
      r = t.get("center"),
      o = t.get("radius"),
      a = (F(o) || (o = [0, o]), G(i.width, e.getWidth())),
      e = G(i.height, e.getHeight()),
      s = Math.min(a, e),
      l = G(o[0], s / 2),
      o = G(o[1], s / 2),
      s = t.coordinateSystem;
    return s = s ? (n = (t = s.dataToPoint(r))[0] || 0, t[1] || 0) : (n = G((r = F(r) ? r : [r, r])[0], a) + i.x, G(r[1], e) + i.y), {
      cx: n,
      cy: s,
      r0: l,
      r: o
    };
  }
  function E1(t, e, C) {
    e.eachSeriesByType(t, function (t) {
      var r,
        a = t.getData(),
        e = a.mapDimension("value"),
        n = R1(t, C),
        i = N1(t, C),
        s = i.cx,
        l = i.cy,
        u = i.r,
        h = i.r0,
        o = -t.get("startAngle") * O1,
        i = t.get("endAngle"),
        c = t.get("padAngle") * O1,
        i = "auto" === i ? o - L1 : -i * O1,
        p = t.get("minAngle") * O1 + c,
        d = 0,
        f = (a.each(e, function (t) {
          isNaN(t) || d++;
        }), a.getSum(e)),
        g = Math.PI / (f || d) * 2,
        y = t.get("clockwise"),
        m = t.get("roseType"),
        v = t.get("stillShowZeroSum"),
        _ = a.getDataExtent(e),
        x = (_[0] = 0, y ? 1 : -1),
        w = [o, i],
        b = x * c / 2,
        w = (Za(w, !y), o = w[0], i = w[1], B1(t)),
        S = (w.startAngle = o, w.endAngle = i, w.clockwise = y, Math.abs(i - o)),
        M = S,
        T = 0,
        I = o;
      a.setLayout({
        viewRect: n,
        r: u
      }), a.each(e, function (t, e) {
        var n, i, r, o;
        isNaN(t) ? a.setItemLayout(e, {
          angle: NaN,
          startAngle: NaN,
          endAngle: NaN,
          clockwise: y,
          cx: s,
          cy: l,
          r0: h,
          r: m ? NaN : u
        }) : ((n = "area" !== m ? 0 === f && v ? g : t * g : S / d) < p ? M -= n = p : T += t, i = I + x * n, o = r = 0, o = n < c ? r = I + x * n / 2 : (r = I + b, i - b), a.setItemLayout(e, {
          angle: n,
          startAngle: r,
          endAngle: o,
          clockwise: y,
          cx: s,
          cy: l,
          r0: h,
          r: m ? to(t, _, [h, u]) : u
        }), I = i);
      }), M < L1 && d && (M <= .001 ? (r = S / d, a.each(e, function (t, e) {
        var n, i;
        isNaN(t) || (i = t = 0, i = ((n = a.getItemLayout(e)).angle = r) < c ? t = o + x * (e + .5) * r : (t = o + x * e * r + b, o + x * (e + 1) * r - b), n.startAngle = t, n.endAngle = i);
      })) : (g = M / T, I = o, a.each(e, function (t, e) {
        var n, i;
        isNaN(t) || (i = n = 0, i = (t = (e = a.getItemLayout(e)).angle === p ? p : t * g) < c ? n = I + x * t / 2 : (n = I + b, I + x * t - b), e.startAngle = n, e.endAngle = i, I += x * t);
      })));
    });
  }
  var B1 = Po();
  function z1(t) {
    return {
      seriesType: t,
      reset: function reset(t, e) {
        var i,
          r = e.findComponents({
            mainType: "legend"
          });
        r && r.length && (i = t.getData()).filterSelf(function (t) {
          for (var e = i.getName(t), n = 0; n < r.length; n++) {
            if (!r[n].isSelected(e)) return !1;
          }
          return !0;
        });
      }
    };
  }
  var F1 = Math.PI / 180;
  function V1(t, s, l, u, h, e, n, i, r, o) {
    if (!(t.length < 2)) {
      for (var a, c = t.length, p = 0; p < c; p++) {
        "outer" === t[p].position && "labelLine" === t[p].labelAlignTo && (a = t[p].label.x - o, t[p].linePoints[1][0] += a, t[p].label.x = o);
      }
      if (a1(t, r, r + n)) {
        for (var d, f, g, y, m, v = t, _ = {
            list: [],
            maxY: 0
          }, x = {
            list: [],
            maxY: 0
          }, w = 0; w < v.length; w++) {
          "none" === v[w].labelAlignTo && (f = (d = v[w]).label.y > l ? x : _, (g = Math.abs(d.label.y - l)) >= f.maxY && (m = d.label.x - s - d.len2 * h, y = u + d.len, m = Math.abs(m) < y ? Math.sqrt(g * g / (1 - m * m / y / y)) : y, f.rB = m, f.maxY = g), f.list.push(d));
        }
        b(_), b(x);
      }
    }
    function b(t) {
      for (var e = t.rB, n = e * e, i = 0; i < t.list.length; i++) {
        var r = t.list[i],
          o = Math.abs(r.label.y - l),
          a = u + r.len,
          o = Math.sqrt(Math.abs((1 - o * o / n) * (a * a))),
          a = s + (o + r.len2) * h,
          o = a - r.label.x;
        W1(r, r.targetTextWidth - o * h, !0), r.label.x = a;
      }
    }
  }
  function W1(t, e, n) {
    var i, r, o, a, s, l, u;
    void 0 === n && (n = !1), null == t.labelStyleWidth && (s = (i = t.label).style, r = t.rect, l = s.backgroundColor, u = (u = s.padding) ? u[1] + u[3] : 0, s = s.overflow, e < (o = r.width + (l ? 0 : u)) || n) && (a = r.height, s && s.match("break") ? (i.setStyle("backgroundColor", null), i.setStyle("width", e - u), s = i.getBoundingRect(), i.setStyle("width", Math.ceil(s.width)), i.setStyle("backgroundColor", l)) : (s = e - u, l = !(e < o) && (!n || s > t.unconstrainedWidth) ? null : s, i.setStyle("width", l)), u = i.getBoundingRect(), r.width = u.width, e = (i.style.margin || 0) + 2.1, r.height = u.height + e, r.y -= (r.height - a) / 2);
  }
  function H1(t) {
    return "center" === t.position;
  }
  function G1(t) {
    var S,
      M,
      T = t.getData(),
      I = [],
      C = !1,
      D = (t.get("minShowLabelAngle") || 0) * F1,
      e = T.getLayout("viewRect"),
      k = T.getLayout("r"),
      A = e.width,
      P = e.x,
      n = e.y,
      e = e.height;
    function L(t) {
      t.ignore = !0;
    }
    if (T.each(function (t) {
      var e,
        n,
        i,
        r,
        o,
        a,
        s,
        l,
        u,
        h,
        c = T.getItemGraphicEl(t),
        p = c.shape,
        d = c.getTextContent(),
        f = c.getTextGuideLine(),
        t = T.getItemModel(t),
        g = t.getModel("label"),
        y = g.get("position") || t.get(["emphasis", "label", "position"]),
        m = g.get("distanceToLabelLine"),
        v = g.get("alignTo"),
        _ = G(g.get("edgeDistance"), A),
        x = g.get("bleedMargin"),
        t = t.getModel("labelLine"),
        w = G(t.get("length"), A),
        b = G(t.get("length2"), A);
      Math.abs(p.endAngle - p.startAngle) < D ? (E(d.states, L), d.ignore = !0, f && (E(f.states, L), f.ignore = !0)) : function (t) {
        if (!t.ignore) return 1;
        for (var e in t.states) {
          if (!1 === t.states[e].ignore) return 1;
        }
      }(d) && (h = (p.startAngle + p.endAngle) / 2, e = Math.cos(h), n = Math.sin(h), S = p.cx, M = p.cy, i = "inside" === y || "inner" === y, s = "center" === y ? (r = p.cx, o = p.cy, "center") : (r = (s = (i ? (p.r + p.r0) / 2 * e : p.r * e) + S) + 3 * e, o = (l = (i ? (p.r + p.r0) / 2 * n : p.r * n) + M) + 3 * n, i || (a = s + e * (w + k - p.r), p = l + n * (w + k - p.r), u = a + (e < 0 ? -1 : 1) * b, r = "edge" === v ? e < 0 ? P + _ : P + A - _ : u + (e < 0 ? -m : m), a = [[s, l], [a, o = p], [u, p]]), i ? "center" : "edge" === v ? 0 < e ? "right" : "left" : 0 < e ? "left" : "right"), l = Math.PI, u = 0, W(p = g.get("rotate")) ? u = p * (l / 180) : "center" === y ? u = 0 : "radial" === p || !0 === p ? u = e < 0 ? -h + l : -h : "tangential" === p && "outside" !== y && "outer" !== y && ((g = Math.atan2(e, n)) < 0 && (g = 2 * l + g), u = (g = 0 < n ? l + g : g) - l), C = !!u, d.x = r, d.y = o, d.rotation = u, d.setStyle({
        verticalAlign: "middle"
      }), i ? (d.setStyle({
        align: s
      }), (h = d.states.select) && (h.x += d.x, h.y += d.y)) : ((p = d.getBoundingRect().clone()).applyTransform(d.getComputedTransform()), g = (d.style.margin || 0) + 2.1, p.y -= g / 2, p.height += g, I.push({
        label: d,
        labelLine: f,
        position: y,
        len: w,
        len2: b,
        minTurnAngle: t.get("minTurnAngle"),
        maxSurfaceAngle: t.get("maxSurfaceAngle"),
        surfaceNormal: new H(e, n),
        linePoints: a,
        textAlign: s,
        labelDistance: m,
        labelAlignTo: v,
        edgeDistance: _,
        bleedMargin: x,
        rect: p,
        unconstrainedWidth: p.width,
        labelStyleWidth: d.style.width
      })), c.setTextConfig({
        inside: i
      }));
    }), !C && t.get("avoidLabelOverlap")) {
      for (var i = I, r = S, t = M, o = k, a = A, s = P, l = [], u = [], h = Number.MAX_VALUE, c = -Number.MAX_VALUE, p = 0; p < i.length; p++) {
        var d = i[p].label;
        H1(i[p]) || (d.x < r ? (h = Math.min(h, d.x), l) : (c = Math.max(c, d.x), u)).push(i[p]);
      }
      for (var f, p = 0; p < i.length; p++) {
        !H1(g = i[p]) && g.linePoints && null == g.labelStyleWidth && (d = g.label, y = g.linePoints, f = void 0, f = "edge" === g.labelAlignTo ? d.x < r ? y[2][0] - g.labelDistance - s - g.edgeDistance : s + a - g.edgeDistance - y[2][0] - g.labelDistance : "labelLine" === g.labelAlignTo ? d.x < r ? h - s - g.bleedMargin : s + a - c - g.bleedMargin : d.x < r ? d.x - s - g.bleedMargin : s + a - d.x - g.bleedMargin, g.targetTextWidth = f, W1(g, f));
      }
      V1(u, r, t, o, 1, 0, e, 0, n, c), V1(l, r, t, o, -1, 0, e, 0, n, h);
      for (var g, y, m, v, _, p = 0; p < i.length; p++) {
        !H1(g = i[p]) && g.linePoints && (d = g.label, y = g.linePoints, m = "edge" === g.labelAlignTo, v = (v = d.style.padding) ? v[1] + v[3] : 0, v = d.style.backgroundColor ? 0 : v, v = g.rect.width + v, _ = y[1][0] - y[2][0], m ? d.x < r ? y[2][0] = s + g.edgeDistance + v + g.labelDistance : y[2][0] = s + a - g.edgeDistance - v - g.labelDistance : (d.x < r ? y[2][0] = d.x + g.labelDistance : y[2][0] = d.x - g.labelDistance, y[1][0] = y[2][0] + _), y[1][1] = y[2][1] = d.y);
      }
    }
    for (var x = 0; x < I.length; x++) {
      var w,
        b = I[x],
        O = b.label,
        R = b.labelLine,
        N = isNaN(O.x) || isNaN(O.y);
      O && (O.setStyle({
        align: b.textAlign
      }), N && (E(O.states, L), O.ignore = !0), w = O.states.select) && (w.x += O.x, w.y += O.y), R && (w = b.linePoints, N || !w ? (E(R.states, L), R.ignore = !0) : (J_(w, b.minTurnAngle), function (t, e, n) {
        if (n <= 180 && 0 < n) {
          n = n / 180 * Math.PI, X_.fromArray(t[0]), U.fromArray(t[1]), Y_.fromArray(t[2]), H.sub(Z_, U, X_), H.sub(j_, Y_, U);
          var i = Z_.len(),
            r = j_.len();
          if (!(i < .001 || r < .001)) if (Z_.scale(1 / i), j_.scale(1 / r), Z_.dot(e) < Math.cos(n)) {
            i = H_(U.x, U.y, Y_.x, Y_.y, X_.x, X_.y, $_, !1), r = (Q_.fromArray($_), Math.PI / 2), e = r + Math.acos(j_.dot(e)) - n;
            if (r <= e) H.copy(Q_, Y_);else {
              Q_.scaleAndAdd(j_, i / Math.tan(Math.PI / 2 - e));
              n = Y_.x !== U.x ? (Q_.x - U.x) / (Y_.x - U.x) : (Q_.y - U.y) / (Y_.y - U.y);
              if (isNaN(n)) return;
              n < 0 ? H.copy(Q_, U) : 1 < n && H.copy(Q_, Y_);
            }
            Q_.toArray(t[1]);
          }
        }
      }(w, b.surfaceNormal, b.maxSurfaceAngle), R.setShape({
        points: w
      }), O.__hostTarget.textGuideLineConfig = {
        anchor: new H(w[0][0], w[0][1])
      }));
    }
  }
  function U1(t, e, n) {
    t = t.get("borderRadius");
    if (null == t) return n ? {
      cornerRadius: 0
    } : null;
    F(t) || (t = [t, t, t, t]);
    var i = Math.abs(e.r || 0 - e.r0 || 0);
    return {
      cornerRadius: z(t, function (t) {
        return Dr(t, i);
      })
    };
  }
  u(Y1, q1 = Pu), Y1.prototype.updateData = function (t, e, n, i) {
    var r = this,
      o = t.hostModel,
      a = t.getItemModel(e),
      s = a.getModel("emphasis"),
      l = t.getItemLayout(e),
      u = L(U1(a.getModel("itemStyle"), l, !0), l);
    isNaN(u.startAngle) ? r.setShape(u) : (i ? (r.setShape(u), i = o.getShallow("animationType"), o.ecModel.ssr ? (kh(r, {
      scaleX: 0,
      scaleY: 0
    }, o, {
      dataIndex: e,
      isFrom: !0
    }), r.originX = u.cx, r.originY = u.cy) : "scale" === i ? (r.shape.r = l.r0, kh(r, {
      shape: {
        r: l.r
      }
    }, o, e)) : null != n ? (r.setShape({
      startAngle: n,
      endAngle: n
    }), kh(r, {
      shape: {
        startAngle: l.startAngle,
        endAngle: l.endAngle
      }
    }, o, e)) : (r.shape.endAngle = l.startAngle, Dh(r, {
      shape: {
        endAngle: l.endAngle
      }
    }, o, e))) : (Rh(r), Dh(r, {
      shape: u
    }, o, e)), r.useStyle(t.getItemVisual(e, "style")), zl(r, a), i = (l.startAngle + l.endAngle) / 2, n = o.get("selectedOffset"), u = Math.cos(i) * n, i = Math.sin(i) * n, (n = a.getShallow("cursor")) && r.attr("cursor", n), this._updateLabel(o, t, e), r.ensureState("emphasis").shape = L({
      r: l.r + (s.get("scale") && s.get("scaleSize") || 0)
    }, U1(s.getModel("itemStyle"), l)), L(r.ensureState("select"), {
      x: u,
      y: i,
      shape: U1(a.getModel(["select", "itemStyle"]), l)
    }), L(r.ensureState("blur"), {
      shape: U1(a.getModel(["blur", "itemStyle"]), l)
    }), n = r.getTextGuideLine(), o = r.getTextContent(), n && L(n.ensureState("select"), {
      x: u,
      y: i
    }), L(o.ensureState("select"), {
      x: u,
      y: i
    }), Nl(this, s.get("focus"), s.get("blurScope"), s.get("disabled")));
  }, Y1.prototype._updateLabel = function (t, e, n) {
    var i = e.getItemModel(n),
      r = i.getModel("labelLine"),
      o = e.getItemVisual(n, "style"),
      a = o && o.fill,
      o = o && o.opacity,
      e = (cc(this, pc(i), {
        labelFetcher: e.hostModel,
        labelDataIndex: n,
        inheritColor: a,
        defaultOpacity: o,
        defaultText: t.getFormattedLabel(n, "normal") || e.getName(n)
      }), this.getTextContent()),
      n = (this.setTextConfig({
        position: null,
        rotation: null
      }), e.attr({
        z2: 10
      }), t.get(["label", "position"]));
    "outside" !== n && "outer" !== n ? this.removeTextGuideLine() : (this.getTextGuideLine() || (e = new Uu(), this.setTextGuideLine(e)), n1(this, i1(i), {
      stroke: a,
      opacity: St(r.get(["lineStyle", "opacity"]), o, 1)
    }));
  };
  var q1,
    X1 = Y1;
  function Y1(t, e, n) {
    var i = q1.call(this) || this,
      r = (i.z2 = 2, new Ns());
    return i.setTextContent(r), i.updateData(t, e, n, !0), i;
  }
  u(K1, Z1 = Pg), K1.prototype.render = function (e, t, n, i) {
    var r,
      o,
      a = e.getData(),
      s = this._data,
      l = this.group;
    if (!s && 0 < a.count()) {
      for (var u = a.getItemLayout(0), h = 1; isNaN(u && u.startAngle) && h < a.count(); ++h) {
        u = a.getItemLayout(h);
      }
      u && (r = u.startAngle);
    }
    this._emptyCircleSector && l.remove(this._emptyCircleSector), 0 === a.count() && e.get("showEmptyCircle") && (o = B1(e), (n = new Pu({
      shape: L(N1(e, n), o)
    })).useStyle(e.getModel("emptyCircleStyle").getItemStyle()), this._emptyCircleSector = n, l.add(n)), a.diff(s).add(function (t) {
      var e = new X1(a, t, r);
      a.setItemGraphicEl(t, e), l.add(e);
    }).update(function (t, e) {
      e = s.getItemGraphicEl(e);
      e.updateData(a, t, r), e.off("click"), l.add(e), a.setItemGraphicEl(t, e);
    }).remove(function (t) {
      Oh(s.getItemGraphicEl(t), e, t);
    }).execute(), G1(e), "expansion" !== e.get("animationTypeUpdate") && (this._data = a);
  }, K1.prototype.dispose = function () {}, K1.prototype.containPoint = function (t, e) {
    var n,
      e = e.getData().getItemLayout(0);
    if (e) return n = t[0] - e.cx, t = t[1] - e.cy, (n = Math.sqrt(n * n + t * t)) <= e.r && n >= e.r0;
  }, K1.type = "pie";
  var Z1,
    j1 = K1;
  function K1() {
    var t = null !== Z1 && Z1.apply(this, arguments) || this;
    return t.ignoreLabelLineUpdate = !0, t;
  }
  function $1(t, e, n) {
    e = F(e) ? {
      coordDimensions: e
    } : L({
      encodeDefine: t.getEncode()
    }, e);
    var i = t.getSource(),
      e = $m(i, e).dimensions,
      e = new Km(e, t);
    return e.initData(i, n), e;
  }
  J1.prototype.getAllNames = function () {
    var t = this._getRawData();
    return t.mapArray(t.getName);
  }, J1.prototype.containName = function (t) {
    return 0 <= this._getRawData().indexOfName(t);
  }, J1.prototype.indexOfName = function (t) {
    return this._getDataWithEncodedVisual().indexOfName(t);
  }, J1.prototype.getItemVisual = function (t, e) {
    return this._getDataWithEncodedVisual().getItemVisual(t, e);
  };
  var Q1 = J1;
  function J1(t, e) {
    this._getDataWithEncodedVisual = t, this._getRawData = e;
  }
  var tx,
    ex = Po(),
    nx = (u(ix, tx = vg), ix.prototype.init = function (t) {
      tx.prototype.init.apply(this, arguments), this.legendVisualProvider = new Q1(pt(this.getData, this), pt(this.getRawData, this)), this._defaultLabelLine(t);
    }, ix.prototype.mergeOption = function () {
      tx.prototype.mergeOption.apply(this, arguments);
    }, ix.prototype.getInitialData = function () {
      return $1(this, {
        coordDimensions: ["value"],
        encodeDefaulter: dt(Qp, this)
      });
    }, ix.prototype.getDataParams = function (t) {
      var e,
        n = this.getData(),
        i = ex(n),
        r = i.seats,
        i = (r || (e = [], n.each(n.mapDimension("value"), function (t) {
          e.push(t);
        }), r = i.seats = oo(e, n.hostModel.get("percentPrecision"))), tx.prototype.getDataParams.call(this, t));
      return i.percent = r[t] || 0, i.$vars.push("percent"), i;
    }, ix.prototype._defaultLabelLine = function (t) {
      xo(t, "labelLine", ["show"]);
      var e = t.labelLine,
        n = t.emphasis.labelLine;
      e.show = e.show && t.label.show, n.show = n.show && t.emphasis.label.show;
    }, ix.type = "series.pie", ix.defaultOption = {
      z: 2,
      legendHoverLink: !0,
      colorBy: "data",
      center: ["50%", "50%"],
      radius: [0, "75%"],
      clockwise: !0,
      startAngle: 90,
      endAngle: "auto",
      padAngle: 0,
      minAngle: 0,
      minShowLabelAngle: 0,
      selectedOffset: 10,
      percentPrecision: 2,
      stillShowZeroSum: !0,
      left: 0,
      top: 0,
      right: 0,
      bottom: 0,
      width: null,
      height: null,
      label: {
        rotate: 0,
        show: !0,
        overflow: "truncate",
        position: "outer",
        alignTo: "none",
        edgeDistance: "25%",
        bleedMargin: 10,
        distanceToLabelLine: 5
      },
      labelLine: {
        show: !0,
        length: 15,
        length2: 15,
        smooth: !1,
        minTurnAngle: 90,
        maxSurfaceAngle: 90,
        lineStyle: {
          width: 1,
          type: "solid"
        }
      },
      itemStyle: {
        borderWidth: 1,
        borderJoin: "round"
      },
      showEmptyCircle: !0,
      emptyCircleStyle: {
        color: "lightgray",
        opacity: 1
      },
      labelLayout: {
        hideOverlap: !0
      },
      emphasis: {
        scale: !0,
        scaleSize: 5
      },
      avoidLabelOverlap: !0,
      animationType: "expansion",
      animationDuration: 1e3,
      animationTypeUpdate: "transition",
      animationEasingUpdate: "cubicInOut",
      animationDurationUpdate: 500,
      animationEasing: "cubicInOut"
    }, ix);
  function ix() {
    return null !== tx && tx.apply(this, arguments) || this;
  }
  function rx(t) {
    t.eachSeriesByType("radar", function (t) {
      var e,
        i = t.getData(),
        r = [],
        o = t.coordinateSystem;
      o && (E(e = o.getIndicatorAxes(), function (t, n) {
        i.each(i.mapDimension(e[n].dim), function (t, e) {
          r[e] = r[e] || [];
          t = o.dataToPoint(t, n);
          r[e][n] = ox(t) ? t : ax(o);
        });
      }), i.each(function (t) {
        var e = ht(r[t], ox) || ax(o);
        r[t].push(e.slice()), i.setItemLayout(t, r[t]);
      }));
    });
  }
  function ox(t) {
    return !isNaN(t[0]) && !isNaN(t[1]);
  }
  function ax(t) {
    return [t.cx, t.cy];
  }
  function sx(n) {
    var i,
      t = n.polar;
    t && (F(t) || (t = [t]), i = [], E(t, function (t, e) {
      (t.indicator ? (t.type && !t.shape && (t.shape = t.type), n.radar = n.radar || [], F(n.radar) || (n.radar = [n.radar]), n.radar) : i).push(t);
    }), n.polar = i), E(n.series, function (t) {
      t && "radar" === t.type && t.polarIndex && (t.radarIndex = t.polarIndex);
    });
  }
  l_(function (t) {
    t.registerChartView(j1), t.registerSeriesModel(nx), yy("pie", t.registerAction), t.registerLayout(dt(E1, "pie")), t.registerProcessor(z1("pie")), t.registerProcessor({
      seriesType: "pie",
      reset: function reset(t, e) {
        var n = t.getData();
        n.filterSelf(function (t) {
          var e = n.mapDimension("value"),
            e = n.get(e, t);
          return !(W(e) && !isNaN(e) && e < 0);
        });
      }
    });
  });
  u(hx, lx = Pg), hx.prototype.render = function (l, t, e) {
    var n = l.coordinateSystem,
      h = this.group,
      c = l.getData(),
      a = this._data;
    function u(t, e) {
      var n,
        i = t.getItemVisual(e, "symbol") || "circle";
      if ("none" !== i) return n = [(n = F(n = t.getItemVisual(e, "symbolSize")) ? n : [+n, +n])[0] || 0, n[1] || 0], i = Py(i, -1, -1, 2, 2), t = t.getItemVisual(e, "symbolRotate") || 0, i.attr({
        style: {
          strokeNoScale: !0
        },
        z2: 100,
        scaleX: n[0] / 2,
        scaleY: n[1] / 2,
        rotation: t * Math.PI / 180 || 0
      }), i;
    }
    function s(t, e, n, i, r, o) {
      n.removeAll();
      for (var a = 0; a < e.length - 1; a++) {
        var s = u(i, r);
        s && (t[s.__dimIdx = a] ? (s.setPosition(t[a]), sc[o ? "initProps" : "updateProps"](s, {
          x: e[a][0],
          y: e[a][1]
        }, l, r)) : s.setPosition(e[a]), n.add(s));
      }
    }
    function p(t) {
      return z(t, function (t) {
        return [n.cx, n.cy];
      });
    }
    c.diff(a).add(function (t) {
      var e,
        n,
        i,
        r,
        o = c.getItemLayout(t);
      o && (e = new Vu(), n = new Uu(), i = {
        shape: {
          points: o
        }
      }, e.shape.points = p(o), n.shape.points = p(o), kh(e, i, l, t), kh(n, i, l, t), i = new Hr(), r = new Hr(), i.add(n), i.add(e), i.add(r), s(n.shape.points, o, r, c, t, !0), c.setItemGraphicEl(t, i));
    }).update(function (t, e) {
      var e = a.getItemGraphicEl(e),
        n = e.childAt(0),
        i = e.childAt(1),
        r = e.childAt(2),
        o = {
          shape: {
            points: c.getItemLayout(t)
          }
        };
      o.shape.points && (s(n.shape.points, o.shape.points, r, c, t, !1), Rh(i), Rh(n), Dh(n, o, l), Dh(i, o, l), c.setItemGraphicEl(t, e));
    }).remove(function (t) {
      h.remove(a.getItemGraphicEl(t));
    }).execute(), c.eachItemGraphicEl(function (t, n) {
      var i = c.getItemModel(n),
        e = t.childAt(0),
        r = t.childAt(1),
        o = t.childAt(2),
        a = c.getItemVisual(n, "style"),
        s = a.fill,
        e = (h.add(t), e.useStyle(B(i.getModel("lineStyle").getLineStyle(), {
          fill: "none",
          stroke: s
        })), zl(e, i, "lineStyle"), zl(r, i, "areaStyle"), i.getModel("areaStyle")),
        l = e.isEmpty() && e.parentModel.isEmpty(),
        e = (r.ignore = l, E(["emphasis", "select", "blur"], function (t) {
          var e = i.getModel([t, "areaStyle"]),
            e = e.isEmpty() && e.parentModel.isEmpty();
          r.ensureState(t).ignore = e && l;
        }), r.useStyle(B(e.getAreaStyle(), {
          fill: s,
          opacity: .7,
          decal: a.decal
        })), i.getModel("emphasis")),
        u = e.getModel("itemStyle").getItemStyle();
      o.eachChild(function (t) {
        t instanceof ws ? (e = t.style, t.useStyle(L({
          image: e.image,
          x: e.x,
          y: e.y,
          width: e.width,
          height: e.height
        }, a))) : (t.useStyle(a), t.setColor(s), t.style.strokeNoScale = !0);
        t.ensureState("emphasis").style = y(u);
        var e = c.getStore().get(c.getDimensionIndex(t.__dimIdx), n);
        null != e && !isNaN(e) || (e = ""), cc(t, pc(i), {
          labelFetcher: c.hostModel,
          labelDataIndex: n,
          labelDimIndex: t.__dimIdx,
          defaultText: e,
          inheritColor: s,
          defaultOpacity: a.opacity
        });
      }), Nl(t, e.get("focus"), e.get("blurScope"), e.get("disabled"));
    }), this._data = c;
  }, hx.prototype.remove = function () {
    this.group.removeAll(), this._data = null;
  }, hx.type = "radar";
  var lx,
    ux = hx;
  function hx() {
    var t = null !== lx && lx.apply(this, arguments) || this;
    return t.type = hx.type, t;
  }
  u(dx, cx = vg), dx.prototype.init = function (t) {
    cx.prototype.init.apply(this, arguments), this.legendVisualProvider = new Q1(pt(this.getData, this), pt(this.getRawData, this));
  }, dx.prototype.getInitialData = function (t, e) {
    return $1(this, {
      generateCoord: "indicator_",
      generateCoordCount: 1 / 0
    });
  }, dx.prototype.formatTooltip = function (n, t, e) {
    var i = this.getData(),
      r = this.coordinateSystem.getIndicatorAxes(),
      o = this.getData().getName(n),
      o = "" === o ? this.name : o,
      a = dg(this, n);
    return pg("section", {
      header: o,
      sortBlocks: !0,
      blocks: z(r, function (t) {
        var e = i.get(i.mapDimension(t.dim), n);
        return pg("nameValue", {
          markerType: "subItem",
          markerColor: a,
          name: t.name,
          value: e,
          sortParam: e
        });
      })
    });
  }, dx.prototype.getTooltipPosition = function (t) {
    if (null != t) for (var e, n = this.getData(), i = this.coordinateSystem, r = n.getValues(z(i.dimensions, function (t) {
        return n.mapDimension(t);
      }), t), o = 0, a = r.length; o < a; o++) {
      if (!isNaN(r[o])) return e = i.getIndicatorAxes(), i.coordToPoint(e[o].dataToCoord(r[o]), o);
    }
  }, dx.type = "series.radar", dx.dependencies = ["radar"], dx.defaultOption = {
    z: 2,
    colorBy: "data",
    coordinateSystem: "radar",
    legendHoverLink: !0,
    radarIndex: 0,
    lineStyle: {
      width: 2,
      type: "solid",
      join: "round"
    },
    label: {
      position: "top"
    },
    symbolSize: 8
  };
  var cx,
    px = dx;
  function dx() {
    var t = null !== cx && cx.apply(this, arguments) || this;
    return t.type = dx.type, t.hasSymbolVisual = !0, t;
  }
  var Cc = {
      show: !0,
      z: 0,
      inverse: !1,
      name: "",
      nameLocation: "end",
      nameRotate: null,
      nameTruncate: {
        maxWidth: null,
        ellipsis: "...",
        placeholder: "."
      },
      nameTextStyle: {},
      nameGap: 15,
      silent: !1,
      triggerEvent: !1,
      tooltip: {
        show: !1
      },
      axisPointer: {},
      axisLine: {
        show: !0,
        onZero: !0,
        onZeroAxisIndex: null,
        lineStyle: {
          color: "#6E7079",
          width: 1,
          type: "solid"
        },
        symbol: ["none", "none"],
        symbolSize: [10, 15]
      },
      axisTick: {
        show: !0,
        inside: !1,
        length: 5,
        lineStyle: {
          width: 1
        }
      },
      axisLabel: {
        show: !0,
        inside: !1,
        rotate: 0,
        showMinLabel: null,
        showMaxLabel: null,
        margin: 8,
        fontSize: 12
      },
      splitLine: {
        show: !0,
        showMinLine: !0,
        showMaxLine: !0,
        lineStyle: {
          color: ["#E0E6F1"],
          width: 1,
          type: "solid"
        }
      },
      splitArea: {
        show: !1,
        areaStyle: {
          color: ["rgba(250,250,250,0.2)", "rgba(210,219,238,0.2)"]
        }
      }
    },
    Uo = d({
      boundaryGap: !0,
      deduplication: null,
      splitLine: {
        show: !1
      },
      axisTick: {
        alignWithLabel: !1,
        interval: "auto"
      },
      axisLabel: {
        interval: "auto"
      }
    }, Cc),
    wy = d({
      boundaryGap: [0, 0],
      axisLine: {
        show: "auto"
      },
      axisTick: {
        show: "auto"
      },
      splitNumber: 5,
      minorTick: {
        show: !1,
        splitNumber: 5,
        length: 3,
        lineStyle: {}
      },
      minorSplitLine: {
        show: !1,
        lineStyle: {
          color: "#F4F7FD",
          width: 1
        }
      }
    }, Cc),
    fx = {
      category: Uo,
      value: wy,
      time: d({
        splitNumber: 6,
        axisLabel: {
          showMinLabel: !1,
          showMaxLabel: !1,
          rich: {
            primary: {
              fontWeight: "bold"
            }
          }
        },
        splitLine: {
          show: !1
        }
      }, wy),
      log: B({
        logBase: 10
      }, wy)
    },
    Iy = fx.value;
  function gx(t, e) {
    return B({
      show: e
    }, t);
  }
  u(vx, yx = g), vx.prototype.optionUpdated = function () {
    var n = this.get("boundaryGap"),
      i = this.get("splitNumber"),
      r = this.get("scale"),
      o = this.get("axisLine"),
      a = this.get("axisTick"),
      s = this.get("axisLabel"),
      l = this.get("axisName"),
      u = this.get(["axisName", "show"]),
      h = this.get(["axisName", "formatter"]),
      c = this.get("axisNameGap"),
      p = this.get("triggerEvent"),
      t = z(this.get("indicator") || [], function (t) {
        null != t.max && 0 < t.max && !t.min ? t.min = 0 : null != t.min && t.min < 0 && !t.max && (t.max = 0);
        var e = l,
          t = (null != t.color && (e = B({
            color: t.color
          }, l)), d(y(t), {
            boundaryGap: n,
            splitNumber: i,
            scale: r,
            axisLine: o,
            axisTick: a,
            axisLabel: s,
            name: t.text,
            showName: u,
            nameLocation: "end",
            nameGap: c,
            nameTextStyle: e,
            triggerEvent: p
          }, !1)),
          e = (V(h) ? (e = t.name, t.name = h.replace("{value}", null != e ? e : "")) : D(h) && (t.name = h(t.name, t)), new Rc(t, null, this.ecModel));
        return at(e, r_.prototype), e.mainType = "radar", e.componentIndex = this.componentIndex, e;
      }, this);
    this._indicatorModels = t;
  }, vx.prototype.getIndicatorModels = function () {
    return this._indicatorModels;
  }, vx.type = "radar", vx.defaultOption = {
    z: 0,
    center: ["50%", "50%"],
    radius: "75%",
    startAngle: 90,
    axisName: {
      show: !0
    },
    boundaryGap: [0, 0],
    splitNumber: 5,
    axisNameGap: 15,
    scale: !1,
    shape: "polygon",
    axisLine: d({
      lineStyle: {
        color: "#bbb"
      }
    }, Iy.axisLine),
    axisLabel: gx(Iy.axisLabel, !1),
    axisTick: gx(Iy.axisTick, !1),
    splitLine: gx(Iy.splitLine, !0),
    splitArea: gx(Iy.splitArea, !0),
    indicator: []
  };
  var yx,
    mx = vx;
  function vx() {
    var t = null !== yx && yx.apply(this, arguments) || this;
    return t.type = vx.type, t;
  }
  var _x = Math.PI,
    xx = (bx.prototype.hasBuilder = function (t) {
      return !!Sx[t];
    }, bx.prototype.add = function (t) {
      Sx[t](this.opt, this.axisModel, this.group, this._transformGroup);
    }, bx.prototype.getGroup = function () {
      return this.group;
    }, bx.innerTextLayout = function (t, e, n) {
      var i,
        e = ao(e - t),
        t = so(e) ? (i = 0 < n ? "top" : "bottom", "center") : so(e - _x) ? (i = 0 < n ? "bottom" : "top", "center") : (i = "middle", 0 < e && e < _x ? 0 < n ? "right" : "left" : 0 < n ? "left" : "right");
      return {
        rotation: e,
        textAlign: t,
        textVerticalAlign: i
      };
    }, bx.makeAxisEventDataBase = function (t) {
      var e = {
        componentType: t.mainType,
        componentIndex: t.componentIndex
      };
      return e[t.mainType + "Index"] = t.componentIndex, e;
    }, bx.isLabelSilent = function (t) {
      var e = t.get("tooltip");
      return t.get("silent") || !(t.get("triggerEvent") || e && e.show);
    }, bx);
  function bx(t, e) {
    this.group = new Hr(), this.opt = e, this.axisModel = t, B(e, {
      labelOffset: 0,
      nameDirection: 1,
      tickDirection: 1,
      labelDirection: 1,
      silent: !0,
      handleAutoShown: function handleAutoShown() {
        return !0;
      }
    });
    t = new Hr({
      x: e.position[0],
      y: e.position[1],
      rotation: e.rotation
    });
    t.updateTransform(), this._transformGroup = t;
  }
  var Sx = {
    axisLine: function axisLine(i, t, r, e) {
      var o,
        a,
        s,
        l,
        u,
        h,
        c,
        n = t.get(["axisLine", "show"]);
      (n = "auto" === n && i.handleAutoShown ? i.handleAutoShown("axisLine") : n) && (n = t.axis.getExtent(), e = e.transform, o = [n[0], 0], a = [n[1], 0], s = a[0] < o[0], e && (ne(o, o, e), ne(a, a, e)), l = L({
        lineCap: "round"
      }, t.getModel(["axisLine", "lineStyle"]).getLineStyle()), Zh((n = new ju({
        shape: {
          x1: o[0],
          y1: o[1],
          x2: a[0],
          y2: a[1]
        },
        style: l,
        strokeContainThreshold: i.strokeContainThreshold || 5,
        silent: !0,
        z2: 1
      })).shape, n.style.lineWidth), n.anid = "line", r.add(n), null != (u = t.get(["axisLine", "symbol"]))) && (e = t.get(["axisLine", "symbolSize"]), V(u) && (u = [u, u]), (V(e) || W(e)) && (e = [e, e]), n = function (t, e) {
        if (null != t) return [G((t = F(t) ? t : [t, t])[0], e[0]) || 0, G(R(t[1], t[0]), e[1]) || 0];
      }(t.get(["axisLine", "symbolOffset"]) || 0, e), h = e[0], c = e[1], E([{
        rotate: i.rotation + Math.PI / 2,
        offset: n[0],
        r: 0
      }, {
        rotate: i.rotation - Math.PI / 2,
        offset: n[1],
        r: Math.sqrt((o[0] - a[0]) * (o[0] - a[0]) + (o[1] - a[1]) * (o[1] - a[1]))
      }], function (t, e) {
        var n;
        "none" !== u[e] && null != u[e] && (e = Py(u[e], -h / 2, -c / 2, h, c, l.stroke, !0), n = t.r + t.offset, e.attr({
          rotation: t.rotate,
          x: (t = s ? a : o)[0] + n * Math.cos(i.rotation),
          y: t[1] - n * Math.sin(i.rotation),
          silent: !0,
          z2: 11
        }), r.add(e));
      }));
    },
    axisTickLabel: function axisTickLabel(t, e, n, i) {
      var r,
        o,
        a,
        s,
        l,
        u = function (t, e, n, i) {
          var r = n.axis,
            o = n.getModel("axisTick"),
            a = o.get("show");
          "auto" === a && i.handleAutoShown && (a = i.handleAutoShown("axisTick"));
          if (a && !r.scale.isBlank()) {
            for (var a = o.getModel("lineStyle"), i = i.tickDirection * o.get("length"), s = Cx(r.getTicksCoords(), e.transform, i, B(a.getLineStyle(), {
                stroke: n.get(["axisLine", "lineStyle", "color"])
              }), "ticks"), l = 0; l < s.length; l++) {
              t.add(s[l]);
            }
            return s;
          }
        }(n, i, e, t),
        h = function (g, y, m, v) {
          var _,
            x,
            w,
            b,
            S,
            M,
            T,
            I,
            C = m.axis,
            t = bt(v.axisLabelShow, m.get(["axisLabel", "show"]));
          if (t && !C.scale.isBlank()) return _ = m.getModel("axisLabel"), x = _.get("margin"), w = C.getViewLabels(), t = (bt(v.labelRotate, _.get("rotate")) || 0) * _x / 180, b = xx.innerTextLayout(v.rotation, t, v.labelDirection), S = m.getCategories && m.getCategories(!0), M = [], T = xx.isLabelSilent(m), I = m.get("triggerEvent"), E(w, function (t, e) {
            var n = "ordinal" === C.scale.type ? C.scale.getRawOrdinalNumber(t.tickValue) : t.tickValue,
              i = t.formattedLabel,
              r = t.rawLabel,
              o = _,
              a = (o = S && S[n] && O(a = S[n]) && a.textStyle ? new Rc(a.textStyle, _, m.ecModel) : o).getTextColor() || m.get(["axisLine", "lineStyle", "color"]),
              s = C.dataToCoord(n),
              l = o.getShallow("align", !0) || b.textAlign,
              u = R(o.getShallow("alignMinLabel", !0), l),
              h = R(o.getShallow("alignMaxLabel", !0), l),
              c = o.getShallow("verticalAlign", !0) || o.getShallow("baseline", !0) || b.textVerticalAlign,
              p = R(o.getShallow("verticalAlignMinLabel", !0), c),
              d = R(o.getShallow("verticalAlignMaxLabel", !0), c),
              f = new Ns({
                x: s,
                y: v.labelOffset + v.labelDirection * x,
                rotation: b.rotation,
                silent: T,
                z2: 10 + (t.level || 0),
                style: dc(o, {
                  text: i,
                  align: 0 === e ? u : e === w.length - 1 ? h : l,
                  verticalAlign: 0 === e ? p : e === w.length - 1 ? d : c,
                  fill: D(a) ? a("category" === C.type ? r : "value" === C.type ? n + "" : n, e) : a
                })
              });
            f.anid = "label_" + n, rc({
              el: f,
              componentModel: m,
              itemName: i,
              formatterParamsExtra: {
                isTruncated: function isTruncated() {
                  return f.isTruncated;
                },
                value: r,
                tickIndex: e
              }
            }), I && ((s = xx.makeAxisEventDataBase(m)).targetType = "axisLabel", s.value = r, s.tickIndex = e, "category" === C.type && (s.dataIndex = n), Ys(f).eventData = s), y.add(f), f.updateTransform(), M.push(f), g.add(f), f.decomposeTransform();
          }), M;
        }(n, i, e, t),
        c = (o = h, u = u, n_((r = e).axis) || (d = r.get(["axisLabel", "showMinLabel"]), r = r.get(["axisLabel", "showMaxLabel"]), u = u || [], y = (o = o || [])[0], f = o[1], a = o[o.length - 1], o = o[o.length - 2], s = u[0], g = u[1], l = u[u.length - 1], u = u[u.length - 2], !1 === d ? (Mx(y), Mx(s)) : Tx(y, f) && (d ? (Mx(f), Mx(g)) : (Mx(y), Mx(s))), !1 === r ? (Mx(a), Mx(l)) : Tx(o, a) && (r ? (Mx(o), Mx(u)) : (Mx(a), Mx(l)))), n),
        p = i,
        d = e,
        f = t.tickDirection,
        g = d.axis,
        y = d.getModel("minorTick");
      if (y.get("show") && !g.scale.isBlank()) {
        var m = g.getMinorTicksCoords();
        if (m.length) for (var g = y.getModel("lineStyle"), v = f * y.get("length"), _ = B(g.getLineStyle(), B(d.getModel("axisTick").getLineStyle(), {
            stroke: d.get(["axisLine", "lineStyle", "color"])
          })), x = 0; x < m.length; x++) {
          for (var w = Cx(m[x], p.transform, v, _, "minorticks_" + x), b = 0; b < w.length; b++) {
            c.add(w[b]);
          }
        }
      }
      e.get(["axisLabel", "hideOverlap"]) && s1(r1(z(h, function (t) {
        return {
          label: t,
          priority: t.z2,
          defaultAttr: {
            ignore: t.ignore
          }
        };
      })));
    },
    axisName: function axisName(t, e, n, i) {
      var r,
        o,
        a,
        s,
        l,
        u,
        h,
        c,
        p = bt(t.axisName, e.get("name"));
      p && (c = e.get("nameLocation"), l = t.nameDirection, r = e.getModel("nameTextStyle"), u = e.get("nameGap") || 0, o = (h = e.axis.getExtent())[0] > h[1] ? -1 : 1, o = ["start" === c ? h[0] - o * u : "end" === c ? h[1] + o * u : (h[0] + h[1]) / 2, Ix(c) ? t.labelOffset + l * u : 0], null != (u = e.get("nameRotate")) && (u = u * _x / 180), Ix(c) ? a = xx.innerTextLayout(t.rotation, null != u ? u : t.rotation, l) : (a = function (t, e, n, i) {
        var r,
          n = ao(n - t),
          t = i[0] > i[1],
          i = "start" === e && !t || "start" !== e && t;
        e = so(n - _x / 2) ? (r = i ? "bottom" : "top", "center") : so(n - 1.5 * _x) ? (r = i ? "top" : "bottom", "center") : (r = "middle", n < 1.5 * _x && _x / 2 < n ? i ? "left" : "right" : i ? "right" : "left");
        return {
          rotation: n,
          textAlign: e,
          textVerticalAlign: r
        };
      }(t.rotation, c, u || 0, h), null != (s = t.axisNameAvailableWidth) && (s = Math.abs(s / Math.sin(a.rotation)), isFinite(s) || (s = null))), l = r.getFont(), u = (c = e.get("nameTruncate", !0) || {}).ellipsis, h = bt(t.nameTruncateMaxWidth, c.maxWidth, s), rc({
        el: t = new Ns({
          x: o[0],
          y: o[1],
          rotation: a.rotation,
          silent: xx.isLabelSilent(e),
          style: dc(r, {
            text: p,
            font: l,
            overflow: "truncate",
            width: h,
            ellipsis: u,
            fill: r.getTextColor() || e.get(["axisLine", "lineStyle", "color"]),
            align: r.get("align") || a.textAlign,
            verticalAlign: r.get("verticalAlign") || a.textVerticalAlign
          }),
          z2: 1
        }),
        componentModel: e,
        itemName: p
      }), t.__fullText = p, t.anid = "name", e.get("triggerEvent") && ((c = xx.makeAxisEventDataBase(e)).targetType = "axisName", c.name = p, Ys(t).eventData = c), i.add(t), t.updateTransform(), n.add(t), t.decomposeTransform());
    }
  };
  function Mx(t) {
    t && (t.ignore = !0);
  }
  function Tx(t, e) {
    var n,
      i = t && t.getBoundingRect().clone(),
      r = e && e.getBoundingRect().clone();
    if (i && r) return Be(n = Oe([]), n, -t.rotation), i.applyTransform(Ne([], n, t.getLocalTransform())), r.applyTransform(Ne([], n, e.getLocalTransform())), i.intersect(r);
  }
  function Ix(t) {
    return "middle" === t || "center" === t;
  }
  function Cx(t, e, n, i, r) {
    for (var o = [], a = [], s = [], l = 0; l < t.length; l++) {
      var u = t[l].coord,
        u = (a[0] = u, s[a[1] = 0] = u, s[1] = n, e && (ne(a, a, e), ne(s, s, e)), new ju({
          shape: {
            x1: a[0],
            y1: a[1],
            x2: s[0],
            y2: s[1]
          },
          style: i,
          z2: 2,
          autoBatch: !0,
          silent: !0
        }));
      Zh(u.shape, u.style.lineWidth), u.anid = r + "_" + t[l].tickValue, o.push(u);
    }
    return o;
  }
  var Dx,
    kx = ["axisLine", "axisTickLabel", "axisName"],
    Ax = (u(Px, Dx = Ig), Px.prototype.render = function (t, e, n) {
      this.group.removeAll(), this._buildAxes(t), this._buildSplitLineAndArea(t);
    }, Px.prototype._buildAxes = function (t) {
      var n = t.coordinateSystem;
      E(z(n.getIndicatorAxes(), function (t) {
        var e = t.model.get("showName") ? t.name : "";
        return new xx(t.model, {
          axisName: e,
          position: [n.cx, n.cy],
          rotation: t.angle,
          labelDirection: -1,
          tickDirection: -1,
          nameDirection: 1
        });
      }), function (t) {
        E(kx, t.add, t), this.group.add(t.getGroup());
      }, this);
    }, Px.prototype._buildSplitLineAndArea = function (t) {
      var n = t.coordinateSystem,
        e = n.getIndicatorAxes();
      if (e.length) {
        var i = t.get("shape"),
          r = t.getModel("splitLine"),
          t = t.getModel("splitArea"),
          o = r.getModel("lineStyle"),
          a = t.getModel("areaStyle"),
          s = r.get("show"),
          l = t.get("show"),
          r = o.get("color"),
          t = a.get("color"),
          u = F(r) ? r : [r],
          h = F(t) ? t : [t],
          c = [],
          p = [];
        if ("circle" === i) for (var d = e[0].getTicksCoords(), f = n.cx, g = n.cy, y = 0; y < d.length; y++) {
          s && c[M(c, u, y)].push(new hu({
            shape: {
              cx: f,
              cy: g,
              r: d[y].coord
            }
          })), l && y < d.length - 1 && p[M(p, h, y)].push(new Nu({
            shape: {
              cx: f,
              cy: g,
              r0: d[y].coord,
              r: d[y + 1].coord
            }
          }));
        } else for (var m, v = z(e, function (t, e) {
            t = t.getTicksCoords();
            return m = null == m ? t.length - 1 : Math.min(t.length - 1, m), z(t, function (t) {
              return n.coordToPoint(t.coord, e);
            });
          }), _ = [], y = 0; y <= m; y++) {
          for (var x = [], w = 0; w < e.length; w++) {
            x.push(v[w][y]);
          }
          x[0] && x.push(x[0].slice()), s && c[M(c, u, y)].push(new Uu({
            shape: {
              points: x
            }
          })), l && _ && p[M(p, h, y - 1)].push(new Vu({
            shape: {
              points: x.concat(_)
            }
          })), _ = x.slice().reverse();
        }
        var b = o.getLineStyle(),
          S = a.getAreaStyle();
        E(p, function (t, e) {
          this.group.add(Xh(t, {
            style: B({
              stroke: "none",
              fill: h[e % h.length]
            }, S),
            silent: !0
          }));
        }, this), E(c, function (t, e) {
          this.group.add(Xh(t, {
            style: B({
              fill: "none",
              stroke: u[e % u.length]
            }, b),
            silent: !0
          }));
        }, this);
      }
      function M(t, e, n) {
        n %= e.length;
        return t[n] = t[n] || [], n;
      }
    }, Px.type = "radar", Px);
  function Px() {
    var t = null !== Dx && Dx.apply(this, arguments) || this;
    return t.type = Px.type, t;
  }
  u(Rx, Lx = Pc);
  var Lx,
    Ox = Rx;
  function Rx(t, e, n) {
    t = Lx.call(this, t, e, n) || this;
    return t.type = "value", t.angle = 0, t.name = "", t;
  }
  var Nx = Math.log;
  Bx.prototype.getIndicatorAxes = function () {
    return this._indicatorAxes;
  }, Bx.prototype.dataToPoint = function (t, e) {
    var n = this._indicatorAxes[e];
    return this.coordToPoint(n.dataToCoord(t), e);
  }, Bx.prototype.coordToPoint = function (t, e) {
    e = this._indicatorAxes[e].angle;
    return [this.cx + t * Math.cos(e), this.cy - t * Math.sin(e)];
  }, Bx.prototype.pointToData = function (t) {
    for (var e, n = t[0] - this.cx, t = t[1] - this.cy, i = Math.sqrt(n * n + t * t), r = (n /= i, t /= i, Math.atan2(-t, n)), o = 1 / 0, a = -1, s = 0; s < this._indicatorAxes.length; s++) {
      var l = this._indicatorAxes[s],
        u = Math.abs(r - l.angle);
      u < o && (e = l, a = s, o = u);
    }
    return [a, +(e && e.coordToData(i))];
  }, Bx.prototype.resize = function (t, e) {
    var n = t.get("center"),
      i = e.getWidth(),
      e = e.getHeight(),
      r = Math.min(i, e) / 2,
      i = (this.cx = G(n[0], i), this.cy = G(n[1], e), this.startAngle = t.get("startAngle") * Math.PI / 180, t.get("radius"));
    (V(i) || W(i)) && (i = [0, i]), this.r0 = G(i[0], r), this.r = G(i[1], r), E(this._indicatorAxes, function (t, e) {
      t.setExtent(this.r0, this.r);
      e = this.startAngle + e * Math.PI * 2 / this._indicatorAxes.length, e = Math.atan2(Math.sin(e), Math.cos(e));
      t.angle = e;
    }, this);
  }, Bx.prototype.update = function (i, t) {
    var r = this._indicatorAxes,
      o = this._model,
      e = (E(r, function (t) {
        t.scale.setExtent(1 / 0, -1 / 0);
      }), i.eachSeriesByType("radar", function (t, e) {
        var n;
        "radar" === t.get("coordinateSystem") && i.getComponent("radar", t.get("radarIndex")) === o && (n = t.getData(), E(r, function (t) {
          t.scale.unionExtentFromData(n, n.mapDimension(t.dim));
        }));
      }, this), o.get("splitNumber")),
      f = new Sv();
    f.setExtent(0, e), f.setInterval(1), E(r, function (t, e) {
      var n = t.scale,
        t = t.model,
        i = f,
        r = Sv.prototype,
        o = r.getTicks.call(i),
        a = r.getTicks.call(i, !0),
        s = o.length - 1,
        i = r.getInterval.call(i),
        l = (t = Kv(n, t)).extent,
        u = t.fixMin,
        t = t.fixMax,
        h = ("log" === n.type && (h = Nx(n.base), l = [Nx(l[0]) / h, Nx(l[1]) / h]), n.setExtent(l[0], l[1]), n.calcNiceExtent({
          splitNumber: s,
          fixMin: u,
          fixMax: t
        }), r.getExtent.call(n)),
        c = (u && (l[0] = h[0]), t && (l[1] = h[1]), r.getInterval.call(n)),
        p = l[0],
        d = l[1];
      if (u && t) c = (d - p) / s;else if (u) for (d = l[0] + c * s; d < l[1] && isFinite(d) && isFinite(l[1]);) {
        c = pv(c), d = l[0] + c * s;
      } else if (t) for (p = l[1] - c * s; p > l[0] && isFinite(p) && isFinite(l[0]);) {
        c = pv(c), p = l[1] - c * s;
      } else {
        h = (c = s < n.getTicks().length - 1 ? pv(c) : c) * s;
        (p = eo((d = Math.ceil(l[1] / c) * c) - h)) < 0 && 0 <= l[0] ? (p = 0, d = eo(h)) : 0 < d && l[1] <= 0 && (d = 0, p = -eo(h));
      }
      u = (o[0].value - a[0].value) / i, t = (o[s].value - a[s].value) / i, r.setExtent.call(n, p + c * u, d + c * t), r.setInterval.call(n, c), (u || t) && r.setNiceExtent.call(n, p + c, d - c);
    });
  }, Bx.prototype.convertToPixel = function (t, e, n) {
    return console.warn("Not implemented."), null;
  }, Bx.prototype.convertFromPixel = function (t, e, n) {
    return console.warn("Not implemented."), null;
  }, Bx.prototype.containPoint = function (t) {
    return console.warn("Not implemented."), !1;
  }, Bx.create = function (t, n) {
    var i = [];
    return t.eachComponent("radar", function (t) {
      var e = new Bx(t, 0, n);
      i.push(e), t.coordinateSystem = e;
    }), t.eachSeriesByType("radar", function (t) {
      "radar" === t.get("coordinateSystem") && (t.coordinateSystem = i[t.get("radarIndex") || 0]);
    }), i;
  }, Bx.dimensions = [];
  var Ex = Bx;
  function Bx(t, e, n) {
    this.dimensions = [], this._model = t, this._indicatorAxes = z(t.getIndicatorModels(), function (t, e) {
      var e = "indicator_" + e,
        n = new Ox(e, new Sv());
      return n.name = t.get("name"), (n.model = t).axis = n, this.dimensions.push(e), n;
    }, this), this.resize(t, n);
  }
  function zx(t) {
    t.registerCoordinateSystem("radar", Ex), t.registerComponentModel(mx), t.registerComponentView(Ax), t.registerVisual({
      seriesType: "radar",
      reset: function reset(t) {
        var e = t.getData();
        e.each(function (t) {
          e.setItemVisual(t, "legendIcon", "roundRect");
        }), e.setVisual("legendIcon", "roundRect");
      }
    });
  }
  function Fx(t, e) {
    var h,
      c,
      r,
      p,
      d,
      f,
      o,
      n = {
        axesInfo: {},
        seriesInvolved: !1,
        coordSysAxesInfo: {},
        coordSysMap: {}
      };
    return h = n, e = e, r = (c = t).getComponent("tooltip"), p = c.getComponent("axisPointer"), d = p.get("link", !0) || [], f = [], E(e.getCoordinateSystems(), function (s) {
      var l, u, t, e, n;
      function i(t, e, n) {
        var i,
          r,
          o = n.model.getModel("axisPointer", p),
          a = o.get("show");
        a && ("auto" !== a || t || Hx(o)) && (null == e && (e = o.get("triggerTooltip")), a = (o = t ? function (t, e, n, i, r, o) {
          var a = e.getModel("axisPointer"),
            s = {};
          E(["type", "snap", "lineStyle", "shadowStyle", "label", "animation", "animationDurationUpdate", "animationEasingUpdate", "z"], function (t) {
            s[t] = y(a.get(t));
          }), s.snap = "category" !== t.type && !!o, "cross" === a.get("type") && (s.type = "line");
          e = s.label || (s.label = {});
          null == e.show && (e.show = !1), "cross" === r && (r = a.get(["label", "show"]), e.show = null == r || r, o || (r = s.lineStyle = a.get("crossStyle")) && B(e, r.textStyle));
          return t.model.getModel("axisPointer", new Rc(s, n, i));
        }(n, u, p, c, t, e) : o).get("snap"), t = o.get("triggerEmphasis"), i = Gx(n.model), r = e || a || "category" === n.type, e = h.axesInfo[i] = {
          key: i,
          axis: n,
          coordSys: s,
          axisPointerModel: o,
          triggerTooltip: e,
          triggerEmphasis: t,
          involveSeries: r,
          snap: a,
          useHandle: Hx(o),
          seriesModels: [],
          linkGroup: null
        }, l[i] = e, h.seriesInvolved = h.seriesInvolved || r, null != (t = function (t, e) {
          for (var n = e.model, i = e.dim, r = 0; r < t.length; r++) {
            var o = t[r] || {};
            if (Vx(o[i + "AxisId"], n.id) || Vx(o[i + "AxisIndex"], n.componentIndex) || Vx(o[i + "AxisName"], n.name)) return r;
          }
        }(d, n))) && ((a = f[t] || (f[t] = {
          axesInfo: {}
        })).axesInfo[i] = e, a.mapper = d[t].mapper, e.linkGroup = a);
      }
      s.axisPointerEnabled && (t = Gx(s.model), l = h.coordSysAxesInfo[t] = {}, u = (h.coordSysMap[t] = s).model.getModel("tooltip", r), E(s.getAxes(), dt(i, !1, null)), s.getTooltipAxes) && r && u.get("show") && (t = "axis" === u.get("trigger"), e = "cross" === u.get(["axisPointer", "type"]), n = s.getTooltipAxes(u.get(["axisPointer", "axis"])), (t || e) && E(n.baseAxes, dt(i, !e || "cross", t)), e) && E(n.otherAxes, dt(i, "cross", !1));
    }), n.seriesInvolved && (o = n, t.eachSeries(function (n) {
      var i = n.coordinateSystem,
        t = n.get(["tooltip", "trigger"], !0),
        e = n.get(["tooltip", "show"], !0);
      i && "none" !== t && !1 !== t && "item" !== t && !1 !== e && !1 !== n.get(["axisPointer", "show"], !0) && E(o.coordSysAxesInfo[Gx(i.model)], function (t) {
        var e = t.axis;
        i.getAxis(e.dim) === e && (t.seriesModels.push(n), null == t.seriesDataCount && (t.seriesDataCount = 0), t.seriesDataCount += n.getData().count());
      });
    })), n;
  }
  function Vx(t, e) {
    return "all" === t || F(t) && 0 <= C(t, e) || t === e;
  }
  function Wx(t) {
    var e = (t.ecModel.getComponent("axisPointer") || {}).coordSysAxesInfo;
    return e && e.axesInfo[Gx(t)];
  }
  function Hx(t) {
    return !!t.get(["handle", "show"]);
  }
  function Gx(t) {
    return t.type + "||" + t.id;
  }
  l_(function (t) {
    l_(zx), t.registerChartView(ux), t.registerSeriesModel(px), t.registerLayout(rx), t.registerProcessor(z1("radar")), t.registerPreprocessor(sx);
  });
  var Ux,
    qx = {},
    Xx = (u(Yx, Ux = Ig), Yx.prototype.render = function (t, e, n, i) {
      var r, o, a, s, l, u;
      this.axisPointerClass && (r = Wx(r = t)) && (l = r.axisPointerModel, o = r.axis.scale, a = l.option, u = l.get("status"), null != (s = l.get("value")) && (s = o.parse(s)), l = Hx(l), null == u && (a.status = l ? "show" : "hide"), (u = o.getExtent().slice())[0] > u[1] && u.reverse(), (s = null == s || s > u[1] ? u[1] : s) < u[0] && (s = u[0]), a.value = s, l) && (a.status = r.axis.scale.isBlank() ? "hide" : "show"), Ux.prototype.render.apply(this, arguments), this._doUpdateAxisPointerClass(t, n, !0);
    }, Yx.prototype.updateAxisPointer = function (t, e, n, i) {
      this._doUpdateAxisPointerClass(t, n, !1);
    }, Yx.prototype.remove = function (t, e) {
      var n = this._axisPointer;
      n && n.remove(e);
    }, Yx.prototype.dispose = function (t, e) {
      this._disposeAxisPointer(e), Ux.prototype.dispose.apply(this, arguments);
    }, Yx.prototype._doUpdateAxisPointerClass = function (t, e, n) {
      var i,
        r = Yx.getAxisPointerClass(this.axisPointerClass);
      r && ((i = (i = Wx(i = t)) && i.axisPointerModel) ? (this._axisPointer || (this._axisPointer = new r())).render(t, i, e, n) : this._disposeAxisPointer(e));
    }, Yx.prototype._disposeAxisPointer = function (t) {
      this._axisPointer && this._axisPointer.dispose(t), this._axisPointer = null;
    }, Yx.registerAxisPointerClass = function (t, e) {
      qx[t] = e;
    }, Yx.getAxisPointerClass = function (t) {
      return t && qx[t];
    }, Yx.type = "axis", Yx);
  function Yx() {
    var t = null !== Ux && Ux.apply(this, arguments) || this;
    return t.type = Yx.type, t;
  }
  var Zx = Po(),
    jx = y,
    Kx = pt,
    eh = ($x.prototype.render = function (t, e, n, i) {
      var r,
        o,
        a = e.get("value"),
        s = e.get("status");
      this._axisModel = t, this._axisPointerModel = e, this._api = n, !i && this._lastValue === a && this._lastStatus === s || (this._lastValue = a, this._lastStatus = s, i = this._group, r = this._handle, s && "hide" !== s ? (i && i.show(), r && r.show(), this.makeElOption(s = {}, a, t, e, n), (o = s.graphicKey) !== this._lastGraphicKey && this.clear(n), this._lastGraphicKey = o, o = this._moveAnimation = this.determineAnimation(t, e), i ? (o = dt(Qx, e, o), this.updatePointerEl(i, s, o), this.updateLabelEl(i, s, o, e)) : (i = this._group = new Hr(), this.createPointerEl(i, s, t, e), this.createLabelEl(i, s, t, e), n.getZr().add(i)), ew(i, e, !0), this._renderHandle(a)) : (i && i.hide(), r && r.hide()));
    }, $x.prototype.remove = function (t) {
      this.clear(t);
    }, $x.prototype.dispose = function (t) {
      this.clear(t);
    }, $x.prototype.determineAnimation = function (t, e) {
      var n,
        i = e.get("animation"),
        r = t.axis,
        o = "category" === r.type,
        e = e.get("snap");
      return !(!e && !o) && ("auto" === i || null == i ? (n = this.animationThreshold, o && r.getBandWidth() > n || !!e && (o = Wx(t).seriesDataCount, e = r.getExtent(), Math.abs(e[0] - e[1]) / o > n)) : !0 === i);
    }, $x.prototype.makeElOption = function (t, e, n, i, r) {}, $x.prototype.createPointerEl = function (t, e, n, i) {
      var r = e.pointer;
      r && (r = Zx(t).pointerEl = new sc[r.type](jx(e.pointer)), t.add(r));
    }, $x.prototype.createLabelEl = function (t, e, n, i) {
      e.label && (e = Zx(t).labelEl = new Ns(jx(e.label)), t.add(e), Jx(e, i));
    }, $x.prototype.updatePointerEl = function (t, e, n) {
      t = Zx(t).pointerEl;
      t && e.pointer && (t.setStyle(e.pointer.style), n(t, {
        shape: e.pointer.shape
      }));
    }, $x.prototype.updateLabelEl = function (t, e, n, i) {
      t = Zx(t).labelEl;
      t && (t.setStyle(e.label.style), n(t, {
        x: e.label.x,
        y: e.label.y
      }), Jx(t, i));
    }, $x.prototype._renderHandle = function (t) {
      var e, n, i, r, o, a;
      !this._dragging && this.updateHandleTransform && (e = this._axisPointerModel, n = this._api.getZr(), i = this._handle, r = e.getModel("handle"), a = e.get("status"), r.get("show") && a && "hide" !== a ? (this._handle || (o = !0, i = this._handle = nc(r.get("icon"), {
        cursor: "move",
        draggable: !0,
        onmousemove: function onmousemove(t) {
          Ce(t.event);
        },
        onmousedown: Kx(this._onHandleDragMove, this, 0, 0),
        drift: Kx(this._onHandleDragMove, this),
        ondragend: Kx(this._onHandleDragEnd, this)
      }), n.add(i)), ew(i, e, !1), i.setStyle(r.getItemStyle(null, ["color", "borderColor", "borderWidth", "opacity", "shadowColor", "shadowBlur", "shadowOffsetX", "shadowOffsetY"])), F(a = r.get("size")) || (a = [a, a]), i.scaleX = a[0] / 2, i.scaleY = a[1] / 2, function (t, e, n, i) {
        var r = t[e];
        if (r) {
          var o = r[zg] || r,
            a = r[Vg];
          if (r[Fg] !== n || a !== i) {
            if (null == n || !i) return t[e] = o;
            (r = t[e] = Wg(o, n, "debounce" === i))[zg] = o, r[Vg] = i, r[Fg] = n;
          }
        }
      }(this, "_doDispatchAxisPointer", r.get("throttle") || 0, "fixRate"), this._moveHandleToValue(t, o)) : (i && n.remove(i), this._handle = null));
    }, $x.prototype._moveHandleToValue = function (t, e) {
      Qx(this._axisPointerModel, !e && this._moveAnimation, this._handle, tw(this.getHandleTransform(t, this._axisModel, this._axisPointerModel)));
    }, $x.prototype._onHandleDragMove = function (t, e) {
      var n = this._handle;
      n && (this._dragging = !0, t = this.updateHandleTransform(tw(n), [t, e], this._axisModel, this._axisPointerModel), this._payloadInfo = t, n.stopAnimation(), n.attr(tw(t)), Zx(n).lastProp = null, this._doDispatchAxisPointer());
    }, $x.prototype._doDispatchAxisPointer = function () {
      var t, e;
      this._handle && (t = this._payloadInfo, e = this._axisModel, this._api.dispatchAction({
        type: "updateAxisPointer",
        x: t.cursorPoint[0],
        y: t.cursorPoint[1],
        tooltipOption: t.tooltipOption,
        axesInfo: [{
          axisDim: e.axis.dim,
          axisIndex: e.componentIndex
        }]
      }));
    }, $x.prototype._onHandleDragEnd = function () {
      var t;
      this._dragging = !1, this._handle && (t = this._axisPointerModel.get("value"), this._moveHandleToValue(t), this._api.dispatchAction({
        type: "hideTip"
      }));
    }, $x.prototype.clear = function (t) {
      this._lastValue = null, this._lastStatus = null;
      var t = t.getZr(),
        e = this._group,
        n = this._handle;
      t && e && (this._lastGraphicKey = null, e && t.remove(e), n && t.remove(n), this._group = null, this._handle = null, this._payloadInfo = null), (n = (e = this)[t = "_doDispatchAxisPointer"]) && n[zg] && (n.clear && n.clear(), e[t] = n[zg]);
    }, $x.prototype.doClear = function () {}, $x.prototype.buildLabel = function (t, e, n) {
      return {
        x: t[n = n || 0],
        y: t[1 - n],
        width: e[n],
        height: e[1 - n]
      };
    }, $x);
  function $x() {
    this._dragging = !1, this.animationThreshold = 15;
  }
  function Qx(t, e, n, i) {
    !function n(i, t) {
      {
        var r;
        return O(i) && O(t) ? (r = !0, E(t, function (t, e) {
          r = r && n(i[e], t);
        }), !!r) : i === t;
      }
    }(Zx(n).lastProp, i) && (Zx(n).lastProp = i, e ? Dh(n, i, t) : (n.stopAnimation(), n.attr(i)));
  }
  function Jx(t, e) {
    t[e.get(["label", "show"]) ? "show" : "hide"]();
  }
  function tw(t) {
    return {
      x: t.x || 0,
      y: t.y || 0,
      rotation: t.rotation || 0
    };
  }
  function ew(t, e, n) {
    var i = e.get("z"),
      r = e.get("zlevel");
    t && t.traverse(function (t) {
      "group" !== t.type && (null != i && (t.z = i), null != r && (t.zlevel = r), t.silent = n);
    });
  }
  function nw(t) {
    var e,
      n = t.get("type"),
      t = t.getModel(n + "Style");
    return "line" === n ? (e = t.getLineStyle()).fill = null : "shadow" === n && ((e = t.getAreaStyle()).stroke = null), e;
  }
  function iw(t, e, n, i, r) {
    var o = function (t, e, n, i, r) {
        t = e.scale.parse(t);
        var o = e.scale.getLabel({
            value: t
          }, {
            precision: r.precision
          }),
          r = r.formatter;
        {
          var a;
          r && (a = {
            value: t_(e, {
              value: t
            }),
            axisDimension: e.dim,
            axisIndex: e.index,
            seriesData: []
          }, E(i, function (t) {
            var e = n.getSeriesByIndex(t.seriesIndex),
              t = t.dataIndexInside,
              e = e && e.getDataParams(t);
            e && a.seriesData.push(e);
          }), V(r) ? o = r.replace("{value}", o) : D(r) && (o = r(a)));
        }
        return o;
      }(n.get("value"), e.axis, e.ecModel, n.get("seriesDataIndices"), {
        precision: n.get(["label", "precision"]),
        formatter: n.get(["label", "formatter"])
      }),
      n = n.getModel("label"),
      a = xp(n.get("padding") || 0),
      s = n.getFont(),
      l = Mr(o, s),
      u = r.position,
      h = l.width + a[1] + a[3],
      l = l.height + a[0] + a[2],
      c = r.align,
      c = ("right" === c && (u[0] -= h), "center" === c && (u[0] -= h / 2), r.verticalAlign),
      i = ("bottom" === c && (u[1] -= l), "middle" === c && (u[1] -= l / 2), r = u, c = h, h = l, i = (l = i).getWidth(), l = l.getHeight(), r[0] = Math.min(r[0] + c, i) - c, r[1] = Math.min(r[1] + h, l) - h, r[0] = Math.max(r[0], 0), r[1] = Math.max(r[1], 0), n.get("backgroundColor"));
    i && "auto" !== i || (i = e.get(["axisLine", "lineStyle", "color"])), t.label = {
      x: u[0],
      y: u[1],
      style: dc(n, {
        text: o,
        font: s,
        fill: n.getTextColor(),
        padding: a,
        backgroundColor: i
      }),
      z2: 10
    };
  }
  function rw(t, e, n) {
    var i = Le();
    return Be(i, i, n.rotation), Ee(i, i, n.position), $h([t.dataToCoord(e), (n.labelOffset || 0) + (n.labelDirection || 1) * (n.labelMargin || 0)], i);
  }
  function ow(t, e, n) {
    return {
      x1: t[n = n || 0],
      y1: t[1 - n],
      x2: e[n],
      y2: e[1 - n]
    };
  }
  function aw(t, e, n, i, r, o) {
    return {
      cx: t,
      cy: e,
      r0: n,
      r: i,
      startAngle: r,
      endAngle: o,
      clockwise: !0
    };
  }
  u(uw, sw = eh), uw.prototype.makeElOption = function (t, e, n, i, r) {
    var o,
      a = n.axis,
      s = ("angle" === a.dim && (this.animationThreshold = Math.PI / 18), a.polar),
      l = s.getOtherAxis(a).getExtent(),
      u = a.dataToCoord(e),
      h = i.get("type"),
      a = (h && "none" !== h && (o = nw(i), (h = hw[h](a, s, u, l)).style = o, t.graphicKey = h.type, t.pointer = h), i.get(["label", "margin"]));
    iw(t, n, i, r, function (t, e, n, i) {
      var r,
        o,
        a = e.axis,
        t = a.dataToCoord(t),
        s = (l = (l = n.getAngleAxis().getExtent()[0]) / 180 * Math.PI, n.getRadiusAxis().getExtent());
      {
        var l;
        s = "radius" === a.dim ? (a = Le(), Be(a, a, l), Ee(a, a, [n.cx, n.cy]), r = $h([t, -i], a), a = e.getModel("axisLabel").get("rotate") || 0, e = xx.innerTextLayout(l, a * Math.PI / 180, -1), o = e.textAlign, e.textVerticalAlign) : (l = s[1], r = n.coordToPoint([l + i, t]), a = n.cx, e = n.cy, o = Math.abs(r[0] - a) / l < .3 ? "center" : r[0] > a ? "left" : "right", Math.abs(r[1] - e) / l < .3 ? "middle" : r[1] > e ? "top" : "bottom");
      }
      return {
        position: r,
        align: o,
        verticalAlign: s
      };
    }(e, n, s, a));
  };
  var sw,
    lw = uw;
  function uw() {
    return null !== sw && sw.apply(this, arguments) || this;
  }
  var hw = {
    line: function line(t, e, n, i) {
      return "angle" === t.dim ? {
        type: "Line",
        shape: ow(e.coordToPoint([i[0], n]), e.coordToPoint([i[1], n]))
      } : {
        type: "Circle",
        shape: {
          cx: e.cx,
          cy: e.cy,
          r: n
        }
      };
    },
    shadow: function shadow(t, e, n, i) {
      var r = Math.max(1, t.getBandWidth()),
        o = Math.PI / 180;
      return "angle" === t.dim ? {
        type: "Sector",
        shape: aw(e.cx, e.cy, i[0], i[1], (-n - r / 2) * o, (r / 2 - n) * o)
      } : {
        type: "Sector",
        shape: aw(e.cx, e.cy, n - r / 2, n + r / 2, 0, 2 * Math.PI)
      };
    }
  };
  function cw(t, e, n) {
    n = n || {};
    var t = t.coordinateSystem,
      i = e.axis,
      r = {},
      o = i.getAxesOnZeroOf()[0],
      a = i.position,
      s = o ? "onZero" : a,
      i = i.dim,
      t = t.getRect(),
      t = [t.x, t.x + t.width, t.y, t.y + t.height],
      l = {
        left: 0,
        right: 1,
        top: 0,
        bottom: 1,
        onZero: 2
      },
      u = e.get("offset") || 0,
      u = "x" === i ? [t[2] - u, t[3] + u] : [t[0] - u, t[1] + u],
      h = (o && (h = o.toGlobalCoord(o.dataToCoord(0)), u[l.onZero] = Math.max(Math.min(h, u[1]), u[0])), r.position = ["y" === i ? u[l[s]] : t[0], "x" === i ? u[l[s]] : t[3]], r.rotation = Math.PI / 2 * ("x" === i ? 0 : 1), r.labelDirection = r.tickDirection = r.nameDirection = {
        top: -1,
        bottom: 1,
        left: -1,
        right: 1
      }[a], r.labelOffset = o ? u[l[a]] - u[l.onZero] : 0, e.get(["axisTick", "inside"]) && (r.tickDirection = -r.tickDirection), bt(n.labelInside, e.get(["axisLabel", "inside"])) && (r.labelDirection = -r.labelDirection), e.get(["axisLabel", "rotate"]));
    return r.labelRotate = "top" === s ? -h : h, r.z2 = 1, r;
  }
  u(fw, pw = eh), fw.prototype.makeElOption = function (t, e, n, i, r) {
    var o,
      a = n.axis,
      s = a.grid,
      l = i.get("type"),
      u = gw(s, a).getOtherAxis(a).getGlobalExtent(),
      h = a.toGlobalCoord(a.dataToCoord(e, !0)),
      a = (l && "none" !== l && (o = nw(i), (l = yw[l](a, h, u)).style = o, t.graphicKey = l.type, t.pointer = l), cw(s.model, n));
    h = e, u = t, o = a, l = n, s = i, e = r, t = xx.innerTextLayout(o.rotation, 0, o.labelDirection), o.labelMargin = s.get(["label", "margin"]), iw(u, l, s, e, {
      position: rw(l.axis, h, o),
      align: t.textAlign,
      verticalAlign: t.textVerticalAlign
    });
  }, fw.prototype.getHandleTransform = function (t, e, n) {
    var i = cw(e.axis.grid.model, e, {
        labelInside: !1
      }),
      n = (i.labelMargin = n.get(["handle", "margin"]), rw(e.axis, t, i));
    return {
      x: n[0],
      y: n[1],
      rotation: i.rotation + (i.labelDirection < 0 ? Math.PI : 0)
    };
  }, fw.prototype.updateHandleTransform = function (t, e, n, i) {
    var n = n.axis,
      r = n.grid,
      o = n.getGlobalExtent(!0),
      r = gw(r, n).getOtherAxis(n).getGlobalExtent(),
      n = "x" === n.dim ? 0 : 1,
      a = [t.x, t.y],
      e = (a[n] += e[n], a[n] = Math.min(o[1], a[n]), a[n] = Math.max(o[0], a[n]), (r[1] + r[0]) / 2),
      o = [e, e];
    o[n] = a[n];
    return {
      x: a[0],
      y: a[1],
      rotation: t.rotation,
      cursorPoint: o,
      tooltipOption: [{
        verticalAlign: "middle"
      }, {
        align: "center"
      }][n]
    };
  };
  var pw,
    dw = fw;
  function fw() {
    return null !== pw && pw.apply(this, arguments) || this;
  }
  function gw(t, e) {
    var n = {};
    return n[e.dim + "AxisIndex"] = e.index, t.getCartesian(n);
  }
  var yw = {
    line: function line(t, e, n) {
      return {
        type: "Line",
        subPixelOptimize: !0,
        shape: ow([e, n[0]], [e, n[1]], mw(t))
      };
    },
    shadow: function shadow(t, e, n) {
      var i = Math.max(1, t.getBandWidth()),
        r = n[1] - n[0];
      return {
        type: "Rect",
        shape: (e = [e - i / 2, n[0]], n = [i, r], i = mw(t), {
          x: e[i = i || 0],
          y: e[1 - i],
          width: n[i],
          height: n[1 - i]
        })
      };
    }
  };
  function mw(t) {
    return "x" === t.dim ? 0 : 1;
  }
  u(xw, vw = g), xw.type = "axisPointer", xw.defaultOption = {
    show: "auto",
    z: 50,
    type: "line",
    snap: !1,
    triggerTooltip: !0,
    triggerEmphasis: !0,
    value: null,
    status: null,
    link: [],
    animation: null,
    animationDurationUpdate: 200,
    lineStyle: {
      color: "#B9BEC9",
      width: 1,
      type: "dashed"
    },
    shadowStyle: {
      color: "rgba(210,219,238,0.2)"
    },
    label: {
      show: !0,
      formatter: null,
      precision: "auto",
      margin: 3,
      color: "#fff",
      padding: [5, 7, 5, 7],
      backgroundColor: "auto",
      borderColor: null,
      borderWidth: 0,
      borderRadius: 3
    },
    handle: {
      show: !1,
      icon: "M10.7,11.9v-1.3H9.3v1.3c-4.9,0.3-8.8,4.4-8.8,9.4c0,5,3.9,9.1,8.8,9.4h1.3c4.9-0.3,8.8-4.4,8.8-9.4C19.5,16.3,15.6,12.2,10.7,11.9z M13.3,24.4H6.7v-1.2h6.6z M13.3,22H6.7v-1.2h6.6z M13.3,19.6H6.7v-1.2h6.6z",
      size: 45,
      margin: 50,
      color: "#333",
      shadowBlur: 3,
      shadowColor: "#aaa",
      shadowOffsetX: 0,
      shadowOffsetY: 2,
      throttle: 40
    }
  };
  var vw,
    _w = xw;
  function xw() {
    var t = null !== vw && vw.apply(this, arguments) || this;
    return t.type = xw.type, t;
  }
  var ww = Po(),
    bw = E;
  function Sw(t, e, n) {
    var i, c, p;
    function r(t, h) {
      c.on(t, function (e) {
        n = p;
        var n,
          i,
          r = {
            dispatchAction: o,
            pendings: i = {
              showTip: [],
              hideTip: []
            }
          };
        function o(t) {
          var e = i[t.type];
          e ? e.push(t) : (t.dispatchAction = o, n.dispatchAction(t));
        }
        bw(ww(c).records, function (t) {
          t && h(t, e, r.dispatchAction);
        });
        var t,
          a = r.pendings,
          s = p,
          l = a.showTip.length,
          u = a.hideTip.length;
        l ? t = a.showTip[l - 1] : u && (t = a.hideTip[u - 1]), t && (t.dispatchAction = null, s.dispatchAction(t));
      });
    }
    b.node || (i = e.getZr(), ww(i).records || (ww(i).records = {}), p = e, ww(c = i).initialized || (ww(c).initialized = !0, r("click", dt(Tw, "click")), r("mousemove", dt(Tw, "mousemove")), r("globalout", Mw)), (ww(i).records[t] || (ww(i).records[t] = {})).handler = n);
  }
  function Mw(t, e, n) {
    t.handler("leave", null, n);
  }
  function Tw(t, e, n, i) {
    e.handler(t, n, i);
  }
  function Iw(t, e) {
    b.node || (e = e.getZr(), (ww(e).records || {})[t] && (ww(e).records[t] = null));
  }
  u(kw, Cw = Ig), kw.prototype.render = function (t, e, n) {
    var e = e.getComponent("tooltip"),
      i = t.get("triggerOn") || e && e.get("triggerOn") || "mousemove|click";
    Sw("axisPointer", n, function (t, e, n) {
      "none" !== i && ("leave" === t || 0 <= i.indexOf(t)) && n({
        type: "updateAxisPointer",
        currTrigger: t,
        x: e && e.offsetX,
        y: e && e.offsetY
      });
    });
  }, kw.prototype.remove = function (t, e) {
    Iw("axisPointer", e);
  }, kw.prototype.dispose = function (t, e) {
    Iw("axisPointer", e);
  }, kw.type = "axisPointer";
  var Cw,
    Dw = kw;
  function kw() {
    var t = null !== Cw && Cw.apply(this, arguments) || this;
    return t.type = kw.type, t;
  }
  var Aw = Po();
  function Pw(t, e, n) {
    var i,
      o,
      a,
      r,
      s,
      l,
      u,
      h,
      c,
      p,
      d,
      f,
      g,
      y,
      m,
      v,
      _,
      x,
      w,
      b,
      S,
      M = t.currTrigger,
      T = [t.x, t.y],
      I = t,
      C = t.dispatchAction || pt(n.dispatchAction, n),
      D = e.getComponent("axisPointer").coordSysAxesInfo;
    if (D) return Ew(T) && (h = {
      seriesIndex: I.seriesIndex,
      dataIndex: I.dataIndex
    }, e = e, m = [], v = h.seriesIndex, T = (null == v || !(e = e.getSeriesByIndex(v)) || null == (v = Ao(i = e.getData(), h)) || v < 0 || F(v) ? {
      point: []
    } : (_ = i.getItemGraphicEl(v), y = e.coordinateSystem, e.getTooltipPosition ? m = e.getTooltipPosition(v) || [] : y && y.dataToPoint ? m = h.isStacked ? (e = y.getBaseAxis(), h = y.getOtherAxis(e).dim, e = e.dim, h = "x" === h || "radius" === h ? 1 : 0, e = i.mapDimension(e), (f = [])[h] = i.get(e, v), f[1 - h] = i.get(i.getCalculationInfo("stackResultDimension"), v), y.dataToPoint(f) || []) : y.dataToPoint(i.getValues(z(y.dimensions, function (t) {
      return i.mapDimension(t);
    }), v)) || [] : _ && ((e = _.getBoundingRect().clone()).applyTransform(_.transform), m = [e.x + e.width / 2, e.y + e.height / 2]), {
      point: m,
      el: _
    })).point), o = Ew(T), a = I.axesInfo, r = D.axesInfo, s = "leave" === M || Ew(T), l = {}, h = {
      list: [],
      map: {}
    }, c = {
      showPointer: dt(Ow, u = {}),
      showTooltip: dt(Rw, h)
    }, E(D.coordSysMap, function (t, e) {
      var r = o || t.containPoint(T);
      E(D.coordSysAxesInfo[e], function (t, e) {
        var n = t.axis,
          i = function (t, e) {
            for (var n = 0; n < (t || []).length; n++) {
              var i = t[n];
              if (e.axis.dim === i.axisDim && e.axis.model.componentIndex === i.axisIndex) return i;
            }
          }(a, t);
        s || !r || a && !i || null != (i = null != (i = i && i.value) || o ? i : n.pointToData(T)) && Lw(t, i, c, !1, l);
      });
    }), p = {}, E(r, function (n, t) {
      var i = n.linkGroup;
      i && !u[t] && E(i.axesInfo, function (t, e) {
        var e = u[e];
        t !== n && e && (e = e.value, i.mapper && (e = n.axis.scale.parse(i.mapper(e, Nw(t), Nw(n)))), p[n.key] = e);
      });
    }), E(p, function (t, e) {
      Lw(r[e], t, c, !0, l);
    }), d = u, f = r, g = l.axesInfo = [], E(f, function (t, e) {
      var n = t.axisPointerModel.option,
        e = d[e];
      e ? (t.useHandle || (n.status = "show"), n.value = e.value, n.seriesDataIndices = (e.payloadBatch || []).slice()) : t.useHandle || (n.status = "hide"), "show" === n.status && g.push({
        axisDim: t.axis.dim,
        axisIndex: t.axis.model.componentIndex,
        value: n.value
      });
    }), y = h, v = t, e = C, Ew(m = T) || !y.list.length ? e({
      type: "hideTip"
    }) : (_ = ((y.list[0].dataByAxis[0] || {}).seriesDataIndices || [])[0] || {}, e({
      type: "showTip",
      escapeConnect: !0,
      x: m[0],
      y: m[1],
      tooltipOption: v.tooltipOption,
      position: v.position,
      dataIndexInside: _.dataIndexInside,
      dataIndex: _.dataIndex,
      seriesIndex: _.seriesIndex,
      dataByCoordSys: y.list
    })), I = r, t = (M = n).getZr(), C = "axisPointerLastHighlights", x = Aw(t)[C] || {}, w = Aw(t)[C] = {}, E(I, function (t, e) {
      var n = t.axisPointerModel.option;
      "show" === n.status && t.triggerEmphasis && E(n.seriesDataIndices, function (t) {
        var e = t.seriesIndex + " | " + t.dataIndex;
        w[e] = t;
      });
    }), b = [], S = [], E(x, function (t, e) {
      w[e] || S.push(t);
    }), E(w, function (t, e) {
      x[e] || b.push(t);
    }), S.length && M.dispatchAction({
      type: "downplay",
      escapeConnect: !0,
      notBlur: !0,
      batch: S
    }), b.length && M.dispatchAction({
      type: "highlight",
      escapeConnect: !0,
      notBlur: !0,
      batch: b
    }), l;
  }
  function Lw(t, e, n, i, r) {
    var o,
      a,
      s,
      l,
      u,
      h,
      c,
      p,
      d,
      f,
      g = t.axis;
    !g.scale.isBlank() && g.containData(e) && (t.involveSeries ? (a = e, s = t.axis, l = s.dim, u = a, h = [], c = Number.MAX_VALUE, p = -1, E(t.seriesModels, function (e, t) {
      var n,
        i = e.getData().mapDimensionsAll(l);
      if (e.getAxisTooltipData) var r = e.getAxisTooltipData(i, a, s),
        o = r.dataIndices,
        r = r.nestestValue;else {
        if (!(o = e.getData().indicesOfNearest(i[0], a, "category" === s.type ? .5 : null)).length) return;
        r = e.getData().get(i[0], o[0]);
      }
      null != r && isFinite(r) && (i = a - r, (n = Math.abs(i)) <= c) && ((n < c || 0 <= i && p < 0) && (c = n, p = i, u = r, h.length = 0), E(o, function (t) {
        h.push({
          seriesIndex: e.seriesIndex,
          dataIndexInside: t,
          dataIndex: e.getData().getRawIndex(t)
        });
      }));
    }), f = (o = {
      payloadBatch: h,
      snapToValue: u
    }).snapToValue, (d = o.payloadBatch)[0] && null == r.seriesIndex && L(r, d[0]), !i && t.snap && g.containData(f) && null != f && (e = f), n.showPointer(t, e, d), n.showTooltip(t, o, f)) : n.showPointer(t, e));
  }
  function Ow(t, e, n, i) {
    t[e.key] = {
      value: n,
      payloadBatch: i
    };
  }
  function Rw(t, e, n, i) {
    var r,
      o,
      n = n.payloadBatch,
      a = e.axis,
      s = a.model,
      l = e.axisPointerModel;
    e.triggerTooltip && n.length && (r = Gx(e = e.coordSys.model), (o = t.map[r]) || (o = t.map[r] = {
      coordSysId: e.id,
      coordSysIndex: e.componentIndex,
      coordSysType: e.type,
      coordSysMainType: e.mainType,
      dataByAxis: []
    }, t.list.push(o)), o.dataByAxis.push({
      axisDim: a.dim,
      axisIndex: s.componentIndex,
      axisType: s.type,
      axisId: s.id,
      value: i,
      valueLabelOpt: {
        precision: l.get(["label", "precision"]),
        formatter: l.get(["label", "formatter"])
      },
      seriesDataIndices: n.slice()
    }));
  }
  function Nw(t) {
    var e = t.axis.model,
      n = {},
      t = n.axisDim = t.axis.dim;
    return n.axisIndex = n[t + "AxisIndex"] = e.componentIndex, n.axisName = n[t + "AxisName"] = e.name, n.axisId = n[t + "AxisId"] = e.id, n;
  }
  function Ew(t) {
    return !t || null == t[0] || isNaN(t[0]) || null == t[1] || isNaN(t[1]);
  }
  function Bw(t) {
    Xx.registerAxisPointerClass("CartesianAxisPointer", dw), t.registerComponentModel(_w), t.registerComponentView(Dw), t.registerPreprocessor(function (t) {
      var e;
      t && (t.axisPointer && 0 !== t.axisPointer.length || (t.axisPointer = {}), e = t.axisPointer.link) && !F(e) && (t.axisPointer.link = [e]);
    }), t.registerProcessor(t.PRIORITY.PROCESSOR.STATISTIC, function (t, e) {
      t.getComponent("axisPointer").coordSysAxesInfo = Fx(t, e);
    }), t.registerAction({
      type: "updateAxisPointer",
      event: "updateAxisPointer",
      update: ":updateAxisPointer"
    }, Pw);
  }
  u(Vw, zw = g), Vw.prototype.findAxisModel = function (t) {
    var e;
    return this.ecModel.eachComponent(t, function (t) {
      t.getCoordSysModel() === this && (e = t);
    }, this), e;
  }, Vw.type = "polar", Vw.dependencies = ["radiusAxis", "angleAxis"], Vw.defaultOption = {
    z: 0,
    center: ["50%", "50%"],
    radius: "80%"
  };
  var zw,
    Fw = Vw;
  function Vw() {
    var t = null !== zw && zw.apply(this, arguments) || this;
    return t.type = Vw.type, t;
  }
  var Ww = {
    value: 1,
    category: 1,
    time: 1,
    log: 1
  };
  function Hw(o, a, s, l) {
    E(Ww, function (t, r) {
      var e,
        n = d(d({}, fx[r], !0), l, !0),
        n = (u(i, e = s), i.prototype.mergeDefaultAndTheme = function (t, e) {
          var n = kp(this),
            i = n ? Pp(t) : {};
          d(t, e.getTheme().get(r + "Axis")), d(t, this.getDefaultOption()), t.type = Gw(t), n && Ap(t, i, n);
        }, i.prototype.optionUpdated = function () {
          "category" === this.option.type && (this.__ordinalMeta = lv.createByAxisModel(this));
        }, i.prototype.getCategories = function (t) {
          var e = this.option;
          if ("category" === e.type) return t ? e.data : this.__ordinalMeta.categories;
        }, i.prototype.getOrdinalMeta = function () {
          return this.__ordinalMeta;
        }, i.type = a + "Axis." + r, i.defaultOption = n, i);
      function i() {
        var t = null !== e && e.apply(this, arguments) || this;
        return t.type = a + "Axis." + r, t;
      }
      o.registerComponentModel(n);
    }), o.registerSubTypeDefaulter(a + "Axis", Gw);
  }
  function Gw(t) {
    return t.type || (t.data ? "category" : "value");
  }
  u(qw, Uw = g), qw.prototype.getCoordSysModel = function () {
    return this.getReferringComponents("polar", No).models[0];
  }, qw.type = "polarAxis";
  var Uw,
    lh = qw;
  function qw() {
    return null !== Uw && Uw.apply(this, arguments) || this;
  }
  at(lh, r_);
  u(Zw, Xw = lh), Zw.type = "angleAxis";
  var Xw,
    Yw = Zw;
  function Zw() {
    var t = null !== Xw && Xw.apply(this, arguments) || this;
    return t.type = Zw.type, t;
  }
  u($w, jw = lh), $w.type = "radiusAxis";
  var jw,
    Kw = $w;
  function $w() {
    var t = null !== jw && jw.apply(this, arguments) || this;
    return t.type = $w.type, t;
  }
  u(tb, Qw = Pc), tb.prototype.pointToData = function (t, e) {
    return this.polar.pointToData(t, e)["radius" === this.dim ? 0 : 1];
  };
  var Qw,
    Jw = tb;
  function tb(t, e) {
    return Qw.call(this, "radius", t, e) || this;
  }
  Jw.prototype.dataToRadius = Pc.prototype.dataToCoord, Jw.prototype.radiusToData = Pc.prototype.coordToData;
  var eb,
    nb = Po(),
    ib = (u(rb, eb = Pc), rb.prototype.pointToData = function (t, e) {
      return this.polar.pointToData(t, e)["radius" === this.dim ? 0 : 1];
    }, rb.prototype.calculateCategoryInterval = function () {
      var t,
        e,
        n = this.getLabelModel(),
        i = this.scale,
        r = i.getExtent(),
        i = i.count();
      return r[1] - r[0] < 1 ? 0 : (r = r[0], t = this.dataToCoord(r + 1) - this.dataToCoord(r), t = Math.abs(t), r = Mr(null == r ? "" : r + "", n.getFont(), "center", "top"), n = Math.max(r.height, 7) / t, isNaN(n) && (n = 1 / 0), r = Math.max(0, Math.floor(n)), n = (t = nb(this.model)).lastAutoInterval, e = t.lastTickCount, null != n && null != e && Math.abs(n - r) <= 1 && Math.abs(e - i) <= 1 && r < n ? r = n : (t.lastTickCount = i, t.lastAutoInterval = r), r);
    }, rb);
  function rb(t, e) {
    return eb.call(this, "angle", t, e || [0, 360]) || this;
  }
  ib.prototype.dataToAngle = Pc.prototype.dataToCoord, ib.prototype.angleToData = Pc.prototype.coordToData;
  var ob = ["radius", "angle"],
    ab = (sb.prototype.containPoint = function (t) {
      t = this.pointToCoord(t);
      return this._radiusAxis.contain(t[0]) && this._angleAxis.contain(t[1]);
    }, sb.prototype.containData = function (t) {
      return this._radiusAxis.containData(t[0]) && this._angleAxis.containData(t[1]);
    }, sb.prototype.getAxis = function (t) {
      return this["_" + t + "Axis"];
    }, sb.prototype.getAxes = function () {
      return [this._radiusAxis, this._angleAxis];
    }, sb.prototype.getAxesByScale = function (t) {
      var e = [],
        n = this._angleAxis,
        i = this._radiusAxis;
      return n.scale.type === t && e.push(n), i.scale.type === t && e.push(i), e;
    }, sb.prototype.getAngleAxis = function () {
      return this._angleAxis;
    }, sb.prototype.getRadiusAxis = function () {
      return this._radiusAxis;
    }, sb.prototype.getOtherAxis = function (t) {
      var e = this._angleAxis;
      return t === e ? this._radiusAxis : e;
    }, sb.prototype.getBaseAxis = function () {
      return this.getAxesByScale("ordinal")[0] || this.getAxesByScale("time")[0] || this.getAngleAxis();
    }, sb.prototype.getTooltipAxes = function (t) {
      t = null != t && "auto" !== t ? this.getAxis(t) : this.getBaseAxis();
      return {
        baseAxes: [t],
        otherAxes: [this.getOtherAxis(t)]
      };
    }, sb.prototype.dataToPoint = function (t, e) {
      return this.coordToPoint([this._radiusAxis.dataToRadius(t[0], e), this._angleAxis.dataToAngle(t[1], e)]);
    }, sb.prototype.pointToData = function (t, e) {
      t = this.pointToCoord(t);
      return [this._radiusAxis.radiusToData(t[0], e), this._angleAxis.angleToData(t[1], e)];
    }, sb.prototype.pointToCoord = function (t) {
      for (var e = t[0] - this.cx, t = t[1] - this.cy, n = this.getAngleAxis(), i = n.getExtent(), r = Math.min(i[0], i[1]), o = Math.max(i[0], i[1]), i = (n.inverse ? r = o - 360 : o = r + 360, Math.sqrt(e * e + t * t)), a = (e /= i, t /= i, Math.atan2(-t, e) / Math.PI * 180), s = a < r ? 1 : -1; a < r || o < a;) {
        a += 360 * s;
      }
      return [i, a];
    }, sb.prototype.coordToPoint = function (t) {
      var e = t[0],
        t = t[1] / 180 * Math.PI;
      return [Math.cos(t) * e + this.cx, -Math.sin(t) * e + this.cy];
    }, sb.prototype.getArea = function () {
      var t = this.getAngleAxis(),
        e = this.getRadiusAxis().getExtent().slice(),
        n = (e[0] > e[1] && e.reverse(), t.getExtent()),
        i = Math.PI / 180;
      return {
        cx: this.cx,
        cy: this.cy,
        r0: e[0],
        r: e[1],
        startAngle: -n[0] * i,
        endAngle: -n[1] * i,
        clockwise: t.inverse,
        contain: function contain(t, e) {
          var t = t - this.cx,
            e = e - this.cy,
            t = t * t + e * e,
            e = this.r,
            n = this.r0;
          return e !== n && t - 1e-4 <= e * e && n * n <= 1e-4 + t;
        }
      };
    }, sb.prototype.convertToPixel = function (t, e, n) {
      return lb(e) === this ? this.dataToPoint(n) : null;
    }, sb.prototype.convertFromPixel = function (t, e, n) {
      return lb(e) === this ? this.pointToData(n) : null;
    }, sb);
  function sb(t) {
    this.dimensions = ob, this.type = "polar", this.cx = 0, this.cy = 0, this._radiusAxis = new Jw(), this._angleAxis = new ib(), this.axisPointerEnabled = !0, this.name = t || "", this._radiusAxis.polar = this._angleAxis.polar = this;
  }
  function lb(t) {
    var e = t.seriesModel,
      t = t.polarModel;
    return t && t.coordinateSystem || e && e.coordinateSystem;
  }
  function ub(t, e) {
    var n,
      i = this,
      r = i.getAngleAxis(),
      o = i.getRadiusAxis();
    r.scale.setExtent(1 / 0, -1 / 0), o.scale.setExtent(1 / 0, -1 / 0), t.eachSeries(function (t) {
      var e;
      t.coordinateSystem === i && (E(i_(e = t.getData(), "radius"), function (t) {
        o.scale.unionExtentFromData(e, t);
      }), E(i_(e, "angle"), function (t) {
        r.scale.unionExtentFromData(e, t);
      }));
    }), $v(r.scale, r.model), $v(o.scale, o.model), "category" !== r.type || r.onBand || (t = r.getExtent(), n = 360 / r.scale.count(), r.inverse ? t[1] += n : t[1] -= n, r.setExtent(t[0], t[1]));
  }
  function hb(t, e) {
    var n, i;
    t.type = e.get("type"), t.scale = Qv(e), t.onBand = e.get("boundaryGap") && "category" === t.type, t.inverse = e.get("inverse"), "angleAxis" === e.mainType && (t.inverse = t.inverse !== e.get("clockwise"), n = e.get("startAngle"), i = null != (i = e.get("endAngle")) ? i : n + (t.inverse ? -360 : 360), t.setExtent(n, i)), (e.axis = t).model = e;
  }
  var cb = {
      dimensions: ob,
      create: function create(t, s) {
        var l = [];
        return t.eachComponent("polar", function (t, e) {
          var n,
            e = new ab(e + ""),
            i = (e.update = ub, e.getRadiusAxis()),
            r = e.getAngleAxis(),
            o = t.findAxisModel("radiusAxis"),
            a = t.findAxisModel("angleAxis");
          hb(i, o), hb(r, a), i = e, o = s, a = (r = t).get("center"), n = o.getWidth(), o = o.getHeight(), i.cx = G(a[0], n), i.cy = G(a[1], o), a = i.getRadiusAxis(), i = Math.min(n, o) / 2, null == (n = r.get("radius")) ? n = [0, "100%"] : F(n) || (n = [0, n]), o = [G(n[0], i), G(n[1], i)], a.inverse ? a.setExtent(o[1], o[0]) : a.setExtent(o[0], o[1]), l.push(e), (t.coordinateSystem = e).model = t;
        }), t.eachSeries(function (t) {
          var e;
          "polar" === t.get("coordinateSystem") && (e = t.getReferringComponents("polar", No).models[0], t.coordinateSystem = e.coordinateSystem);
        }), l;
      }
    },
    pb = ["axisLine", "axisLabel", "axisTick", "minorTick", "splitLine", "minorSplitLine", "splitArea"];
  function db(t, e, n) {
    e[1] > e[0] && (e = e.slice().reverse());
    var i = t.coordToPoint([e[0], n]),
      t = t.coordToPoint([e[1], n]);
    return {
      x1: i[0],
      y1: i[1],
      x2: t[0],
      y2: t[1]
    };
  }
  function fb(t) {
    return t.getRadiusAxis().inverse ? 0 : 1;
  }
  function gb(t) {
    var e = t[0],
      n = t[t.length - 1];
    e && n && Math.abs(Math.abs(e.coord - n.coord) - 360) < 1e-4 && t.pop();
  }
  u(vb, yb = Xx), vb.prototype.render = function (e, t) {
    var n, i, r, o, a, s;
    this.group.removeAll(), e.get("show") && (n = e.axis, i = n.polar, r = i.getRadiusAxis().getExtent(), o = n.getTicksCoords(), a = n.getMinorTicksCoords(), gb(s = z(n.getViewLabels(), function (t) {
      t = y(t);
      var e = n.scale,
        e = "ordinal" === e.type ? e.getRawOrdinalNumber(t.tickValue) : t.tickValue;
      return t.coord = n.dataToCoord(e), t;
    })), gb(o), E(pb, function (t) {
      !e.get([t, "show"]) || n.scale.isBlank() && "axisLine" !== t || xb[t](this.group, e, i, o, a, r, s);
    }, this));
  }, vb.type = "angleAxis";
  var yb,
    mb = vb;
  function vb() {
    var t = null !== yb && yb.apply(this, arguments) || this;
    return t.type = vb.type, t.axisPointerClass = "PolarAxisPointer", t;
  }
  var _b,
    xb = {
      axisLine: function axisLine(t, e, n, i, r, o) {
        var e = e.getModel(["axisLine", "lineStyle"]),
          a = n.getAngleAxis(),
          s = Math.PI / 180,
          l = a.getExtent(),
          u = fb(n),
          h = u ? 0 : 1,
          c = 360 === Math.abs(l[1] - l[0]) ? "Circle" : "Arc",
          c = 0 === o[h] ? new sc[c]({
            shape: {
              cx: n.cx,
              cy: n.cy,
              r: o[u],
              startAngle: -l[0] * s,
              endAngle: -l[1] * s,
              clockwise: a.inverse
            },
            style: e.getLineStyle(),
            z2: 1,
            silent: !0
          }) : new Nu({
            shape: {
              cx: n.cx,
              cy: n.cy,
              r: o[u],
              r0: o[h]
            },
            style: e.getLineStyle(),
            z2: 1,
            silent: !0
          });
        c.style.fill = null, t.add(c);
      },
      axisTick: function axisTick(t, e, n, i, r, o) {
        var a = e.getModel("axisTick"),
          s = (a.get("inside") ? -1 : 1) * a.get("length"),
          l = o[fb(n)],
          o = z(i, function (t) {
            return new ju({
              shape: db(n, [l, l + s], t.coord)
            });
          });
        t.add(Xh(o, {
          style: B(a.getModel("lineStyle").getLineStyle(), {
            stroke: e.get(["axisLine", "lineStyle", "color"])
          })
        }));
      },
      minorTick: function minorTick(t, e, n, i, r, o) {
        if (r.length) {
          for (var a = e.getModel("axisTick"), s = e.getModel("minorTick"), l = (a.get("inside") ? -1 : 1) * s.get("length"), u = o[fb(n)], h = [], c = 0; c < r.length; c++) {
            for (var p = 0; p < r[c].length; p++) {
              h.push(new ju({
                shape: db(n, [u, u + l], r[c][p].coord)
              }));
            }
          }
          t.add(Xh(h, {
            style: B(s.getModel("lineStyle").getLineStyle(), B(a.getLineStyle(), {
              stroke: e.get(["axisLine", "lineStyle", "color"])
            }))
          }));
        }
      },
      axisLabel: function axisLabel(l, u, h, t, e, c, n) {
        var p = u.getCategories(!0),
          d = u.getModel("axisLabel"),
          f = d.get("margin"),
          g = u.get("triggerEvent");
        E(n, function (t, e) {
          var n = d,
            i = t.tickValue,
            r = c[fb(h)],
            o = h.coordToPoint([r + f, t.coord]),
            a = h.cx,
            s = h.cy,
            a = Math.abs(o[0] - a) / r < .3 ? "center" : o[0] > a ? "left" : "right",
            r = Math.abs(o[1] - s) / r < .3 ? "middle" : o[1] > s ? "top" : "bottom",
            i = (p && p[i] && O(s = p[i]) && s.textStyle && (n = new Rc(s.textStyle, d, d.ecModel)), new Ns({
              silent: xx.isLabelSilent(u),
              style: dc(n, {
                x: o[0],
                y: o[1],
                fill: n.getTextColor() || u.get(["axisLine", "lineStyle", "color"]),
                text: t.formattedLabel,
                align: a,
                verticalAlign: r
              })
            }));
          l.add(i), g && ((s = xx.makeAxisEventDataBase(u)).targetType = "axisLabel", s.value = t.rawLabel, Ys(i).eventData = s);
        }, this);
      },
      splitLine: function splitLine(t, e, n, i, r, o) {
        for (var a = e.getModel("splitLine").getModel("lineStyle"), s = 0, l = (l = a.get("color")) instanceof Array ? l : [l], u = [], h = 0; h < i.length; h++) {
          var c = s++ % l.length;
          u[c] = u[c] || [], u[c].push(new ju({
            shape: db(n, o, i[h].coord)
          }));
        }
        for (h = 0; h < u.length; h++) {
          t.add(Xh(u[h], {
            style: B({
              stroke: l[h % l.length]
            }, a.getLineStyle()),
            silent: !0,
            z: e.get("z")
          }));
        }
      },
      minorSplitLine: function minorSplitLine(t, e, n, i, r, o) {
        if (r.length) {
          for (var a = e.getModel("minorSplitLine").getModel("lineStyle"), s = [], l = 0; l < r.length; l++) {
            for (var u = 0; u < r[l].length; u++) {
              s.push(new ju({
                shape: db(n, o, r[l][u].coord)
              }));
            }
          }
          t.add(Xh(s, {
            style: a.getLineStyle(),
            silent: !0,
            z: e.get("z")
          }));
        }
      },
      splitArea: function splitArea(t, e, n, i, r, o) {
        if (i.length) {
          for (var a = e.getModel("splitArea").getModel("areaStyle"), s = 0, l = (l = a.get("color")) instanceof Array ? l : [l], u = [], h = Math.PI / 180, c = -i[0].coord * h, p = Math.min(o[0], o[1]), d = Math.max(o[0], o[1]), f = e.get("clockwise"), g = 1, y = i.length; g <= y; g++) {
            var m = (g === y ? i[0] : i[g]).coord,
              v = s++ % l.length;
            u[v] = u[v] || [], u[v].push(new Pu({
              shape: {
                cx: n.cx,
                cy: n.cy,
                r0: p,
                r: d,
                startAngle: c,
                endAngle: -m * h,
                clockwise: f
              },
              silent: !0
            })), c = -m * h;
          }
          for (g = 0; g < u.length; g++) {
            t.add(Xh(u[g], {
              style: B({
                fill: l[g % l.length]
              }, a.getAreaStyle()),
              silent: !0
            }));
          }
        }
      }
    },
    wb = ["axisLine", "axisTickLabel", "axisName"],
    bb = ["splitLine", "splitArea", "minorSplitLine"],
    Sb = (u(Mb, _b = Xx), Mb.prototype.render = function (e, t) {
      var n, i, r, o, a, s, l, u, h;
      this.group.removeAll(), e.get("show") && (n = this._axisGroup, i = this._axisGroup = new Hr(), this.group.add(i), r = e.axis, h = (o = r.polar).getAngleAxis(), a = r.getTicksCoords(), s = r.getMinorTicksCoords(), l = h.getExtent()[0], u = r.getExtent(), h = {
        position: [o.cx, o.cy],
        rotation: l / 180 * Math.PI,
        labelDirection: -1,
        tickDirection: -1,
        nameDirection: 1,
        labelRotate: e.getModel("axisLabel").get("rotate"),
        z2: 1
      }, h = new xx(e, h), E(wb, h.add, h), i.add(h.getGroup()), Jh(n, i, e), E(bb, function (t) {
        e.get([t, "show"]) && !r.scale.isBlank() && Tb[t](this.group, e, o, l, u, a, s);
      }, this));
    }, Mb.type = "radiusAxis", Mb);
  function Mb() {
    var t = null !== _b && _b.apply(this, arguments) || this;
    return t.type = Mb.type, t.axisPointerClass = "PolarAxisPointer", t;
  }
  var Tb = {
    splitLine: function splitLine(t, e, n, i, r, o) {
      for (var a = e.getModel("splitLine").getModel("lineStyle"), s = a.get("color"), l = 0, u = n.getAngleAxis(), h = Math.PI / 180, c = u.getExtent(), p = 360 === Math.abs(c[1] - c[0]) ? "Circle" : "Arc", s = s instanceof Array ? s : [s], d = [], f = 0; f < o.length; f++) {
        var g = l++ % s.length;
        d[g] = d[g] || [], d[g].push(new sc[p]({
          shape: {
            cx: n.cx,
            cy: n.cy,
            r: Math.max(o[f].coord, 0),
            startAngle: -c[0] * h,
            endAngle: -c[1] * h,
            clockwise: u.inverse
          }
        }));
      }
      for (f = 0; f < d.length; f++) {
        t.add(Xh(d[f], {
          style: B({
            stroke: s[f % s.length],
            fill: null
          }, a.getLineStyle()),
          silent: !0
        }));
      }
    },
    minorSplitLine: function minorSplitLine(t, e, n, i, r, o, a) {
      if (a.length) {
        for (var e = e.getModel("minorSplitLine").getModel("lineStyle"), s = [], l = 0; l < a.length; l++) {
          for (var u = 0; u < a[l].length; u++) {
            s.push(new hu({
              shape: {
                cx: n.cx,
                cy: n.cy,
                r: a[l][u].coord
              }
            }));
          }
        }
        t.add(Xh(s, {
          style: B({
            fill: null
          }, e.getLineStyle()),
          silent: !0
        }));
      }
    },
    splitArea: function splitArea(t, e, n, i, r, o) {
      if (o.length) {
        for (var a = e.getModel("splitArea").getModel("areaStyle"), s = 0, l = (l = a.get("color")) instanceof Array ? l : [l], u = [], h = o[0].coord, c = 1; c < o.length; c++) {
          var p = s++ % l.length;
          u[p] = u[p] || [], u[p].push(new Pu({
            shape: {
              cx: n.cx,
              cy: n.cy,
              r0: h,
              r: o[c].coord,
              startAngle: 0,
              endAngle: 2 * Math.PI
            },
            silent: !0
          })), h = o[c].coord;
        }
        for (c = 0; c < u.length; c++) {
          t.add(Xh(u[c], {
            style: B({
              fill: l[c % l.length]
            }, a.getAreaStyle()),
            silent: !0
          }));
        }
      }
    }
  };
  function Ib(t) {
    return t.get("stack") || "__ec_stack_" + t.seriesIndex;
  }
  function Cb(t, e) {
    return e.dim + t.model.componentIndex;
  }
  function Db(t, e, n) {
    var i,
      l,
      c,
      A = {},
      P = (i = ut(e.getSeriesByType(t), function (t) {
        return !e.isSeriesFiltered(t) && t.coordinateSystem && "polar" === t.coordinateSystem.type;
      }), l = {}, E(i, function (t, e) {
        var n = t.getData(),
          i = t.coordinateSystem,
          r = i.getBaseAxis(),
          i = Cb(i, r),
          o = r.getExtent(),
          r = "category" === r.type ? r.getBandWidth() : Math.abs(o[1] - o[0]) / n.count(),
          o = l[i] || {
            bandWidth: r,
            remainedWidth: r,
            autoWidthCount: 0,
            categoryGap: "20%",
            gap: "30%",
            stacks: {}
          },
          n = o.stacks,
          i = (l[i] = o, Ib(t)),
          a = (n[i] || o.autoWidthCount++, n[i] = n[i] || {
            width: 0,
            maxWidth: 0
          }, G(t.get("barWidth"), r)),
          r = G(t.get("barMaxWidth"), r),
          s = t.get("barGap"),
          t = t.get("barCategoryGap");
        a && !n[i].width && (a = Math.min(o.remainedWidth, a), n[i].width = a, o.remainedWidth -= a), r && (n[i].maxWidth = r), null != s && (o.gap = s), null != t && (o.categoryGap = t);
      }), c = {}, E(l, function (t, n) {
        c[n] = {};
        var i,
          e = t.stacks,
          r = t.bandWidth,
          r = G(t.categoryGap, r),
          o = G(t.gap, 1),
          a = t.remainedWidth,
          s = t.autoWidthCount,
          l = (a - r) / (s + (s - 1) * o),
          l = Math.max(l, 0),
          u = (E(e, function (t, e) {
            var n = t.maxWidth;
            n && n < l && (n = Math.min(n, a), t.width && (n = Math.min(n, t.width)), a -= n, t.width = n, s--);
          }), l = (a - r) / (s + (s - 1) * o), l = Math.max(l, 0), 0),
          h = (E(e, function (t, e) {
            t.width || (t.width = l), u += (i = t).width * (1 + o);
          }), i && (u -= i.width * o), -u / 2);
        E(e, function (t, e) {
          c[n][e] = c[n][e] || {
            offset: h,
            width: t.width
          }, h += t.width * (1 + o);
        });
      }), c);
    e.eachSeriesByType(t, function (t) {
      if ("polar" === t.coordinateSystem.type) for (var e = t.getData(), n = t.coordinateSystem, i = n.getBaseAxis(), r = Cb(n, i), o = Ib(t), r = P[r][o], a = r.offset, s = r.width, l = n.getOtherAxis(i), u = t.coordinateSystem.cx, h = t.coordinateSystem.cy, c = t.get("barMinHeight") || 0, p = t.get("barMinAngle") || 0, d = (A[o] = A[o] || [], e.mapDimension(l.dim)), f = e.mapDimension(i.dim), g = nv(e, d), y = "radius" !== i.dim || !t.get("roundCap", !0), r = l.model.get("startValue"), m = l.dataToCoord(r || 0), v = 0, _ = e.count(); v < _; v++) {
        var x,
          w,
          b = e.get(d, v),
          S = e.get(f, v),
          M = 0 <= b ? "p" : "n",
          T = m,
          I = (g && (A[o][S] || (A[o][S] = {
            p: m,
            n: m
          }), T = A[o][S][M]), void 0),
          C = void 0,
          D = void 0,
          k = void 0;
        "radius" === l.dim ? (w = l.dataToCoord(b) - m, x = i.dataToCoord(S), C = (I = T) + (w = Math.abs(w) < c ? (w < 0 ? -1 : 1) * c : w), k = (D = x - a) - s, g && (A[o][S][M] = C)) : (w = l.dataToCoord(b, y) - m, C = (I = i.dataToCoord(S) + a) + s, k = (D = T) + (w = Math.abs(w) < p ? (w < 0 ? -1 : 1) * p : w), g && (A[o][S][M] = k)), e.setItemLayout(v, {
          cx: u,
          cy: h,
          r0: I,
          r: C,
          startAngle: -D * Math.PI / 180,
          endAngle: -k * Math.PI / 180,
          clockwise: k <= D
        });
      }
    });
  }
  var kb,
    Ab = {
      startAngle: 90,
      clockwise: !0,
      splitNumber: 12,
      axisLabel: {
        rotate: 0
      }
    },
    Pb = {
      splitNumber: 5
    },
    Lb = (u(Ob, kb = Ig), Ob.type = "polar", Ob);
  function Ob() {
    var t = null !== kb && kb.apply(this, arguments) || this;
    return t.type = Ob.type, t;
  }
  l_(function (t) {
    l_(Bw), Xx.registerAxisPointerClass("PolarAxisPointer", lw), t.registerCoordinateSystem("polar", cb), t.registerComponentModel(Fw), t.registerComponentView(Lb), Hw(t, "angle", Yw, Ab), Hw(t, "radius", Kw, Pb), t.registerComponentView(mb), t.registerComponentView(Sb), t.registerLayout(dt(Db, "bar"));
  });
  u(Eb, Rb = g), Eb.prototype.init = function (t, e, n) {
    this.mergeDefaultAndTheme(t, n), t.selected = t.selected || {}, this._updateSelector(t);
  }, Eb.prototype.mergeOption = function (t, e) {
    Rb.prototype.mergeOption.call(this, t, e), this._updateSelector(t);
  }, Eb.prototype._updateSelector = function (t) {
    var n = t.selector,
      i = this.ecModel;
    F(n = !0 === n ? t.selector = ["all", "inverse"] : n) && E(n, function (t, e) {
      V(t) && (t = {
        type: t
      }), n[e] = d(t, (e = i, "all" === (t = t.type) ? {
        type: "all",
        title: e.getLocaleModel().get(["legend", "selector", "all"])
      } : "inverse" === t ? {
        type: "inverse",
        title: e.getLocaleModel().get(["legend", "selector", "inverse"])
      } : void 0));
    });
  }, Eb.prototype.optionUpdated = function () {
    this._updateData(this.ecModel);
    var t = this._data;
    if (t[0] && "single" === this.get("selectedMode")) {
      for (var e = !1, n = 0; n < t.length; n++) {
        var i = t[n].get("name");
        if (this.isSelected(i)) {
          this.select(i), e = !0;
          break;
        }
      }
      e || this.select(t[0].get("name"));
    }
  }, Eb.prototype._updateData = function (i) {
    var r = [],
      o = [],
      t = (i.eachRawSeries(function (t) {
        var e,
          n = t.name;
        o.push(n), t.legendVisualProvider && (n = t.legendVisualProvider.getAllNames(), i.isSeriesFiltered(t) || (o = o.concat(n)), n.length) ? r = r.concat(n) : e = !0, e && Co(t) && r.push(t.name);
      }), this._availableNames = o, this.get("data") || r),
      e = N(),
      t = z(t, function (t) {
        return (V(t) || W(t)) && (t = {
          name: t
        }), e.get(t.name) ? null : (e.set(t.name, !0), new Rc(t, this, this.ecModel));
      }, this);
    this._data = ut(t, function (t) {
      return !!t;
    });
  }, Eb.prototype.getData = function () {
    return this._data;
  }, Eb.prototype.select = function (t) {
    var e = this.option.selected;
    "single" === this.get("selectedMode") && E(this._data, function (t) {
      e[t.get("name")] = !1;
    }), e[t] = !0;
  }, Eb.prototype.unSelect = function (t) {
    "single" !== this.get("selectedMode") && (this.option.selected[t] = !1);
  }, Eb.prototype.toggleSelected = function (t) {
    var e = this.option.selected;
    e.hasOwnProperty(t) || (e[t] = !0), this[e[t] ? "unSelect" : "select"](t);
  }, Eb.prototype.allSelect = function () {
    var t = this._data,
      e = this.option.selected;
    E(t, function (t) {
      e[t.get("name", !0)] = !0;
    });
  }, Eb.prototype.inverseSelect = function () {
    var t = this._data,
      e = this.option.selected;
    E(t, function (t) {
      t = t.get("name", !0);
      e.hasOwnProperty(t) || (e[t] = !0), e[t] = !e[t];
    });
  }, Eb.prototype.isSelected = function (t) {
    var e = this.option.selected;
    return !(e.hasOwnProperty(t) && !e[t]) && 0 <= C(this._availableNames, t);
  }, Eb.prototype.getOrient = function () {
    return "vertical" === this.get("orient") ? {
      index: 1,
      name: "vertical"
    } : {
      index: 0,
      name: "horizontal"
    };
  }, Eb.type = "legend.plain", Eb.dependencies = ["series"], Eb.defaultOption = {
    z: 4,
    show: !0,
    orient: "horizontal",
    left: "center",
    top: 0,
    align: "auto",
    backgroundColor: "rgba(0,0,0,0)",
    borderColor: "#ccc",
    borderRadius: 0,
    borderWidth: 0,
    padding: 5,
    itemGap: 10,
    itemWidth: 25,
    itemHeight: 14,
    symbolRotate: "inherit",
    symbolKeepAspect: !0,
    inactiveColor: "#ccc",
    inactiveBorderColor: "#ccc",
    inactiveBorderWidth: "auto",
    itemStyle: {
      color: "inherit",
      opacity: "inherit",
      borderColor: "inherit",
      borderWidth: "auto",
      borderCap: "inherit",
      borderJoin: "inherit",
      borderDashOffset: "inherit",
      borderMiterLimit: "inherit"
    },
    lineStyle: {
      width: "auto",
      color: "inherit",
      inactiveColor: "#ccc",
      inactiveWidth: 2,
      opacity: "inherit",
      type: "inherit",
      cap: "inherit",
      join: "inherit",
      dashOffset: "inherit",
      miterLimit: "inherit"
    },
    textStyle: {
      color: "#333"
    },
    selectedMode: !0,
    selector: !1,
    selectorLabel: {
      show: !0,
      borderRadius: 10,
      padding: [3, 5, 3, 5],
      fontSize: 12,
      fontFamily: "sans-serif",
      color: "#666",
      borderWidth: 1,
      borderColor: "#666"
    },
    emphasis: {
      selectorLabel: {
        show: !0,
        color: "#eee",
        backgroundColor: "#666"
      }
    },
    selectorPosition: "auto",
    selectorItemGap: 7,
    selectorButtonGap: 10,
    tooltip: {
      show: !1
    }
  };
  var Rb,
    Nb = Eb;
  function Eb() {
    var t = null !== Rb && Rb.apply(this, arguments) || this;
    return t.type = Eb.type, t.layoutMode = {
      type: "box",
      ignoreSize: !0
    }, t;
  }
  var Bb,
    zb = dt,
    Fb = E,
    Vb = Hr,
    Wb = (u(Hb, Bb = Ig), Hb.prototype.init = function () {
      this.group.add(this._contentGroup = new Vb()), this.group.add(this._selectorGroup = new Vb()), this._isFirstRender = !0;
    }, Hb.prototype.getContentGroup = function () {
      return this._contentGroup;
    }, Hb.prototype.getSelectorGroup = function () {
      return this._selectorGroup;
    }, Hb.prototype.render = function (t, e, n) {
      var i,
        r,
        o,
        a,
        s,
        l = this._isFirstRender;
      this._isFirstRender = !1, this.resetInner(), t.get("show", !0) && (r = t.get("align"), i = t.get("orient"), r && "auto" !== r || (r = "right" === t.get("left") && "vertical" === i ? "right" : "left"), a = t.get("selector", !0), s = t.get("selectorPosition", !0), this.renderInner(r, t, e, n, a, i, s = !a || s && "auto" !== s ? s : "horizontal" === i ? "end" : "start"), o = Dp(e = t.getBoxLayoutParams(), i = {
        width: n.getWidth(),
        height: n.getHeight()
      }, n = t.get("padding")), o = Dp(B({
        width: (r = this.layoutInner(t, r, o, l, a, s)).width,
        height: r.height
      }, e), i, n), this.group.x = o.x - r.x, this.group.y = o.y - r.y, this.group.markRedraw(), this.group.add(this._backgroundEl = (l = r, s = xp((a = t).get("padding")), (e = a.getItemStyle(["color", "opacity"])).fill = a.get("backgroundColor"), l = new As({
        shape: {
          x: l.x - s[3],
          y: l.y - s[0],
          width: l.width + s[1] + s[3],
          height: l.height + s[0] + s[2],
          r: a.get("borderRadius")
        },
        style: e,
        silent: !0,
        z2: -1
      }))));
    }, Hb.prototype.resetInner = function () {
      this.getContentGroup().removeAll(), this._backgroundEl && this.group.remove(this._backgroundEl), this.getSelectorGroup().removeAll();
    }, Hb.prototype.renderInner = function (s, l, u, h, t, e, n) {
      var c = this.getContentGroup(),
        p = N(),
        d = l.get("selectedMode"),
        f = [];
      u.eachRawSeries(function (t) {
        t.get("legendHoverLink") || f.push(t.id);
      }), Fb(l.getData(), function (r, o) {
        var e,
          t,
          n,
          i,
          a = r.get("name");
        this.newlineDisabled || "" !== a && "\n" !== a ? (e = u.getSeriesByName(a)[0], p.get(a) || (e ? (i = (n = e.getData()).getVisual("legendLineStyle") || {}, t = n.getVisual("legendIcon"), n = n.getVisual("style"), (i = this._createItem(e, a, o, r, l, s, i, n, t, d, h)).on("click", zb(Gb, a, null, h, f)).on("mouseover", zb(qb, e.name, null, h, f)).on("mouseout", zb(Xb, e.name, null, h, f)), u.ssr && i.eachChild(function (t) {
          t = Ys(t);
          t.seriesIndex = e.seriesIndex, t.dataIndex = o, t.ssrType = "legend";
        }), p.set(a, !0)) : u.eachRawSeries(function (e) {
          var t, n, i;
          p.get(a) || e.legendVisualProvider && (n = e.legendVisualProvider).containName(a) && (i = n.indexOfName(a), t = n.getItemVisual(i, "style"), n = n.getItemVisual(i, "legendIcon"), (i = gi(t.fill)) && 0 === i[3] && (i[3] = .2, t = L(L({}, t), {
            fill: wi(i, "rgba")
          })), (i = this._createItem(e, a, o, r, l, s, {}, t, n, d, h)).on("click", zb(Gb, null, a, h, f)).on("mouseover", zb(qb, null, a, h, f)).on("mouseout", zb(Xb, null, a, h, f)), u.ssr && i.eachChild(function (t) {
            t = Ys(t);
            t.seriesIndex = e.seriesIndex, t.dataIndex = o, t.ssrType = "legend";
          }), p.set(a, !0));
        }, this))) : ((n = new Vb()).newline = !0, c.add(n));
      }, this), t && this._createSelector(t, l, h, e, n);
    }, Hb.prototype._createSelector = function (t, i, r, e, n) {
      var o = this.getSelectorGroup();
      Fb(t, function (t) {
        var e = t.type,
          n = new Ns({
            style: {
              x: 0,
              y: 0,
              align: "center",
              verticalAlign: "middle"
            },
            onclick: function onclick() {
              r.dispatchAction({
                type: "all" === e ? "legendAllSelect" : "legendInverseSelect",
                legendId: i.id
              });
            }
          });
        o.add(n), cc(n, {
          normal: i.getModel("selectorLabel"),
          emphasis: i.getModel(["emphasis", "selectorLabel"])
        }, {
          defaultText: t.title
        }), Rl(n);
      });
    }, Hb.prototype._createItem = function (t, e, n, i, r, o, a, s, l, u, h) {
      var c = t.visualDrawType,
        p = r.get("itemWidth"),
        d = r.get("itemHeight"),
        f = r.isSelected(e),
        g = i.get("symbolRotate"),
        y = i.get("symbolKeepAspect"),
        m = i.get("icon"),
        a = function (t, e, n, i, r, o, a) {
          function s(n, i) {
            "auto" === n.lineWidth && (n.lineWidth = 0 < i.lineWidth ? 2 : 0), Fb(n, function (t, e) {
              "inherit" === n[e] && (n[e] = i[e]);
            });
          }
          var l = e.getModel("itemStyle"),
            u = l.getItemStyle(),
            t = 0 === t.lastIndexOf("empty", 0) ? "fill" : "stroke",
            l = l.getShallow("decal");
          u.decal = l && "inherit" !== l ? a0(l, a) : i.decal, "inherit" === u.fill && (u.fill = i[r]);
          "inherit" === u.stroke && (u.stroke = i[t]);
          "inherit" === u.opacity && (u.opacity = ("fill" === r ? i : n).opacity);
          s(u, i);
          l = e.getModel("lineStyle"), a = l.getLineStyle();
          s(a, n), "auto" === u.fill && (u.fill = i.fill), "auto" === u.stroke && (u.stroke = i.fill), "auto" === a.stroke && (a.stroke = i.fill), o || (r = e.get("inactiveBorderWidth"), n = u[t], u.lineWidth = "auto" === r ? 0 < i.lineWidth && n ? 2 : 0 : u.lineWidth, u.fill = e.get("inactiveColor"), u.stroke = e.get("inactiveBorderColor"), a.stroke = l.get("inactiveColor"), a.lineWidth = l.get("inactiveWidth"));
          return {
            itemStyle: u,
            lineStyle: a
          };
        }(l = m || l || "roundRect", i, a, s, c, f, h),
        s = new Vb(),
        c = i.getModel("textStyle"),
        m = (!D(t.getLegendIcon) || m && "inherit" !== m ? (h = "inherit" === m && t.getData().getVisual("symbol") ? "inherit" === g ? t.getData().getVisual("symbolRotate") : g : 0, s.add(function (t) {
          var e = t.icon || "roundRect",
            n = Py(e, 0, 0, t.itemWidth, t.itemHeight, t.itemStyle.fill, t.symbolKeepAspect);
          n.setStyle(t.itemStyle), n.rotation = (t.iconRotate || 0) * Math.PI / 180, n.setOrigin([t.itemWidth / 2, t.itemHeight / 2]), -1 < e.indexOf("empty") && (n.style.stroke = n.style.fill, n.style.fill = "#fff", n.style.lineWidth = 2);
          return n;
        }({
          itemWidth: p,
          itemHeight: d,
          icon: l,
          iconRotate: h,
          itemStyle: a.itemStyle,
          lineStyle: a.lineStyle,
          symbolKeepAspect: y
        }))) : s.add(t.getLegendIcon({
          itemWidth: p,
          itemHeight: d,
          icon: l,
          iconRotate: g,
          itemStyle: a.itemStyle,
          lineStyle: a.lineStyle,
          symbolKeepAspect: y
        })), "left" === o ? p + 5 : -5),
        h = o,
        t = r.get("formatter"),
        l = e,
        g = (V(t) && t ? l = t.replace("{name}", null != e ? e : "") : D(t) && (l = t(e)), f ? c.getTextColor() : i.get("inactiveColor")),
        a = (s.add(new Ns({
          style: dc(c, {
            text: l,
            x: m,
            y: d / 2,
            fill: g,
            align: h,
            verticalAlign: "middle"
          }, {
            inheritColor: g
          })
        })), new As({
          shape: s.getBoundingRect(),
          style: {
            fill: "transparent"
          }
        })),
        y = i.getModel("tooltip");
      return y.get("show") && rc({
        el: a,
        componentModel: r,
        itemName: e,
        itemTooltipOption: y.option
      }), s.add(a), s.eachChild(function (t) {
        t.silent = !0;
      }), a.silent = !u, this.getContentGroup().add(s), Rl(s), s.__legendDataIndex = n, s;
    }, Hb.prototype.layoutInner = function (t, e, n, i, r, o) {
      var a,
        s,
        l,
        u,
        h,
        c = this.getContentGroup(),
        p = this.getSelectorGroup(),
        n = (Cp(t.get("orient"), c, t.get("itemGap"), n.width, n.height), c.getBoundingRect()),
        d = [-n.x, -n.y];
      return p.markRedraw(), c.markRedraw(), r ? (Cp("horizontal", p, t.get("selectorItemGap", !0)), a = [-(r = p.getBoundingRect()).x, -r.y], s = t.get("selectorButtonGap", !0), l = 0 === (t = t.getOrient().index) ? "width" : "height", u = 0 === t ? "height" : "width", h = 0 === t ? "y" : "x", "end" === o ? a[t] += n[l] + s : d[t] += r[l] + s, a[1 - t] += n[u] / 2 - r[u] / 2, p.x = a[0], p.y = a[1], c.x = d[0], c.y = d[1], (o = {
        x: 0,
        y: 0
      })[l] = n[l] + s + r[l], o[u] = Math.max(n[u], r[u]), o[h] = Math.min(0, r[h] + a[1 - t]), o) : (c.x = d[0], c.y = d[1], this.group.getBoundingRect());
    }, Hb.prototype.remove = function () {
      this.getContentGroup().removeAll(), this._isFirstRender = !0;
    }, Hb.type = "legend.plain", Hb);
  function Hb() {
    var t = null !== Bb && Bb.apply(this, arguments) || this;
    return t.type = Hb.type, t.newlineDisabled = !1, t;
  }
  function Gb(t, e, n, i) {
    Xb(t, e, n, i), n.dispatchAction({
      type: "legendToggleSelect",
      name: null != t ? t : e
    }), qb(t, e, n, i);
  }
  function Ub(t) {
    for (var e, n = t.getZr().storage.getDisplayList(), i = 0, r = n.length; i < r && !(e = n[i].states.emphasis);) {
      i++;
    }
    return e && e.hoverLayer;
  }
  function qb(t, e, n, i) {
    Ub(n) || n.dispatchAction({
      type: "highlight",
      seriesName: t,
      name: e,
      excludeSeriesId: i
    });
  }
  function Xb(t, e, n, i) {
    Ub(n) || n.dispatchAction({
      type: "downplay",
      seriesName: t,
      name: e,
      excludeSeriesId: i
    });
  }
  function Yb(t) {
    var n = t.findComponents({
      mainType: "legend"
    });
    n && n.length && t.filterSeries(function (t) {
      for (var e = 0; e < n.length; e++) {
        if (!n[e].isSelected(t.name)) return !1;
      }
      return !0;
    });
  }
  function Zb(e, n, t) {
    var i = "allSelect" === e || "inverseSelect" === e,
      r = {},
      o = [],
      a = (t.eachComponent({
        mainType: "legend",
        query: n
      }, function (t) {
        i ? t[e]() : t[e](n.name), jb(t, r), o.push(t.componentIndex);
      }), {});
    return t.eachComponent("legend", function (n) {
      E(r, function (t, e) {
        n[t ? "select" : "unSelect"](e);
      }), jb(n, a);
    }), i ? {
      selected: a,
      legendIndex: o
    } : {
      name: n.name,
      selected: a
    };
  }
  function jb(n, t) {
    var i = t || {};
    E(n.getData(), function (t) {
      var e,
        t = t.get("name");
      "\n" !== t && "" !== t && (e = n.isSelected(t), Ft(i, t) ? i[t] = i[t] && e : i[t] = e);
    });
  }
  function Kb(t) {
    t.registerComponentModel(Nb), t.registerComponentView(Wb), t.registerProcessor(t.PRIORITY.PROCESSOR.SERIES_FILTER, Yb), t.registerSubTypeDefaulter("legend", function () {
      return "plain";
    }), (t = t).registerAction("legendToggleSelect", "legendselectchanged", dt(Zb, "toggleSelected")), t.registerAction("legendAllSelect", "legendselectall", dt(Zb, "allSelect")), t.registerAction("legendInverseSelect", "legendinverseselect", dt(Zb, "inverseSelect")), t.registerAction("legendSelect", "legendselected", dt(Zb, "select")), t.registerAction("legendUnSelect", "legendunselected", dt(Zb, "unSelect"));
  }
  u(Jb, $b = Nb), Jb.prototype.setScrollDataIndex = function (t) {
    this.option.scrollDataIndex = t;
  }, Jb.prototype.init = function (t, e, n) {
    var i = Pp(t);
    $b.prototype.init.call(this, t, e, n), tS(this, t, i);
  }, Jb.prototype.mergeOption = function (t, e) {
    $b.prototype.mergeOption.call(this, t, e), tS(this, this.option, t);
  }, Jb.type = "legend.scroll", Jb.defaultOption = (fu = Nb.defaultOption, n = {
    scrollDataIndex: 0,
    pageButtonItemGap: 5,
    pageButtonGap: null,
    pageButtonPosition: "end",
    pageFormatter: "{current}/{total}",
    pageIcons: {
      horizontal: ["M0,0L12,-10L12,10z", "M0,0L-12,-10L-12,10z"],
      vertical: ["M0,0L20,0L10,-20z", "M0,0L20,0L10,20z"]
    },
    pageIconColor: "#2f4554",
    pageIconInactiveColor: "#aaa",
    pageIconSize: 15,
    pageTextStyle: {
      color: "#333"
    },
    animationDurationUpdate: 800
  }, d(d({}, fu, !0), n, !0));
  var $b,
    Qb = Jb;
  function Jb() {
    var t = null !== $b && $b.apply(this, arguments) || this;
    return t.type = Jb.type, t;
  }
  function tS(t, e, n) {
    var i = [1, 1];
    i[t.getOrient().index] = 0, Ap(e, n, {
      type: "box",
      ignoreSize: !!i
    });
  }
  var eS,
    nS = Hr,
    iS = ["width", "height"],
    rS = ["x", "y"],
    oS = (u(aS, eS = Wb), aS.prototype.init = function () {
      eS.prototype.init.call(this), this.group.add(this._containerGroup = new nS()), this._containerGroup.add(this.getContentGroup()), this.group.add(this._controllerGroup = new nS());
    }, aS.prototype.resetInner = function () {
      eS.prototype.resetInner.call(this), this._controllerGroup.removeAll(), this._containerGroup.removeClipPath(), this._containerGroup.__rectSize = null;
    }, aS.prototype.renderInner = function (t, i, e, r, n, o, a) {
      var s = this,
        l = (eS.prototype.renderInner.call(this, t, i, e, r, n, o, a), this._controllerGroup),
        t = i.get("pageIconSize", !0),
        u = F(t) ? t : [t, t],
        e = (h("pagePrev", 0), i.getModel("pageTextStyle"));
      function h(t, e) {
        var n = t + "DataIndex",
          e = nc(i.get("pageIcons", !0)[i.getOrient().name][e], {
            onclick: pt(s._pageGo, s, n, i, r)
          }, {
            x: -u[0] / 2,
            y: -u[1] / 2,
            width: u[0],
            height: u[1]
          });
        e.name = t, l.add(e);
      }
      l.add(new Ns({
        name: "pageText",
        style: {
          text: "xx/xx",
          fill: e.getTextColor(),
          font: e.getFont(),
          verticalAlign: "middle",
          align: "center"
        },
        silent: !0
      })), h("pageNext", 1);
    }, aS.prototype.layoutInner = function (t, e, n, i, r, o) {
      var a = this.getSelectorGroup(),
        s = t.getOrient().index,
        l = iS[s],
        u = rS[s],
        h = iS[1 - s],
        c = rS[1 - s],
        p = (r && Cp("horizontal", a, t.get("selectorItemGap", !0)), t.get("selectorButtonGap", !0)),
        d = a.getBoundingRect(),
        f = [-d.x, -d.y],
        g = y(n),
        n = (r && (g[l] = n[l] - d[l] - p), this._layoutContentAndController(t, i, g, s, l, h, c, u));
      return r && ("end" === o ? f[s] += n[l] + p : (t = d[l] + p, f[s] -= t, n[u] -= t), n[l] += d[l] + p, f[1 - s] += n[c] + n[h] / 2 - d[h] / 2, n[h] = Math.max(n[h], d[h]), n[c] = Math.min(n[c], d[c] + f[1 - s]), a.x = f[0], a.y = f[1], a.markRedraw()), n;
    }, aS.prototype._layoutContentAndController = function (t, e, n, i, r, o, a, s) {
      var l = this.getContentGroup(),
        u = this._containerGroup,
        h = this._controllerGroup,
        c = (Cp(t.get("orient"), l, t.get("itemGap"), i ? n.width : null, i ? null : n.height), Cp("horizontal", h, t.get("pageButtonItemGap", !0)), l.getBoundingRect()),
        p = h.getBoundingRect(),
        d = this._showController = c[r] > n[r],
        f = [-c.x, -c.y],
        e = (e || (f[i] = l[s]), [0, 0]),
        s = [-p.x, -p.y],
        g = R(t.get("pageButtonGap", !0), t.get("itemGap", !0)),
        f = (d && ("end" === t.get("pageButtonPosition", !0) ? s[i] += n[r] - p[r] : e[i] += p[r] + g), s[1 - i] += c[o] / 2 - p[o] / 2, l.setPosition(f), u.setPosition(e), h.setPosition(s), {
          x: 0,
          y: 0
        }),
        c = (f[r] = (d ? n : c)[r], f[o] = Math.max(c[o], p[o]), f[a] = Math.min(0, p[a] + s[1 - i]), u.__rectSize = n[r], d ? ((e = {
          x: 0,
          y: 0
        })[r] = Math.max(n[r] - p[r] - g, 0), e[o] = f[o], u.setClipPath(new As({
          shape: e
        })), u.__rectSize = e[r]) : h.eachChild(function (t) {
          t.attr({
            invisible: !0,
            silent: !0
          });
        }), this._getPageInfo(t));
      return null != c.pageIndex && Dh(l, {
        x: c.contentPosition[0],
        y: c.contentPosition[1]
      }, d ? t : null), this._updatePageInfoView(t, c), f;
    }, aS.prototype._pageGo = function (t, e, n) {
      t = this._getPageInfo(e)[t];
      null != t && n.dispatchAction({
        type: "legendScroll",
        scrollDataIndex: t,
        legendId: e.id
      });
    }, aS.prototype._updatePageInfoView = function (n, i) {
      var r = this._controllerGroup,
        t = (E(["pagePrev", "pageNext"], function (t) {
          var e = null != i[t + "DataIndex"],
            t = r.childOfName(t);
          t && (t.setStyle("fill", e ? n.get("pageIconColor", !0) : n.get("pageIconInactiveColor", !0)), t.cursor = e ? "pointer" : "default");
        }), r.childOfName("pageText")),
        e = n.get("pageFormatter"),
        o = i.pageIndex,
        o = null != o ? o + 1 : 0,
        a = i.pageCount;
      t && e && t.setStyle("text", V(e) ? e.replace("{current}", null == o ? "" : o + "").replace("{total}", null == a ? "" : a + "") : e({
        current: o,
        total: a
      }));
    }, aS.prototype._getPageInfo = function (t) {
      var e = t.get("scrollDataIndex", !0),
        n = this.getContentGroup(),
        i = this._containerGroup.__rectSize,
        t = t.getOrient().index,
        r = iS[t],
        o = rS[t],
        e = this._findTargetItemIndex(e),
        a = n.children(),
        s = a[e],
        l = a.length,
        u = l ? 1 : 0,
        h = {
          contentPosition: [n.x, n.y],
          pageCount: u,
          pageIndex: u - 1,
          pagePrevDataIndex: null,
          pageNextDataIndex: null
        };
      if (s) {
        n = g(s);
        h.contentPosition[t] = -n.s;
        for (var c = e + 1, p = n, d = n, f = null; c <= l; ++c) {
          (!(f = g(a[c])) && d.e > p.s + i || f && !y(f, p.s)) && (p = d.i > p.i ? d : f) && (null == h.pageNextDataIndex && (h.pageNextDataIndex = p.i), ++h.pageCount), d = f;
        }
        for (c = e - 1, p = n, d = n, f = null; -1 <= c; --c) {
          (f = g(a[c])) && y(d, f.s) || !(p.i < d.i) || (d = p, null == h.pagePrevDataIndex && (h.pagePrevDataIndex = p.i), ++h.pageCount, ++h.pageIndex), p = f;
        }
      }
      return h;
      function g(t) {
        var e, n;
        if (t) return {
          s: n = (e = t.getBoundingRect())[o] + t[o],
          e: n + e[r],
          i: t.__legendDataIndex
        };
      }
      function y(t, e) {
        return t.e >= e && t.s <= e + i;
      }
    }, aS.prototype._findTargetItemIndex = function (n) {
      var i, r;
      return this._showController ? (this.getContentGroup().eachChild(function (t, e) {
        t = t.__legendDataIndex;
        null == r && null != t && (r = e), t === n && (i = e);
      }), null != i ? i : r) : 0;
    }, aS.type = "legend.scroll", aS);
  function aS() {
    var t = null !== eS && eS.apply(this, arguments) || this;
    return t.type = aS.type, t.newlineDisabled = !0, t._currentIndex = 0, t;
  }
  l_(function (t) {
    l_(Kb), t.registerComponentModel(Qb), t.registerComponentView(oS), t.registerAction("legendScroll", "legendscroll", function (t, e) {
      var n = t.scrollDataIndex;
      null != n && e.eachComponent({
        mainType: "legend",
        subType: "scroll",
        query: t
      }, function (t) {
        t.setScrollDataIndex(n);
      });
    });
  }), l_(P1);
  var sS = {
      value: "eq",
      "<": "lt",
      "<=": "lte",
      ">": "gt",
      ">=": "gte",
      "=": "eq",
      "!=": "ne",
      "<>": "ne"
    },
    lS = (uS.prototype.evaluate = function (t) {
      var e = _typeof(t);
      return V(e) ? this._condVal.test(t) : !!W(e) && this._condVal.test(t + "");
    }, uS);
  function uS(t) {
    null == (this._condVal = V(t) ? new RegExp(t) : xt(t) ? t : null) && f("");
  }
  cS.prototype.evaluate = function () {
    return this.value;
  };
  var hS = cS;
  function cS() {}
  dS.prototype.evaluate = function () {
    for (var t = this.children, e = 0; e < t.length; e++) {
      if (!t[e].evaluate()) return !1;
    }
    return !0;
  };
  var pS = dS;
  function dS() {}
  gS.prototype.evaluate = function () {
    for (var t = this.children, e = 0; e < t.length; e++) {
      if (t[e].evaluate()) return !0;
    }
    return !1;
  };
  var fS = gS;
  function gS() {}
  mS.prototype.evaluate = function () {
    return !this.child.evaluate();
  };
  var yS = mS;
  function mS() {}
  _S.prototype.evaluate = function () {
    for (var t = !!this.valueParser, e = (0, this.getValue)(this.valueGetterParam), n = t ? this.valueParser(e) : null, i = 0; i < this.subCondList.length; i++) {
      if (!this.subCondList[i].evaluate(t ? n : e)) return !1;
    }
    return !0;
  };
  var vS = _S;
  function _S() {}
  function xS(t, e) {
    if (!0 === t || !1 === t) return (n = new hS()).value = t, n;
    var n;
    if (bS(t) || f(""), t.and) return wS("and", t, e);
    if (t.or) return wS("or", t, e);
    if (t.not) return n = e, bS(o = (o = t).not) || f(""), (l = new yS()).child = xS(o, n), l.child || f(""), l;
    for (var i = t, r = e, o = r.prepareGetValue(i), a = [], s = ct(i), l = i.parser, u = l ? Rf(l) : null, h = 0; h < s.length; h++) {
      var c,
        p = s[h];
      "parser" === p || r.valueGetterAttrMap.get(p) || (c = Ft(sS, p) ? sS[p] : p, p = i[p], p = u ? u(p) : p, (c = function (t, e) {
        return "eq" === t || "ne" === t ? new Vf("eq" === t, e) : Ft(Nf, t) ? new Ef(t, e) : null;
      }(c, p) || "reg" === c && new lS(p)) || f(""), a.push(c));
    }
    return a.length || f(""), (l = new vS()).valueGetterParam = o, l.valueParser = u, l.getValue = r.getValue, l.subCondList = a, l;
  }
  function wS(t, e, n) {
    e = e[t], F(e) || f(""), e.length || f(""), t = new ("and" === t ? pS : fS)();
    return t.children = z(e, function (t) {
      return xS(t, n);
    }), t.children.length || f(""), t;
  }
  function bS(t) {
    return O(t) && !st(t);
  }
  MS.prototype.evaluate = function () {
    return this._cond.evaluate();
  };
  var SS = MS;
  function MS(t, e) {
    this._cond = xS(t, e);
  }
  var TS = {
      type: "echarts:filter",
      transform: function transform(t) {
        for (var e, n, i = t.upstream, r = (t = t.config, n = {
            valueGetterAttrMap: N({
              dimension: !0
            }),
            prepareGetValue: function prepareGetValue(t) {
              var e = t.dimension,
                t = (Ft(t, "dimension") || f(""), i.getDimensionInfo(e));
              return t || f(""), {
                dimIdx: t.index
              };
            },
            getValue: function getValue(t) {
              return i.retrieveValueFromItem(e, t.dimIdx);
            }
          }, new SS(t, n)), o = [], a = 0, s = i.count(); a < s; a++) {
          e = i.getRawDataItem(a), r.evaluate() && o.push(e);
        }
        return {
          data: o
        };
      }
    },
    IS = {
      type: "echarts:sort",
      transform: function transform(t) {
        for (var a = t.upstream, t = t.config, t = _o(t), s = (t.length || f(""), []), t = (E(t, function (t) {
            var e = t.dimension,
              n = t.order,
              i = t.parser,
              t = t.incomparable,
              e = (null == e && f(""), "asc" !== n && "desc" !== n && f(""), t && "min" !== t && "max" !== t && f(""), "asc" !== n && "desc" !== n && f(""), a.getDimensionInfo(e)),
              r = (e || f(""), i ? Rf(i) : null);
            i && !r && f(""), s.push({
              dimIdx: e.index,
              parser: r,
              comparator: new zf(n, t)
            });
          }), a.sourceFormat), e = (t !== Hp && t !== Gp && f(""), []), n = 0, i = a.count(); n < i; n++) {
          e.push(a.getRawDataItem(n));
        }
        return e.sort(function (t, e) {
          for (var n = 0; n < s.length; n++) {
            var i = s[n],
              r = a.retrieveValueFromItem(t, i.dimIdx),
              o = a.retrieveValueFromItem(e, i.dimIdx),
              i = (i.parser && (r = i.parser(r), o = i.parser(o)), i.comparator.evaluate(r, o));
            if (0 !== i) return i;
          }
          return 0;
        }), {
          data: e
        };
      }
    };
  l_(function (t) {
    t.registerTransform(TS), t.registerTransform(IS);
  }), t.Axis = Pc, t.ChartView = Pg, t.ComponentModel = g, t.ComponentView = Ig, t.List = Km, t.Model = Rc, t.PRIORITY = My, t.SeriesModel = vg, t.color = _i, t.connect = function (e) {
    var t;
    return F(e) && (t = e, e = null, E(t, function (t) {
      null != t.group && (e = t.group);
    }), e = e || "g_" + im++, E(t, function (t) {
      t.group = e;
    })), em[e] = !0, e;
  }, t.dataTool = {}, t.dependencies = {
    zrender: "5.6.1"
  }, t.disConnect = Sy, t.disconnect = om, t.dispose = function (t) {
    V(t) ? t = tm[t] : t instanceof V0 || (t = am(t)), t instanceof V0 && !t.isDisposed() && t.dispose();
  }, t.env = b, t.extendChartView = function (t) {
    return t = Pg.extend(t), Pg.registerClass(t), t;
  }, t.extendComponentModel = function (t) {
    return t = g.extend(t), g.registerClass(t), t;
  }, t.extendComponentView = function (t) {
    return t = Ig.extend(t), Ig.registerClass(t), t;
  }, t.extendSeriesModel = function (t) {
    return t = vg.extend(t), vg.registerClass(t), t;
  }, t.format = kc, t.getCoordinateSystemDimensions = function (t) {
    if (t = _d.get(t)) return t.getDimensionsInfo ? t.getDimensionsInfo() : t.dimensions.slice();
  }, t.getInstanceByDom = am, t.getInstanceById = function (t) {
    return tm[t];
  }, t.getMap = function (t) {
    var e = u0.getMap;
    return e && e(t);
  }, t.graphic = Kc, t.helper = Ty, t.init = function (t, e, n) {
    var i = !(n && n.ssr);
    if (i) {
      var r = am(t);
      if (r) return r;
    }
    return (r = new V0(t, e, n)).id = "ec_" + nm++, tm[r.id] = r, i && Bo(t, rm, r.id), E0(r), l0.trigger("afterinit", r), r;
  }, t.innerDrawElementOnCanvas = e0, t.matrix = Ve, t.number = Ko, t.parseGeoJSON = T_, t.parseGeoJson = T_, t.registerAction = dm, t.registerCoordinateSystem = fm, t.registerLayout = gm, t.registerLoading = _m, t.registerLocale = Uc, t.registerMap = xm, t.registerPostInit = hm, t.registerPostUpdate = cm, t.registerPreprocessor = lm, t.registerProcessor = um, t.registerTheme = sm, t.registerTransform = wm, t.registerUpdateLifecycle = pm, t.registerVisual = ym, t.setCanvasCreator = function (t) {
    M({
      createCanvas: t
    });
  }, t.setPlatformAPI = M, t.throttle = Wg, t.time = jh, t.use = l_, t.util = Tc, t.vector = oe, t.version = "5.6.0", t.zrUtil = Ht, t.zrender = Qr;
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),

/***/ 22:
/*!*************************************************************!*\
  !*** ./node_modules/@dcloudio/uni-i18n/dist/uni-i18n.es.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni, global) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.LOCALE_ZH_HANT = exports.LOCALE_ZH_HANS = exports.LOCALE_FR = exports.LOCALE_ES = exports.LOCALE_EN = exports.I18n = exports.Formatter = void 0;
exports.compileI18nJsonStr = compileI18nJsonStr;
exports.hasI18nJson = hasI18nJson;
exports.initVueI18n = initVueI18n;
exports.isI18nStr = isI18nStr;
exports.isString = void 0;
exports.normalizeLocale = normalizeLocale;
exports.parseI18nJson = parseI18nJson;
exports.resolveLocale = resolveLocale;
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 5));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 24));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var isObject = function isObject(val) {
  return val !== null && (0, _typeof2.default)(val) === 'object';
};
var defaultDelimiters = ['{', '}'];
var BaseFormatter = /*#__PURE__*/function () {
  function BaseFormatter() {
    (0, _classCallCheck2.default)(this, BaseFormatter);
    this._caches = Object.create(null);
  }
  (0, _createClass2.default)(BaseFormatter, [{
    key: "interpolate",
    value: function interpolate(message, values) {
      var delimiters = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultDelimiters;
      if (!values) {
        return [message];
      }
      var tokens = this._caches[message];
      if (!tokens) {
        tokens = parse(message, delimiters);
        this._caches[message] = tokens;
      }
      return compile(tokens, values);
    }
  }]);
  return BaseFormatter;
}();
exports.Formatter = BaseFormatter;
var RE_TOKEN_LIST_VALUE = /^(?:\d)+/;
var RE_TOKEN_NAMED_VALUE = /^(?:\w)+/;
function parse(format, _ref) {
  var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
    startDelimiter = _ref2[0],
    endDelimiter = _ref2[1];
  var tokens = [];
  var position = 0;
  var text = '';
  while (position < format.length) {
    var char = format[position++];
    if (char === startDelimiter) {
      if (text) {
        tokens.push({
          type: 'text',
          value: text
        });
      }
      text = '';
      var sub = '';
      char = format[position++];
      while (char !== undefined && char !== endDelimiter) {
        sub += char;
        char = format[position++];
      }
      var isClosed = char === endDelimiter;
      var type = RE_TOKEN_LIST_VALUE.test(sub) ? 'list' : isClosed && RE_TOKEN_NAMED_VALUE.test(sub) ? 'named' : 'unknown';
      tokens.push({
        value: sub,
        type: type
      });
    }
    //  else if (char === '%') {
    //   // when found rails i18n syntax, skip text capture
    //   if (format[position] !== '{') {
    //     text += char
    //   }
    // }
    else {
      text += char;
    }
  }
  text && tokens.push({
    type: 'text',
    value: text
  });
  return tokens;
}
function compile(tokens, values) {
  var compiled = [];
  var index = 0;
  var mode = Array.isArray(values) ? 'list' : isObject(values) ? 'named' : 'unknown';
  if (mode === 'unknown') {
    return compiled;
  }
  while (index < tokens.length) {
    var token = tokens[index];
    switch (token.type) {
      case 'text':
        compiled.push(token.value);
        break;
      case 'list':
        compiled.push(values[parseInt(token.value, 10)]);
        break;
      case 'named':
        if (mode === 'named') {
          compiled.push(values[token.value]);
        } else {
          if (true) {
            console.warn("Type of token '".concat(token.type, "' and format of value '").concat(mode, "' don't match!"));
          }
        }
        break;
      case 'unknown':
        if (true) {
          console.warn("Detect 'unknown' type of token!");
        }
        break;
    }
    index++;
  }
  return compiled;
}
var LOCALE_ZH_HANS = 'zh-Hans';
exports.LOCALE_ZH_HANS = LOCALE_ZH_HANS;
var LOCALE_ZH_HANT = 'zh-Hant';
exports.LOCALE_ZH_HANT = LOCALE_ZH_HANT;
var LOCALE_EN = 'en';
exports.LOCALE_EN = LOCALE_EN;
var LOCALE_FR = 'fr';
exports.LOCALE_FR = LOCALE_FR;
var LOCALE_ES = 'es';
exports.LOCALE_ES = LOCALE_ES;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var hasOwn = function hasOwn(val, key) {
  return hasOwnProperty.call(val, key);
};
var defaultFormatter = new BaseFormatter();
function include(str, parts) {
  return !!parts.find(function (part) {
    return str.indexOf(part) !== -1;
  });
}
function startsWith(str, parts) {
  return parts.find(function (part) {
    return str.indexOf(part) === 0;
  });
}
function normalizeLocale(locale, messages) {
  if (!locale) {
    return;
  }
  locale = locale.trim().replace(/_/g, '-');
  if (messages && messages[locale]) {
    return locale;
  }
  locale = locale.toLowerCase();
  if (locale === 'chinese') {
    // 支付宝
    return LOCALE_ZH_HANS;
  }
  if (locale.indexOf('zh') === 0) {
    if (locale.indexOf('-hans') > -1) {
      return LOCALE_ZH_HANS;
    }
    if (locale.indexOf('-hant') > -1) {
      return LOCALE_ZH_HANT;
    }
    if (include(locale, ['-tw', '-hk', '-mo', '-cht'])) {
      return LOCALE_ZH_HANT;
    }
    return LOCALE_ZH_HANS;
  }
  var locales = [LOCALE_EN, LOCALE_FR, LOCALE_ES];
  if (messages && Object.keys(messages).length > 0) {
    locales = Object.keys(messages);
  }
  var lang = startsWith(locale, locales);
  if (lang) {
    return lang;
  }
}
var I18n = /*#__PURE__*/function () {
  function I18n(_ref3) {
    var locale = _ref3.locale,
      fallbackLocale = _ref3.fallbackLocale,
      messages = _ref3.messages,
      watcher = _ref3.watcher,
      formater = _ref3.formater;
    (0, _classCallCheck2.default)(this, I18n);
    this.locale = LOCALE_EN;
    this.fallbackLocale = LOCALE_EN;
    this.message = {};
    this.messages = {};
    this.watchers = [];
    if (fallbackLocale) {
      this.fallbackLocale = fallbackLocale;
    }
    this.formater = formater || defaultFormatter;
    this.messages = messages || {};
    this.setLocale(locale || LOCALE_EN);
    if (watcher) {
      this.watchLocale(watcher);
    }
  }
  (0, _createClass2.default)(I18n, [{
    key: "setLocale",
    value: function setLocale(locale) {
      var _this = this;
      var oldLocale = this.locale;
      this.locale = normalizeLocale(locale, this.messages) || this.fallbackLocale;
      if (!this.messages[this.locale]) {
        // 可能初始化时不存在
        this.messages[this.locale] = {};
      }
      this.message = this.messages[this.locale];
      // 仅发生变化时，通知
      if (oldLocale !== this.locale) {
        this.watchers.forEach(function (watcher) {
          watcher(_this.locale, oldLocale);
        });
      }
    }
  }, {
    key: "getLocale",
    value: function getLocale() {
      return this.locale;
    }
  }, {
    key: "watchLocale",
    value: function watchLocale(fn) {
      var _this2 = this;
      var index = this.watchers.push(fn) - 1;
      return function () {
        _this2.watchers.splice(index, 1);
      };
    }
  }, {
    key: "add",
    value: function add(locale, message) {
      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      var curMessages = this.messages[locale];
      if (curMessages) {
        if (override) {
          Object.assign(curMessages, message);
        } else {
          Object.keys(message).forEach(function (key) {
            if (!hasOwn(curMessages, key)) {
              curMessages[key] = message[key];
            }
          });
        }
      } else {
        this.messages[locale] = message;
      }
    }
  }, {
    key: "f",
    value: function f(message, values, delimiters) {
      return this.formater.interpolate(message, values, delimiters).join('');
    }
  }, {
    key: "t",
    value: function t(key, locale, values) {
      var message = this.message;
      if (typeof locale === 'string') {
        locale = normalizeLocale(locale, this.messages);
        locale && (message = this.messages[locale]);
      } else {
        values = locale;
      }
      if (!hasOwn(message, key)) {
        console.warn("Cannot translate the value of keypath ".concat(key, ". Use the value of keypath as default."));
        return key;
      }
      return this.formater.interpolate(message[key], values).join('');
    }
  }]);
  return I18n;
}();
exports.I18n = I18n;
function watchAppLocale(appVm, i18n) {
  // 需要保证 watch 的触发在组件渲染之前
  if (appVm.$watchLocale) {
    // vue2
    appVm.$watchLocale(function (newLocale) {
      i18n.setLocale(newLocale);
    });
  } else {
    appVm.$watch(function () {
      return appVm.$locale;
    }, function (newLocale) {
      i18n.setLocale(newLocale);
    });
  }
}
function getDefaultLocale() {
  if (typeof uni !== 'undefined' && uni.getLocale) {
    return uni.getLocale();
  }
  // 小程序平台，uni 和 uni-i18n 互相引用，导致访问不到 uni，故在 global 上挂了 getLocale
  if (typeof global !== 'undefined' && global.getLocale) {
    return global.getLocale();
  }
  return LOCALE_EN;
}
function initVueI18n(locale) {
  var messages = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var fallbackLocale = arguments.length > 2 ? arguments[2] : undefined;
  var watcher = arguments.length > 3 ? arguments[3] : undefined;
  // 兼容旧版本入参
  if (typeof locale !== 'string') {
    var _ref4 = [messages, locale];
    locale = _ref4[0];
    messages = _ref4[1];
  }
  if (typeof locale !== 'string') {
    // 因为小程序平台，uni-i18n 和 uni 互相引用，导致此时访问 uni 时，为 undefined
    locale = getDefaultLocale();
  }
  if (typeof fallbackLocale !== 'string') {
    fallbackLocale = typeof __uniConfig !== 'undefined' && __uniConfig.fallbackLocale || LOCALE_EN;
  }
  var i18n = new I18n({
    locale: locale,
    fallbackLocale: fallbackLocale,
    messages: messages,
    watcher: watcher
  });
  var _t = function t(key, values) {
    if (typeof getApp !== 'function') {
      // app view
      /* eslint-disable no-func-assign */
      _t = function t(key, values) {
        return i18n.t(key, values);
      };
    } else {
      var isWatchedAppLocale = false;
      _t = function t(key, values) {
        var appVm = getApp().$vm;
        // 可能$vm还不存在，比如在支付宝小程序中，组件定义较早，在props的default里使用了t()函数（如uni-goods-nav），此时app还未初始化
        // options: {
        // 	type: Array,
        // 	default () {
        // 		return [{
        // 			icon: 'shop',
        // 			text: t("uni-goods-nav.options.shop"),
        // 		}, {
        // 			icon: 'cart',
        // 			text: t("uni-goods-nav.options.cart")
        // 		}]
        // 	}
        // },
        if (appVm) {
          // 触发响应式
          appVm.$locale;
          if (!isWatchedAppLocale) {
            isWatchedAppLocale = true;
            watchAppLocale(appVm, i18n);
          }
        }
        return i18n.t(key, values);
      };
    }
    return _t(key, values);
  };
  return {
    i18n: i18n,
    f: function f(message, values, delimiters) {
      return i18n.f(message, values, delimiters);
    },
    t: function t(key, values) {
      return _t(key, values);
    },
    add: function add(locale, message) {
      var override = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;
      return i18n.add(locale, message, override);
    },
    watch: function watch(fn) {
      return i18n.watchLocale(fn);
    },
    getLocale: function getLocale() {
      return i18n.getLocale();
    },
    setLocale: function setLocale(newLocale) {
      return i18n.setLocale(newLocale);
    }
  };
}
var isString = function isString(val) {
  return typeof val === 'string';
};
exports.isString = isString;
var formater;
function hasI18nJson(jsonObj, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  return walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        return true;
      }
    } else {
      return hasI18nJson(value, delimiters);
    }
  });
}
function parseI18nJson(jsonObj, values, delimiters) {
  if (!formater) {
    formater = new BaseFormatter();
  }
  walkJsonObj(jsonObj, function (jsonObj, key) {
    var value = jsonObj[key];
    if (isString(value)) {
      if (isI18nStr(value, delimiters)) {
        jsonObj[key] = compileStr(value, values, delimiters);
      }
    } else {
      parseI18nJson(value, values, delimiters);
    }
  });
  return jsonObj;
}
function compileI18nJsonStr(jsonStr, _ref5) {
  var locale = _ref5.locale,
    locales = _ref5.locales,
    delimiters = _ref5.delimiters;
  if (!isI18nStr(jsonStr, delimiters)) {
    return jsonStr;
  }
  if (!formater) {
    formater = new BaseFormatter();
  }
  var localeValues = [];
  Object.keys(locales).forEach(function (name) {
    if (name !== locale) {
      localeValues.push({
        locale: name,
        values: locales[name]
      });
    }
  });
  localeValues.unshift({
    locale: locale,
    values: locales[locale]
  });
  try {
    return JSON.stringify(compileJsonObj(JSON.parse(jsonStr), localeValues, delimiters), null, 2);
  } catch (e) {}
  return jsonStr;
}
function isI18nStr(value, delimiters) {
  return value.indexOf(delimiters[0]) > -1;
}
function compileStr(value, values, delimiters) {
  return formater.interpolate(value, values, delimiters).join('');
}
function compileValue(jsonObj, key, localeValues, delimiters) {
  var value = jsonObj[key];
  if (isString(value)) {
    // 存在国际化
    if (isI18nStr(value, delimiters)) {
      jsonObj[key] = compileStr(value, localeValues[0].values, delimiters);
      if (localeValues.length > 1) {
        // 格式化国际化语言
        var valueLocales = jsonObj[key + 'Locales'] = {};
        localeValues.forEach(function (localValue) {
          valueLocales[localValue.locale] = compileStr(value, localValue.values, delimiters);
        });
      }
    }
  } else {
    compileJsonObj(value, localeValues, delimiters);
  }
}
function compileJsonObj(jsonObj, localeValues, delimiters) {
  walkJsonObj(jsonObj, function (jsonObj, key) {
    compileValue(jsonObj, key, localeValues, delimiters);
  });
  return jsonObj;
}
function walkJsonObj(jsonObj, walk) {
  if (Array.isArray(jsonObj)) {
    for (var i = 0; i < jsonObj.length; i++) {
      if (walk(jsonObj, i)) {
        return true;
      }
    }
  } else if (isObject(jsonObj)) {
    for (var key in jsonObj) {
      if (walk(jsonObj, key)) {
        return true;
      }
    }
  }
  return false;
}
function resolveLocale(locales) {
  return function (locale) {
    if (!locale) {
      return locale;
    }
    locale = normalizeLocale(locale) || locale;
    return resolveLocaleChain(locale).find(function (locale) {
      return locales.indexOf(locale) > -1;
    });
  };
}
function resolveLocaleChain(locale) {
  var chain = [];
  var tokens = locale.split('-');
  while (tokens.length) {
    chain.push(tokens.join('-'));
    tokens.pop();
  }
  return chain;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"], __webpack_require__(/*! ./../../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 23:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/classCallCheck.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
module.exports = _classCallCheck, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 24:
/*!************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/createClass.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var toPropertyKey = __webpack_require__(/*! ./toPropertyKey.js */ 12);
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);
  }
}
function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  Object.defineProperty(Constructor, "prototype", {
    writable: false
  });
  return Constructor;
}
module.exports = _createClass, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 25:
/*!******************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/mp-vue/dist/mp.runtime.esm.js ***!
  \******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * Vue.js v2.6.11
 * (c) 2014-2024 Evan You
 * Released under the MIT License.
 */
/*  */

var emptyObject = Object.freeze({});

// These helpers produce better VM code in JS engines due to their
// explicitness and function inlining.
function isUndef (v) {
  return v === undefined || v === null
}

function isDef (v) {
  return v !== undefined && v !== null
}

function isTrue (v) {
  return v === true
}

function isFalse (v) {
  return v === false
}

/**
 * Check if value is primitive.
 */
function isPrimitive (value) {
  return (
    typeof value === 'string' ||
    typeof value === 'number' ||
    // $flow-disable-line
    typeof value === 'symbol' ||
    typeof value === 'boolean'
  )
}

/**
 * Quick object check - this is primarily used to tell
 * Objects from primitive values when we know the value
 * is a JSON-compliant type.
 */
function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

/**
 * Get the raw type string of a value, e.g., [object Object].
 */
var _toString = Object.prototype.toString;

function toRawType (value) {
  return _toString.call(value).slice(8, -1)
}

/**
 * Strict object type check. Only returns true
 * for plain JavaScript objects.
 */
function isPlainObject (obj) {
  return _toString.call(obj) === '[object Object]'
}

function isRegExp (v) {
  return _toString.call(v) === '[object RegExp]'
}

/**
 * Check if val is a valid array index.
 */
function isValidArrayIndex (val) {
  var n = parseFloat(String(val));
  return n >= 0 && Math.floor(n) === n && isFinite(val)
}

function isPromise (val) {
  return (
    isDef(val) &&
    typeof val.then === 'function' &&
    typeof val.catch === 'function'
  )
}

/**
 * Convert a value to a string that is actually rendered.
 */
function toString (val) {
  return val == null
    ? ''
    : Array.isArray(val) || (isPlainObject(val) && val.toString === _toString)
      ? JSON.stringify(val, null, 2)
      : String(val)
}

/**
 * Convert an input value to a number for persistence.
 * If the conversion fails, return original string.
 */
function toNumber (val) {
  var n = parseFloat(val);
  return isNaN(n) ? val : n
}

/**
 * Make a map and return a function for checking if a key
 * is in that map.
 */
function makeMap (
  str,
  expectsLowerCase
) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = 0; i < list.length; i++) {
    map[list[i]] = true;
  }
  return expectsLowerCase
    ? function (val) { return map[val.toLowerCase()]; }
    : function (val) { return map[val]; }
}

/**
 * Check if a tag is a built-in tag.
 */
var isBuiltInTag = makeMap('slot,component', true);

/**
 * Check if an attribute is a reserved attribute.
 */
var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

/**
 * Remove an item from an array.
 */
function remove (arr, item) {
  if (arr.length) {
    var index = arr.indexOf(item);
    if (index > -1) {
      return arr.splice(index, 1)
    }
  }
}

/**
 * Check whether an object has the property.
 */
var hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn (obj, key) {
  return hasOwnProperty.call(obj, key)
}

/**
 * Create a cached version of a pure function.
 */
function cached (fn) {
  var cache = Object.create(null);
  return (function cachedFn (str) {
    var hit = cache[str];
    return hit || (cache[str] = fn(str))
  })
}

/**
 * Camelize a hyphen-delimited string.
 */
var camelizeRE = /-(\w)/g;
var camelize = cached(function (str) {
  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })
});

/**
 * Capitalize a string.
 */
var capitalize = cached(function (str) {
  return str.charAt(0).toUpperCase() + str.slice(1)
});

/**
 * Hyphenate a camelCase string.
 */
var hyphenateRE = /\B([A-Z])/g;
var hyphenate = cached(function (str) {
  return str.replace(hyphenateRE, '-$1').toLowerCase()
});

/**
 * Simple bind polyfill for environments that do not support it,
 * e.g., PhantomJS 1.x. Technically, we don't need this anymore
 * since native bind is now performant enough in most browsers.
 * But removing it would mean breaking code that was able to run in
 * PhantomJS 1.x, so this must be kept for backward compatibility.
 */

/* istanbul ignore next */
function polyfillBind (fn, ctx) {
  function boundFn (a) {
    var l = arguments.length;
    return l
      ? l > 1
        ? fn.apply(ctx, arguments)
        : fn.call(ctx, a)
      : fn.call(ctx)
  }

  boundFn._length = fn.length;
  return boundFn
}

function nativeBind (fn, ctx) {
  return fn.bind(ctx)
}

var bind = Function.prototype.bind
  ? nativeBind
  : polyfillBind;

/**
 * Convert an Array-like object to a real Array.
 */
function toArray (list, start) {
  start = start || 0;
  var i = list.length - start;
  var ret = new Array(i);
  while (i--) {
    ret[i] = list[i + start];
  }
  return ret
}

/**
 * Mix properties into target object.
 */
function extend (to, _from) {
  for (var key in _from) {
    to[key] = _from[key];
  }
  return to
}

/**
 * Merge an Array of Objects into a single Object.
 */
function toObject (arr) {
  var res = {};
  for (var i = 0; i < arr.length; i++) {
    if (arr[i]) {
      extend(res, arr[i]);
    }
  }
  return res
}

/* eslint-disable no-unused-vars */

/**
 * Perform no operation.
 * Stubbing args to make Flow happy without leaving useless transpiled code
 * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).
 */
function noop (a, b, c) {}

/**
 * Always return false.
 */
var no = function (a, b, c) { return false; };

/* eslint-enable no-unused-vars */

/**
 * Return the same value.
 */
var identity = function (_) { return _; };

/**
 * Check if two values are loosely equal - that is,
 * if they are plain objects, do they have the same shape?
 */
function looseEqual (a, b) {
  if (a === b) { return true }
  var isObjectA = isObject(a);
  var isObjectB = isObject(b);
  if (isObjectA && isObjectB) {
    try {
      var isArrayA = Array.isArray(a);
      var isArrayB = Array.isArray(b);
      if (isArrayA && isArrayB) {
        return a.length === b.length && a.every(function (e, i) {
          return looseEqual(e, b[i])
        })
      } else if (a instanceof Date && b instanceof Date) {
        return a.getTime() === b.getTime()
      } else if (!isArrayA && !isArrayB) {
        var keysA = Object.keys(a);
        var keysB = Object.keys(b);
        return keysA.length === keysB.length && keysA.every(function (key) {
          return looseEqual(a[key], b[key])
        })
      } else {
        /* istanbul ignore next */
        return false
      }
    } catch (e) {
      /* istanbul ignore next */
      return false
    }
  } else if (!isObjectA && !isObjectB) {
    return String(a) === String(b)
  } else {
    return false
  }
}

/**
 * Return the first index at which a loosely equal value can be
 * found in the array (if value is a plain object, the array must
 * contain an object of the same shape), or -1 if it is not present.
 */
function looseIndexOf (arr, val) {
  for (var i = 0; i < arr.length; i++) {
    if (looseEqual(arr[i], val)) { return i }
  }
  return -1
}

/**
 * Ensure a function is called only once.
 */
function once (fn) {
  var called = false;
  return function () {
    if (!called) {
      called = true;
      fn.apply(this, arguments);
    }
  }
}

var ASSET_TYPES = [
  'component',
  'directive',
  'filter'
];

var LIFECYCLE_HOOKS = [
  'beforeCreate',
  'created',
  'beforeMount',
  'mounted',
  'beforeUpdate',
  'updated',
  'beforeDestroy',
  'destroyed',
  'activated',
  'deactivated',
  'errorCaptured',
  'serverPrefetch'
];

/*  */



var config = ({
  /**
   * Option merge strategies (used in core/util/options)
   */
  // $flow-disable-line
  optionMergeStrategies: Object.create(null),

  /**
   * Whether to suppress warnings.
   */
  silent: false,

  /**
   * Show production mode tip message on boot?
   */
  productionTip: "development" !== 'production',

  /**
   * Whether to enable devtools
   */
  devtools: "development" !== 'production',

  /**
   * Whether to record perf
   */
  performance: false,

  /**
   * Error handler for watcher errors
   */
  errorHandler: null,

  /**
   * Warn handler for watcher warns
   */
  warnHandler: null,

  /**
   * Ignore certain custom elements
   */
  ignoredElements: [],

  /**
   * Custom user key aliases for v-on
   */
  // $flow-disable-line
  keyCodes: Object.create(null),

  /**
   * Check if a tag is reserved so that it cannot be registered as a
   * component. This is platform-dependent and may be overwritten.
   */
  isReservedTag: no,

  /**
   * Check if an attribute is reserved so that it cannot be used as a component
   * prop. This is platform-dependent and may be overwritten.
   */
  isReservedAttr: no,

  /**
   * Check if a tag is an unknown element.
   * Platform-dependent.
   */
  isUnknownElement: no,

  /**
   * Get the namespace of an element
   */
  getTagNamespace: noop,

  /**
   * Parse the real tag name for the specific platform.
   */
  parsePlatformTagName: identity,

  /**
   * Check if an attribute must be bound using property, e.g. value
   * Platform-dependent.
   */
  mustUseProp: no,

  /**
   * Perform updates asynchronously. Intended to be used by Vue Test Utils
   * This will significantly reduce performance if set to false.
   */
  async: true,

  /**
   * Exposed for legacy reasons
   */
  _lifecycleHooks: LIFECYCLE_HOOKS
});

/*  */

/**
 * unicode letters used for parsing html tags, component names and property paths.
 * using https://www.w3.org/TR/html53/semantics-scripting.html#potentialcustomelementname
 * skipping \u10000-\uEFFFF due to it freezing up PhantomJS
 */
var unicodeRegExp = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

/**
 * Check if a string starts with $ or _
 */
function isReserved (str) {
  var c = (str + '').charCodeAt(0);
  return c === 0x24 || c === 0x5F
}

/**
 * Define a property.
 */
function def (obj, key, val, enumerable) {
  Object.defineProperty(obj, key, {
    value: val,
    enumerable: !!enumerable,
    writable: true,
    configurable: true
  });
}

/**
 * Parse simple path.
 */
var bailRE = new RegExp(("[^" + (unicodeRegExp.source) + ".$_\\d]"));
function parsePath (path) {
  if (bailRE.test(path)) {
    return
  }
  var segments = path.split('.');
  return function (obj) {
    for (var i = 0; i < segments.length; i++) {
      if (!obj) { return }
      obj = obj[segments[i]];
    }
    return obj
  }
}

/*  */

// can we use __proto__?
var hasProto = '__proto__' in {};

// Browser environment sniffing
var inBrowser = typeof window !== 'undefined';
var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
var UA = inBrowser && window.navigator && window.navigator.userAgent.toLowerCase();
var isIE = UA && /msie|trident/.test(UA);
var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
var isEdge = UA && UA.indexOf('edge/') > 0;
var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;
var isPhantomJS = UA && /phantomjs/.test(UA);
var isFF = UA && UA.match(/firefox\/(\d+)/);

// Firefox has a "watch" function on Object.prototype...
var nativeWatch = ({}).watch;
if (inBrowser) {
  try {
    var opts = {};
    Object.defineProperty(opts, 'passive', ({
      get: function get () {
      }
    })); // https://github.com/facebook/flow/issues/285
    window.addEventListener('test-passive', null, opts);
  } catch (e) {}
}

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
var _isServer;
var isServerRendering = function () {
  if (_isServer === undefined) {
    /* istanbul ignore if */
    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
      // detect presence of vue-server-renderer and avoid
      // Webpack shimming the process
      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';
    } else {
      _isServer = false;
    }
  }
  return _isServer
};

// detect devtools
var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

/* istanbul ignore next */
function isNative (Ctor) {
  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
}

var hasSymbol =
  typeof Symbol !== 'undefined' && isNative(Symbol) &&
  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

var _Set;
/* istanbul ignore if */ // $flow-disable-line
if (typeof Set !== 'undefined' && isNative(Set)) {
  // use native Set when available.
  _Set = Set;
} else {
  // a non-standard Set polyfill that only works with primitive keys.
  _Set = /*@__PURE__*/(function () {
    function Set () {
      this.set = Object.create(null);
    }
    Set.prototype.has = function has (key) {
      return this.set[key] === true
    };
    Set.prototype.add = function add (key) {
      this.set[key] = true;
    };
    Set.prototype.clear = function clear () {
      this.set = Object.create(null);
    };

    return Set;
  }());
}

/*  */

var warn = noop;
var tip = noop;
var generateComponentTrace = (noop); // work around flow check
var formatComponentName = (noop);

if (true) {
  var hasConsole = typeof console !== 'undefined';
  var classifyRE = /(?:^|[-_])(\w)/g;
  var classify = function (str) { return str
    .replace(classifyRE, function (c) { return c.toUpperCase(); })
    .replace(/[-_]/g, ''); };

  warn = function (msg, vm) {
    var trace = vm ? generateComponentTrace(vm) : '';

    if (config.warnHandler) {
      config.warnHandler.call(null, msg, vm, trace);
    } else if (hasConsole && (!config.silent)) {
      console.error(("[Vue warn]: " + msg + trace));
    }
  };

  tip = function (msg, vm) {
    if (hasConsole && (!config.silent)) {
      console.warn("[Vue tip]: " + msg + (
        vm ? generateComponentTrace(vm) : ''
      ));
    }
  };

  formatComponentName = function (vm, includeFile) {
    if (vm.$root === vm) {
      if (vm.$options && vm.$options.__file) { // fixed by xxxxxx
        return ('') + vm.$options.__file
      }
      return '<Root>'
    }
    var options = typeof vm === 'function' && vm.cid != null
      ? vm.options
      : vm._isVue
        ? vm.$options || vm.constructor.options
        : vm;
    var name = options.name || options._componentTag;
    var file = options.__file;
    if (!name && file) {
      var match = file.match(/([^/\\]+)\.vue$/);
      name = match && match[1];
    }

    return (
      (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
      (file && includeFile !== false ? (" at " + file) : '')
    )
  };

  var repeat = function (str, n) {
    var res = '';
    while (n) {
      if (n % 2 === 1) { res += str; }
      if (n > 1) { str += str; }
      n >>= 1;
    }
    return res
  };

  generateComponentTrace = function (vm) {
    if (vm._isVue && vm.$parent) {
      var tree = [];
      var currentRecursiveSequence = 0;
      while (vm && vm.$options.name !== 'PageBody') {
        if (tree.length > 0) {
          var last = tree[tree.length - 1];
          if (last.constructor === vm.constructor) {
            currentRecursiveSequence++;
            vm = vm.$parent;
            continue
          } else if (currentRecursiveSequence > 0) {
            tree[tree.length - 1] = [last, currentRecursiveSequence];
            currentRecursiveSequence = 0;
          }
        }
        !vm.$options.isReserved && tree.push(vm);
        vm = vm.$parent;
      }
      return '\n\nfound in\n\n' + tree
        .map(function (vm, i) { return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
            ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
            : formatComponentName(vm))); })
        .join('\n')
    } else {
      return ("\n\n(found in " + (formatComponentName(vm)) + ")")
    }
  };
}

/*  */

var uid = 0;

/**
 * A dep is an observable that can have multiple
 * directives subscribing to it.
 */
var Dep = function Dep () {
  this.id = uid++;
  this.subs = [];
};

Dep.prototype.addSub = function addSub (sub) {
  this.subs.push(sub);
};

Dep.prototype.removeSub = function removeSub (sub) {
  remove(this.subs, sub);
};

Dep.prototype.depend = function depend () {
  if (Dep.SharedObject.target) {
    Dep.SharedObject.target.addDep(this);
  }
};

Dep.prototype.notify = function notify () {
  // stabilize the subscriber list first
  var subs = this.subs.slice();
  if ( true && !config.async) {
    // subs aren't sorted in scheduler if not running async
    // we need to sort them now to make sure they fire in correct
    // order
    subs.sort(function (a, b) { return a.id - b.id; });
  }
  for (var i = 0, l = subs.length; i < l; i++) {
    subs[i].update();
  }
};

// The current target watcher being evaluated.
// This is globally unique because only one watcher
// can be evaluated at a time.
// fixed by xxxxxx (nvue shared vuex)
/* eslint-disable no-undef */
Dep.SharedObject = {};
Dep.SharedObject.target = null;
Dep.SharedObject.targetStack = [];

function pushTarget (target) {
  Dep.SharedObject.targetStack.push(target);
  Dep.SharedObject.target = target;
  Dep.target = target;
}

function popTarget () {
  Dep.SharedObject.targetStack.pop();
  Dep.SharedObject.target = Dep.SharedObject.targetStack[Dep.SharedObject.targetStack.length - 1];
  Dep.target = Dep.SharedObject.target;
}

/*  */

var VNode = function VNode (
  tag,
  data,
  children,
  text,
  elm,
  context,
  componentOptions,
  asyncFactory
) {
  this.tag = tag;
  this.data = data;
  this.children = children;
  this.text = text;
  this.elm = elm;
  this.ns = undefined;
  this.context = context;
  this.fnContext = undefined;
  this.fnOptions = undefined;
  this.fnScopeId = undefined;
  this.key = data && data.key;
  this.componentOptions = componentOptions;
  this.componentInstance = undefined;
  this.parent = undefined;
  this.raw = false;
  this.isStatic = false;
  this.isRootInsert = true;
  this.isComment = false;
  this.isCloned = false;
  this.isOnce = false;
  this.asyncFactory = asyncFactory;
  this.asyncMeta = undefined;
  this.isAsyncPlaceholder = false;
};

var prototypeAccessors = { child: { configurable: true } };

// DEPRECATED: alias for componentInstance for backwards compat.
/* istanbul ignore next */
prototypeAccessors.child.get = function () {
  return this.componentInstance
};

Object.defineProperties( VNode.prototype, prototypeAccessors );

var createEmptyVNode = function (text) {
  if ( text === void 0 ) text = '';

  var node = new VNode();
  node.text = text;
  node.isComment = true;
  return node
};

function createTextVNode (val) {
  return new VNode(undefined, undefined, undefined, String(val))
}

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
function cloneVNode (vnode) {
  var cloned = new VNode(
    vnode.tag,
    vnode.data,
    // #7975
    // clone children array to avoid mutating original in case of cloning
    // a child.
    vnode.children && vnode.children.slice(),
    vnode.text,
    vnode.elm,
    vnode.context,
    vnode.componentOptions,
    vnode.asyncFactory
  );
  cloned.ns = vnode.ns;
  cloned.isStatic = vnode.isStatic;
  cloned.key = vnode.key;
  cloned.isComment = vnode.isComment;
  cloned.fnContext = vnode.fnContext;
  cloned.fnOptions = vnode.fnOptions;
  cloned.fnScopeId = vnode.fnScopeId;
  cloned.asyncMeta = vnode.asyncMeta;
  cloned.isCloned = true;
  return cloned
}

/*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

var arrayProto = Array.prototype;
var arrayMethods = Object.create(arrayProto);

var methodsToPatch = [
  'push',
  'pop',
  'shift',
  'unshift',
  'splice',
  'sort',
  'reverse'
];

/**
 * Intercept mutating methods and emit events
 */
methodsToPatch.forEach(function (method) {
  // cache original method
  var original = arrayProto[method];
  def(arrayMethods, method, function mutator () {
    var args = [], len = arguments.length;
    while ( len-- ) args[ len ] = arguments[ len ];

    var result = original.apply(this, args);
    var ob = this.__ob__;
    var inserted;
    switch (method) {
      case 'push':
      case 'unshift':
        inserted = args;
        break
      case 'splice':
        inserted = args.slice(2);
        break
    }
    if (inserted) { ob.observeArray(inserted); }
    // notify change
    ob.dep.notify();
    return result
  });
});

/*  */

var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

/**
 * In some cases we may want to disable observation inside a component's
 * update computation.
 */
var shouldObserve = true;

function toggleObserving (value) {
  shouldObserve = value;
}

/**
 * Observer class that is attached to each observed
 * object. Once attached, the observer converts the target
 * object's property keys into getter/setters that
 * collect dependencies and dispatch updates.
 */
var Observer = function Observer (value) {
  this.value = value;
  this.dep = new Dep();
  this.vmCount = 0;
  def(value, '__ob__', this);
  if (Array.isArray(value)) {
    if (hasProto) {
      {// fixed by xxxxxx 微信小程序使用 plugins 之后，数组方法被直接挂载到了数组对象上，需要执行 copyAugment 逻辑
        if(value.push !== value.__proto__.push){
          copyAugment(value, arrayMethods, arrayKeys);
        } else {
          protoAugment(value, arrayMethods);
        }
      }
    } else {
      copyAugment(value, arrayMethods, arrayKeys);
    }
    this.observeArray(value);
  } else {
    this.walk(value);
  }
};

/**
 * Walk through all properties and convert them into
 * getter/setters. This method should only be called when
 * value type is Object.
 */
Observer.prototype.walk = function walk (obj) {
  var keys = Object.keys(obj);
  for (var i = 0; i < keys.length; i++) {
    defineReactive$$1(obj, keys[i]);
  }
};

/**
 * Observe a list of Array items.
 */
Observer.prototype.observeArray = function observeArray (items) {
  for (var i = 0, l = items.length; i < l; i++) {
    observe(items[i]);
  }
};

// helpers

/**
 * Augment a target Object or Array by intercepting
 * the prototype chain using __proto__
 */
function protoAugment (target, src) {
  /* eslint-disable no-proto */
  target.__proto__ = src;
  /* eslint-enable no-proto */
}

/**
 * Augment a target Object or Array by defining
 * hidden properties.
 */
/* istanbul ignore next */
function copyAugment (target, src, keys) {
  for (var i = 0, l = keys.length; i < l; i++) {
    var key = keys[i];
    def(target, key, src[key]);
  }
}

/**
 * Attempt to create an observer instance for a value,
 * returns the new observer if successfully observed,
 * or the existing observer if the value already has one.
 */
function observe (value, asRootData) {
  if (!isObject(value) || value instanceof VNode) {
    return
  }
  var ob;
  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
    ob = value.__ob__;
  } else if (
    shouldObserve &&
    !isServerRendering() &&
    (Array.isArray(value) || isPlainObject(value)) &&
    Object.isExtensible(value) &&
    !value._isVue &&
    !value.__v_isMPComponent
  ) {
    ob = new Observer(value);
  }
  if (asRootData && ob) {
    ob.vmCount++;
  }
  return ob
}

/**
 * Define a reactive property on an Object.
 */
function defineReactive$$1 (
  obj,
  key,
  val,
  customSetter,
  shallow
) {
  var dep = new Dep();

  var property = Object.getOwnPropertyDescriptor(obj, key);
  if (property && property.configurable === false) {
    return
  }

  // cater for pre-defined getter/setters
  var getter = property && property.get;
  var setter = property && property.set;
  if ((!getter || setter) && arguments.length === 2) {
    val = obj[key];
  }

  var childOb = !shallow && observe(val);
  Object.defineProperty(obj, key, {
    enumerable: true,
    configurable: true,
    get: function reactiveGetter () {
      var value = getter ? getter.call(obj) : val;
      if (Dep.SharedObject.target) { // fixed by xxxxxx
        dep.depend();
        if (childOb) {
          childOb.dep.depend();
          if (Array.isArray(value)) {
            dependArray(value);
          }
        }
      }
      return value
    },
    set: function reactiveSetter (newVal) {
      var value = getter ? getter.call(obj) : val;
      /* eslint-disable no-self-compare */
      if (newVal === value || (newVal !== newVal && value !== value)) {
        return
      }
      /* eslint-enable no-self-compare */
      if ( true && customSetter) {
        customSetter();
      }
      // #7981: for accessor properties without setter
      if (getter && !setter) { return }
      if (setter) {
        setter.call(obj, newVal);
      } else {
        val = newVal;
      }
      childOb = !shallow && observe(newVal);
      dep.notify();
    }
  });
}

/**
 * Set a property on an object. Adds the new property and
 * triggers change notification if the property doesn't
 * already exist.
 */
function set (target, key, val) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.length = Math.max(target.length, key);
    target.splice(key, 1, val);
    return val
  }
  if (key in target && !(key in Object.prototype)) {
    target[key] = val;
    return val
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid adding reactive properties to a Vue instance or its root $data ' +
      'at runtime - declare it upfront in the data option.'
    );
    return val
  }
  if (!ob) {
    target[key] = val;
    return val
  }
  defineReactive$$1(ob.value, key, val);
  ob.dep.notify();
  return val
}

/**
 * Delete a property and trigger change if necessary.
 */
function del (target, key) {
  if ( true &&
    (isUndef(target) || isPrimitive(target))
  ) {
    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
  }
  if (Array.isArray(target) && isValidArrayIndex(key)) {
    target.splice(key, 1);
    return
  }
  var ob = (target).__ob__;
  if (target._isVue || (ob && ob.vmCount)) {
     true && warn(
      'Avoid deleting properties on a Vue instance or its root $data ' +
      '- just set it to null.'
    );
    return
  }
  if (!hasOwn(target, key)) {
    return
  }
  delete target[key];
  if (!ob) {
    return
  }
  ob.dep.notify();
}

/**
 * Collect dependencies on array elements when the array is touched, since
 * we cannot intercept array element access like property getters.
 */
function dependArray (value) {
  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
    e = value[i];
    e && e.__ob__ && e.__ob__.dep.depend();
    if (Array.isArray(e)) {
      dependArray(e);
    }
  }
}

/*  */

/**
 * Option overwriting strategies are functions that handle
 * how to merge a parent option value and a child option
 * value into the final value.
 */
var strats = config.optionMergeStrategies;

/**
 * Options with restrictions
 */
if (true) {
  strats.el = strats.propsData = function (parent, child, vm, key) {
    if (!vm) {
      warn(
        "option \"" + key + "\" can only be used during instance " +
        'creation with the `new` keyword.'
      );
    }
    return defaultStrat(parent, child)
  };
}

/**
 * Helper that recursively merges two data objects together.
 */
function mergeData (to, from) {
  if (!from) { return to }
  var key, toVal, fromVal;

  var keys = hasSymbol
    ? Reflect.ownKeys(from)
    : Object.keys(from);

  for (var i = 0; i < keys.length; i++) {
    key = keys[i];
    // in case the object is already observed...
    if (key === '__ob__') { continue }
    toVal = to[key];
    fromVal = from[key];
    if (!hasOwn(to, key)) {
      set(to, key, fromVal);
    } else if (
      toVal !== fromVal &&
      isPlainObject(toVal) &&
      isPlainObject(fromVal)
    ) {
      mergeData(toVal, fromVal);
    }
  }
  return to
}

/**
 * Data
 */
function mergeDataOrFn (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    // in a Vue.extend merge, both should be functions
    if (!childVal) {
      return parentVal
    }
    if (!parentVal) {
      return childVal
    }
    // when parentVal & childVal are both present,
    // we need to return a function that returns the
    // merged result of both functions... no need to
    // check if parentVal is a function here because
    // it has to be a function to pass previous merges.
    return function mergedDataFn () {
      return mergeData(
        typeof childVal === 'function' ? childVal.call(this, this) : childVal,
        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
      )
    }
  } else {
    return function mergedInstanceDataFn () {
      // instance merge
      var instanceData = typeof childVal === 'function'
        ? childVal.call(vm, vm)
        : childVal;
      var defaultData = typeof parentVal === 'function'
        ? parentVal.call(vm, vm)
        : parentVal;
      if (instanceData) {
        return mergeData(instanceData, defaultData)
      } else {
        return defaultData
      }
    }
  }
}

strats.data = function (
  parentVal,
  childVal,
  vm
) {
  if (!vm) {
    if (childVal && typeof childVal !== 'function') {
       true && warn(
        'The "data" option should be a function ' +
        'that returns a per-instance value in component ' +
        'definitions.',
        vm
      );

      return parentVal
    }
    return mergeDataOrFn(parentVal, childVal)
  }

  return mergeDataOrFn(parentVal, childVal, vm)
};

/**
 * Hooks and props are merged as arrays.
 */
function mergeHook (
  parentVal,
  childVal
) {
  var res = childVal
    ? parentVal
      ? parentVal.concat(childVal)
      : Array.isArray(childVal)
        ? childVal
        : [childVal]
    : parentVal;
  return res
    ? dedupeHooks(res)
    : res
}

function dedupeHooks (hooks) {
  var res = [];
  for (var i = 0; i < hooks.length; i++) {
    if (res.indexOf(hooks[i]) === -1) {
      res.push(hooks[i]);
    }
  }
  return res
}

LIFECYCLE_HOOKS.forEach(function (hook) {
  strats[hook] = mergeHook;
});

/**
 * Assets
 *
 * When a vm is present (instance creation), we need to do
 * a three-way merge between constructor options, instance
 * options and parent options.
 */
function mergeAssets (
  parentVal,
  childVal,
  vm,
  key
) {
  var res = Object.create(parentVal || null);
  if (childVal) {
     true && assertObjectType(key, childVal, vm);
    return extend(res, childVal)
  } else {
    return res
  }
}

ASSET_TYPES.forEach(function (type) {
  strats[type + 's'] = mergeAssets;
});

/**
 * Watchers.
 *
 * Watchers hashes should not overwrite one
 * another, so we merge them as arrays.
 */
strats.watch = function (
  parentVal,
  childVal,
  vm,
  key
) {
  // work around Firefox's Object.prototype.watch...
  if (parentVal === nativeWatch) { parentVal = undefined; }
  if (childVal === nativeWatch) { childVal = undefined; }
  /* istanbul ignore if */
  if (!childVal) { return Object.create(parentVal || null) }
  if (true) {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = {};
  extend(ret, parentVal);
  for (var key$1 in childVal) {
    var parent = ret[key$1];
    var child = childVal[key$1];
    if (parent && !Array.isArray(parent)) {
      parent = [parent];
    }
    ret[key$1] = parent
      ? parent.concat(child)
      : Array.isArray(child) ? child : [child];
  }
  return ret
};

/**
 * Other object hashes.
 */
strats.props =
strats.methods =
strats.inject =
strats.computed = function (
  parentVal,
  childVal,
  vm,
  key
) {
  if (childVal && "development" !== 'production') {
    assertObjectType(key, childVal, vm);
  }
  if (!parentVal) { return childVal }
  var ret = Object.create(null);
  extend(ret, parentVal);
  if (childVal) { extend(ret, childVal); }
  return ret
};
strats.provide = mergeDataOrFn;

/**
 * Default strategy.
 */
var defaultStrat = function (parentVal, childVal) {
  return childVal === undefined
    ? parentVal
    : childVal
};

/**
 * Validate component names
 */
function checkComponents (options) {
  for (var key in options.components) {
    validateComponentName(key);
  }
}

function validateComponentName (name) {
  if (!new RegExp(("^[a-zA-Z][\\-\\.0-9_" + (unicodeRegExp.source) + "]*$")).test(name)) {
    warn(
      'Invalid component name: "' + name + '". Component names ' +
      'should conform to valid custom element name in html5 specification.'
    );
  }
  if (isBuiltInTag(name) || config.isReservedTag(name)) {
    warn(
      'Do not use built-in or reserved HTML elements as component ' +
      'id: ' + name
    );
  }
}

/**
 * Ensure all props option syntax are normalized into the
 * Object-based format.
 */
function normalizeProps (options, vm) {
  var props = options.props;
  if (!props) { return }
  var res = {};
  var i, val, name;
  if (Array.isArray(props)) {
    i = props.length;
    while (i--) {
      val = props[i];
      if (typeof val === 'string') {
        name = camelize(val);
        res[name] = { type: null };
      } else if (true) {
        warn('props must be strings when using array syntax.');
      }
    }
  } else if (isPlainObject(props)) {
    for (var key in props) {
      val = props[key];
      name = camelize(key);
      res[name] = isPlainObject(val)
        ? val
        : { type: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"props\": expected an Array or an Object, " +
      "but got " + (toRawType(props)) + ".",
      vm
    );
  }
  options.props = res;
}

/**
 * Normalize all injections into Object-based format
 */
function normalizeInject (options, vm) {
  var inject = options.inject;
  if (!inject) { return }
  var normalized = options.inject = {};
  if (Array.isArray(inject)) {
    for (var i = 0; i < inject.length; i++) {
      normalized[inject[i]] = { from: inject[i] };
    }
  } else if (isPlainObject(inject)) {
    for (var key in inject) {
      var val = inject[key];
      normalized[key] = isPlainObject(val)
        ? extend({ from: key }, val)
        : { from: val };
    }
  } else if (true) {
    warn(
      "Invalid value for option \"inject\": expected an Array or an Object, " +
      "but got " + (toRawType(inject)) + ".",
      vm
    );
  }
}

/**
 * Normalize raw function directives into object format.
 */
function normalizeDirectives (options) {
  var dirs = options.directives;
  if (dirs) {
    for (var key in dirs) {
      var def$$1 = dirs[key];
      if (typeof def$$1 === 'function') {
        dirs[key] = { bind: def$$1, update: def$$1 };
      }
    }
  }
}

function assertObjectType (name, value, vm) {
  if (!isPlainObject(value)) {
    warn(
      "Invalid value for option \"" + name + "\": expected an Object, " +
      "but got " + (toRawType(value)) + ".",
      vm
    );
  }
}

/**
 * Merge two option objects into a new one.
 * Core utility used in both instantiation and inheritance.
 */
function mergeOptions (
  parent,
  child,
  vm
) {
  if (true) {
    checkComponents(child);
  }

  if (typeof child === 'function') {
    child = child.options;
  }

  normalizeProps(child, vm);
  normalizeInject(child, vm);
  normalizeDirectives(child);

  // Apply extends and mixins on the child options,
  // but only if it is a raw options object that isn't
  // the result of another mergeOptions call.
  // Only merged options has the _base property.
  if (!child._base) {
    if (child.extends) {
      parent = mergeOptions(parent, child.extends, vm);
    }
    if (child.mixins) {
      for (var i = 0, l = child.mixins.length; i < l; i++) {
        parent = mergeOptions(parent, child.mixins[i], vm);
      }
    }
  }

  var options = {};
  var key;
  for (key in parent) {
    mergeField(key);
  }
  for (key in child) {
    if (!hasOwn(parent, key)) {
      mergeField(key);
    }
  }
  function mergeField (key) {
    var strat = strats[key] || defaultStrat;
    options[key] = strat(parent[key], child[key], vm, key);
  }
  return options
}

/**
 * Resolve an asset.
 * This function is used because child instances need access
 * to assets defined in its ancestor chain.
 */
function resolveAsset (
  options,
  type,
  id,
  warnMissing
) {
  /* istanbul ignore if */
  if (typeof id !== 'string') {
    return
  }
  var assets = options[type];
  // check local registration variations first
  if (hasOwn(assets, id)) { return assets[id] }
  var camelizedId = camelize(id);
  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }
  var PascalCaseId = capitalize(camelizedId);
  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }
  // fallback to prototype chain
  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
  if ( true && warnMissing && !res) {
    warn(
      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
      options
    );
  }
  return res
}

/*  */



function validateProp (
  key,
  propOptions,
  propsData,
  vm
) {
  var prop = propOptions[key];
  var absent = !hasOwn(propsData, key);
  var value = propsData[key];
  // boolean casting
  var booleanIndex = getTypeIndex(Boolean, prop.type);
  if (booleanIndex > -1) {
    if (absent && !hasOwn(prop, 'default')) {
      value = false;
    } else if (value === '' || value === hyphenate(key)) {
      // only cast empty string / same name to boolean if
      // boolean has higher priority
      var stringIndex = getTypeIndex(String, prop.type);
      if (stringIndex < 0 || booleanIndex < stringIndex) {
        value = true;
      }
    }
  }
  // check default value
  if (value === undefined) {
    value = getPropDefaultValue(vm, prop, key);
    // since the default value is a fresh copy,
    // make sure to observe it.
    var prevShouldObserve = shouldObserve;
    toggleObserving(true);
    observe(value);
    toggleObserving(prevShouldObserve);
  }
  if (
    true
  ) {
    assertProp(prop, key, value, vm, absent);
  }
  return value
}

/**
 * Get the default value of a prop.
 */
function getPropDefaultValue (vm, prop, key) {
  // no default, return undefined
  if (!hasOwn(prop, 'default')) {
    return undefined
  }
  var def = prop.default;
  // warn against non-factory defaults for Object & Array
  if ( true && isObject(def)) {
    warn(
      'Invalid default value for prop "' + key + '": ' +
      'Props with type Object/Array must use a factory function ' +
      'to return the default value.',
      vm
    );
  }
  // the raw prop value was also undefined from previous render,
  // return previous default value to avoid unnecessary watcher trigger
  if (vm && vm.$options.propsData &&
    vm.$options.propsData[key] === undefined &&
    vm._props[key] !== undefined
  ) {
    return vm._props[key]
  }
  // call factory function for non-Function types
  // a value is Function if its prototype is function even across different execution context
  return typeof def === 'function' && getType(prop.type) !== 'Function'
    ? def.call(vm)
    : def
}

/**
 * Assert whether a prop is valid.
 */
function assertProp (
  prop,
  name,
  value,
  vm,
  absent
) {
  if (prop.required && absent) {
    warn(
      'Missing required prop: "' + name + '"',
      vm
    );
    return
  }
  if (value == null && !prop.required) {
    return
  }
  var type = prop.type;
  var valid = !type || type === true;
  var expectedTypes = [];
  if (type) {
    if (!Array.isArray(type)) {
      type = [type];
    }
    for (var i = 0; i < type.length && !valid; i++) {
      var assertedType = assertType(value, type[i]);
      expectedTypes.push(assertedType.expectedType || '');
      valid = assertedType.valid;
    }
  }

  if (!valid) {
    warn(
      getInvalidTypeMessage(name, value, expectedTypes),
      vm
    );
    return
  }
  var validator = prop.validator;
  if (validator) {
    if (!validator(value)) {
      warn(
        'Invalid prop: custom validator check failed for prop "' + name + '".',
        vm
      );
    }
  }
}

var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

function assertType (value, type) {
  var valid;
  var expectedType = getType(type);
  if (simpleCheckRE.test(expectedType)) {
    var t = typeof value;
    valid = t === expectedType.toLowerCase();
    // for primitive wrapper objects
    if (!valid && t === 'object') {
      valid = value instanceof type;
    }
  } else if (expectedType === 'Object') {
    valid = isPlainObject(value);
  } else if (expectedType === 'Array') {
    valid = Array.isArray(value);
  } else {
    valid = value instanceof type;
  }
  return {
    valid: valid,
    expectedType: expectedType
  }
}

/**
 * Use function string name to check built-in types,
 * because a simple equality check will fail when running
 * across different vms / iframes.
 */
function getType (fn) {
  var match = fn && fn.toString().match(/^\s*function (\w+)/);
  return match ? match[1] : ''
}

function isSameType (a, b) {
  return getType(a) === getType(b)
}

function getTypeIndex (type, expectedTypes) {
  if (!Array.isArray(expectedTypes)) {
    return isSameType(expectedTypes, type) ? 0 : -1
  }
  for (var i = 0, len = expectedTypes.length; i < len; i++) {
    if (isSameType(expectedTypes[i], type)) {
      return i
    }
  }
  return -1
}

function getInvalidTypeMessage (name, value, expectedTypes) {
  var message = "Invalid prop: type check failed for prop \"" + name + "\"." +
    " Expected " + (expectedTypes.map(capitalize).join(', '));
  var expectedType = expectedTypes[0];
  var receivedType = toRawType(value);
  var expectedValue = styleValue(value, expectedType);
  var receivedValue = styleValue(value, receivedType);
  // check if we need to specify expected value
  if (expectedTypes.length === 1 &&
      isExplicable(expectedType) &&
      !isBoolean(expectedType, receivedType)) {
    message += " with value " + expectedValue;
  }
  message += ", got " + receivedType + " ";
  // check if we need to specify received value
  if (isExplicable(receivedType)) {
    message += "with value " + receivedValue + ".";
  }
  return message
}

function styleValue (value, type) {
  if (type === 'String') {
    return ("\"" + value + "\"")
  } else if (type === 'Number') {
    return ("" + (Number(value)))
  } else {
    return ("" + value)
  }
}

function isExplicable (value) {
  var explicitTypes = ['string', 'number', 'boolean'];
  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })
}

function isBoolean () {
  var args = [], len = arguments.length;
  while ( len-- ) args[ len ] = arguments[ len ];

  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })
}

/*  */

function handleError (err, vm, info) {
  // Deactivate deps tracking while processing error handler to avoid possible infinite rendering.
  // See: https://github.com/vuejs/vuex/issues/1505
  pushTarget();
  try {
    if (vm) {
      var cur = vm;
      while ((cur = cur.$parent)) {
        var hooks = cur.$options.errorCaptured;
        if (hooks) {
          for (var i = 0; i < hooks.length; i++) {
            try {
              var capture = hooks[i].call(cur, err, vm, info) === false;
              if (capture) { return }
            } catch (e) {
              globalHandleError(e, cur, 'errorCaptured hook');
            }
          }
        }
      }
    }
    globalHandleError(err, vm, info);
  } finally {
    popTarget();
  }
}

function invokeWithErrorHandling (
  handler,
  context,
  args,
  vm,
  info
) {
  var res;
  try {
    res = args ? handler.apply(context, args) : handler.call(context);
    if (res && !res._isVue && isPromise(res) && !res._handled) {
      res.catch(function (e) { return handleError(e, vm, info + " (Promise/async)"); });
      // issue #9511
      // avoid catch triggering multiple times when nested calls
      res._handled = true;
    }
  } catch (e) {
    handleError(e, vm, info);
  }
  return res
}

function globalHandleError (err, vm, info) {
  if (config.errorHandler) {
    try {
      return config.errorHandler.call(null, err, vm, info)
    } catch (e) {
      // if the user intentionally throws the original error in the handler,
      // do not log it twice
      if (e !== err) {
        logError(e, null, 'config.errorHandler');
      }
    }
  }
  logError(err, vm, info);
}

function logError (err, vm, info) {
  if (true) {
    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
  }
  /* istanbul ignore else */
  if ((inBrowser || inWeex) && typeof console !== 'undefined') {
    console.error(err);
  } else {
    throw err
  }
}

/*  */

var callbacks = [];
var pending = false;

function flushCallbacks () {
  pending = false;
  var copies = callbacks.slice(0);
  callbacks.length = 0;
  for (var i = 0; i < copies.length; i++) {
    copies[i]();
  }
}

// Here we have async deferring wrappers using microtasks.
// In 2.5 we used (macro) tasks (in combination with microtasks).
// However, it has subtle problems when state is changed right before repaint
// (e.g. #6813, out-in transitions).
// Also, using (macro) tasks in event handler would cause some weird behaviors
// that cannot be circumvented (e.g. #7109, #7153, #7546, #7834, #8109).
// So we now use microtasks everywhere, again.
// A major drawback of this tradeoff is that there are some scenarios
// where microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690, which have workarounds)
// or even between bubbling of the same event (#6566).
var timerFunc;

// The nextTick behavior leverages the microtask queue, which can be accessed
// via either native Promise.then or MutationObserver.
// MutationObserver has wider support, however it is seriously bugged in
// UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It
// completely stops working after triggering a few times... so, if native
// Promise is available, we will use it:
/* istanbul ignore next, $flow-disable-line */
if (typeof Promise !== 'undefined' && isNative(Promise)) {
  var p = Promise.resolve();
  timerFunc = function () {
    p.then(flushCallbacks);
    // In problematic UIWebViews, Promise.then doesn't completely break, but
    // it can get stuck in a weird state where callbacks are pushed into the
    // microtask queue but the queue isn't being flushed, until the browser
    // needs to do some other work, e.g. handle a timer. Therefore we can
    // "force" the microtask queue to be flushed by adding an empty timer.
    if (isIOS) { setTimeout(noop); }
  };
} else if (!isIE && typeof MutationObserver !== 'undefined' && (
  isNative(MutationObserver) ||
  // PhantomJS and iOS 7.x
  MutationObserver.toString() === '[object MutationObserverConstructor]'
)) {
  // Use MutationObserver where native Promise is not available,
  // e.g. PhantomJS, iOS7, Android 4.4
  // (#6466 MutationObserver is unreliable in IE11)
  var counter = 1;
  var observer = new MutationObserver(flushCallbacks);
  var textNode = document.createTextNode(String(counter));
  observer.observe(textNode, {
    characterData: true
  });
  timerFunc = function () {
    counter = (counter + 1) % 2;
    textNode.data = String(counter);
  };
} else if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
  // Fallback to setImmediate.
  // Technically it leverages the (macro) task queue,
  // but it is still a better choice than setTimeout.
  timerFunc = function () {
    setImmediate(flushCallbacks);
  };
} else {
  // Fallback to setTimeout.
  timerFunc = function () {
    setTimeout(flushCallbacks, 0);
  };
}

function nextTick (cb, ctx) {
  var _resolve;
  callbacks.push(function () {
    if (cb) {
      try {
        cb.call(ctx);
      } catch (e) {
        handleError(e, ctx, 'nextTick');
      }
    } else if (_resolve) {
      _resolve(ctx);
    }
  });
  if (!pending) {
    pending = true;
    timerFunc();
  }
  // $flow-disable-line
  if (!cb && typeof Promise !== 'undefined') {
    return new Promise(function (resolve) {
      _resolve = resolve;
    })
  }
}

/*  */

/* not type checking this file because flow doesn't play well with Proxy */

var initProxy;

if (true) {
  var allowedGlobals = makeMap(
    'Infinity,undefined,NaN,isFinite,isNaN,' +
    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
    'require' // for Webpack/Browserify
  );

  var warnNonPresent = function (target, key) {
    warn(
      "Property or method \"" + key + "\" is not defined on the instance but " +
      'referenced during render. Make sure that this property is reactive, ' +
      'either in the data option, or for class-based components, by ' +
      'initializing the property. ' +
      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
      target
    );
  };

  var warnReservedPrefix = function (target, key) {
    warn(
      "Property \"" + key + "\" must be accessed with \"$data." + key + "\" because " +
      'properties starting with "$" or "_" are not proxied in the Vue instance to ' +
      'prevent conflicts with Vue internals. ' +
      'See: https://vuejs.org/v2/api/#data',
      target
    );
  };

  var hasProxy =
    typeof Proxy !== 'undefined' && isNative(Proxy);

  if (hasProxy) {
    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
    config.keyCodes = new Proxy(config.keyCodes, {
      set: function set (target, key, value) {
        if (isBuiltInModifier(key)) {
          warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
          return false
        } else {
          target[key] = value;
          return true
        }
      }
    });
  }

  var hasHandler = {
    has: function has (target, key) {
      var has = key in target;
      var isAllowed = allowedGlobals(key) ||
        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));
      if (!has && !isAllowed) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return has || !isAllowed
    }
  };

  var getHandler = {
    get: function get (target, key) {
      if (typeof key === 'string' && !(key in target)) {
        if (key in target.$data) { warnReservedPrefix(target, key); }
        else { warnNonPresent(target, key); }
      }
      return target[key]
    }
  };

  initProxy = function initProxy (vm) {
    if (hasProxy) {
      // determine which proxy handler to use
      var options = vm.$options;
      var handlers = options.render && options.render._withStripped
        ? getHandler
        : hasHandler;
      vm._renderProxy = new Proxy(vm, handlers);
    } else {
      vm._renderProxy = vm;
    }
  };
}

/*  */

var seenObjects = new _Set();

/**
 * Recursively traverse an object to evoke all converted
 * getters, so that every nested property inside the object
 * is collected as a "deep" dependency.
 */
function traverse (val) {
  _traverse(val, seenObjects);
  seenObjects.clear();
}

function _traverse (val, seen) {
  var i, keys;
  var isA = Array.isArray(val);
  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
    return
  }
  if (val.__ob__) {
    var depId = val.__ob__.dep.id;
    if (seen.has(depId)) {
      return
    }
    seen.add(depId);
  }
  if (isA) {
    i = val.length;
    while (i--) { _traverse(val[i], seen); }
  } else {
    keys = Object.keys(val);
    i = keys.length;
    while (i--) { _traverse(val[keys[i]], seen); }
  }
}

var mark;
var measure;

if (true) {
  var perf = inBrowser && window.performance;
  /* istanbul ignore if */
  if (
    perf &&
    perf.mark &&
    perf.measure &&
    perf.clearMarks &&
    perf.clearMeasures
  ) {
    mark = function (tag) { return perf.mark(tag); };
    measure = function (name, startTag, endTag) {
      perf.measure(name, startTag, endTag);
      perf.clearMarks(startTag);
      perf.clearMarks(endTag);
      // perf.clearMeasures(name)
    };
  }
}

/*  */

var normalizeEvent = cached(function (name) {
  var passive = name.charAt(0) === '&';
  name = passive ? name.slice(1) : name;
  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
  name = once$$1 ? name.slice(1) : name;
  var capture = name.charAt(0) === '!';
  name = capture ? name.slice(1) : name;
  return {
    name: name,
    once: once$$1,
    capture: capture,
    passive: passive
  }
});

function createFnInvoker (fns, vm) {
  function invoker () {
    var arguments$1 = arguments;

    var fns = invoker.fns;
    if (Array.isArray(fns)) {
      var cloned = fns.slice();
      for (var i = 0; i < cloned.length; i++) {
        invokeWithErrorHandling(cloned[i], null, arguments$1, vm, "v-on handler");
      }
    } else {
      // return handler return value for single handlers
      return invokeWithErrorHandling(fns, null, arguments, vm, "v-on handler")
    }
  }
  invoker.fns = fns;
  return invoker
}

function updateListeners (
  on,
  oldOn,
  add,
  remove$$1,
  createOnceHandler,
  vm
) {
  var name, def$$1, cur, old, event;
  for (name in on) {
    def$$1 = cur = on[name];
    old = oldOn[name];
    event = normalizeEvent(name);
    if (isUndef(cur)) {
       true && warn(
        "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
        vm
      );
    } else if (isUndef(old)) {
      if (isUndef(cur.fns)) {
        cur = on[name] = createFnInvoker(cur, vm);
      }
      if (isTrue(event.once)) {
        cur = on[name] = createOnceHandler(event.name, cur, event.capture);
      }
      add(event.name, cur, event.capture, event.passive, event.params);
    } else if (cur !== old) {
      old.fns = cur;
      on[name] = old;
    }
  }
  for (name in oldOn) {
    if (isUndef(on[name])) {
      event = normalizeEvent(name);
      remove$$1(event.name, oldOn[name], event.capture);
    }
  }
}

/*  */

/*  */

// fixed by xxxxxx (mp properties)
function extractPropertiesFromVNodeData(data, Ctor, res, context) {
  var propOptions = Ctor.options.mpOptions && Ctor.options.mpOptions.properties;
  if (isUndef(propOptions)) {
    return res
  }
  var externalClasses = Ctor.options.mpOptions.externalClasses || [];
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      var result = checkProp(res, props, key, altKey, true) ||
          checkProp(res, attrs, key, altKey, false);
      // externalClass
      if (
        result &&
        res[key] &&
        externalClasses.indexOf(altKey) !== -1 &&
        context[camelize(res[key])]
      ) {
        // 赋值 externalClass 真正的值(模板里 externalClass 的值可能是字符串)
        res[key] = context[camelize(res[key])];
      }
    }
  }
  return res
}

function extractPropsFromVNodeData (
  data,
  Ctor,
  tag,
  context// fixed by xxxxxx
) {
  // we are only extracting raw values here.
  // validation and default values are handled in the child
  // component itself.
  var propOptions = Ctor.options.props;
  if (isUndef(propOptions)) {
    // fixed by xxxxxx
    return extractPropertiesFromVNodeData(data, Ctor, {}, context)
  }
  var res = {};
  var attrs = data.attrs;
  var props = data.props;
  if (isDef(attrs) || isDef(props)) {
    for (var key in propOptions) {
      var altKey = hyphenate(key);
      if (true) {
        var keyInLowerCase = key.toLowerCase();
        if (
          key !== keyInLowerCase &&
          attrs && hasOwn(attrs, keyInLowerCase)
        ) {
          tip(
            "Prop \"" + keyInLowerCase + "\" is passed to component " +
            (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
            " \"" + key + "\". " +
            "Note that HTML attributes are case-insensitive and camelCased " +
            "props need to use their kebab-case equivalents when using in-DOM " +
            "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
          );
        }
      }
      checkProp(res, props, key, altKey, true) ||
      checkProp(res, attrs, key, altKey, false);
    }
  }
  // fixed by xxxxxx
  return extractPropertiesFromVNodeData(data, Ctor, res, context)
}

function checkProp (
  res,
  hash,
  key,
  altKey,
  preserve
) {
  if (isDef(hash)) {
    if (hasOwn(hash, key)) {
      res[key] = hash[key];
      if (!preserve) {
        delete hash[key];
      }
      return true
    } else if (hasOwn(hash, altKey)) {
      res[key] = hash[altKey];
      if (!preserve) {
        delete hash[altKey];
      }
      return true
    }
  }
  return false
}

/*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
function simpleNormalizeChildren (children) {
  for (var i = 0; i < children.length; i++) {
    if (Array.isArray(children[i])) {
      return Array.prototype.concat.apply([], children)
    }
  }
  return children
}

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
function normalizeChildren (children) {
  return isPrimitive(children)
    ? [createTextVNode(children)]
    : Array.isArray(children)
      ? normalizeArrayChildren(children)
      : undefined
}

function isTextNode (node) {
  return isDef(node) && isDef(node.text) && isFalse(node.isComment)
}

function normalizeArrayChildren (children, nestedIndex) {
  var res = [];
  var i, c, lastIndex, last;
  for (i = 0; i < children.length; i++) {
    c = children[i];
    if (isUndef(c) || typeof c === 'boolean') { continue }
    lastIndex = res.length - 1;
    last = res[lastIndex];
    //  nested
    if (Array.isArray(c)) {
      if (c.length > 0) {
        c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
        // merge adjacent text nodes
        if (isTextNode(c[0]) && isTextNode(last)) {
          res[lastIndex] = createTextVNode(last.text + (c[0]).text);
          c.shift();
        }
        res.push.apply(res, c);
      }
    } else if (isPrimitive(c)) {
      if (isTextNode(last)) {
        // merge adjacent text nodes
        // this is necessary for SSR hydration because text nodes are
        // essentially merged when rendered to HTML strings
        res[lastIndex] = createTextVNode(last.text + c);
      } else if (c !== '') {
        // convert primitive to vnode
        res.push(createTextVNode(c));
      }
    } else {
      if (isTextNode(c) && isTextNode(last)) {
        // merge adjacent text nodes
        res[lastIndex] = createTextVNode(last.text + c.text);
      } else {
        // default key for nested array children (likely generated by v-for)
        if (isTrue(children._isVList) &&
          isDef(c.tag) &&
          isUndef(c.key) &&
          isDef(nestedIndex)) {
          c.key = "__vlist" + nestedIndex + "_" + i + "__";
        }
        res.push(c);
      }
    }
  }
  return res
}

/*  */

function initProvide (vm) {
  var provide = vm.$options.provide;
  if (provide) {
    vm._provided = typeof provide === 'function'
      ? provide.call(vm)
      : provide;
  }
}

function initInjections (vm) {
  var result = resolveInject(vm.$options.inject, vm);
  if (result) {
    toggleObserving(false);
    Object.keys(result).forEach(function (key) {
      /* istanbul ignore else */
      if (true) {
        defineReactive$$1(vm, key, result[key], function () {
          warn(
            "Avoid mutating an injected value directly since the changes will be " +
            "overwritten whenever the provided component re-renders. " +
            "injection being mutated: \"" + key + "\"",
            vm
          );
        });
      } else {}
    });
    toggleObserving(true);
  }
}

function resolveInject (inject, vm) {
  if (inject) {
    // inject is :any because flow is not smart enough to figure out cached
    var result = Object.create(null);
    var keys = hasSymbol
      ? Reflect.ownKeys(inject)
      : Object.keys(inject);

    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      // #6574 in case the inject object is observed...
      if (key === '__ob__') { continue }
      var provideKey = inject[key].from;
      var source = vm;
      while (source) {
        if (source._provided && hasOwn(source._provided, provideKey)) {
          result[key] = source._provided[provideKey];
          break
        }
        source = source.$parent;
      }
      if (!source) {
        if ('default' in inject[key]) {
          var provideDefault = inject[key].default;
          result[key] = typeof provideDefault === 'function'
            ? provideDefault.call(vm)
            : provideDefault;
        } else if (true) {
          warn(("Injection \"" + key + "\" not found"), vm);
        }
      }
    }
    return result
  }
}

/*  */



/**
 * Runtime helper for resolving raw children VNodes into a slot object.
 */
function resolveSlots (
  children,
  context
) {
  if (!children || !children.length) {
    return {}
  }
  var slots = {};
  for (var i = 0, l = children.length; i < l; i++) {
    var child = children[i];
    var data = child.data;
    // remove slot attribute if the node is resolved as a Vue slot node
    if (data && data.attrs && data.attrs.slot) {
      delete data.attrs.slot;
    }
    // named slots should only be respected if the vnode was rendered in the
    // same context.
    if ((child.context === context || child.fnContext === context) &&
      data && data.slot != null
    ) {
      var name = data.slot;
      var slot = (slots[name] || (slots[name] = []));
      if (child.tag === 'template') {
        slot.push.apply(slot, child.children || []);
      } else {
        slot.push(child);
      }
    } else {
      // fixed by xxxxxx 临时 hack 掉 uni-app 中的异步 name slot page
      if(child.asyncMeta && child.asyncMeta.data && child.asyncMeta.data.slot === 'page'){
        (slots['page'] || (slots['page'] = [])).push(child);
      }else{
        (slots.default || (slots.default = [])).push(child);
      }
    }
  }
  // ignore slots that contains only whitespace
  for (var name$1 in slots) {
    if (slots[name$1].every(isWhitespace)) {
      delete slots[name$1];
    }
  }
  return slots
}

function isWhitespace (node) {
  return (node.isComment && !node.asyncFactory) || node.text === ' '
}

/*  */

function normalizeScopedSlots (
  slots,
  normalSlots,
  prevSlots
) {
  var res;
  var hasNormalSlots = Object.keys(normalSlots).length > 0;
  var isStable = slots ? !!slots.$stable : !hasNormalSlots;
  var key = slots && slots.$key;
  if (!slots) {
    res = {};
  } else if (slots._normalized) {
    // fast path 1: child component re-render only, parent did not change
    return slots._normalized
  } else if (
    isStable &&
    prevSlots &&
    prevSlots !== emptyObject &&
    key === prevSlots.$key &&
    !hasNormalSlots &&
    !prevSlots.$hasNormal
  ) {
    // fast path 2: stable scoped slots w/ no normal slots to proxy,
    // only need to normalize once
    return prevSlots
  } else {
    res = {};
    for (var key$1 in slots) {
      if (slots[key$1] && key$1[0] !== '$') {
        res[key$1] = normalizeScopedSlot(normalSlots, key$1, slots[key$1]);
      }
    }
  }
  // expose normal slots on scopedSlots
  for (var key$2 in normalSlots) {
    if (!(key$2 in res)) {
      res[key$2] = proxyNormalSlot(normalSlots, key$2);
    }
  }
  // avoriaz seems to mock a non-extensible $scopedSlots object
  // and when that is passed down this would cause an error
  if (slots && Object.isExtensible(slots)) {
    (slots)._normalized = res;
  }
  def(res, '$stable', isStable);
  def(res, '$key', key);
  def(res, '$hasNormal', hasNormalSlots);
  return res
}

function normalizeScopedSlot(normalSlots, key, fn) {
  var normalized = function () {
    var res = arguments.length ? fn.apply(null, arguments) : fn({});
    res = res && typeof res === 'object' && !Array.isArray(res)
      ? [res] // single vnode
      : normalizeChildren(res);
    return res && (
      res.length === 0 ||
      (res.length === 1 && res[0].isComment) // #9658
    ) ? undefined
      : res
  };
  // this is a slot using the new v-slot syntax without scope. although it is
  // compiled as a scoped slot, render fn users would expect it to be present
  // on this.$slots because the usage is semantically a normal slot.
  if (fn.proxy) {
    Object.defineProperty(normalSlots, key, {
      get: normalized,
      enumerable: true,
      configurable: true
    });
  }
  return normalized
}

function proxyNormalSlot(slots, key) {
  return function () { return slots[key]; }
}

/*  */

/**
 * Runtime helper for rendering v-for lists.
 */
function renderList (
  val,
  render
) {
  var ret, i, l, keys, key;
  if (Array.isArray(val) || typeof val === 'string') {
    ret = new Array(val.length);
    for (i = 0, l = val.length; i < l; i++) {
      ret[i] = render(val[i], i, i, i); // fixed by xxxxxx
    }
  } else if (typeof val === 'number') {
    ret = new Array(val);
    for (i = 0; i < val; i++) {
      ret[i] = render(i + 1, i, i, i); // fixed by xxxxxx
    }
  } else if (isObject(val)) {
    if (hasSymbol && val[Symbol.iterator]) {
      ret = [];
      var iterator = val[Symbol.iterator]();
      var result = iterator.next();
      while (!result.done) {
        ret.push(render(result.value, ret.length, i, i++)); // fixed by xxxxxx
        result = iterator.next();
      }
    } else {
      keys = Object.keys(val);
      ret = new Array(keys.length);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[i] = render(val[key], key, i, i); // fixed by xxxxxx
      }
    }
  }
  if (!isDef(ret)) {
    ret = [];
  }
  (ret)._isVList = true;
  return ret
}

/*  */

/**
 * Runtime helper for rendering <slot>
 */
function renderSlot (
  name,
  fallback,
  props,
  bindObject
) {
  var scopedSlotFn = this.$scopedSlots[name];
  var nodes;
  if (scopedSlotFn) { // scoped slot
    props = props || {};
    if (bindObject) {
      if ( true && !isObject(bindObject)) {
        warn(
          'slot v-bind without argument expects an Object',
          this
        );
      }
      props = extend(extend({}, bindObject), props);
    }
    // fixed by xxxxxx app-plus scopedSlot
    nodes = scopedSlotFn(props, this, props._i) || fallback;
  } else {
    nodes = this.$slots[name] || fallback;
  }

  var target = props && props.slot;
  if (target) {
    return this.$createElement('template', { slot: target }, nodes)
  } else {
    return nodes
  }
}

/*  */

/**
 * Runtime helper for resolving filters
 */
function resolveFilter (id) {
  return resolveAsset(this.$options, 'filters', id, true) || identity
}

/*  */

function isKeyNotMatch (expect, actual) {
  if (Array.isArray(expect)) {
    return expect.indexOf(actual) === -1
  } else {
    return expect !== actual
  }
}

/**
 * Runtime helper for checking keyCodes from config.
 * exposed as Vue.prototype._k
 * passing in eventKeyName as last argument separately for backwards compat
 */
function checkKeyCodes (
  eventKeyCode,
  key,
  builtInKeyCode,
  eventKeyName,
  builtInKeyName
) {
  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
    return isKeyNotMatch(builtInKeyName, eventKeyName)
  } else if (mappedKeyCode) {
    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
  } else if (eventKeyName) {
    return hyphenate(eventKeyName) !== key
  }
}

/*  */

/**
 * Runtime helper for merging v-bind="object" into a VNode's data.
 */
function bindObjectProps (
  data,
  tag,
  value,
  asProp,
  isSync
) {
  if (value) {
    if (!isObject(value)) {
       true && warn(
        'v-bind without argument expects an Object or Array value',
        this
      );
    } else {
      if (Array.isArray(value)) {
        value = toObject(value);
      }
      var hash;
      var loop = function ( key ) {
        if (
          key === 'class' ||
          key === 'style' ||
          isReservedAttribute(key)
        ) {
          hash = data;
        } else {
          var type = data.attrs && data.attrs.type;
          hash = asProp || config.mustUseProp(tag, type, key)
            ? data.domProps || (data.domProps = {})
            : data.attrs || (data.attrs = {});
        }
        var camelizedKey = camelize(key);
        var hyphenatedKey = hyphenate(key);
        if (!(camelizedKey in hash) && !(hyphenatedKey in hash)) {
          hash[key] = value[key];

          if (isSync) {
            var on = data.on || (data.on = {});
            on[("update:" + key)] = function ($event) {
              value[key] = $event;
            };
          }
        }
      };

      for (var key in value) loop( key );
    }
  }
  return data
}

/*  */

/**
 * Runtime helper for rendering static trees.
 */
function renderStatic (
  index,
  isInFor
) {
  var cached = this._staticTrees || (this._staticTrees = []);
  var tree = cached[index];
  // if has already-rendered static tree and not inside v-for,
  // we can reuse the same tree.
  if (tree && !isInFor) {
    return tree
  }
  // otherwise, render a fresh tree.
  tree = cached[index] = this.$options.staticRenderFns[index].call(
    this._renderProxy,
    null,
    this // for render fns generated for functional component templates
  );
  markStatic(tree, ("__static__" + index), false);
  return tree
}

/**
 * Runtime helper for v-once.
 * Effectively it means marking the node as static with a unique key.
 */
function markOnce (
  tree,
  index,
  key
) {
  markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
  return tree
}

function markStatic (
  tree,
  key,
  isOnce
) {
  if (Array.isArray(tree)) {
    for (var i = 0; i < tree.length; i++) {
      if (tree[i] && typeof tree[i] !== 'string') {
        markStaticNode(tree[i], (key + "_" + i), isOnce);
      }
    }
  } else {
    markStaticNode(tree, key, isOnce);
  }
}

function markStaticNode (node, key, isOnce) {
  node.isStatic = true;
  node.key = key;
  node.isOnce = isOnce;
}

/*  */

function bindObjectListeners (data, value) {
  if (value) {
    if (!isPlainObject(value)) {
       true && warn(
        'v-on without argument expects an Object value',
        this
      );
    } else {
      var on = data.on = data.on ? extend({}, data.on) : {};
      for (var key in value) {
        var existing = on[key];
        var ours = value[key];
        on[key] = existing ? [].concat(existing, ours) : ours;
      }
    }
  }
  return data
}

/*  */

function resolveScopedSlots (
  fns, // see flow/vnode
  res,
  // the following are added in 2.6
  hasDynamicKeys,
  contentHashKey
) {
  res = res || { $stable: !hasDynamicKeys };
  for (var i = 0; i < fns.length; i++) {
    var slot = fns[i];
    if (Array.isArray(slot)) {
      resolveScopedSlots(slot, res, hasDynamicKeys);
    } else if (slot) {
      // marker for reverse proxying v-slot without scope on this.$slots
      if (slot.proxy) {
        slot.fn.proxy = true;
      }
      res[slot.key] = slot.fn;
    }
  }
  if (contentHashKey) {
    (res).$key = contentHashKey;
  }
  return res
}

/*  */

function bindDynamicKeys (baseObj, values) {
  for (var i = 0; i < values.length; i += 2) {
    var key = values[i];
    if (typeof key === 'string' && key) {
      baseObj[values[i]] = values[i + 1];
    } else if ( true && key !== '' && key !== null) {
      // null is a special value for explicitly removing a binding
      warn(
        ("Invalid value for dynamic directive argument (expected string or null): " + key),
        this
      );
    }
  }
  return baseObj
}

// helper to dynamically append modifier runtime markers to event names.
// ensure only append when value is already string, otherwise it will be cast
// to string and cause the type check to miss.
function prependModifier (value, symbol) {
  return typeof value === 'string' ? symbol + value : value
}

/*  */

function installRenderHelpers (target) {
  target._o = markOnce;
  target._n = toNumber;
  target._s = toString;
  target._l = renderList;
  target._t = renderSlot;
  target._q = looseEqual;
  target._i = looseIndexOf;
  target._m = renderStatic;
  target._f = resolveFilter;
  target._k = checkKeyCodes;
  target._b = bindObjectProps;
  target._v = createTextVNode;
  target._e = createEmptyVNode;
  target._u = resolveScopedSlots;
  target._g = bindObjectListeners;
  target._d = bindDynamicKeys;
  target._p = prependModifier;
}

/*  */

function FunctionalRenderContext (
  data,
  props,
  children,
  parent,
  Ctor
) {
  var this$1 = this;

  var options = Ctor.options;
  // ensure the createElement function in functional components
  // gets a unique context - this is necessary for correct named slot check
  var contextVm;
  if (hasOwn(parent, '_uid')) {
    contextVm = Object.create(parent);
    // $flow-disable-line
    contextVm._original = parent;
  } else {
    // the context vm passed in is a functional context as well.
    // in this case we want to make sure we are able to get a hold to the
    // real context instance.
    contextVm = parent;
    // $flow-disable-line
    parent = parent._original;
  }
  var isCompiled = isTrue(options._compiled);
  var needNormalization = !isCompiled;

  this.data = data;
  this.props = props;
  this.children = children;
  this.parent = parent;
  this.listeners = data.on || emptyObject;
  this.injections = resolveInject(options.inject, parent);
  this.slots = function () {
    if (!this$1.$slots) {
      normalizeScopedSlots(
        data.scopedSlots,
        this$1.$slots = resolveSlots(children, parent)
      );
    }
    return this$1.$slots
  };

  Object.defineProperty(this, 'scopedSlots', ({
    enumerable: true,
    get: function get () {
      return normalizeScopedSlots(data.scopedSlots, this.slots())
    }
  }));

  // support for compiled functional template
  if (isCompiled) {
    // exposing $options for renderStatic()
    this.$options = options;
    // pre-resolve slots for renderSlot()
    this.$slots = this.slots();
    this.$scopedSlots = normalizeScopedSlots(data.scopedSlots, this.$slots);
  }

  if (options._scopeId) {
    this._c = function (a, b, c, d) {
      var vnode = createElement(contextVm, a, b, c, d, needNormalization);
      if (vnode && !Array.isArray(vnode)) {
        vnode.fnScopeId = options._scopeId;
        vnode.fnContext = parent;
      }
      return vnode
    };
  } else {
    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };
  }
}

installRenderHelpers(FunctionalRenderContext.prototype);

function createFunctionalComponent (
  Ctor,
  propsData,
  data,
  contextVm,
  children
) {
  var options = Ctor.options;
  var props = {};
  var propOptions = options.props;
  if (isDef(propOptions)) {
    for (var key in propOptions) {
      props[key] = validateProp(key, propOptions, propsData || emptyObject);
    }
  } else {
    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }
    if (isDef(data.props)) { mergeProps(props, data.props); }
  }

  var renderContext = new FunctionalRenderContext(
    data,
    props,
    children,
    contextVm,
    Ctor
  );

  var vnode = options.render.call(null, renderContext._c, renderContext);

  if (vnode instanceof VNode) {
    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)
  } else if (Array.isArray(vnode)) {
    var vnodes = normalizeChildren(vnode) || [];
    var res = new Array(vnodes.length);
    for (var i = 0; i < vnodes.length; i++) {
      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);
    }
    return res
  }
}

function cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {
  // #7817 clone node before setting fnContext, otherwise if the node is reused
  // (e.g. it was from a cached normal slot) the fnContext causes named slots
  // that should not be matched to match.
  var clone = cloneVNode(vnode);
  clone.fnContext = contextVm;
  clone.fnOptions = options;
  if (true) {
    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;
  }
  if (data.slot) {
    (clone.data || (clone.data = {})).slot = data.slot;
  }
  return clone
}

function mergeProps (to, from) {
  for (var key in from) {
    to[camelize(key)] = from[key];
  }
}

/*  */

/*  */

/*  */

/*  */

// inline hooks to be invoked on component VNodes during patch
var componentVNodeHooks = {
  init: function init (vnode, hydrating) {
    if (
      vnode.componentInstance &&
      !vnode.componentInstance._isDestroyed &&
      vnode.data.keepAlive
    ) {
      // kept-alive components, treat as a patch
      var mountedNode = vnode; // work around flow
      componentVNodeHooks.prepatch(mountedNode, mountedNode);
    } else {
      var child = vnode.componentInstance = createComponentInstanceForVnode(
        vnode,
        activeInstance
      );
      child.$mount(hydrating ? vnode.elm : undefined, hydrating);
    }
  },

  prepatch: function prepatch (oldVnode, vnode) {
    var options = vnode.componentOptions;
    var child = vnode.componentInstance = oldVnode.componentInstance;
    updateChildComponent(
      child,
      options.propsData, // updated props
      options.listeners, // updated listeners
      vnode, // new parent vnode
      options.children // new children
    );
  },

  insert: function insert (vnode) {
    var context = vnode.context;
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isMounted) {
      callHook(componentInstance, 'onServiceCreated');
      callHook(componentInstance, 'onServiceAttached');
      componentInstance._isMounted = true;
      callHook(componentInstance, 'mounted');
    }
    if (vnode.data.keepAlive) {
      if (context._isMounted) {
        // vue-router#1212
        // During updates, a kept-alive component's child components may
        // change, so directly walking the tree here may call activated hooks
        // on incorrect children. Instead we push them into a queue which will
        // be processed after the whole patch process ended.
        queueActivatedComponent(componentInstance);
      } else {
        activateChildComponent(componentInstance, true /* direct */);
      }
    }
  },

  destroy: function destroy (vnode) {
    var componentInstance = vnode.componentInstance;
    if (!componentInstance._isDestroyed) {
      if (!vnode.data.keepAlive) {
        componentInstance.$destroy();
      } else {
        deactivateChildComponent(componentInstance, true /* direct */);
      }
    }
  }
};

var hooksToMerge = Object.keys(componentVNodeHooks);

function createComponent (
  Ctor,
  data,
  context,
  children,
  tag
) {
  if (isUndef(Ctor)) {
    return
  }

  var baseCtor = context.$options._base;

  // plain options object: turn it into a constructor
  if (isObject(Ctor)) {
    Ctor = baseCtor.extend(Ctor);
  }

  // if at this stage it's not a constructor or an async component factory,
  // reject.
  if (typeof Ctor !== 'function') {
    if (true) {
      warn(("Invalid Component definition: " + (String(Ctor))), context);
    }
    return
  }

  // async component
  var asyncFactory;
  if (isUndef(Ctor.cid)) {
    asyncFactory = Ctor;
    Ctor = resolveAsyncComponent(asyncFactory, baseCtor);
    if (Ctor === undefined) {
      // return a placeholder node for async component, which is rendered
      // as a comment node but preserves all the raw information for the node.
      // the information will be used for async server-rendering and hydration.
      return createAsyncPlaceholder(
        asyncFactory,
        data,
        context,
        children,
        tag
      )
    }
  }

  data = data || {};

  // resolve constructor options in case global mixins are applied after
  // component constructor creation
  resolveConstructorOptions(Ctor);

  // transform component v-model data into props & events
  if (isDef(data.model)) {
    transformModel(Ctor.options, data);
  }

  // extract props
  var propsData = extractPropsFromVNodeData(data, Ctor, tag, context); // fixed by xxxxxx

  // functional component
  if (isTrue(Ctor.options.functional)) {
    return createFunctionalComponent(Ctor, propsData, data, context, children)
  }

  // extract listeners, since these needs to be treated as
  // child component listeners instead of DOM listeners
  var listeners = data.on;
  // replace with listeners with .native modifier
  // so it gets processed during parent component patch.
  data.on = data.nativeOn;

  if (isTrue(Ctor.options.abstract)) {
    // abstract components do not keep anything
    // other than props & listeners & slot

    // work around flow
    var slot = data.slot;
    data = {};
    if (slot) {
      data.slot = slot;
    }
  }

  // install component management hooks onto the placeholder node
  installComponentHooks(data);

  // return a placeholder vnode
  var name = Ctor.options.name || tag;
  var vnode = new VNode(
    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
    data, undefined, undefined, undefined, context,
    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },
    asyncFactory
  );

  return vnode
}

function createComponentInstanceForVnode (
  vnode, // we know it's MountedComponentVNode but flow doesn't
  parent // activeInstance in lifecycle state
) {
  var options = {
    _isComponent: true,
    _parentVnode: vnode,
    parent: parent
  };
  // check inline-template render functions
  var inlineTemplate = vnode.data.inlineTemplate;
  if (isDef(inlineTemplate)) {
    options.render = inlineTemplate.render;
    options.staticRenderFns = inlineTemplate.staticRenderFns;
  }
  return new vnode.componentOptions.Ctor(options)
}

function installComponentHooks (data) {
  var hooks = data.hook || (data.hook = {});
  for (var i = 0; i < hooksToMerge.length; i++) {
    var key = hooksToMerge[i];
    var existing = hooks[key];
    var toMerge = componentVNodeHooks[key];
    if (existing !== toMerge && !(existing && existing._merged)) {
      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;
    }
  }
}

function mergeHook$1 (f1, f2) {
  var merged = function (a, b) {
    // flow complains about extra args which is why we use any
    f1(a, b);
    f2(a, b);
  };
  merged._merged = true;
  return merged
}

// transform component v-model info (value and callback) into
// prop and event handler respectively.
function transformModel (options, data) {
  var prop = (options.model && options.model.prop) || 'value';
  var event = (options.model && options.model.event) || 'input'
  ;(data.attrs || (data.attrs = {}))[prop] = data.model.value;
  var on = data.on || (data.on = {});
  var existing = on[event];
  var callback = data.model.callback;
  if (isDef(existing)) {
    if (
      Array.isArray(existing)
        ? existing.indexOf(callback) === -1
        : existing !== callback
    ) {
      on[event] = [callback].concat(existing);
    }
  } else {
    on[event] = callback;
  }
}

/*  */

var SIMPLE_NORMALIZE = 1;
var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
function createElement (
  context,
  tag,
  data,
  children,
  normalizationType,
  alwaysNormalize
) {
  if (Array.isArray(data) || isPrimitive(data)) {
    normalizationType = children;
    children = data;
    data = undefined;
  }
  if (isTrue(alwaysNormalize)) {
    normalizationType = ALWAYS_NORMALIZE;
  }
  return _createElement(context, tag, data, children, normalizationType)
}

function _createElement (
  context,
  tag,
  data,
  children,
  normalizationType
) {
  if (isDef(data) && isDef((data).__ob__)) {
     true && warn(
      "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
      'Always create fresh vnode data objects in each render!',
      context
    );
    return createEmptyVNode()
  }
  // object syntax in v-bind
  if (isDef(data) && isDef(data.is)) {
    tag = data.is;
  }
  if (!tag) {
    // in case of component :is set to falsy value
    return createEmptyVNode()
  }
  // warn against non-primitive key
  if ( true &&
    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
  ) {
    {
      warn(
        'Avoid using non-primitive value as key, ' +
        'use string/number value instead.',
        context
      );
    }
  }
  // support single function children as default scoped slot
  if (Array.isArray(children) &&
    typeof children[0] === 'function'
  ) {
    data = data || {};
    data.scopedSlots = { default: children[0] };
    children.length = 0;
  }
  if (normalizationType === ALWAYS_NORMALIZE) {
    children = normalizeChildren(children);
  } else if (normalizationType === SIMPLE_NORMALIZE) {
    children = simpleNormalizeChildren(children);
  }
  var vnode, ns;
  if (typeof tag === 'string') {
    var Ctor;
    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
    if (config.isReservedTag(tag)) {
      // platform built-in elements
      if ( true && isDef(data) && isDef(data.nativeOn)) {
        warn(
          ("The .native modifier for v-on is only valid on components but it was used on <" + tag + ">."),
          context
        );
      }
      vnode = new VNode(
        config.parsePlatformTagName(tag), data, children,
        undefined, undefined, context
      );
    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
      // component
      vnode = createComponent(Ctor, data, context, children, tag);
    } else {
      // unknown or unlisted namespaced elements
      // check at runtime because it may get assigned a namespace when its
      // parent normalizes children
      vnode = new VNode(
        tag, data, children,
        undefined, undefined, context
      );
    }
  } else {
    // direct component options / constructor
    vnode = createComponent(tag, data, context, children);
  }
  if (Array.isArray(vnode)) {
    return vnode
  } else if (isDef(vnode)) {
    if (isDef(ns)) { applyNS(vnode, ns); }
    if (isDef(data)) { registerDeepBindings(data); }
    return vnode
  } else {
    return createEmptyVNode()
  }
}

function applyNS (vnode, ns, force) {
  vnode.ns = ns;
  if (vnode.tag === 'foreignObject') {
    // use default namespace inside foreignObject
    ns = undefined;
    force = true;
  }
  if (isDef(vnode.children)) {
    for (var i = 0, l = vnode.children.length; i < l; i++) {
      var child = vnode.children[i];
      if (isDef(child.tag) && (
        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
        applyNS(child, ns, force);
      }
    }
  }
}

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
function registerDeepBindings (data) {
  if (isObject(data.style)) {
    traverse(data.style);
  }
  if (isObject(data.class)) {
    traverse(data.class);
  }
}

/*  */

function initRender (vm) {
  vm._vnode = null; // the root of the child tree
  vm._staticTrees = null; // v-once cached trees
  var options = vm.$options;
  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
  var renderContext = parentVnode && parentVnode.context;
  vm.$slots = resolveSlots(options._renderChildren, renderContext);
  vm.$scopedSlots = emptyObject;
  // bind the createElement fn to this instance
  // so that we get proper render context inside it.
  // args order: tag, data, children, normalizationType, alwaysNormalize
  // internal version is used by render functions compiled from templates
  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };
  // normalization is always applied for the public version, used in
  // user-written render functions.
  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };

  // $attrs & $listeners are exposed for easier HOC creation.
  // they need to be reactive so that HOCs using them are always updated
  var parentData = parentVnode && parentVnode.data;

  /* istanbul ignore else */
  if (true) {
    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
      !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
    }, true);
    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {
      !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
    }, true);
  } else {}
}

var currentRenderingInstance = null;

function renderMixin (Vue) {
  // install runtime convenience helpers
  installRenderHelpers(Vue.prototype);

  Vue.prototype.$nextTick = function (fn) {
    return nextTick(fn, this)
  };

  Vue.prototype._render = function () {
    var vm = this;
    var ref = vm.$options;
    var render = ref.render;
    var _parentVnode = ref._parentVnode;

    if (_parentVnode) {
      vm.$scopedSlots = normalizeScopedSlots(
        _parentVnode.data.scopedSlots,
        vm.$slots,
        vm.$scopedSlots
      );
    }

    // set parent vnode. this allows render functions to have access
    // to the data on the placeholder node.
    vm.$vnode = _parentVnode;
    // render self
    var vnode;
    try {
      // There's no need to maintain a stack because all render fns are called
      // separately from one another. Nested component's render fns are called
      // when parent component is patched.
      currentRenderingInstance = vm;
      vnode = render.call(vm._renderProxy, vm.$createElement);
    } catch (e) {
      handleError(e, vm, "render");
      // return error render result,
      // or previous vnode to prevent render error causing blank component
      /* istanbul ignore else */
      if ( true && vm.$options.renderError) {
        try {
          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
        } catch (e) {
          handleError(e, vm, "renderError");
          vnode = vm._vnode;
        }
      } else {
        vnode = vm._vnode;
      }
    } finally {
      currentRenderingInstance = null;
    }
    // if the returned array contains only a single node, allow it
    if (Array.isArray(vnode) && vnode.length === 1) {
      vnode = vnode[0];
    }
    // return empty vnode in case the render function errored out
    if (!(vnode instanceof VNode)) {
      if ( true && Array.isArray(vnode)) {
        warn(
          'Multiple root nodes returned from render function. Render function ' +
          'should return a single root node.',
          vm
        );
      }
      vnode = createEmptyVNode();
    }
    // set parent
    vnode.parent = _parentVnode;
    return vnode
  };
}

/*  */

function ensureCtor (comp, base) {
  if (
    comp.__esModule ||
    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
  ) {
    comp = comp.default;
  }
  return isObject(comp)
    ? base.extend(comp)
    : comp
}

function createAsyncPlaceholder (
  factory,
  data,
  context,
  children,
  tag
) {
  var node = createEmptyVNode();
  node.asyncFactory = factory;
  node.asyncMeta = { data: data, context: context, children: children, tag: tag };
  return node
}

function resolveAsyncComponent (
  factory,
  baseCtor
) {
  if (isTrue(factory.error) && isDef(factory.errorComp)) {
    return factory.errorComp
  }

  if (isDef(factory.resolved)) {
    return factory.resolved
  }

  var owner = currentRenderingInstance;
  if (owner && isDef(factory.owners) && factory.owners.indexOf(owner) === -1) {
    // already pending
    factory.owners.push(owner);
  }

  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
    return factory.loadingComp
  }

  if (owner && !isDef(factory.owners)) {
    var owners = factory.owners = [owner];
    var sync = true;
    var timerLoading = null;
    var timerTimeout = null

    ;(owner).$on('hook:destroyed', function () { return remove(owners, owner); });

    var forceRender = function (renderCompleted) {
      for (var i = 0, l = owners.length; i < l; i++) {
        (owners[i]).$forceUpdate();
      }

      if (renderCompleted) {
        owners.length = 0;
        if (timerLoading !== null) {
          clearTimeout(timerLoading);
          timerLoading = null;
        }
        if (timerTimeout !== null) {
          clearTimeout(timerTimeout);
          timerTimeout = null;
        }
      }
    };

    var resolve = once(function (res) {
      // cache resolved
      factory.resolved = ensureCtor(res, baseCtor);
      // invoke callbacks only if this is not a synchronous resolve
      // (async resolves are shimmed as synchronous during SSR)
      if (!sync) {
        forceRender(true);
      } else {
        owners.length = 0;
      }
    });

    var reject = once(function (reason) {
       true && warn(
        "Failed to resolve async component: " + (String(factory)) +
        (reason ? ("\nReason: " + reason) : '')
      );
      if (isDef(factory.errorComp)) {
        factory.error = true;
        forceRender(true);
      }
    });

    var res = factory(resolve, reject);

    if (isObject(res)) {
      if (isPromise(res)) {
        // () => Promise
        if (isUndef(factory.resolved)) {
          res.then(resolve, reject);
        }
      } else if (isPromise(res.component)) {
        res.component.then(resolve, reject);

        if (isDef(res.error)) {
          factory.errorComp = ensureCtor(res.error, baseCtor);
        }

        if (isDef(res.loading)) {
          factory.loadingComp = ensureCtor(res.loading, baseCtor);
          if (res.delay === 0) {
            factory.loading = true;
          } else {
            timerLoading = setTimeout(function () {
              timerLoading = null;
              if (isUndef(factory.resolved) && isUndef(factory.error)) {
                factory.loading = true;
                forceRender(false);
              }
            }, res.delay || 200);
          }
        }

        if (isDef(res.timeout)) {
          timerTimeout = setTimeout(function () {
            timerTimeout = null;
            if (isUndef(factory.resolved)) {
              reject(
                 true
                  ? ("timeout (" + (res.timeout) + "ms)")
                  : undefined
              );
            }
          }, res.timeout);
        }
      }
    }

    sync = false;
    // return in case resolved synchronously
    return factory.loading
      ? factory.loadingComp
      : factory.resolved
  }
}

/*  */

function isAsyncPlaceholder (node) {
  return node.isComment && node.asyncFactory
}

/*  */

function getFirstComponentChild (children) {
  if (Array.isArray(children)) {
    for (var i = 0; i < children.length; i++) {
      var c = children[i];
      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
        return c
      }
    }
  }
}

/*  */

/*  */

function initEvents (vm) {
  vm._events = Object.create(null);
  vm._hasHookEvent = false;
  // init parent attached events
  var listeners = vm.$options._parentListeners;
  if (listeners) {
    updateComponentListeners(vm, listeners);
  }
}

var target;

function add (event, fn) {
  target.$on(event, fn);
}

function remove$1 (event, fn) {
  target.$off(event, fn);
}

function createOnceHandler (event, fn) {
  var _target = target;
  return function onceHandler () {
    var res = fn.apply(null, arguments);
    if (res !== null) {
      _target.$off(event, onceHandler);
    }
  }
}

function updateComponentListeners (
  vm,
  listeners,
  oldListeners
) {
  target = vm;
  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);
  target = undefined;
}

function eventsMixin (Vue) {
  var hookRE = /^hook:/;
  Vue.prototype.$on = function (event, fn) {
    var vm = this;
    if (Array.isArray(event)) {
      for (var i = 0, l = event.length; i < l; i++) {
        vm.$on(event[i], fn);
      }
    } else {
      (vm._events[event] || (vm._events[event] = [])).push(fn);
      // optimize hook:event cost by using a boolean flag marked at registration
      // instead of a hash lookup
      if (hookRE.test(event)) {
        vm._hasHookEvent = true;
      }
    }
    return vm
  };

  Vue.prototype.$once = function (event, fn) {
    var vm = this;
    function on () {
      vm.$off(event, on);
      fn.apply(vm, arguments);
    }
    on.fn = fn;
    vm.$on(event, on);
    return vm
  };

  Vue.prototype.$off = function (event, fn) {
    var vm = this;
    // all
    if (!arguments.length) {
      vm._events = Object.create(null);
      return vm
    }
    // array of events
    if (Array.isArray(event)) {
      for (var i$1 = 0, l = event.length; i$1 < l; i$1++) {
        vm.$off(event[i$1], fn);
      }
      return vm
    }
    // specific event
    var cbs = vm._events[event];
    if (!cbs) {
      return vm
    }
    if (!fn) {
      vm._events[event] = null;
      return vm
    }
    // specific handler
    var cb;
    var i = cbs.length;
    while (i--) {
      cb = cbs[i];
      if (cb === fn || cb.fn === fn) {
        cbs.splice(i, 1);
        break
      }
    }
    return vm
  };

  Vue.prototype.$emit = function (event) {
    var vm = this;
    if (true) {
      var lowerCaseEvent = event.toLowerCase();
      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
        tip(
          "Event \"" + lowerCaseEvent + "\" is emitted in component " +
          (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
          "Note that HTML attributes are case-insensitive and you cannot use " +
          "v-on to listen to camelCase events when using in-DOM templates. " +
          "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
        );
      }
    }
    var cbs = vm._events[event];
    if (cbs) {
      cbs = cbs.length > 1 ? toArray(cbs) : cbs;
      var args = toArray(arguments, 1);
      var info = "event handler for \"" + event + "\"";
      for (var i = 0, l = cbs.length; i < l; i++) {
        invokeWithErrorHandling(cbs[i], vm, args, vm, info);
      }
    }
    return vm
  };
}

/*  */

var activeInstance = null;
var isUpdatingChildComponent = false;

function setActiveInstance(vm) {
  var prevActiveInstance = activeInstance;
  activeInstance = vm;
  return function () {
    activeInstance = prevActiveInstance;
  }
}

function initLifecycle (vm) {
  var options = vm.$options;

  // locate first non-abstract parent
  var parent = options.parent;
  if (parent && !options.abstract) {
    while (parent.$options.abstract && parent.$parent) {
      parent = parent.$parent;
    }
    parent.$children.push(vm);
  }

  vm.$parent = parent;
  vm.$root = parent ? parent.$root : vm;

  vm.$children = [];
  vm.$refs = {};

  vm._watcher = null;
  vm._inactive = null;
  vm._directInactive = false;
  vm._isMounted = false;
  vm._isDestroyed = false;
  vm._isBeingDestroyed = false;
}

function lifecycleMixin (Vue) {
  Vue.prototype._update = function (vnode, hydrating) {
    var vm = this;
    var prevEl = vm.$el;
    var prevVnode = vm._vnode;
    var restoreActiveInstance = setActiveInstance(vm);
    vm._vnode = vnode;
    // Vue.prototype.__patch__ is injected in entry points
    // based on the rendering backend used.
    if (!prevVnode) {
      // initial render
      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);
    } else {
      // updates
      vm.$el = vm.__patch__(prevVnode, vnode);
    }
    restoreActiveInstance();
    // update __vue__ reference
    if (prevEl) {
      prevEl.__vue__ = null;
    }
    if (vm.$el) {
      vm.$el.__vue__ = vm;
    }
    // if parent is an HOC, update its $el as well
    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
      vm.$parent.$el = vm.$el;
    }
    // updated hook is called by the scheduler to ensure that children are
    // updated in a parent's updated hook.
  };

  Vue.prototype.$forceUpdate = function () {
    var vm = this;
    if (vm._watcher) {
      vm._watcher.update();
    }
  };

  Vue.prototype.$destroy = function () {
    var vm = this;
    if (vm._isBeingDestroyed) {
      return
    }
    callHook(vm, 'beforeDestroy');
    vm._isBeingDestroyed = true;
    // remove self from parent
    var parent = vm.$parent;
    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
      remove(parent.$children, vm);
    }
    // teardown watchers
    if (vm._watcher) {
      vm._watcher.teardown();
    }
    var i = vm._watchers.length;
    while (i--) {
      vm._watchers[i].teardown();
    }
    // remove reference from data ob
    // frozen object may not have observer.
    if (vm._data.__ob__) {
      vm._data.__ob__.vmCount--;
    }
    // call the last hook...
    vm._isDestroyed = true;
    // invoke destroy hooks on current rendered tree
    vm.__patch__(vm._vnode, null);
    // fire destroyed hook
    callHook(vm, 'destroyed');
    // turn off all instance listeners.
    vm.$off();
    // remove __vue__ reference
    if (vm.$el) {
      vm.$el.__vue__ = null;
    }
    // release circular reference (#6759)
    if (vm.$vnode) {
      vm.$vnode.parent = null;
    }
  };
}

function updateChildComponent (
  vm,
  propsData,
  listeners,
  parentVnode,
  renderChildren
) {
  if (true) {
    isUpdatingChildComponent = true;
  }

  // determine whether component has slot children
  // we need to do this before overwriting $options._renderChildren.

  // check if there are dynamic scopedSlots (hand-written or compiled but with
  // dynamic slot names). Static scoped slots compiled from template has the
  // "$stable" marker.
  var newScopedSlots = parentVnode.data.scopedSlots;
  var oldScopedSlots = vm.$scopedSlots;
  var hasDynamicScopedSlot = !!(
    (newScopedSlots && !newScopedSlots.$stable) ||
    (oldScopedSlots !== emptyObject && !oldScopedSlots.$stable) ||
    (newScopedSlots && vm.$scopedSlots.$key !== newScopedSlots.$key)
  );

  // Any static slot children from the parent may have changed during parent's
  // update. Dynamic scoped slots may also have changed. In such cases, a forced
  // update is necessary to ensure correctness.
  var needsForceUpdate = !!(
    renderChildren ||               // has new static slots
    vm.$options._renderChildren ||  // has old static slots
    hasDynamicScopedSlot
  );

  vm.$options._parentVnode = parentVnode;
  vm.$vnode = parentVnode; // update vm's placeholder node without re-render

  if (vm._vnode) { // update child tree's parent
    vm._vnode.parent = parentVnode;
  }
  vm.$options._renderChildren = renderChildren;

  // update $attrs and $listeners hash
  // these are also reactive so they may trigger child update if the child
  // used them during render
  vm.$attrs = parentVnode.data.attrs || emptyObject;
  vm.$listeners = listeners || emptyObject;

  // update props
  if (propsData && vm.$options.props) {
    toggleObserving(false);
    var props = vm._props;
    var propKeys = vm.$options._propKeys || [];
    for (var i = 0; i < propKeys.length; i++) {
      var key = propKeys[i];
      var propOptions = vm.$options.props; // wtf flow?
      props[key] = validateProp(key, propOptions, propsData, vm);
    }
    toggleObserving(true);
    // keep a copy of raw propsData
    vm.$options.propsData = propsData;
  }
  
  // fixed by xxxxxx update properties(mp runtime)
  vm._$updateProperties && vm._$updateProperties(vm);
  
  // update listeners
  listeners = listeners || emptyObject;
  var oldListeners = vm.$options._parentListeners;
  vm.$options._parentListeners = listeners;
  updateComponentListeners(vm, listeners, oldListeners);

  // resolve slots + force update if has children
  if (needsForceUpdate) {
    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
    vm.$forceUpdate();
  }

  if (true) {
    isUpdatingChildComponent = false;
  }
}

function isInInactiveTree (vm) {
  while (vm && (vm = vm.$parent)) {
    if (vm._inactive) { return true }
  }
  return false
}

function activateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = false;
    if (isInInactiveTree(vm)) {
      return
    }
  } else if (vm._directInactive) {
    return
  }
  if (vm._inactive || vm._inactive === null) {
    vm._inactive = false;
    for (var i = 0; i < vm.$children.length; i++) {
      activateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'activated');
  }
}

function deactivateChildComponent (vm, direct) {
  if (direct) {
    vm._directInactive = true;
    if (isInInactiveTree(vm)) {
      return
    }
  }
  if (!vm._inactive) {
    vm._inactive = true;
    for (var i = 0; i < vm.$children.length; i++) {
      deactivateChildComponent(vm.$children[i]);
    }
    callHook(vm, 'deactivated');
  }
}

function callHook (vm, hook) {
  // #7573 disable dep collection when invoking lifecycle hooks
  pushTarget();
  var handlers = vm.$options[hook];
  var info = hook + " hook";
  if (handlers) {
    for (var i = 0, j = handlers.length; i < j; i++) {
      invokeWithErrorHandling(handlers[i], vm, null, vm, info);
    }
  }
  if (vm._hasHookEvent) {
    vm.$emit('hook:' + hook);
  }
  popTarget();
}

/*  */

var MAX_UPDATE_COUNT = 100;

var queue = [];
var activatedChildren = [];
var has = {};
var circular = {};
var waiting = false;
var flushing = false;
var index = 0;

/**
 * Reset the scheduler's state.
 */
function resetSchedulerState () {
  index = queue.length = activatedChildren.length = 0;
  has = {};
  if (true) {
    circular = {};
  }
  waiting = flushing = false;
}

// Async edge case #6566 requires saving the timestamp when event listeners are
// attached. However, calling performance.now() has a perf overhead especially
// if the page has thousands of event listeners. Instead, we take a timestamp
// every time the scheduler flushes and use that for all event listeners
// attached during that flush.
var currentFlushTimestamp = 0;

// Async edge case fix requires storing an event listener's attach timestamp.
var getNow = Date.now;

// Determine what event timestamp the browser is using. Annoyingly, the
// timestamp can either be hi-res (relative to page load) or low-res
// (relative to UNIX epoch), so in order to compare time we have to use the
// same timestamp type when saving the flush timestamp.
// All IE versions use low-res event timestamps, and have problematic clock
// implementations (#9632)
if (inBrowser && !isIE) {
  var performance = window.performance;
  if (
    performance &&
    typeof performance.now === 'function' &&
    getNow() > document.createEvent('Event').timeStamp
  ) {
    // if the event timestamp, although evaluated AFTER the Date.now(), is
    // smaller than it, it means the event is using a hi-res timestamp,
    // and we need to use the hi-res version for event listener timestamps as
    // well.
    getNow = function () { return performance.now(); };
  }
}

/**
 * Flush both queues and run the watchers.
 */
function flushSchedulerQueue () {
  currentFlushTimestamp = getNow();
  flushing = true;
  var watcher, id;

  // Sort queue before flush.
  // This ensures that:
  // 1. Components are updated from parent to child. (because parent is always
  //    created before the child)
  // 2. A component's user watchers are run before its render watcher (because
  //    user watchers are created before the render watcher)
  // 3. If a component is destroyed during a parent component's watcher run,
  //    its watchers can be skipped.
  queue.sort(function (a, b) { return a.id - b.id; });

  // do not cache length because more watchers might be pushed
  // as we run existing watchers
  for (index = 0; index < queue.length; index++) {
    watcher = queue[index];
    if (watcher.before) {
      watcher.before();
    }
    id = watcher.id;
    has[id] = null;
    watcher.run();
    // in dev build, check and stop circular updates.
    if ( true && has[id] != null) {
      circular[id] = (circular[id] || 0) + 1;
      if (circular[id] > MAX_UPDATE_COUNT) {
        warn(
          'You may have an infinite update loop ' + (
            watcher.user
              ? ("in watcher with expression \"" + (watcher.expression) + "\"")
              : "in a component render function."
          ),
          watcher.vm
        );
        break
      }
    }
  }

  // keep copies of post queues before resetting state
  var activatedQueue = activatedChildren.slice();
  var updatedQueue = queue.slice();

  resetSchedulerState();

  // call component updated and activated hooks
  callActivatedHooks(activatedQueue);
  callUpdatedHooks(updatedQueue);

  // devtool hook
  /* istanbul ignore if */
  if (devtools && config.devtools) {
    devtools.emit('flush');
  }
}

function callUpdatedHooks (queue) {
  var i = queue.length;
  while (i--) {
    var watcher = queue[i];
    var vm = watcher.vm;
    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {
      callHook(vm, 'updated');
    }
  }
}

/**
 * Queue a kept-alive component that was activated during patch.
 * The queue will be processed after the entire tree has been patched.
 */
function queueActivatedComponent (vm) {
  // setting _inactive to false here so that a render function can
  // rely on checking whether it's in an inactive tree (e.g. router-view)
  vm._inactive = false;
  activatedChildren.push(vm);
}

function callActivatedHooks (queue) {
  for (var i = 0; i < queue.length; i++) {
    queue[i]._inactive = true;
    activateChildComponent(queue[i], true /* true */);
  }
}

/**
 * Push a watcher into the watcher queue.
 * Jobs with duplicate IDs will be skipped unless it's
 * pushed when the queue is being flushed.
 */
function queueWatcher (watcher) {
  var id = watcher.id;
  if (has[id] == null) {
    has[id] = true;
    if (!flushing) {
      queue.push(watcher);
    } else {
      // if already flushing, splice the watcher based on its id
      // if already past its id, it will be run next immediately.
      var i = queue.length - 1;
      while (i > index && queue[i].id > watcher.id) {
        i--;
      }
      queue.splice(i + 1, 0, watcher);
    }
    // queue the flush
    if (!waiting) {
      waiting = true;

      if ( true && !config.async) {
        flushSchedulerQueue();
        return
      }
      nextTick(flushSchedulerQueue);
    }
  }
}

/*  */



var uid$2 = 0;

/**
 * A watcher parses an expression, collects dependencies,
 * and fires callback when the expression value changes.
 * This is used for both the $watch() api and directives.
 */
var Watcher = function Watcher (
  vm,
  expOrFn,
  cb,
  options,
  isRenderWatcher
) {
  this.vm = vm;
  if (isRenderWatcher) {
    vm._watcher = this;
  }
  vm._watchers.push(this);
  // options
  if (options) {
    this.deep = !!options.deep;
    this.user = !!options.user;
    this.lazy = !!options.lazy;
    this.sync = !!options.sync;
    this.before = options.before;
  } else {
    this.deep = this.user = this.lazy = this.sync = false;
  }
  this.cb = cb;
  this.id = ++uid$2; // uid for batching
  this.active = true;
  this.dirty = this.lazy; // for lazy watchers
  this.deps = [];
  this.newDeps = [];
  this.depIds = new _Set();
  this.newDepIds = new _Set();
  this.expression =  true
    ? expOrFn.toString()
    : undefined;
  // parse expression for getter
  if (typeof expOrFn === 'function') {
    this.getter = expOrFn;
  } else {
    this.getter = parsePath(expOrFn);
    if (!this.getter) {
      this.getter = noop;
       true && warn(
        "Failed watching path: \"" + expOrFn + "\" " +
        'Watcher only accepts simple dot-delimited paths. ' +
        'For full control, use a function instead.',
        vm
      );
    }
  }
  this.value = this.lazy
    ? undefined
    : this.get();
};

/**
 * Evaluate the getter, and re-collect dependencies.
 */
Watcher.prototype.get = function get () {
  pushTarget(this);
  var value;
  var vm = this.vm;
  try {
    value = this.getter.call(vm, vm);
  } catch (e) {
    if (this.user) {
      handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
    } else {
      throw e
    }
  } finally {
    // "touch" every property so they are all tracked as
    // dependencies for deep watching
    if (this.deep) {
      traverse(value);
    }
    popTarget();
    this.cleanupDeps();
  }
  return value
};

/**
 * Add a dependency to this directive.
 */
Watcher.prototype.addDep = function addDep (dep) {
  var id = dep.id;
  if (!this.newDepIds.has(id)) {
    this.newDepIds.add(id);
    this.newDeps.push(dep);
    if (!this.depIds.has(id)) {
      dep.addSub(this);
    }
  }
};

/**
 * Clean up for dependency collection.
 */
Watcher.prototype.cleanupDeps = function cleanupDeps () {
  var i = this.deps.length;
  while (i--) {
    var dep = this.deps[i];
    if (!this.newDepIds.has(dep.id)) {
      dep.removeSub(this);
    }
  }
  var tmp = this.depIds;
  this.depIds = this.newDepIds;
  this.newDepIds = tmp;
  this.newDepIds.clear();
  tmp = this.deps;
  this.deps = this.newDeps;
  this.newDeps = tmp;
  this.newDeps.length = 0;
};

/**
 * Subscriber interface.
 * Will be called when a dependency changes.
 */
Watcher.prototype.update = function update () {
  /* istanbul ignore else */
  if (this.lazy) {
    this.dirty = true;
  } else if (this.sync) {
    this.run();
  } else {
    queueWatcher(this);
  }
};

/**
 * Scheduler job interface.
 * Will be called by the scheduler.
 */
Watcher.prototype.run = function run () {
  if (this.active) {
    var value = this.get();
    if (
      value !== this.value ||
      // Deep watchers and watchers on Object/Arrays should fire even
      // when the value is the same, because the value may
      // have mutated.
      isObject(value) ||
      this.deep
    ) {
      // set new value
      var oldValue = this.value;
      this.value = value;
      if (this.user) {
        try {
          this.cb.call(this.vm, value, oldValue);
        } catch (e) {
          handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
        }
      } else {
        this.cb.call(this.vm, value, oldValue);
      }
    }
  }
};

/**
 * Evaluate the value of the watcher.
 * This only gets called for lazy watchers.
 */
Watcher.prototype.evaluate = function evaluate () {
  this.value = this.get();
  this.dirty = false;
};

/**
 * Depend on all deps collected by this watcher.
 */
Watcher.prototype.depend = function depend () {
  var i = this.deps.length;
  while (i--) {
    this.deps[i].depend();
  }
};

/**
 * Remove self from all dependencies' subscriber list.
 */
Watcher.prototype.teardown = function teardown () {
  if (this.active) {
    // remove self from vm's watcher list
    // this is a somewhat expensive operation so we skip it
    // if the vm is being destroyed.
    if (!this.vm._isBeingDestroyed) {
      remove(this.vm._watchers, this);
    }
    var i = this.deps.length;
    while (i--) {
      this.deps[i].removeSub(this);
    }
    this.active = false;
  }
};

/*  */

var sharedPropertyDefinition = {
  enumerable: true,
  configurable: true,
  get: noop,
  set: noop
};

function proxy (target, sourceKey, key) {
  sharedPropertyDefinition.get = function proxyGetter () {
    return this[sourceKey][key]
  };
  sharedPropertyDefinition.set = function proxySetter (val) {
    this[sourceKey][key] = val;
  };
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function initState (vm) {
  vm._watchers = [];
  var opts = vm.$options;
  if (opts.props) { initProps(vm, opts.props); }
  if (opts.methods) { initMethods(vm, opts.methods); }
  if (opts.data) {
    initData(vm);
  } else {
    observe(vm._data = {}, true /* asRootData */);
  }
  if (opts.computed) { initComputed(vm, opts.computed); }
  if (opts.watch && opts.watch !== nativeWatch) {
    initWatch(vm, opts.watch);
  }
}

function initProps (vm, propsOptions) {
  var propsData = vm.$options.propsData || {};
  var props = vm._props = {};
  // cache prop keys so that future props updates can iterate using Array
  // instead of dynamic object key enumeration.
  var keys = vm.$options._propKeys = [];
  var isRoot = !vm.$parent;
  // root instance props should be converted
  if (!isRoot) {
    toggleObserving(false);
  }
  var loop = function ( key ) {
    keys.push(key);
    var value = validateProp(key, propsOptions, propsData, vm);
    /* istanbul ignore else */
    if (true) {
      var hyphenatedKey = hyphenate(key);
      if (isReservedAttribute(hyphenatedKey) ||
          config.isReservedAttr(hyphenatedKey)) {
        warn(
          ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
          vm
        );
      }
      defineReactive$$1(props, key, value, function () {
        if (!isRoot && !isUpdatingChildComponent) {
          {
            if(vm.mpHost === 'mp-baidu' || vm.mpHost === 'mp-kuaishou' || vm.mpHost === 'mp-xhs'){//百度、快手、小红书 observer 在 setData callback 之后触发，直接忽略该 warn
                return
            }
            //fixed by xxxxxx __next_tick_pending,uni://form-field 时不告警
            if(
                key === 'value' && 
                Array.isArray(vm.$options.behaviors) &&
                vm.$options.behaviors.indexOf('uni://form-field') !== -1
              ){
              return
            }
            if(vm._getFormData){
              return
            }
            var $parent = vm.$parent;
            while($parent){
              if($parent.__next_tick_pending){
                return  
              }
              $parent = $parent.$parent;
            }
          }
          warn(
            "Avoid mutating a prop directly since the value will be " +
            "overwritten whenever the parent component re-renders. " +
            "Instead, use a data or computed property based on the prop's " +
            "value. Prop being mutated: \"" + key + "\"",
            vm
          );
        }
      });
    } else {}
    // static props are already proxied on the component's prototype
    // during Vue.extend(). We only need to proxy props defined at
    // instantiation here.
    if (!(key in vm)) {
      proxy(vm, "_props", key);
    }
  };

  for (var key in propsOptions) loop( key );
  toggleObserving(true);
}

function initData (vm) {
  var data = vm.$options.data;
  data = vm._data = typeof data === 'function'
    ? getData(data, vm)
    : data || {};
  if (!isPlainObject(data)) {
    data = {};
     true && warn(
      'data functions should return an object:\n' +
      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
      vm
    );
  }
  // proxy data on instance
  var keys = Object.keys(data);
  var props = vm.$options.props;
  var methods = vm.$options.methods;
  var i = keys.length;
  while (i--) {
    var key = keys[i];
    if (true) {
      if (methods && hasOwn(methods, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a data property."),
          vm
        );
      }
    }
    if (props && hasOwn(props, key)) {
       true && warn(
        "The data property \"" + key + "\" is already declared as a prop. " +
        "Use prop default value instead.",
        vm
      );
    } else if (!isReserved(key)) {
      proxy(vm, "_data", key);
    }
  }
  // observe data
  observe(data, true /* asRootData */);
}

function getData (data, vm) {
  // #7573 disable dep collection when invoking data getters
  pushTarget();
  try {
    return data.call(vm, vm)
  } catch (e) {
    handleError(e, vm, "data()");
    return {}
  } finally {
    popTarget();
  }
}

var computedWatcherOptions = { lazy: true };

function initComputed (vm, computed) {
  // $flow-disable-line
  var watchers = vm._computedWatchers = Object.create(null);
  // computed properties are just getters during SSR
  var isSSR = isServerRendering();

  for (var key in computed) {
    var userDef = computed[key];
    var getter = typeof userDef === 'function' ? userDef : userDef.get;
    if ( true && getter == null) {
      warn(
        ("Getter is missing for computed property \"" + key + "\"."),
        vm
      );
    }

    if (!isSSR) {
      // create internal watcher for the computed property.
      watchers[key] = new Watcher(
        vm,
        getter || noop,
        noop,
        computedWatcherOptions
      );
    }

    // component-defined computed properties are already defined on the
    // component prototype. We only need to define computed properties defined
    // at instantiation here.
    if (!(key in vm)) {
      defineComputed(vm, key, userDef);
    } else if (true) {
      if (key in vm.$data) {
        warn(("The computed property \"" + key + "\" is already defined in data."), vm);
      } else if (vm.$options.props && key in vm.$options.props) {
        warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
      }
    }
  }
}

function defineComputed (
  target,
  key,
  userDef
) {
  var shouldCache = !isServerRendering();
  if (typeof userDef === 'function') {
    sharedPropertyDefinition.get = shouldCache
      ? createComputedGetter(key)
      : createGetterInvoker(userDef);
    sharedPropertyDefinition.set = noop;
  } else {
    sharedPropertyDefinition.get = userDef.get
      ? shouldCache && userDef.cache !== false
        ? createComputedGetter(key)
        : createGetterInvoker(userDef.get)
      : noop;
    sharedPropertyDefinition.set = userDef.set || noop;
  }
  if ( true &&
      sharedPropertyDefinition.set === noop) {
    sharedPropertyDefinition.set = function () {
      warn(
        ("Computed property \"" + key + "\" was assigned to but it has no setter."),
        this
      );
    };
  }
  Object.defineProperty(target, key, sharedPropertyDefinition);
}

function createComputedGetter (key) {
  return function computedGetter () {
    var watcher = this._computedWatchers && this._computedWatchers[key];
    if (watcher) {
      if (watcher.dirty) {
        watcher.evaluate();
      }
      if (Dep.SharedObject.target) {// fixed by xxxxxx
        watcher.depend();
      }
      return watcher.value
    }
  }
}

function createGetterInvoker(fn) {
  return function computedGetter () {
    return fn.call(this, this)
  }
}

function initMethods (vm, methods) {
  var props = vm.$options.props;
  for (var key in methods) {
    if (true) {
      if (typeof methods[key] !== 'function') {
        warn(
          "Method \"" + key + "\" has type \"" + (typeof methods[key]) + "\" in the component definition. " +
          "Did you reference the function correctly?",
          vm
        );
      }
      if (props && hasOwn(props, key)) {
        warn(
          ("Method \"" + key + "\" has already been defined as a prop."),
          vm
        );
      }
      if ((key in vm) && isReserved(key)) {
        warn(
          "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
          "Avoid defining component methods that start with _ or $."
        );
      }
    }
    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);
  }
}

function initWatch (vm, watch) {
  for (var key in watch) {
    var handler = watch[key];
    if (Array.isArray(handler)) {
      for (var i = 0; i < handler.length; i++) {
        createWatcher(vm, key, handler[i]);
      }
    } else {
      createWatcher(vm, key, handler);
    }
  }
}

function createWatcher (
  vm,
  expOrFn,
  handler,
  options
) {
  if (isPlainObject(handler)) {
    options = handler;
    handler = handler.handler;
  }
  if (typeof handler === 'string') {
    handler = vm[handler];
  }
  return vm.$watch(expOrFn, handler, options)
}

function stateMixin (Vue) {
  // flow somehow has problems with directly declared definition object
  // when using Object.defineProperty, so we have to procedurally build up
  // the object here.
  var dataDef = {};
  dataDef.get = function () { return this._data };
  var propsDef = {};
  propsDef.get = function () { return this._props };
  if (true) {
    dataDef.set = function () {
      warn(
        'Avoid replacing instance root $data. ' +
        'Use nested data properties instead.',
        this
      );
    };
    propsDef.set = function () {
      warn("$props is readonly.", this);
    };
  }
  Object.defineProperty(Vue.prototype, '$data', dataDef);
  Object.defineProperty(Vue.prototype, '$props', propsDef);

  Vue.prototype.$set = set;
  Vue.prototype.$delete = del;

  Vue.prototype.$watch = function (
    expOrFn,
    cb,
    options
  ) {
    var vm = this;
    if (isPlainObject(cb)) {
      return createWatcher(vm, expOrFn, cb, options)
    }
    options = options || {};
    options.user = true;
    var watcher = new Watcher(vm, expOrFn, cb, options);
    if (options.immediate) {
      try {
        cb.call(vm, watcher.value);
      } catch (error) {
        handleError(error, vm, ("callback for immediate watcher \"" + (watcher.expression) + "\""));
      }
    }
    return function unwatchFn () {
      watcher.teardown();
    }
  };
}

/*  */

var uid$3 = 0;

function initMixin (Vue) {
  Vue.prototype._init = function (options) {
    var vm = this;
    // a uid
    vm._uid = uid$3++;

    var startTag, endTag;
    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      startTag = "vue-perf-start:" + (vm._uid);
      endTag = "vue-perf-end:" + (vm._uid);
      mark(startTag);
    }

    // a flag to avoid this being observed
    vm._isVue = true;
    // merge options
    if (options && options._isComponent) {
      // optimize internal component instantiation
      // since dynamic options merging is pretty slow, and none of the
      // internal component options needs special treatment.
      initInternalComponent(vm, options);
    } else {
      vm.$options = mergeOptions(
        resolveConstructorOptions(vm.constructor),
        options || {},
        vm
      );
    }
    /* istanbul ignore else */
    if (true) {
      initProxy(vm);
    } else {}
    // expose real self
    vm._self = vm;
    initLifecycle(vm);
    initEvents(vm);
    initRender(vm);
    callHook(vm, 'beforeCreate');
    !vm._$fallback && initInjections(vm); // resolve injections before data/props  
    initState(vm);
    !vm._$fallback && initProvide(vm); // resolve provide after data/props
    !vm._$fallback && callHook(vm, 'created');      

    /* istanbul ignore if */
    if ( true && config.performance && mark) {
      vm._name = formatComponentName(vm, false);
      mark(endTag);
      measure(("vue " + (vm._name) + " init"), startTag, endTag);
    }

    if (vm.$options.el) {
      vm.$mount(vm.$options.el);
    }
  };
}

function initInternalComponent (vm, options) {
  var opts = vm.$options = Object.create(vm.constructor.options);
  // doing this because it's faster than dynamic enumeration.
  var parentVnode = options._parentVnode;
  opts.parent = options.parent;
  opts._parentVnode = parentVnode;

  var vnodeComponentOptions = parentVnode.componentOptions;
  opts.propsData = vnodeComponentOptions.propsData;
  opts._parentListeners = vnodeComponentOptions.listeners;
  opts._renderChildren = vnodeComponentOptions.children;
  opts._componentTag = vnodeComponentOptions.tag;

  if (options.render) {
    opts.render = options.render;
    opts.staticRenderFns = options.staticRenderFns;
  }
}

function resolveConstructorOptions (Ctor) {
  var options = Ctor.options;
  if (Ctor.super) {
    var superOptions = resolveConstructorOptions(Ctor.super);
    var cachedSuperOptions = Ctor.superOptions;
    if (superOptions !== cachedSuperOptions) {
      // super option changed,
      // need to resolve new options.
      Ctor.superOptions = superOptions;
      // check if there are any late-modified/attached options (#4976)
      var modifiedOptions = resolveModifiedOptions(Ctor);
      // update base extend options
      if (modifiedOptions) {
        extend(Ctor.extendOptions, modifiedOptions);
      }
      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
      if (options.name) {
        options.components[options.name] = Ctor;
      }
    }
  }
  return options
}

function resolveModifiedOptions (Ctor) {
  var modified;
  var latest = Ctor.options;
  var sealed = Ctor.sealedOptions;
  for (var key in latest) {
    if (latest[key] !== sealed[key]) {
      if (!modified) { modified = {}; }
      modified[key] = latest[key];
    }
  }
  return modified
}

function Vue (options) {
  if ( true &&
    !(this instanceof Vue)
  ) {
    warn('Vue is a constructor and should be called with the `new` keyword');
  }
  this._init(options);
}

initMixin(Vue);
stateMixin(Vue);
eventsMixin(Vue);
lifecycleMixin(Vue);
renderMixin(Vue);

/*  */

function initUse (Vue) {
  Vue.use = function (plugin) {
    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
    if (installedPlugins.indexOf(plugin) > -1) {
      return this
    }

    // additional parameters
    var args = toArray(arguments, 1);
    args.unshift(this);
    if (typeof plugin.install === 'function') {
      plugin.install.apply(plugin, args);
    } else if (typeof plugin === 'function') {
      plugin.apply(null, args);
    }
    installedPlugins.push(plugin);
    return this
  };
}

/*  */

function initMixin$1 (Vue) {
  Vue.mixin = function (mixin) {
    this.options = mergeOptions(this.options, mixin);
    return this
  };
}

/*  */

function initExtend (Vue) {
  /**
   * Each instance constructor, including Vue, has a unique
   * cid. This enables us to create wrapped "child
   * constructors" for prototypal inheritance and cache them.
   */
  Vue.cid = 0;
  var cid = 1;

  /**
   * Class inheritance
   */
  Vue.extend = function (extendOptions) {
    extendOptions = extendOptions || {};
    var Super = this;
    var SuperId = Super.cid;
    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
    if (cachedCtors[SuperId]) {
      return cachedCtors[SuperId]
    }

    var name = extendOptions.name || Super.options.name;
    if ( true && name) {
      validateComponentName(name);
    }

    var Sub = function VueComponent (options) {
      this._init(options);
    };
    Sub.prototype = Object.create(Super.prototype);
    Sub.prototype.constructor = Sub;
    Sub.cid = cid++;
    Sub.options = mergeOptions(
      Super.options,
      extendOptions
    );
    Sub['super'] = Super;

    // For props and computed properties, we define the proxy getters on
    // the Vue instances at extension time, on the extended prototype. This
    // avoids Object.defineProperty calls for each instance created.
    if (Sub.options.props) {
      initProps$1(Sub);
    }
    if (Sub.options.computed) {
      initComputed$1(Sub);
    }

    // allow further extension/mixin/plugin usage
    Sub.extend = Super.extend;
    Sub.mixin = Super.mixin;
    Sub.use = Super.use;

    // create asset registers, so extended classes
    // can have their private assets too.
    ASSET_TYPES.forEach(function (type) {
      Sub[type] = Super[type];
    });
    // enable recursive self-lookup
    if (name) {
      Sub.options.components[name] = Sub;
    }

    // keep a reference to the super options at extension time.
    // later at instantiation we can check if Super's options have
    // been updated.
    Sub.superOptions = Super.options;
    Sub.extendOptions = extendOptions;
    Sub.sealedOptions = extend({}, Sub.options);

    // cache constructor
    cachedCtors[SuperId] = Sub;
    return Sub
  };
}

function initProps$1 (Comp) {
  var props = Comp.options.props;
  for (var key in props) {
    proxy(Comp.prototype, "_props", key);
  }
}

function initComputed$1 (Comp) {
  var computed = Comp.options.computed;
  for (var key in computed) {
    defineComputed(Comp.prototype, key, computed[key]);
  }
}

/*  */

function initAssetRegisters (Vue) {
  /**
   * Create asset registration methods.
   */
  ASSET_TYPES.forEach(function (type) {
    Vue[type] = function (
      id,
      definition
    ) {
      if (!definition) {
        return this.options[type + 's'][id]
      } else {
        /* istanbul ignore if */
        if ( true && type === 'component') {
          validateComponentName(id);
        }
        if (type === 'component' && isPlainObject(definition)) {
          definition.name = definition.name || id;
          definition = this.options._base.extend(definition);
        }
        if (type === 'directive' && typeof definition === 'function') {
          definition = { bind: definition, update: definition };
        }
        this.options[type + 's'][id] = definition;
        return definition
      }
    };
  });
}

/*  */



function getComponentName (opts) {
  return opts && (opts.Ctor.options.name || opts.tag)
}

function matches (pattern, name) {
  if (Array.isArray(pattern)) {
    return pattern.indexOf(name) > -1
  } else if (typeof pattern === 'string') {
    return pattern.split(',').indexOf(name) > -1
  } else if (isRegExp(pattern)) {
    return pattern.test(name)
  }
  /* istanbul ignore next */
  return false
}

function pruneCache (keepAliveInstance, filter) {
  var cache = keepAliveInstance.cache;
  var keys = keepAliveInstance.keys;
  var _vnode = keepAliveInstance._vnode;
  for (var key in cache) {
    var cachedNode = cache[key];
    if (cachedNode) {
      var name = getComponentName(cachedNode.componentOptions);
      if (name && !filter(name)) {
        pruneCacheEntry(cache, key, keys, _vnode);
      }
    }
  }
}

function pruneCacheEntry (
  cache,
  key,
  keys,
  current
) {
  var cached$$1 = cache[key];
  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
    cached$$1.componentInstance.$destroy();
  }
  cache[key] = null;
  remove(keys, key);
}

var patternTypes = [String, RegExp, Array];

var KeepAlive = {
  name: 'keep-alive',
  abstract: true,

  props: {
    include: patternTypes,
    exclude: patternTypes,
    max: [String, Number]
  },

  created: function created () {
    this.cache = Object.create(null);
    this.keys = [];
  },

  destroyed: function destroyed () {
    for (var key in this.cache) {
      pruneCacheEntry(this.cache, key, this.keys);
    }
  },

  mounted: function mounted () {
    var this$1 = this;

    this.$watch('include', function (val) {
      pruneCache(this$1, function (name) { return matches(val, name); });
    });
    this.$watch('exclude', function (val) {
      pruneCache(this$1, function (name) { return !matches(val, name); });
    });
  },

  render: function render () {
    var slot = this.$slots.default;
    var vnode = getFirstComponentChild(slot);
    var componentOptions = vnode && vnode.componentOptions;
    if (componentOptions) {
      // check pattern
      var name = getComponentName(componentOptions);
      var ref = this;
      var include = ref.include;
      var exclude = ref.exclude;
      if (
        // not included
        (include && (!name || !matches(include, name))) ||
        // excluded
        (exclude && name && matches(exclude, name))
      ) {
        return vnode
      }

      var ref$1 = this;
      var cache = ref$1.cache;
      var keys = ref$1.keys;
      var key = vnode.key == null
        // same constructor may get registered as different local components
        // so cid alone is not enough (#3269)
        ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
        : vnode.key;
      if (cache[key]) {
        vnode.componentInstance = cache[key].componentInstance;
        // make current key freshest
        remove(keys, key);
        keys.push(key);
      } else {
        cache[key] = vnode;
        keys.push(key);
        // prune oldest entry
        if (this.max && keys.length > parseInt(this.max)) {
          pruneCacheEntry(cache, keys[0], keys, this._vnode);
        }
      }

      vnode.data.keepAlive = true;
    }
    return vnode || (slot && slot[0])
  }
};

var builtInComponents = {
  KeepAlive: KeepAlive
};

/*  */

function initGlobalAPI (Vue) {
  // config
  var configDef = {};
  configDef.get = function () { return config; };
  if (true) {
    configDef.set = function () {
      warn(
        'Do not replace the Vue.config object, set individual fields instead.'
      );
    };
  }
  Object.defineProperty(Vue, 'config', configDef);

  // exposed util methods.
  // NOTE: these are not considered part of the public API - avoid relying on
  // them unless you are aware of the risk.
  Vue.util = {
    warn: warn,
    extend: extend,
    mergeOptions: mergeOptions,
    defineReactive: defineReactive$$1
  };

  Vue.set = set;
  Vue.delete = del;
  Vue.nextTick = nextTick;

  // 2.6 explicit observable API
  Vue.observable = function (obj) {
    observe(obj);
    return obj
  };

  Vue.options = Object.create(null);
  ASSET_TYPES.forEach(function (type) {
    Vue.options[type + 's'] = Object.create(null);
  });

  // this is used to identify the "base" constructor to extend all plain-object
  // components with in Weex's multi-instance scenarios.
  Vue.options._base = Vue;

  extend(Vue.options.components, builtInComponents);

  initUse(Vue);
  initMixin$1(Vue);
  initExtend(Vue);
  initAssetRegisters(Vue);
}

initGlobalAPI(Vue);

Object.defineProperty(Vue.prototype, '$isServer', {
  get: isServerRendering
});

Object.defineProperty(Vue.prototype, '$ssrContext', {
  get: function get () {
    /* istanbul ignore next */
    return this.$vnode && this.$vnode.ssrContext
  }
});

// expose FunctionalRenderContext for ssr runtime helper installation
Object.defineProperty(Vue, 'FunctionalRenderContext', {
  value: FunctionalRenderContext
});

Vue.version = '2.6.11';

/**
 * https://raw.githubusercontent.com/Tencent/westore/master/packages/westore/utils/diff.js
 */
var ARRAYTYPE = '[object Array]';
var OBJECTTYPE = '[object Object]';
var NULLTYPE = '[object Null]';
var UNDEFINEDTYPE = '[object Undefined]';
// const FUNCTIONTYPE = '[object Function]'

function diff(current, pre) {
    var result = {};
    syncKeys(current, pre);
    _diff(current, pre, '', result);
    return result
}

function syncKeys(current, pre) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE && rootPreType == OBJECTTYPE) {
        if(Object.keys(current).length >= Object.keys(pre).length){
            for (var key in pre) {
                var currentValue = current[key];
                if (currentValue === undefined) {
                    current[key] = null;
                } else {
                    syncKeys(currentValue, pre[key]);
                }
            }
        }
    } else if (rootCurrentType == ARRAYTYPE && rootPreType == ARRAYTYPE) {
        if (current.length >= pre.length) {
            pre.forEach(function (item, index) {
                syncKeys(current[index], item);
            });
        }
    }
}

function nullOrUndefined(currentType, preType) {
    if(
        (currentType === NULLTYPE || currentType === UNDEFINEDTYPE) && 
        (preType === NULLTYPE || preType === UNDEFINEDTYPE)
    ) {
        return false
    }
    return true
}

function _diff(current, pre, path, result) {
    if (current === pre) { return }
    var rootCurrentType = type(current);
    var rootPreType = type(pre);
    if (rootCurrentType == OBJECTTYPE) {
        if (rootPreType != OBJECTTYPE || Object.keys(current).length < Object.keys(pre).length) {
            setResult(result, path, current);
        } else {
            var loop = function ( key ) {
                var currentValue = current[key];
                var preValue = pre[key];
                var currentType = type(currentValue);
                var preType = type(preValue);
                if (currentType != ARRAYTYPE && currentType != OBJECTTYPE) {
                    if (currentValue !== pre[key] && nullOrUndefined(currentType, preType)) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    }
                } else if (currentType == ARRAYTYPE) {
                    if (preType != ARRAYTYPE) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        if (currentValue.length < preValue.length) {
                            setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                        } else {
                            currentValue.forEach(function (item, index) {
                                _diff(item, preValue[index], (path == '' ? '' : path + ".") + key + '[' + index + ']', result);
                            });
                        }
                    }
                } else if (currentType == OBJECTTYPE) {
                    if (preType != OBJECTTYPE || Object.keys(currentValue).length < Object.keys(preValue).length) {
                        setResult(result, (path == '' ? '' : path + ".") + key, currentValue);
                    } else {
                        for (var subKey in currentValue) {
                            _diff(currentValue[subKey], preValue[subKey], (path == '' ? '' : path + ".") + key + '.' + subKey, result);
                        }
                    }
                }
            };

            for (var key in current) loop( key );
        }
    } else if (rootCurrentType == ARRAYTYPE) {
        if (rootPreType != ARRAYTYPE) {
            setResult(result, path, current);
        } else {
            if (current.length < pre.length) {
                setResult(result, path, current);
            } else {
                current.forEach(function (item, index) {
                    _diff(item, pre[index], path + '[' + index + ']', result);
                });
            }
        }
    } else {
        setResult(result, path, current);
    }
}

function setResult(result, k, v) {
    // if (type(v) != FUNCTIONTYPE) {
        result[k] = v;
    // }
}

function type(obj) {
    return Object.prototype.toString.call(obj)
}

/*  */

function flushCallbacks$1(vm) {
    if (vm.__next_tick_callbacks && vm.__next_tick_callbacks.length) {
        if (Object({"NODE_ENV":"development","VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"AI","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:flushCallbacks[' + vm.__next_tick_callbacks.length + ']');
        }
        var copies = vm.__next_tick_callbacks.slice(0);
        vm.__next_tick_callbacks.length = 0;
        for (var i = 0; i < copies.length; i++) {
            copies[i]();
        }
    }
}

function hasRenderWatcher(vm) {
    return queue.find(function (watcher) { return vm._watcher === watcher; })
}

function nextTick$1(vm, cb) {
    //1.nextTick 之前 已 setData 且 setData 还未回调完成
    //2.nextTick 之前存在 render watcher
    if (!vm.__next_tick_pending && !hasRenderWatcher(vm)) {
        if(Object({"NODE_ENV":"development","VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"AI","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + vm._uid +
                ']:nextVueTick');
        }
        return nextTick(cb, vm)
    }else{
        if(Object({"NODE_ENV":"development","VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"AI","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG){
            var mpInstance$1 = vm.$scope;
            console.log('[' + (+new Date) + '][' + (mpInstance$1.is || mpInstance$1.route) + '][' + vm._uid +
                ']:nextMPTick');
        }
    }
    var _resolve;
    if (!vm.__next_tick_callbacks) {
        vm.__next_tick_callbacks = [];
    }
    vm.__next_tick_callbacks.push(function () {
        if (cb) {
            try {
                cb.call(vm);
            } catch (e) {
                handleError(e, vm, 'nextTick');
            }
        } else if (_resolve) {
            _resolve(vm);
        }
    });
    // $flow-disable-line
    if (!cb && typeof Promise !== 'undefined') {
        return new Promise(function (resolve) {
            _resolve = resolve;
        })
    }
}

/*  */

function clearInstance(key, value) {
  // 简易去除 Vue 和小程序组件实例
  if (value) {
    if (value._isVue || value.__v_isMPComponent) {
      return {}
    }
  }
  return value
}

function cloneWithData(vm) {
  // 确保当前 vm 所有数据被同步
  var ret = Object.create(null);
  var dataKeys = [].concat(
    Object.keys(vm._data || {}),
    Object.keys(vm._computedWatchers || {}));

  dataKeys.reduce(function(ret, key) {
    ret[key] = vm[key];
    return ret
  }, ret);

  // vue-composition-api
  var compositionApiState = vm.__composition_api_state__ || vm.__secret_vfa_state__;
  var rawBindings = compositionApiState && compositionApiState.rawBindings;
  if (rawBindings) {
    Object.keys(rawBindings).forEach(function (key) {
      ret[key] = vm[key];
    });
  }

  //TODO 需要把无用数据处理掉，比如 list=>l0 则 list 需要移除，否则多传输一份数据
  Object.assign(ret, vm.$mp.data || {});
  if (
    Array.isArray(vm.$options.behaviors) &&
    vm.$options.behaviors.indexOf('uni://form-field') !== -1
  ) { //form-field
    ret['name'] = vm.name;
    ret['value'] = vm.value;
  }

  return JSON.parse(JSON.stringify(ret, clearInstance))
}

var patch = function(oldVnode, vnode) {
  var this$1 = this;

  if (vnode === null) { //destroy
    return
  }
  if (this.mpType === 'page' || this.mpType === 'component') {
    var mpInstance = this.$scope;
    var data = Object.create(null);
    try {
      data = cloneWithData(this);
    } catch (err) {
      console.error(err);
    }
    data.__webviewId__ = mpInstance.data.__webviewId__;
    var mpData = Object.create(null);
    Object.keys(data).forEach(function (key) { //仅同步 data 中有的数据
      mpData[key] = mpInstance.data[key];
    });
    var diffData = this.$shouldDiffData === false ? data : diff(data, mpData);
    if (Object.keys(diffData).length) {
      if (Object({"NODE_ENV":"development","VUE_APP_DARK_MODE":"false","VUE_APP_NAME":"AI","VUE_APP_PLATFORM":"mp-weixin","BASE_URL":"/"}).VUE_APP_DEBUG) {
        console.log('[' + (+new Date) + '][' + (mpInstance.is || mpInstance.route) + '][' + this._uid +
          ']差量更新',
          JSON.stringify(diffData));
      }
      this.__next_tick_pending = true;
      mpInstance.setData(diffData, function () {
        this$1.__next_tick_pending = false;
        flushCallbacks$1(this$1);
      });
    } else {
      flushCallbacks$1(this);
    }
  }
};

/*  */

function createEmptyRender() {

}

function mountComponent$1(
  vm,
  el,
  hydrating
) {
  if (!vm.mpType) {//main.js 中的 new Vue
    return vm
  }
  if (vm.mpType === 'app') {
    vm.$options.render = createEmptyRender;
  }
  if (!vm.$options.render) {
    vm.$options.render = createEmptyRender;
    if (true) {
      /* istanbul ignore if */
      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
        vm.$options.el || el) {
        warn(
          'You are using the runtime-only build of Vue where the template ' +
          'compiler is not available. Either pre-compile the templates into ' +
          'render functions, or use the compiler-included build.',
          vm
        );
      } else {
        warn(
          'Failed to mount component: template or render function not defined.',
          vm
        );
      }
    }
  }
  
  !vm._$fallback && callHook(vm, 'beforeMount');

  var updateComponent = function () {
    vm._update(vm._render(), hydrating);
  };

  // we set this to vm._watcher inside the watcher's constructor
  // since the watcher's initial patch may call $forceUpdate (e.g. inside child
  // component's mounted hook), which relies on vm._watcher being already defined
  new Watcher(vm, updateComponent, noop, {
    before: function before() {
      if (vm._isMounted && !vm._isDestroyed) {
        callHook(vm, 'beforeUpdate');
      }
    }
  }, true /* isRenderWatcher */);
  hydrating = false;
  return vm
}

/*  */

function renderClass (
  staticClass,
  dynamicClass
) {
  if (isDef(staticClass) || isDef(dynamicClass)) {
    return concat(staticClass, stringifyClass(dynamicClass))
  }
  /* istanbul ignore next */
  return ''
}

function concat (a, b) {
  return a ? b ? (a + ' ' + b) : a : (b || '')
}

function stringifyClass (value) {
  if (Array.isArray(value)) {
    return stringifyArray(value)
  }
  if (isObject(value)) {
    return stringifyObject(value)
  }
  if (typeof value === 'string') {
    return value
  }
  /* istanbul ignore next */
  return ''
}

function stringifyArray (value) {
  var res = '';
  var stringified;
  for (var i = 0, l = value.length; i < l; i++) {
    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
      if (res) { res += ' '; }
      res += stringified;
    }
  }
  return res
}

function stringifyObject (value) {
  var res = '';
  for (var key in value) {
    if (value[key]) {
      if (res) { res += ' '; }
      res += key;
    }
  }
  return res
}

/*  */

var parseStyleText = cached(function (cssText) {
  var res = {};
  var listDelimiter = /;(?![^(]*\))/g;
  var propertyDelimiter = /:(.+)/;
  cssText.split(listDelimiter).forEach(function (item) {
    if (item) {
      var tmp = item.split(propertyDelimiter);
      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
    }
  });
  return res
});

// normalize possible array / string values into Object
function normalizeStyleBinding (bindingStyle) {
  if (Array.isArray(bindingStyle)) {
    return toObject(bindingStyle)
  }
  if (typeof bindingStyle === 'string') {
    return parseStyleText(bindingStyle)
  }
  return bindingStyle
}

/*  */

var MP_METHODS = ['createSelectorQuery', 'createIntersectionObserver', 'selectAllComponents', 'selectComponent'];

function getTarget(obj, path) {
  var parts = path.split('.');
  var key = parts[0];
  if (key.indexOf('__$n') === 0) { //number index
    key = parseInt(key.replace('__$n', ''));
  }
  if (parts.length === 1) {
    return obj[key]
  }
  return getTarget(obj[key], parts.slice(1).join('.'))
}

function internalMixin(Vue) {

  Vue.config.errorHandler = function(err, vm, info) {
    Vue.util.warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
    console.error(err);
    /* eslint-disable no-undef */
    var app = typeof getApp === 'function' && getApp();
    if (app && app.onError) {
      app.onError(err);
    }
  };

  var oldEmit = Vue.prototype.$emit;

  Vue.prototype.$emit = function(event) {
    if (this.$scope && event) {
      var triggerEvent = this.$scope['_triggerEvent'] || this.$scope['triggerEvent'];
      if (triggerEvent) {
        try {
          triggerEvent.call(this.$scope, event, {
            __args__: toArray(arguments, 1)
          });
        } catch (error) {

        }
      }
    }
    return oldEmit.apply(this, arguments)
  };

  Vue.prototype.$nextTick = function(fn) {
    return nextTick$1(this, fn)
  };

  MP_METHODS.forEach(function (method) {
    Vue.prototype[method] = function(args) {
      if (this.$scope && this.$scope[method]) {
        return this.$scope[method](args)
      }
      // mp-alipay
      if (typeof my === 'undefined') {
        return
      }
      if (method === 'createSelectorQuery') {
        /* eslint-disable no-undef */
        return my.createSelectorQuery(args)
      } else if (method === 'createIntersectionObserver') {
        /* eslint-disable no-undef */
        return my.createIntersectionObserver(args)
      }
      // TODO mp-alipay 暂不支持 selectAllComponents,selectComponent
    };
  });

  Vue.prototype.__init_provide = initProvide;

  Vue.prototype.__init_injections = initInjections;

  Vue.prototype.__call_hook = function(hook, args) {
    var vm = this;
    // #7573 disable dep collection when invoking lifecycle hooks
    pushTarget();
    var handlers = vm.$options[hook];
    var info = hook + " hook";
    var ret;
    if (handlers) {
      for (var i = 0, j = handlers.length; i < j; i++) {
        ret = invokeWithErrorHandling(handlers[i], vm, args ? [args] : null, vm, info);
      }
    }
    if (vm._hasHookEvent) {
      vm.$emit('hook:' + hook, args);
    }
    popTarget();
    return ret
  };

  Vue.prototype.__set_model = function(target, key, value, modifiers) {
    if (Array.isArray(modifiers)) {
      if (modifiers.indexOf('trim') !== -1) {
        value = value.trim();
      }
      if (modifiers.indexOf('number') !== -1) {
        value = this._n(value);
      }
    }
    if (!target) {
      target = this;
    }
    // 解决动态属性添加
    Vue.set(target, key, value);
  };

  Vue.prototype.__set_sync = function(target, key, value) {
    if (!target) {
      target = this;
    }
    // 解决动态属性添加
    Vue.set(target, key, value);
  };

  Vue.prototype.__get_orig = function(item) {
    if (isPlainObject(item)) {
      return item['$orig'] || item
    }
    return item
  };

  Vue.prototype.__get_value = function(dataPath, target) {
    return getTarget(target || this, dataPath)
  };


  Vue.prototype.__get_class = function(dynamicClass, staticClass) {
    return renderClass(staticClass, dynamicClass)
  };

  Vue.prototype.__get_style = function(dynamicStyle, staticStyle) {
    if (!dynamicStyle && !staticStyle) {
      return ''
    }
    var dynamicStyleObj = normalizeStyleBinding(dynamicStyle);
    var styleObj = staticStyle ? extend(staticStyle, dynamicStyleObj) : dynamicStyleObj;
    return Object.keys(styleObj).map(function (name) { return ((hyphenate(name)) + ":" + (styleObj[name])); }).join(';')
  };

  Vue.prototype.__map = function(val, iteratee) {
    //TODO 暂不考虑 string
    var ret, i, l, keys, key;
    if (Array.isArray(val)) {
      ret = new Array(val.length);
      for (i = 0, l = val.length; i < l; i++) {
        ret[i] = iteratee(val[i], i);
      }
      return ret
    } else if (isObject(val)) {
      keys = Object.keys(val);
      ret = Object.create(null);
      for (i = 0, l = keys.length; i < l; i++) {
        key = keys[i];
        ret[key] = iteratee(val[key], key, i);
      }
      return ret
    } else if (typeof val === 'number') {
      ret = new Array(val);
      for (i = 0, l = val; i < l; i++) {
        // 第一个参数暂时仍和小程序一致
        ret[i] = iteratee(i, i);
      }
      return ret
    }
    return []
  };

}

/*  */

var LIFECYCLE_HOOKS$1 = [
    //App
    'onLaunch',
    'onShow',
    'onHide',
    'onUniNViewMessage',
    'onPageNotFound',
    'onThemeChange',
    'onError',
    'onUnhandledRejection',
    //Page
    'onInit',
    'onLoad',
    // 'onShow',
    'onReady',
    // 'onHide',
    'onUnload',
    'onPullDownRefresh',
    'onReachBottom',
    'onTabItemTap',
    'onAddToFavorites',
    'onShareTimeline',
    'onShareAppMessage',
    'onResize',
    'onPageScroll',
    'onNavigationBarButtonTap',
    'onBackPress',
    'onNavigationBarSearchInputChanged',
    'onNavigationBarSearchInputConfirmed',
    'onNavigationBarSearchInputClicked',
    'onUploadDouyinVideo',
    'onNFCReadMessage',
    //Component
    // 'onReady', // 兼容旧版本，应该移除该事件
    'onPageShow',
    'onPageHide',
    'onPageResize'
];
function lifecycleMixin$1(Vue) {

    //fixed vue-class-component
    var oldExtend = Vue.extend;
    Vue.extend = function(extendOptions) {
        extendOptions = extendOptions || {};

        var methods = extendOptions.methods;
        if (methods) {
            Object.keys(methods).forEach(function (methodName) {
                if (LIFECYCLE_HOOKS$1.indexOf(methodName)!==-1) {
                    extendOptions[methodName] = methods[methodName];
                    delete methods[methodName];
                }
            });
        }

        return oldExtend.call(this, extendOptions)
    };

    var strategies = Vue.config.optionMergeStrategies;
    var mergeHook = strategies.created;
    LIFECYCLE_HOOKS$1.forEach(function (hook) {
        strategies[hook] = mergeHook;
    });

    Vue.prototype.__lifecycle_hooks__ = LIFECYCLE_HOOKS$1;
}

/*  */

// install platform patch function
Vue.prototype.__patch__ = patch;

// public mount method
Vue.prototype.$mount = function(
    el ,
    hydrating 
) {
    return mountComponent$1(this, el, hydrating)
};

lifecycleMixin$1(Vue);
internalMixin(Vue);

/*  */

/* harmony default export */ __webpack_exports__["default"] = (Vue);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 26:
/*!**************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/pages.json ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {



/***/ }),

/***/ 3:
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ 30:
/*!************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/@babel/runtime/regenerator/index.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// TODO(Babel 8): Remove this file.

var runtime = __webpack_require__(/*! @babel/runtime/helpers/regeneratorRuntime */ 31)();
module.exports = runtime;

/***/ }),

/***/ 31:
/*!*******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/regeneratorRuntime.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _typeof = __webpack_require__(/*! ./typeof.js */ 13)["default"];
function _regeneratorRuntime() {
  "use strict";

  /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {
    return e;
  }, module.exports.__esModule = true, module.exports["default"] = module.exports;
  var t,
    e = {},
    r = Object.prototype,
    n = r.hasOwnProperty,
    o = Object.defineProperty || function (t, e, r) {
      t[e] = r.value;
    },
    i = "function" == typeof Symbol ? Symbol : {},
    a = i.iterator || "@@iterator",
    c = i.asyncIterator || "@@asyncIterator",
    u = i.toStringTag || "@@toStringTag";
  function define(t, e, r) {
    return Object.defineProperty(t, e, {
      value: r,
      enumerable: !0,
      configurable: !0,
      writable: !0
    }), t[e];
  }
  try {
    define({}, "");
  } catch (t) {
    define = function define(t, e, r) {
      return t[e] = r;
    };
  }
  function wrap(t, e, r, n) {
    var i = e && e.prototype instanceof Generator ? e : Generator,
      a = Object.create(i.prototype),
      c = new Context(n || []);
    return o(a, "_invoke", {
      value: makeInvokeMethod(t, r, c)
    }), a;
  }
  function tryCatch(t, e, r) {
    try {
      return {
        type: "normal",
        arg: t.call(e, r)
      };
    } catch (t) {
      return {
        type: "throw",
        arg: t
      };
    }
  }
  e.wrap = wrap;
  var h = "suspendedStart",
    l = "suspendedYield",
    f = "executing",
    s = "completed",
    y = {};
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}
  var p = {};
  define(p, a, function () {
    return this;
  });
  var d = Object.getPrototypeOf,
    v = d && d(d(values([])));
  v && v !== r && n.call(v, a) && (p = v);
  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);
  function defineIteratorMethods(t) {
    ["next", "throw", "return"].forEach(function (e) {
      define(t, e, function (t) {
        return this._invoke(e, t);
      });
    });
  }
  function AsyncIterator(t, e) {
    function invoke(r, o, i, a) {
      var c = tryCatch(t[r], t, o);
      if ("throw" !== c.type) {
        var u = c.arg,
          h = u.value;
        return h && "object" == _typeof(h) && n.call(h, "__await") ? e.resolve(h.__await).then(function (t) {
          invoke("next", t, i, a);
        }, function (t) {
          invoke("throw", t, i, a);
        }) : e.resolve(h).then(function (t) {
          u.value = t, i(u);
        }, function (t) {
          return invoke("throw", t, i, a);
        });
      }
      a(c.arg);
    }
    var r;
    o(this, "_invoke", {
      value: function value(t, n) {
        function callInvokeWithMethodAndArg() {
          return new e(function (e, r) {
            invoke(t, n, e, r);
          });
        }
        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
      }
    });
  }
  function makeInvokeMethod(e, r, n) {
    var o = h;
    return function (i, a) {
      if (o === f) throw Error("Generator is already running");
      if (o === s) {
        if ("throw" === i) throw a;
        return {
          value: t,
          done: !0
        };
      }
      for (n.method = i, n.arg = a;;) {
        var c = n.delegate;
        if (c) {
          var u = maybeInvokeDelegate(c, n);
          if (u) {
            if (u === y) continue;
            return u;
          }
        }
        if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
          if (o === h) throw o = s, n.arg;
          n.dispatchException(n.arg);
        } else "return" === n.method && n.abrupt("return", n.arg);
        o = f;
        var p = tryCatch(e, r, n);
        if ("normal" === p.type) {
          if (o = n.done ? s : l, p.arg === y) continue;
          return {
            value: p.arg,
            done: n.done
          };
        }
        "throw" === p.type && (o = s, n.method = "throw", n.arg = p.arg);
      }
    };
  }
  function maybeInvokeDelegate(e, r) {
    var n = r.method,
      o = e.iterator[n];
    if (o === t) return r.delegate = null, "throw" === n && e.iterator["return"] && (r.method = "return", r.arg = t, maybeInvokeDelegate(e, r), "throw" === r.method) || "return" !== n && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + n + "' method")), y;
    var i = tryCatch(o, e.iterator, r.arg);
    if ("throw" === i.type) return r.method = "throw", r.arg = i.arg, r.delegate = null, y;
    var a = i.arg;
    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, "return" !== r.method && (r.method = "next", r.arg = t), r.delegate = null, y) : a : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, y);
  }
  function pushTryEntry(t) {
    var e = {
      tryLoc: t[0]
    };
    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);
  }
  function resetTryEntry(t) {
    var e = t.completion || {};
    e.type = "normal", delete e.arg, t.completion = e;
  }
  function Context(t) {
    this.tryEntries = [{
      tryLoc: "root"
    }], t.forEach(pushTryEntry, this), this.reset(!0);
  }
  function values(e) {
    if (e || "" === e) {
      var r = e[a];
      if (r) return r.call(e);
      if ("function" == typeof e.next) return e;
      if (!isNaN(e.length)) {
        var o = -1,
          i = function next() {
            for (; ++o < e.length;) {
              if (n.call(e, o)) return next.value = e[o], next.done = !1, next;
            }
            return next.value = t, next.done = !0, next;
          };
        return i.next = i;
      }
    }
    throw new TypeError(_typeof(e) + " is not iterable");
  }
  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, "constructor", {
    value: GeneratorFunctionPrototype,
    configurable: !0
  }), o(GeneratorFunctionPrototype, "constructor", {
    value: GeneratorFunction,
    configurable: !0
  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, "GeneratorFunction"), e.isGeneratorFunction = function (t) {
    var e = "function" == typeof t && t.constructor;
    return !!e && (e === GeneratorFunction || "GeneratorFunction" === (e.displayName || e.name));
  }, e.mark = function (t) {
    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, "GeneratorFunction")), t.prototype = Object.create(g), t;
  }, e.awrap = function (t) {
    return {
      __await: t
    };
  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {
    return this;
  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {
    void 0 === i && (i = Promise);
    var a = new AsyncIterator(wrap(t, r, n, o), i);
    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {
      return t.done ? t.value : a.next();
    });
  }, defineIteratorMethods(g), define(g, u, "Generator"), define(g, a, function () {
    return this;
  }), define(g, "toString", function () {
    return "[object Generator]";
  }), e.keys = function (t) {
    var e = Object(t),
      r = [];
    for (var n in e) {
      r.push(n);
    }
    return r.reverse(), function next() {
      for (; r.length;) {
        var t = r.pop();
        if (t in e) return next.value = t, next.done = !1, next;
      }
      return next.done = !0, next;
    };
  }, e.values = values, Context.prototype = {
    constructor: Context,
    reset: function reset(e) {
      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) {
        "t" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);
      }
    },
    stop: function stop() {
      this.done = !0;
      var t = this.tryEntries[0].completion;
      if ("throw" === t.type) throw t.arg;
      return this.rval;
    },
    dispatchException: function dispatchException(e) {
      if (this.done) throw e;
      var r = this;
      function handle(n, o) {
        return a.type = "throw", a.arg = e, r.next = n, o && (r.method = "next", r.arg = t), !!o;
      }
      for (var o = this.tryEntries.length - 1; o >= 0; --o) {
        var i = this.tryEntries[o],
          a = i.completion;
        if ("root" === i.tryLoc) return handle("end");
        if (i.tryLoc <= this.prev) {
          var c = n.call(i, "catchLoc"),
            u = n.call(i, "finallyLoc");
          if (c && u) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          } else if (c) {
            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);
          } else {
            if (!u) throw Error("try statement without catch or finally");
            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);
          }
        }
      }
    },
    abrupt: function abrupt(t, e) {
      for (var r = this.tryEntries.length - 1; r >= 0; --r) {
        var o = this.tryEntries[r];
        if (o.tryLoc <= this.prev && n.call(o, "finallyLoc") && this.prev < o.finallyLoc) {
          var i = o;
          break;
        }
      }
      i && ("break" === t || "continue" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);
      var a = i ? i.completion : {};
      return a.type = t, a.arg = e, i ? (this.method = "next", this.next = i.finallyLoc, y) : this.complete(a);
    },
    complete: function complete(t, e) {
      if ("throw" === t.type) throw t.arg;
      return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && e && (this.next = e), y;
    },
    finish: function finish(t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;
      }
    },
    "catch": function _catch(t) {
      for (var e = this.tryEntries.length - 1; e >= 0; --e) {
        var r = this.tryEntries[e];
        if (r.tryLoc === t) {
          var n = r.completion;
          if ("throw" === n.type) {
            var o = n.arg;
            resetTryEntry(r);
          }
          return o;
        }
      }
      throw Error("illegal catch attempt");
    },
    delegateYield: function delegateYield(e, r, n) {
      return this.delegate = {
        iterator: values(e),
        resultName: r,
        nextLoc: n
      }, "next" === this.method && (this.arg = t), y;
    }
  }, e;
}
module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 32:
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/asyncToGenerator.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }
  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}
function _asyncToGenerator(fn) {
  return function () {
    var self = this,
      args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);
      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }
      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }
      _next(undefined);
    });
  };
}
module.exports = _asyncToGenerator, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 33:
/*!**************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vuex3/dist/vuex.common.js ***!
  \**************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * vuex v3.6.2
 * (c) 2021 Evan You
 * @license MIT
 */


function applyMixin (Vue) {
  var version = Number(Vue.version.split('.')[0]);

  if (version >= 2) {
    Vue.mixin({ beforeCreate: vuexInit });
  } else {
    // override init and inject vuex init procedure
    // for 1.x backwards compatibility.
    var _init = Vue.prototype._init;
    Vue.prototype._init = function (options) {
      if ( options === void 0 ) options = {};

      options.init = options.init
        ? [vuexInit].concat(options.init)
        : vuexInit;
      _init.call(this, options);
    };
  }

  /**
   * Vuex init hook, injected into each instances init hooks list.
   */

  function vuexInit () {
    var options = this.$options;
    // store injection
    if (options.store) {
      this.$store = typeof options.store === 'function'
        ? options.store()
        : options.store;
    } else if (options.parent && options.parent.$store) {
      this.$store = options.parent.$store;
    }
  }
}

var target = typeof window !== 'undefined'
  ? window
  : typeof global !== 'undefined'
    ? global
    : {};
var devtoolHook = target.__VUE_DEVTOOLS_GLOBAL_HOOK__;

function devtoolPlugin (store) {
  if (!devtoolHook) { return }

  store._devtoolHook = devtoolHook;

  devtoolHook.emit('vuex:init', store);

  devtoolHook.on('vuex:travel-to-state', function (targetState) {
    store.replaceState(targetState);
  });

  store.subscribe(function (mutation, state) {
    devtoolHook.emit('vuex:mutation', mutation, state);
  }, { prepend: true });

  store.subscribeAction(function (action, state) {
    devtoolHook.emit('vuex:action', action, state);
  }, { prepend: true });
}

/**
 * Get the first item that pass the test
 * by second argument function
 *
 * @param {Array} list
 * @param {Function} f
 * @return {*}
 */
function find (list, f) {
  return list.filter(f)[0]
}

/**
 * Deep copy the given object considering circular structure.
 * This function caches all nested objects and its copies.
 * If it detects circular structure, use cached copy to avoid infinite loop.
 *
 * @param {*} obj
 * @param {Array<Object>} cache
 * @return {*}
 */
function deepCopy (obj, cache) {
  if ( cache === void 0 ) cache = [];

  // just return if obj is immutable value
  if (obj === null || typeof obj !== 'object') {
    return obj
  }

  // if obj is hit, it is in circular structure
  var hit = find(cache, function (c) { return c.original === obj; });
  if (hit) {
    return hit.copy
  }

  var copy = Array.isArray(obj) ? [] : {};
  // put the copy into cache at first
  // because we want to refer it in recursive deepCopy
  cache.push({
    original: obj,
    copy: copy
  });

  Object.keys(obj).forEach(function (key) {
    copy[key] = deepCopy(obj[key], cache);
  });

  return copy
}

/**
 * forEach for object
 */
function forEachValue (obj, fn) {
  Object.keys(obj).forEach(function (key) { return fn(obj[key], key); });
}

function isObject (obj) {
  return obj !== null && typeof obj === 'object'
}

function isPromise (val) {
  return val && typeof val.then === 'function'
}

function assert (condition, msg) {
  if (!condition) { throw new Error(("[vuex] " + msg)) }
}

function partial (fn, arg) {
  return function () {
    return fn(arg)
  }
}

// Base data struct for store's module, package with some attribute and method
var Module = function Module (rawModule, runtime) {
  this.runtime = runtime;
  // Store some children item
  this._children = Object.create(null);
  // Store the origin module object which passed by programmer
  this._rawModule = rawModule;
  var rawState = rawModule.state;

  // Store the origin module's state
  this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
};

var prototypeAccessors = { namespaced: { configurable: true } };

prototypeAccessors.namespaced.get = function () {
  return !!this._rawModule.namespaced
};

Module.prototype.addChild = function addChild (key, module) {
  this._children[key] = module;
};

Module.prototype.removeChild = function removeChild (key) {
  delete this._children[key];
};

Module.prototype.getChild = function getChild (key) {
  return this._children[key]
};

Module.prototype.hasChild = function hasChild (key) {
  return key in this._children
};

Module.prototype.update = function update (rawModule) {
  this._rawModule.namespaced = rawModule.namespaced;
  if (rawModule.actions) {
    this._rawModule.actions = rawModule.actions;
  }
  if (rawModule.mutations) {
    this._rawModule.mutations = rawModule.mutations;
  }
  if (rawModule.getters) {
    this._rawModule.getters = rawModule.getters;
  }
};

Module.prototype.forEachChild = function forEachChild (fn) {
  forEachValue(this._children, fn);
};

Module.prototype.forEachGetter = function forEachGetter (fn) {
  if (this._rawModule.getters) {
    forEachValue(this._rawModule.getters, fn);
  }
};

Module.prototype.forEachAction = function forEachAction (fn) {
  if (this._rawModule.actions) {
    forEachValue(this._rawModule.actions, fn);
  }
};

Module.prototype.forEachMutation = function forEachMutation (fn) {
  if (this._rawModule.mutations) {
    forEachValue(this._rawModule.mutations, fn);
  }
};

Object.defineProperties( Module.prototype, prototypeAccessors );

var ModuleCollection = function ModuleCollection (rawRootModule) {
  // register root module (Vuex.Store options)
  this.register([], rawRootModule, false);
};

ModuleCollection.prototype.get = function get (path) {
  return path.reduce(function (module, key) {
    return module.getChild(key)
  }, this.root)
};

ModuleCollection.prototype.getNamespace = function getNamespace (path) {
  var module = this.root;
  return path.reduce(function (namespace, key) {
    module = module.getChild(key);
    return namespace + (module.namespaced ? key + '/' : '')
  }, '')
};

ModuleCollection.prototype.update = function update$1 (rawRootModule) {
  update([], this.root, rawRootModule);
};

ModuleCollection.prototype.register = function register (path, rawModule, runtime) {
    var this$1 = this;
    if ( runtime === void 0 ) runtime = true;

  if ((true)) {
    assertRawModule(path, rawModule);
  }

  var newModule = new Module(rawModule, runtime);
  if (path.length === 0) {
    this.root = newModule;
  } else {
    var parent = this.get(path.slice(0, -1));
    parent.addChild(path[path.length - 1], newModule);
  }

  // register nested modules
  if (rawModule.modules) {
    forEachValue(rawModule.modules, function (rawChildModule, key) {
      this$1.register(path.concat(key), rawChildModule, runtime);
    });
  }
};

ModuleCollection.prototype.unregister = function unregister (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];
  var child = parent.getChild(key);

  if (!child) {
    if ((true)) {
      console.warn(
        "[vuex] trying to unregister module '" + key + "', which is " +
        "not registered"
      );
    }
    return
  }

  if (!child.runtime) {
    return
  }

  parent.removeChild(key);
};

ModuleCollection.prototype.isRegistered = function isRegistered (path) {
  var parent = this.get(path.slice(0, -1));
  var key = path[path.length - 1];

  if (parent) {
    return parent.hasChild(key)
  }

  return false
};

function update (path, targetModule, newModule) {
  if ((true)) {
    assertRawModule(path, newModule);
  }

  // update target module
  targetModule.update(newModule);

  // update nested modules
  if (newModule.modules) {
    for (var key in newModule.modules) {
      if (!targetModule.getChild(key)) {
        if ((true)) {
          console.warn(
            "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
            'manual reload is needed'
          );
        }
        return
      }
      update(
        path.concat(key),
        targetModule.getChild(key),
        newModule.modules[key]
      );
    }
  }
}

var functionAssert = {
  assert: function (value) { return typeof value === 'function'; },
  expected: 'function'
};

var objectAssert = {
  assert: function (value) { return typeof value === 'function' ||
    (typeof value === 'object' && typeof value.handler === 'function'); },
  expected: 'function or object with "handler" function'
};

var assertTypes = {
  getters: functionAssert,
  mutations: functionAssert,
  actions: objectAssert
};

function assertRawModule (path, rawModule) {
  Object.keys(assertTypes).forEach(function (key) {
    if (!rawModule[key]) { return }

    var assertOptions = assertTypes[key];

    forEachValue(rawModule[key], function (value, type) {
      assert(
        assertOptions.assert(value),
        makeAssertionMessage(path, key, type, value, assertOptions.expected)
      );
    });
  });
}

function makeAssertionMessage (path, key, type, value, expected) {
  var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
  if (path.length > 0) {
    buf += " in module \"" + (path.join('.')) + "\"";
  }
  buf += " is " + (JSON.stringify(value)) + ".";
  return buf
}

var Vue; // bind on install

var Store = function Store (options) {
  var this$1 = this;
  if ( options === void 0 ) options = {};

  // Auto install if it is not done yet and `window` has `Vue`.
  // To allow users to avoid auto-installation in some cases,
  // this code should be placed here. See #731
  if (!Vue && typeof window !== 'undefined' && window.Vue) {
    install(window.Vue);
  }

  if ((true)) {
    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
    assert(this instanceof Store, "store must be called with the new operator.");
  }

  var plugins = options.plugins; if ( plugins === void 0 ) plugins = [];
  var strict = options.strict; if ( strict === void 0 ) strict = false;

  // store internal state
  this._committing = false;
  this._actions = Object.create(null);
  this._actionSubscribers = [];
  this._mutations = Object.create(null);
  this._wrappedGetters = Object.create(null);
  this._modules = new ModuleCollection(options);
  this._modulesNamespaceMap = Object.create(null);
  this._subscribers = [];
  this._watcherVM = new Vue();
  this._makeLocalGettersCache = Object.create(null);

  // bind commit and dispatch to self
  var store = this;
  var ref = this;
  var dispatch = ref.dispatch;
  var commit = ref.commit;
  this.dispatch = function boundDispatch (type, payload) {
    return dispatch.call(store, type, payload)
  };
  this.commit = function boundCommit (type, payload, options) {
    return commit.call(store, type, payload, options)
  };

  // strict mode
  this.strict = strict;

  var state = this._modules.root.state;

  // init root module.
  // this also recursively registers all sub-modules
  // and collects all module getters inside this._wrappedGetters
  installModule(this, state, [], this._modules.root);

  // initialize the store vm, which is responsible for the reactivity
  // (also registers _wrappedGetters as computed properties)
  resetStoreVM(this, state);

  // apply plugins
  plugins.forEach(function (plugin) { return plugin(this$1); });

  var useDevtools = options.devtools !== undefined ? options.devtools : Vue.config.devtools;
  if (useDevtools) {
    devtoolPlugin(this);
  }
};

var prototypeAccessors$1 = { state: { configurable: true } };

prototypeAccessors$1.state.get = function () {
  return this._vm._data.$$state
};

prototypeAccessors$1.state.set = function (v) {
  if ((true)) {
    assert(false, "use store.replaceState() to explicit replace store state.");
  }
};

Store.prototype.commit = function commit (_type, _payload, _options) {
    var this$1 = this;

  // check object-style commit
  var ref = unifyObjectStyle(_type, _payload, _options);
    var type = ref.type;
    var payload = ref.payload;
    var options = ref.options;

  var mutation = { type: type, payload: payload };
  var entry = this._mutations[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown mutation type: " + type));
    }
    return
  }
  this._withCommit(function () {
    entry.forEach(function commitIterator (handler) {
      handler(payload);
    });
  });

  this._subscribers
    .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
    .forEach(function (sub) { return sub(mutation, this$1.state); });

  if (
    ( true) &&
    options && options.silent
  ) {
    console.warn(
      "[vuex] mutation type: " + type + ". Silent option has been removed. " +
      'Use the filter functionality in the vue-devtools'
    );
  }
};

Store.prototype.dispatch = function dispatch (_type, _payload) {
    var this$1 = this;

  // check object-style dispatch
  var ref = unifyObjectStyle(_type, _payload);
    var type = ref.type;
    var payload = ref.payload;

  var action = { type: type, payload: payload };
  var entry = this._actions[type];
  if (!entry) {
    if ((true)) {
      console.error(("[vuex] unknown action type: " + type));
    }
    return
  }

  try {
    this._actionSubscribers
      .slice() // shallow copy to prevent iterator invalidation if subscriber synchronously calls unsubscribe
      .filter(function (sub) { return sub.before; })
      .forEach(function (sub) { return sub.before(action, this$1.state); });
  } catch (e) {
    if ((true)) {
      console.warn("[vuex] error in before action subscribers: ");
      console.error(e);
    }
  }

  var result = entry.length > 1
    ? Promise.all(entry.map(function (handler) { return handler(payload); }))
    : entry[0](payload);

  return new Promise(function (resolve, reject) {
    result.then(function (res) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.after; })
          .forEach(function (sub) { return sub.after(action, this$1.state); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in after action subscribers: ");
          console.error(e);
        }
      }
      resolve(res);
    }, function (error) {
      try {
        this$1._actionSubscribers
          .filter(function (sub) { return sub.error; })
          .forEach(function (sub) { return sub.error(action, this$1.state, error); });
      } catch (e) {
        if ((true)) {
          console.warn("[vuex] error in error action subscribers: ");
          console.error(e);
        }
      }
      reject(error);
    });
  })
};

Store.prototype.subscribe = function subscribe (fn, options) {
  return genericSubscribe(fn, this._subscribers, options)
};

Store.prototype.subscribeAction = function subscribeAction (fn, options) {
  var subs = typeof fn === 'function' ? { before: fn } : fn;
  return genericSubscribe(subs, this._actionSubscribers, options)
};

Store.prototype.watch = function watch (getter, cb, options) {
    var this$1 = this;

  if ((true)) {
    assert(typeof getter === 'function', "store.watch only accepts a function.");
  }
  return this._watcherVM.$watch(function () { return getter(this$1.state, this$1.getters); }, cb, options)
};

Store.prototype.replaceState = function replaceState (state) {
    var this$1 = this;

  this._withCommit(function () {
    this$1._vm._data.$$state = state;
  });
};

Store.prototype.registerModule = function registerModule (path, rawModule, options) {
    if ( options === void 0 ) options = {};

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
    assert(path.length > 0, 'cannot register the root module by using registerModule.');
  }

  this._modules.register(path, rawModule);
  installModule(this, this.state, path, this._modules.get(path), options.preserveState);
  // reset store to update getters...
  resetStoreVM(this, this.state);
};

Store.prototype.unregisterModule = function unregisterModule (path) {
    var this$1 = this;

  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  this._modules.unregister(path);
  this._withCommit(function () {
    var parentState = getNestedState(this$1.state, path.slice(0, -1));
    Vue.delete(parentState, path[path.length - 1]);
  });
  resetStore(this);
};

Store.prototype.hasModule = function hasModule (path) {
  if (typeof path === 'string') { path = [path]; }

  if ((true)) {
    assert(Array.isArray(path), "module path must be a string or an Array.");
  }

  return this._modules.isRegistered(path)
};

Store.prototype[[104,111,116,85,112,100,97,116,101].map(function (item) {return String.fromCharCode(item)}).join('')] = function (newOptions) {
  this._modules.update(newOptions);
  resetStore(this, true);
};

Store.prototype._withCommit = function _withCommit (fn) {
  var committing = this._committing;
  this._committing = true;
  fn();
  this._committing = committing;
};

Object.defineProperties( Store.prototype, prototypeAccessors$1 );

function genericSubscribe (fn, subs, options) {
  if (subs.indexOf(fn) < 0) {
    options && options.prepend
      ? subs.unshift(fn)
      : subs.push(fn);
  }
  return function () {
    var i = subs.indexOf(fn);
    if (i > -1) {
      subs.splice(i, 1);
    }
  }
}

function resetStore (store, hot) {
  store._actions = Object.create(null);
  store._mutations = Object.create(null);
  store._wrappedGetters = Object.create(null);
  store._modulesNamespaceMap = Object.create(null);
  var state = store.state;
  // init all modules
  installModule(store, state, [], store._modules.root, true);
  // reset vm
  resetStoreVM(store, state, hot);
}

function resetStoreVM (store, state, hot) {
  var oldVm = store._vm;

  // bind store public getters
  store.getters = {};
  // reset local getters cache
  store._makeLocalGettersCache = Object.create(null);
  var wrappedGetters = store._wrappedGetters;
  var computed = {};
  forEachValue(wrappedGetters, function (fn, key) {
    // use computed to leverage its lazy-caching mechanism
    // direct inline function use will lead to closure preserving oldVm.
    // using partial to return function with only arguments preserved in closure environment.
    computed[key] = partial(fn, store);
    Object.defineProperty(store.getters, key, {
      get: function () { return store._vm[key]; },
      enumerable: true // for local getters
    });
  });

  // use a Vue instance to store the state tree
  // suppress warnings just in case the user has added
  // some funky global mixins
  var silent = Vue.config.silent;
  Vue.config.silent = true;
  store._vm = new Vue({
    data: {
      $$state: state
    },
    computed: computed
  });
  Vue.config.silent = silent;

  // enable strict mode for new vm
  if (store.strict) {
    enableStrictMode(store);
  }

  if (oldVm) {
    if (hot) {
      // dispatch changes in all subscribed watchers
      // to force getter re-evaluation for hot reloading.
      store._withCommit(function () {
        oldVm._data.$$state = null;
      });
    }
    Vue.nextTick(function () { return oldVm.$destroy(); });
  }
}

function installModule (store, rootState, path, module, hot) {
  var isRoot = !path.length;
  var namespace = store._modules.getNamespace(path);

  // register in namespace map
  if (module.namespaced) {
    if (store._modulesNamespaceMap[namespace] && ("development" !== 'production')) {
      console.error(("[vuex] duplicate namespace " + namespace + " for the namespaced module " + (path.join('/'))));
    }
    store._modulesNamespaceMap[namespace] = module;
  }

  // set state
  if (!isRoot && !hot) {
    var parentState = getNestedState(rootState, path.slice(0, -1));
    var moduleName = path[path.length - 1];
    store._withCommit(function () {
      if ((true)) {
        if (moduleName in parentState) {
          console.warn(
            ("[vuex] state field \"" + moduleName + "\" was overridden by a module with the same name at \"" + (path.join('.')) + "\"")
          );
        }
      }
      Vue.set(parentState, moduleName, module.state);
    });
  }

  var local = module.context = makeLocalContext(store, namespace, path);

  module.forEachMutation(function (mutation, key) {
    var namespacedType = namespace + key;
    registerMutation(store, namespacedType, mutation, local);
  });

  module.forEachAction(function (action, key) {
    var type = action.root ? key : namespace + key;
    var handler = action.handler || action;
    registerAction(store, type, handler, local);
  });

  module.forEachGetter(function (getter, key) {
    var namespacedType = namespace + key;
    registerGetter(store, namespacedType, getter, local);
  });

  module.forEachChild(function (child, key) {
    installModule(store, rootState, path.concat(key), child, hot);
  });
}

/**
 * make localized dispatch, commit, getters and state
 * if there is no namespace, just use root ones
 */
function makeLocalContext (store, namespace, path) {
  var noNamespace = namespace === '';

  var local = {
    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._actions[type]) {
          console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      return store.dispatch(type, payload)
    },

    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
      var args = unifyObjectStyle(_type, _payload, _options);
      var payload = args.payload;
      var options = args.options;
      var type = args.type;

      if (!options || !options.root) {
        type = namespace + type;
        if (( true) && !store._mutations[type]) {
          console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
          return
        }
      }

      store.commit(type, payload, options);
    }
  };

  // getters and state object must be gotten lazily
  // because they will be changed by vm update
  Object.defineProperties(local, {
    getters: {
      get: noNamespace
        ? function () { return store.getters; }
        : function () { return makeLocalGetters(store, namespace); }
    },
    state: {
      get: function () { return getNestedState(store.state, path); }
    }
  });

  return local
}

function makeLocalGetters (store, namespace) {
  if (!store._makeLocalGettersCache[namespace]) {
    var gettersProxy = {};
    var splitPos = namespace.length;
    Object.keys(store.getters).forEach(function (type) {
      // skip if the target getter is not match this namespace
      if (type.slice(0, splitPos) !== namespace) { return }

      // extract local getter type
      var localType = type.slice(splitPos);

      // Add a port to the getters proxy.
      // Define as getter property because
      // we do not want to evaluate the getters in this time.
      Object.defineProperty(gettersProxy, localType, {
        get: function () { return store.getters[type]; },
        enumerable: true
      });
    });
    store._makeLocalGettersCache[namespace] = gettersProxy;
  }

  return store._makeLocalGettersCache[namespace]
}

function registerMutation (store, type, handler, local) {
  var entry = store._mutations[type] || (store._mutations[type] = []);
  entry.push(function wrappedMutationHandler (payload) {
    handler.call(store, local.state, payload);
  });
}

function registerAction (store, type, handler, local) {
  var entry = store._actions[type] || (store._actions[type] = []);
  entry.push(function wrappedActionHandler (payload) {
    var res = handler.call(store, {
      dispatch: local.dispatch,
      commit: local.commit,
      getters: local.getters,
      state: local.state,
      rootGetters: store.getters,
      rootState: store.state
    }, payload);
    if (!isPromise(res)) {
      res = Promise.resolve(res);
    }
    if (store._devtoolHook) {
      return res.catch(function (err) {
        store._devtoolHook.emit('vuex:error', err);
        throw err
      })
    } else {
      return res
    }
  });
}

function registerGetter (store, type, rawGetter, local) {
  if (store._wrappedGetters[type]) {
    if ((true)) {
      console.error(("[vuex] duplicate getter key: " + type));
    }
    return
  }
  store._wrappedGetters[type] = function wrappedGetter (store) {
    return rawGetter(
      local.state, // local state
      local.getters, // local getters
      store.state, // root state
      store.getters // root getters
    )
  };
}

function enableStrictMode (store) {
  store._vm.$watch(function () { return this._data.$$state }, function () {
    if ((true)) {
      assert(store._committing, "do not mutate vuex store state outside mutation handlers.");
    }
  }, { deep: true, sync: true });
}

function getNestedState (state, path) {
  return path.reduce(function (state, key) { return state[key]; }, state)
}

function unifyObjectStyle (type, payload, options) {
  if (isObject(type) && type.type) {
    options = payload;
    payload = type;
    type = type.type;
  }

  if ((true)) {
    assert(typeof type === 'string', ("expects string as the type, but found " + (typeof type) + "."));
  }

  return { type: type, payload: payload, options: options }
}

function install (_Vue) {
  if (Vue && _Vue === Vue) {
    if ((true)) {
      console.error(
        '[vuex] already installed. Vue.use(Vuex) should be called only once.'
      );
    }
    return
  }
  Vue = _Vue;
  applyMixin(Vue);
}

/**
 * Reduce the code which written in Vue.js for getting the state.
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} states # Object's item can be a function which accept state and getters for param, you can do something for state and getters in it.
 * @param {Object}
 */
var mapState = normalizeNamespace(function (namespace, states) {
  var res = {};
  if (( true) && !isValidMap(states)) {
    console.error('[vuex] mapState: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(states).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedState () {
      var state = this.$store.state;
      var getters = this.$store.getters;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapState', namespace);
        if (!module) {
          return
        }
        state = module.context.state;
        getters = module.context.getters;
      }
      return typeof val === 'function'
        ? val.call(this, state, getters)
        : state[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for committing the mutation
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} mutations # Object's item can be a function which accept `commit` function as the first param, it can accept another params. You can commit mutation and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapMutations = normalizeNamespace(function (namespace, mutations) {
  var res = {};
  if (( true) && !isValidMap(mutations)) {
    console.error('[vuex] mapMutations: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(mutations).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedMutation () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // Get the commit method from store
      var commit = this.$store.commit;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
        if (!module) {
          return
        }
        commit = module.context.commit;
      }
      return typeof val === 'function'
        ? val.apply(this, [commit].concat(args))
        : commit.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for getting the getters
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} getters
 * @return {Object}
 */
var mapGetters = normalizeNamespace(function (namespace, getters) {
  var res = {};
  if (( true) && !isValidMap(getters)) {
    console.error('[vuex] mapGetters: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(getters).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    // The namespace has been mutated by normalizeNamespace
    val = namespace + val;
    res[key] = function mappedGetter () {
      if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
        return
      }
      if (( true) && !(val in this.$store.getters)) {
        console.error(("[vuex] unknown getter: " + val));
        return
      }
      return this.$store.getters[val]
    };
    // mark vuex getter for devtools
    res[key].vuex = true;
  });
  return res
});

/**
 * Reduce the code which written in Vue.js for dispatch the action
 * @param {String} [namespace] - Module's namespace
 * @param {Object|Array} actions # Object's item can be a function which accept `dispatch` function as the first param, it can accept anthor params. You can dispatch action and do any other things in this function. specially, You need to pass anthor params from the mapped function.
 * @return {Object}
 */
var mapActions = normalizeNamespace(function (namespace, actions) {
  var res = {};
  if (( true) && !isValidMap(actions)) {
    console.error('[vuex] mapActions: mapper parameter must be either an Array or an Object');
  }
  normalizeMap(actions).forEach(function (ref) {
    var key = ref.key;
    var val = ref.val;

    res[key] = function mappedAction () {
      var args = [], len = arguments.length;
      while ( len-- ) args[ len ] = arguments[ len ];

      // get dispatch function from store
      var dispatch = this.$store.dispatch;
      if (namespace) {
        var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
        if (!module) {
          return
        }
        dispatch = module.context.dispatch;
      }
      return typeof val === 'function'
        ? val.apply(this, [dispatch].concat(args))
        : dispatch.apply(this.$store, [val].concat(args))
    };
  });
  return res
});

/**
 * Rebinding namespace param for mapXXX function in special scoped, and return them by simple object
 * @param {String} namespace
 * @return {Object}
 */
var createNamespacedHelpers = function (namespace) { return ({
  mapState: mapState.bind(null, namespace),
  mapGetters: mapGetters.bind(null, namespace),
  mapMutations: mapMutations.bind(null, namespace),
  mapActions: mapActions.bind(null, namespace)
}); };

/**
 * Normalize the map
 * normalizeMap([1, 2, 3]) => [ { key: 1, val: 1 }, { key: 2, val: 2 }, { key: 3, val: 3 } ]
 * normalizeMap({a: 1, b: 2, c: 3}) => [ { key: 'a', val: 1 }, { key: 'b', val: 2 }, { key: 'c', val: 3 } ]
 * @param {Array|Object} map
 * @return {Object}
 */
function normalizeMap (map) {
  if (!isValidMap(map)) {
    return []
  }
  return Array.isArray(map)
    ? map.map(function (key) { return ({ key: key, val: key }); })
    : Object.keys(map).map(function (key) { return ({ key: key, val: map[key] }); })
}

/**
 * Validate whether given map is valid or not
 * @param {*} map
 * @return {Boolean}
 */
function isValidMap (map) {
  return Array.isArray(map) || isObject(map)
}

/**
 * Return a function expect two param contains namespace and map. it will normalize the namespace and then the param's function will handle the new namespace and the map.
 * @param {Function} fn
 * @return {Function}
 */
function normalizeNamespace (fn) {
  return function (namespace, map) {
    if (typeof namespace !== 'string') {
      map = namespace;
      namespace = '';
    } else if (namespace.charAt(namespace.length - 1) !== '/') {
      namespace += '/';
    }
    return fn(namespace, map)
  }
}

/**
 * Search a special module from store by namespace. if module not exist, print error message.
 * @param {Object} store
 * @param {String} helper
 * @param {String} namespace
 * @return {Object}
 */
function getModuleByNamespace (store, helper, namespace) {
  var module = store._modulesNamespaceMap[namespace];
  if (( true) && !module) {
    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
  }
  return module
}

// Credits: borrowed code from fcomb/redux-logger

function createLogger (ref) {
  if ( ref === void 0 ) ref = {};
  var collapsed = ref.collapsed; if ( collapsed === void 0 ) collapsed = true;
  var filter = ref.filter; if ( filter === void 0 ) filter = function (mutation, stateBefore, stateAfter) { return true; };
  var transformer = ref.transformer; if ( transformer === void 0 ) transformer = function (state) { return state; };
  var mutationTransformer = ref.mutationTransformer; if ( mutationTransformer === void 0 ) mutationTransformer = function (mut) { return mut; };
  var actionFilter = ref.actionFilter; if ( actionFilter === void 0 ) actionFilter = function (action, state) { return true; };
  var actionTransformer = ref.actionTransformer; if ( actionTransformer === void 0 ) actionTransformer = function (act) { return act; };
  var logMutations = ref.logMutations; if ( logMutations === void 0 ) logMutations = true;
  var logActions = ref.logActions; if ( logActions === void 0 ) logActions = true;
  var logger = ref.logger; if ( logger === void 0 ) logger = console;

  return function (store) {
    var prevState = deepCopy(store.state);

    if (typeof logger === 'undefined') {
      return
    }

    if (logMutations) {
      store.subscribe(function (mutation, state) {
        var nextState = deepCopy(state);

        if (filter(mutation, prevState, nextState)) {
          var formattedTime = getFormattedTime();
          var formattedMutation = mutationTransformer(mutation);
          var message = "mutation " + (mutation.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c prev state', 'color: #9E9E9E; font-weight: bold', transformer(prevState));
          logger.log('%c mutation', 'color: #03A9F4; font-weight: bold', formattedMutation);
          logger.log('%c next state', 'color: #4CAF50; font-weight: bold', transformer(nextState));
          endMessage(logger);
        }

        prevState = nextState;
      });
    }

    if (logActions) {
      store.subscribeAction(function (action, state) {
        if (actionFilter(action, state)) {
          var formattedTime = getFormattedTime();
          var formattedAction = actionTransformer(action);
          var message = "action " + (action.type) + formattedTime;

          startMessage(logger, message, collapsed);
          logger.log('%c action', 'color: #03A9F4; font-weight: bold', formattedAction);
          endMessage(logger);
        }
      });
    }
  }
}

function startMessage (logger, message, collapsed) {
  var startMessage = collapsed
    ? logger.groupCollapsed
    : logger.group;

  // render
  try {
    startMessage.call(logger, message);
  } catch (e) {
    logger.log(message);
  }
}

function endMessage (logger) {
  try {
    logger.groupEnd();
  } catch (e) {
    logger.log('—— log end ——');
  }
}

function getFormattedTime () {
  var time = new Date();
  return (" @ " + (pad(time.getHours(), 2)) + ":" + (pad(time.getMinutes(), 2)) + ":" + (pad(time.getSeconds(), 2)) + "." + (pad(time.getMilliseconds(), 3)))
}

function repeat (str, times) {
  return (new Array(times + 1)).join(str)
}

function pad (num, maxLength) {
  return repeat('0', maxLength - num.toString().length) + num
}

var index_cjs = {
  Store: Store,
  install: install,
  version: '3.6.2',
  mapState: mapState,
  mapMutations: mapMutations,
  mapGetters: mapGetters,
  mapActions: mapActions,
  createNamespacedHelpers: createNamespacedHelpers,
  createLogger: createLogger
};

module.exports = index_cjs;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 34:
/*!********************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/request.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.request = void 0;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11));
var _constant = __webpack_require__(/*! ./constant */ 35);
var _util = __webpack_require__(/*! ./util */ 36);
var _store = _interopRequireDefault(__webpack_require__(/*! @/store */ 37));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// 全局重试队列，用于保存需要重试的请求参数
var retryQueue = [];
var request = function request(options) {
  options.header = options.header || {};
  options.data = options.data || {};
  var storage = JSON.parse(uni.getStorageSync('vuex'));
  var token = storage.token;

  // 如果 token 存在且接口不在白名单中，则携带 token
  if (token && !_constant.whiteList.includes(options.url)) {
    options.header.token = token;
    // 同时也更新数据中的 token 字段（如有需要后端校验）
    options.data.token = token;
  }

  // 针对机器人相关请求，加入租户 id
  var userInfo = storage.userInfo;
  if (options.isRobot && userInfo && userInfo.card_info && !Array.isArray(userInfo.card_info)) {
    options.header['tenant-id'] = userInfo.card_info.first_agent_id || 0;
  }
  var requestTask = uni.request({
    url: options.isRobot ? _constant.robotUrl + options.url : _constant.baseUrl + options.url,
    method: options.method || 'GET',
    data: _objectSpread({
      app_type: 'weapp',
      app_type_name: '微信小程序',
      token: token && !_constant.whiteList.includes(options.url) ? token : ''
    }, (0, _util.filterParams)(options.data)),
    header: options.header,
    timeout: 1200000,
    enableChunked: !!options.data.stream,
    success: function success(res) {
      // 针对非流式返回的数据处理
      if (!options.data.stream) {
        // 请求成功
        if (res.data.code === 0 || res.data.code === 200) {
          typeof options.success === 'function' && options.success(!['', undefined].includes(res.data.data) ? res.data.data : true);
        }
        // token 无效或未登录，缓存当前请求并触发登录弹窗
        else if (res.data.code === -10010) {
          retryQueue.push(options);
          _store.default.dispatch('logout').then(function () {
            uni.$emit('openLoginPopup');
          });
        }
        // 其他错误情况，显示提示信息
        else {
          setTimeout(function () {
            uni.showToast({
              title: res.data.message || '请求出错',
              icon: 'none'
            });
          }, 100);
          console.log(res.data);
          typeof options.fail === 'function' && options.fail(res.data);
        }
      }
      // 针对流式请求的处理
      else {
        typeof options.success === 'function' && options.success();
      }
    },
    fail: function fail(error) {
      setTimeout(function () {
        uni.showToast({
          title: '网络错误，请稍后重试',
          icon: 'none'
        });
      }, 100);
      typeof options.fail === 'function' && options.fail(error);
    },
    complete: function complete() {
      typeof options.complete === 'function' && options.complete();
    }
  });

  // 针对流式请求的处理逻辑
  if (options.data.stream) {
    requestTask.onChunkReceived(function (chunk) {
      var data = (0, _util.arrayBufferToString)(chunk.data);
      var jsonStrings = data.match(/{[^}]+}/g);
      if (jsonStrings && jsonStrings.length) {
        jsonStrings.forEach(function (jsonStr) {
          try {
            var parsed = JSON.parse(jsonStr);
            uni.$emit('chunkReceived', parsed);
          } catch (e) {
            var defaultData = {
              role: 'assistant',
              content: '',
              id: "assistant_".concat(new Date().getTime())
            };
            uni.$emit('chunkReceived', defaultData);
          }
        });
      }
    });
  }
};

// 监听登录成功事件，重试之前未通过的请求并更新token
exports.request = request;
uni.$on('loginSuccess', function () {
  var newToken = _store.default.state.token;
  while (retryQueue.length > 0) {
    var options = retryQueue.shift();
    if (newToken && !_constant.whiteList.includes(options.url)) {
      options.header.token = newToken;
      options.data.token = newToken;
    }
    request(options);
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 35:
/*!*********************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/constant.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.whiteList = exports.robotUrl = exports.cdnUrl = exports.baseUrl = exports.aliyunWss = exports.aliyunUrl = void 0;
var baseUrl = 'https://niushop.yulongtianzi.com';
exports.baseUrl = baseUrl;
var robotUrl = 'https://agi.agiagi.cc';
exports.robotUrl = robotUrl;
var cdnUrl = 'https://cdn.agiagi.cc';
exports.cdnUrl = cdnUrl;
var aliyunUrl = 'https://nls-meta.cn-shanghai.aliyuncs.com';
exports.aliyunUrl = aliyunUrl;
var aliyunWss = 'wss://nls-gateway.cn-shanghai.aliyuncs.com/ws/v1';
exports.aliyunWss = aliyunWss;
var whiteList = ["/weapp/api/weapp/authCodeToOpenid", "/api/login/auth"];
exports.whiteList = whiteList;

/***/ }),

/***/ 36:
/*!*****************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/util.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.utctimestamp = exports.sleep = exports.parseStyle = exports.parseMsg = exports.isImageLink = exports.isAudioFile = exports.getTime = exports.formatTime = exports.formatNumber = exports.formatDate = exports.filterParams = exports.extractSpecs = exports.arrayBufferToString = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var _slicedToArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ 5));
var isAudioFile = function isAudioFile(filename) {
  var audioExtensions = ['.mp3', '.wav', '.ogg', '.flac', '.aac', '.m4a', '.wma', '.alac', '.opus'];
  var fileExtension = filename.toLowerCase().slice(-4);
  return audioExtensions.some(function (ext) {
    return fileExtension.endsWith(ext);
  });
};
exports.isAudioFile = isAudioFile;
var parseStyle = function parseStyle(style) {
  return Object.entries(style).filter(function (_ref) {
    var _ref2 = (0, _slicedToArray2.default)(_ref, 2),
      key = _ref2[0],
      value = _ref2[1];
    return value !== undefined;
  }).map(function (_ref3) {
    var _ref4 = (0, _slicedToArray2.default)(_ref3, 2),
      key = _ref4[0],
      value = _ref4[1];
    return "".concat(key, ":").concat(value);
  }).join(';');
};
exports.parseStyle = parseStyle;
var formatNumber = function formatNumber(value, digits) {
  var number = parseFloat(value);
  if (Number.isInteger(number)) {
    if (digits) {
      return number.toFixed(1);
    }
    return number.toString();
  }
  var stringValue = number.toFixed(2);
  if (stringValue.endsWith('.00')) {
    return parseInt(stringValue).toString();
  }
  if (stringValue.endsWith('0')) {
    return parseFloat(stringValue).toString();
  }
  return stringValue;
};
exports.formatNumber = formatNumber;
var formatDate = function formatDate(dateStr, format) {
  var date = new Date(dateStr);
  var year = date.getFullYear().toString();
  var month = (date.getMonth() + 1).toString().padStart(2, '0');
  var day = date.getDate().toString().padStart(2, '0');
  var hour = date.getHours().toString().padStart(2, '0');
  var minute = date.getMinutes().toString().padStart(2, '0');
  var seconds = date.getSeconds().toString().padStart(2, '0');
  return format.replace(/YYYY|MM|DD|hh|mm|ss/g, function (token) {
    switch (token) {
      case 'YYYY':
        return year;
      case 'MM':
        return month;
      case 'DD':
        return day;
      case 'hh':
        return hour;
      case 'mm':
        return minute;
      case 'ss':
        return seconds;
      default:
        return token;
    }
  });
};
exports.formatDate = formatDate;
var arrayBufferToString = function arrayBufferToString(buffer) {
  var uint8Array = new Uint8Array(buffer);
  // 将字节数组转换为字符串
  var binaryString = '';
  for (var i = 0; i < uint8Array.length; i++) {
    binaryString += String.fromCharCode(uint8Array[i]);
  }
  // 处理 UTF-8 编码中的多字节字符
  return decodeURIComponent(escape(binaryString));
};
exports.arrayBufferToString = arrayBufferToString;
var isImageLink = function isImageLink(url) {
  var imageExtensions = ['.jpg', '.jpeg', '.png', '.gif', '.bmp', '.webp'];
  return imageExtensions.some(function (ext) {
    return url.toLowerCase().endsWith(ext);
  });
};
exports.isImageLink = isImageLink;
var filterParams = function filterParams(params) {
  if (params && (0, _typeof2.default)(params) === "object") {
    Object.keys(params).forEach(function (key) {
      if (params[key] === "" || params[key] === null || params[key] === undefined) {
        delete params[key];
      } else if ((0, _typeof2.default)(params[key]) === "object") {
        filterParams(params[key]);
      }
    });
  }
  return params;
};
exports.filterParams = filterParams;
var formatTime = function formatTime(date) {
  var year = date.getFullYear();
  var month = date.getMonth() + 1;
  var day = date.getDate();
  var hour = date.getHours();
  var minute = date.getMinutes();
  var second = date.getSeconds();
  return "".concat([year, month, day].map(formatNumber).join('_'), "_").concat([hour, minute, second].map(formatNumber).join('_'));
};
exports.formatTime = formatTime;
var padding2 = function padding2(t) {
  if (t < 10) {
    return "0" + t;
  }
  return "" + t;
};
var utctimestamp = function utctimestamp() {
  var date = new Date();
  var YYYY = date.getUTCFullYear();
  var MM = padding2(date.getUTCMonth() + 1);
  var DD = padding2(date.getUTCDate());
  var HH = padding2(date.getUTCHours());
  var mm = padding2(date.getUTCMinutes());
  var ss = padding2(date.getUTCSeconds());
  return "".concat(YYYY, "-").concat(MM, "-").concat(DD, "T").concat(HH, ":").concat(mm, ":").concat(ss, "Z");
};
exports.utctimestamp = utctimestamp;
var sleep = function sleep(milSec) {
  return new Promise(function (resolve) {
    setTimeout(resolve, milSec);
  });
};
exports.sleep = sleep;
var parseMsg = function parseMsg(msg) {
  var parsedMsg = null;
  try {
    parsedMsg = JSON.parse(msg);
  } catch (e) {
    console.error('消息解析失败:', e);
  }
  return parsedMsg;
};
exports.parseMsg = parseMsg;
var getTime = function getTime(timestamp) {
  if (timestamp.toString().length === 10) {
    timestamp *= 1000;
  }
  var date = new Date(timestamp);
  var hours = date.getHours();
  var minutes = date.getMinutes();
  hours = hours < 10 ? '0' + hours : hours;
  minutes = minutes < 10 ? '0' + minutes : minutes;
  return "".concat(hours, ":").concat(minutes);
};
exports.getTime = getTime;
var extractSpecs = function extractSpecs() {
  var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  // 常见单位
  var unitPattern = '(?:g|kg|mg|ml|l|L|mL)';
  // 可选包装后缀
  var packPattern = '(?:盒|箱|瓶|罐|支|件)?';
  // 可选“*12罐”或“× 12 瓶”之类的乘积形式
  var multiplierPattern = '(?:[×*]\\s?\\d+\\s?(?:瓶|罐|件|包)?)?';

  // 拼接总体正则：数字（可带小数）+ 单位 + 可选包装 + 可选乘积
  var regex = new RegExp("\\d+(?:\\.\\d+)?".concat(unitPattern).concat(packPattern).concat(multiplierPattern), 'gi');

  // 返回所有匹配，若无则返回空数组
  return title.match(regex) || [];
};
exports.extractSpecs = extractSpecs;

/***/ }),

/***/ 37:
/*!******************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/store/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _vue = _interopRequireDefault(__webpack_require__(/*! vue */ 25));
var _vuex = _interopRequireDefault(__webpack_require__(/*! vuex */ 33));
var _request = __webpack_require__(/*! @/utils/request */ 34);
var _vuexPersistedstate = _interopRequireDefault(__webpack_require__(/*! vuex-persistedstate */ 38));
_vue.default.use(_vuex.default);
var _default = new _vuex.default.Store({
  state: {
    statusBarHeight: 0,
    safeAreaInsetBottom: 0,
    contractCount: 0,
    familyCount: 0,
    token: '',
    userInfo: null,
    tongueInfo: {
      images: [],
      description: '',
      image_analysis: [],
      constitution_type: '',
      constitution_features: []
    },
    AKID: '',
    AKKEY: '',
    APPKEY: '',
    voiceToken: '',
    member: {
      member_id: '',
      member_name: ''
    },
    basicInfo: [],
    aiDocterResult: {
      constitution_type: '',
      constitution_features: []
    },
    clockInfo: null,
    taskInfo: null,
    loss: '',
    socketTask: null,
    recommendScheme: null,
    addressInfo: null,
    nutritionData: null
  },
  mutations: {
    setStatusBarHeight: function setStatusBarHeight(state, height) {
      state.statusBarHeight = height;
    },
    setSafeAreaInsetBottom: function setSafeAreaInsetBottom(state, height) {
      state.safeAreaInsetBottom = height;
    },
    setContractCount: function setContractCount(state, contractCount) {
      state.contractCount = contractCount;
    },
    setFamilyCount: function setFamilyCount(state, familyCount) {
      state.familyCount = familyCount;
    },
    setToken: function setToken(state, token) {
      state.token = token;
    },
    setUserInfo: function setUserInfo(state, userInfo) {
      state.userInfo = userInfo;
    },
    setTongueInfo: function setTongueInfo(state, tongueInfo) {
      state.tongueInfo = tongueInfo;
    },
    setAKID: function setAKID(state, AKID) {
      state.AKID = AKID;
    },
    setAKKEY: function setAKKEY(state, AKKEY) {
      state.AKKEY = AKKEY;
    },
    setAPPKEY: function setAPPKEY(state, APPKEY) {
      state.APPKEY = APPKEY;
    },
    setVoiceToken: function setVoiceToken(state, voiceToken) {
      state.voiceToken = voiceToken;
    },
    setMember: function setMember(state, member) {
      state.member = member;
    },
    setBasicInfo: function setBasicInfo(state, basicInfo) {
      state.basicInfo = basicInfo;
    },
    setAiDocterResult: function setAiDocterResult(state, aiDocterResult) {
      state.aiDocterResult = aiDocterResult;
    },
    setTaskInfo: function setTaskInfo(state, taskInfo) {
      state.taskInfo = taskInfo;
    },
    setClockInfo: function setClockInfo(state, clockInfo) {
      state.clockInfo = clockInfo;
    },
    setLoss: function setLoss(state, loss) {
      state.loss = loss;
    },
    setSocketTask: function setSocketTask(state, socketTask) {
      state.socketTask = socketTask;
    },
    setRecommendScheme: function setRecommendScheme(state, recommendScheme) {
      state.recommendScheme = recommendScheme;
    },
    setAddressInfo: function setAddressInfo(state, addressInfo) {
      state.addressInfo = addressInfo;
    },
    setNutritionData: function setNutritionData(state, nutritionData) {
      state.nutritionData = nutritionData;
    }
  },
  actions: {
    getSystemInfo: function getSystemInfo(_ref) {
      var commit = _ref.commit;
      uni.getSystemInfo({
        success: function success(res) {
          commit('setStatusBarHeight', res.statusBarHeight);
          commit('setSafeAreaInsetBottom', res.safeAreaInsets.bottom);
        }
      });
    },
    getUserInfo: function getUserInfo(_ref2) {
      var commit = _ref2.commit;
      (0, _request.request)({
        url: '/api/member/info',
        method: 'POST',
        success: function success(res) {
          if (res) {
            commit('setUserInfo', res);
          }
        }
      });
    },
    login: function login(_ref3, params) {
      var commit = _ref3.commit,
        dispatch = _ref3.dispatch;
      (0, _request.request)({
        url: '/api/login/auth',
        method: 'POST',
        data: params,
        success: function success(res) {
          if (res) {
            commit('setToken', res.token);
            dispatch('getUserInfo');
          }
        }
      });
    },
    logout: function logout(_ref4) {
      var commit = _ref4.commit,
        state = _ref4.state;
      state.statusBarHeight = 0;
      state.safeAreaInsetBottom = 0;
      state.contractCount = 0;
      state.familyCount = 0;
      state.token = '';
      state.userInfo = null;
      state.tongueInfo = {
        images: [],
        description: '',
        image_analysis: [],
        constitution_type: '',
        constitution_features: []
      };
      state.AKID = '';
      state.AKKEY = '';
      state.APPKEY = '';
      state.voiceToken = '';
      state.member = {
        member_id: '',
        member_name: ''
      };
      state.basicInfo = [];
      state.aiDocterResult = {
        constitution_type: '',
        constitution_features: []
      };
      state.clockInfo = null;
      state.taskInfo = null;
      state.loss = '';
      state.socketTask = null;
      state.nutritionData = null;
      uni.removeStorageSync('vuex');
    }
  },
  plugins: [(0, _vuexPersistedstate.default)({
    storage: {
      getItem: function getItem(key) {
        return uni.getStorageSync(key);
      },
      setItem: function setItem(key, value) {
        return uni.setStorageSync(key, value);
      },
      removeItem: function removeItem(key) {
        return uni.removeStorageSync(key);
      }
    }
  })]
});
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 38:
/*!*******************************************************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/node_modules/vuex-persistedstate/dist/vuex-persistedstate.es.js ***!
  \*******************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var r = function r(_r) {
    return function (r) {
      return !!r && "object" == (0, _typeof2.default)(r);
    }(_r) && !function (r) {
      var t = Object.prototype.toString.call(r);
      return "[object RegExp]" === t || "[object Date]" === t || function (r) {
        return r.$$typeof === e;
      }(r);
    }(_r);
  },
  e = "function" == typeof Symbol && Symbol.for ? Symbol.for("react.element") : 60103;
function t(r, e) {
  return !1 !== e.clone && e.isMergeableObject(r) ? u(Array.isArray(r) ? [] : {}, r, e) : r;
}
function n(r, e, n) {
  return r.concat(e).map(function (r) {
    return t(r, n);
  });
}
function o(r) {
  return Object.keys(r).concat(function (r) {
    return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(r).filter(function (e) {
      return r.propertyIsEnumerable(e);
    }) : [];
  }(r));
}
function c(r, e) {
  try {
    return e in r;
  } catch (r) {
    return !1;
  }
}
function u(e, i, a) {
  (a = a || {}).arrayMerge = a.arrayMerge || n, a.isMergeableObject = a.isMergeableObject || r, a.cloneUnlessOtherwiseSpecified = t;
  var f = Array.isArray(i);
  return f === Array.isArray(e) ? f ? a.arrayMerge(e, i, a) : function (r, e, n) {
    var i = {};
    return n.isMergeableObject(r) && o(r).forEach(function (e) {
      i[e] = t(r[e], n);
    }), o(e).forEach(function (o) {
      (function (r, e) {
        return c(r, e) && !(Object.hasOwnProperty.call(r, e) && Object.propertyIsEnumerable.call(r, e));
      })(r, o) || (i[o] = c(r, o) && n.isMergeableObject(e[o]) ? function (r, e) {
        if (!e.customMerge) return u;
        var t = e.customMerge(r);
        return "function" == typeof t ? t : u;
      }(o, n)(r[o], e[o], n) : t(e[o], n));
    }), i;
  }(e, i, a) : t(i, a);
}
u.all = function (r, e) {
  if (!Array.isArray(r)) throw new Error("first argument should be an array");
  return r.reduce(function (r, t) {
    return u(r, t, e);
  }, {});
};
var i = u;
function a(r) {
  var e = (r = r || {}).storage || window && window.localStorage,
    t = r.key || "vuex";
  function n(r, e) {
    var t = e.getItem(r);
    try {
      return "string" == typeof t ? JSON.parse(t) : "object" == (0, _typeof2.default)(t) ? t : void 0;
    } catch (r) {}
  }
  function o() {
    return !0;
  }
  function c(r, e, t) {
    return t.setItem(r, JSON.stringify(e));
  }
  function u(r, e) {
    return Array.isArray(e) ? e.reduce(function (e, t) {
      return function (r, e, t, n) {
        return !/^(__proto__|constructor|prototype)$/.test(e) && ((e = e.split ? e.split(".") : e.slice(0)).slice(0, -1).reduce(function (r, e) {
          return r[e] = r[e] || {};
        }, r)[e.pop()] = t), r;
      }(e, t, (n = r, void 0 === (n = ((o = t).split ? o.split(".") : o).reduce(function (r, e) {
        return r && r[e];
      }, n)) ? void 0 : n));
      var n, o;
    }, {}) : r;
  }
  function a(r) {
    return function (e) {
      return r.subscribe(e);
    };
  }
  (r.assertStorage || function () {
    e.setItem("@@", 1), e.removeItem("@@");
  })(e);
  var f,
    s = function s() {
      return (r.getState || n)(t, e);
    };
  return r.fetchBeforeUse && (f = s()), function (n) {
    r.fetchBeforeUse || (f = s()), "object" == (0, _typeof2.default)(f) && null !== f && (n.replaceState(r.overwrite ? f : i(n.state, f, {
      arrayMerge: r.arrayMerger || function (r, e) {
        return e;
      },
      clone: !1
    })), (r.rehydrated || function () {})(n)), (r.subscriber || a)(n)(function (n, i) {
      (r.filter || o)(n) && (r.setState || c)(t, (r.reducer || u)(i, r.paths), e);
    });
  };
}
var _default = a;
exports.default = _default;

/***/ }),

/***/ 39:
/*!******************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/token.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getTokenInner = exports.getToken = void 0;
var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ 30));
var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 32));
var _hmacsha = __webpack_require__(/*! ./hmacsha1 */ 40);
var _uuid = __webpack_require__(/*! ./uuid */ 41);
var _util = __webpack_require__(/*! ./util */ 36);
var _constant = __webpack_require__(/*! ./constant */ 35);
/*
token.js

Copyright 1999-present Alibaba Group Holding Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

function normalizeParam(param) {
  var result = "";
  for (var k in param) {
    result += "".concat(encodeURIComponent(k), "=").concat(encodeURIComponent(param[k]), "&");
  }
  return result.substring(0, result.length - 1);
}
var getTokenInner = /*#__PURE__*/function () {
  var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(akid, akkey, url) {
    var param, norm, encodedNorm, sig, finalParam;
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            if (!url) {
              url = _constant.aliyunUrl;
            }
            param = {
              AccessKeyId: akid,
              Action: "CreateToken",
              Format: "JSON",
              RegionId: "cn-shanghai",
              SignatureMethod: "HMAC-SHA1",
              SignatureNonce: (0, _uuid.uuid)(),
              SignatureVersion: "1.0",
              Timestamp: (0, _util.utctimestamp)(),
              Version: "2019-02-28"
            };
            norm = normalizeParam(param);
            encodedNorm = "GET&" + encodeURIComponent("/") + "&" + encodeURIComponent(norm);
            sig = (0, _hmacsha.b64_hmac_sha1)("".concat(akkey, "&"), encodedNorm);
            finalParam = "Signature=" + encodeURIComponent(sig) + "&" + norm;
            return _context.abrupt("return", new Promise(function (reslove, reject) {
              uni.request({
                url: url + "/?" + finalParam,
                success: function success(res) {
                  reslove(res);
                },
                fail: function fail(res) {
                  reject(res);
                }
              });
            }));
          case 7:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return function getTokenInner(_x, _x2, _x3) {
    return _ref.apply(this, arguments);
  };
}();
exports.getTokenInner = getTokenInner;
var getToken = /*#__PURE__*/function () {
  var _ref2 = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee4(akid, akkey) {
    var cacheKey;
    return _regenerator.default.wrap(function _callee4$(_context4) {
      while (1) {
        switch (_context4.prev = _context4.next) {
          case 0:
            cacheKey = akid + "&" + akkey;
            return _context4.abrupt("return", new Promise(function (resolve, reject) {
              uni.getStorage({
                key: cacheKey,
                encrypt: true,
                success: function () {
                  var _success = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(res) {
                    var obj, now, tokenObj;
                    return _regenerator.default.wrap(function _callee2$(_context2) {
                      while (1) {
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            _context2.prev = 0;
                            obj = JSON.parse(res.data);
                            if (!(obj.Id && obj.ExpireTime)) {
                              _context2.next = 11;
                              break;
                            }
                            now = Date.now();
                            console.log("now is ".concat(now, " expire time ").concat(obj.ExpireTime * 1000));
                            if (!(now > obj.ExpireTime * 1000)) {
                              _context2.next = 8;
                              break;
                            }
                            console.log("expired....");
                            throw new Error();
                          case 8:
                            resolve(obj.Id);
                            _context2.next = 13;
                            break;
                          case 11:
                            console.log("get data failed: " + res.data);
                            throw new Error();
                          case 13:
                            _context2.next = 33;
                            break;
                          case 15:
                            _context2.prev = 15;
                            _context2.t0 = _context2["catch"](0);
                            console.log("refresh token...");
                            _context2.prev = 18;
                            _context2.next = 21;
                            return getTokenInner(akid, akkey);
                          case 21:
                            tokenObj = _context2.sent;
                            if (!(tokenObj.data && tokenObj.data.Token && tokenObj.data.Token.Id && tokenObj.data.Token.ExpireTime)) {
                              _context2.next = 26;
                              break;
                            }
                            uni.setStorage({
                              key: cacheKey,
                              data: JSON.stringify(tokenObj.data.Token),
                              encrypt: true,
                              success: function success(res) {
                                console.log("cache token done");
                              },
                              fail: function fail(res) {
                                console.log("set storage failed");
                              },
                              complete: function complete() {
                                resolve(tokenObj.data.Token.Id);
                              }
                            });
                            _context2.next = 28;
                            break;
                          case 26:
                            console.log("token invalid:" + JSON.stringify(tokenObj));
                            throw new Error("response result invalid:" + JSON.stringify(tokenObj));
                          case 28:
                            _context2.next = 33;
                            break;
                          case 30:
                            _context2.prev = 30;
                            _context2.t1 = _context2["catch"](18);
                            reject(_context2.t1);
                          case 33:
                          case "end":
                            return _context2.stop();
                        }
                      }
                    }, _callee2, null, [[0, 15], [18, 30]]);
                  }));
                  function success(_x6) {
                    return _success.apply(this, arguments);
                  }
                  return success;
                }(),
                fail: function () {
                  var _fail = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(res) {
                    var tokenObj;
                    return _regenerator.default.wrap(function _callee3$(_context3) {
                      while (1) {
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            console.log('错误', res);
                            // try {
                            _context3.next = 3;
                            return getTokenInner(akid, akkey);
                          case 3:
                            tokenObj = _context3.sent;
                            if (!(tokenObj.data && tokenObj.data.Token && tokenObj.data.Token.Id && tokenObj.data.Token.ExpireTime)) {
                              _context3.next = 8;
                              break;
                            }
                            uni.setStorage({
                              key: cacheKey,
                              data: JSON.stringify(tokenObj.data.Token),
                              encrypt: true,
                              fail: function fail(res) {
                                console.log("set storage failed");
                              },
                              complete: function complete() {
                                resolve(tokenObj.data.Token.Id);
                              }
                            });
                            _context3.next = 10;
                            break;
                          case 8:
                            console.log("token invalid:" + JSON.stringify(tokenObj));
                            throw new Error("response result invalid:" + JSON.stringify(tokenObj));
                          case 10:
                          case "end":
                            return _context3.stop();
                        }
                      }
                    }, _callee3);
                  }));
                  function fail(_x7) {
                    return _fail.apply(this, arguments);
                  }
                  return fail;
                }()
              });
            }));
          case 2:
          case "end":
            return _context4.stop();
        }
      }
    }, _callee4);
  }));
  return function getToken(_x4, _x5) {
    return _ref2.apply(this, arguments);
  };
}();
exports.getToken = getToken;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 4:
/*!**********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/interopRequireDefault.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    "default": obj
  };
}
module.exports = _interopRequireDefault, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 40:
/*!*********************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/hmacsha1.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* OAuthSimple
* A simpler version of OAuth
*
* author:     jr conlin
* mail:       src@anticipatr.com
* copyright:  unitedHeroes.net
* version:    1.0
* url:        http://unitedHeroes.net/OAuthSimple
*
* Copyright (c) 2009, unitedHeroes.net
* All rights reserved.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that the following conditions are met:
*     * Redistributions of source code must retain the above copyright
*       notice, this list of conditions and the following disclaimer.
*     * Redistributions in binary form must reproduce the above copyright
*       notice, this list of conditions and the following disclaimer in the
*       documentation and/or other materials provided with the distribution.
*     * Neither the name of the unitedHeroes.net nor the
*       names of its contributors may be used to endorse or promote products
*       derived from this software without specific prior written permission.
*
* THIS SOFTWARE IS PROVIDED BY UNITEDHEROES.NET ''AS IS'' AND ANY
* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL UNITEDHEROES.NET BE LIABLE FOR ANY
* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/
/**
* Computes a HMAC-SHA1 code.
*
* @param {string} k Secret key.
* @param {string} d Data to be hashed.
* @return {string} The hashed string.
*/
function b64_hmac_sha1(k, d, _p, _z) {
  // heavily optimized and compressed version of http://pajhome.org.uk/crypt/md5/sha1.js
  // _p = b64pad, _z = character size; not used here but I left them available just in case
  if (!_p) {
    _p = '=';
  }
  if (!_z) {
    _z = 8;
  }
  function _f(t, b, c, d) {
    if (t < 20) {
      return b & c | ~b & d;
    }
    if (t < 40) {
      return b ^ c ^ d;
    }
    if (t < 60) {
      return b & c | b & d | c & d;
    }
    return b ^ c ^ d;
  }
  function _k(t) {
    return t < 20 ? 1518500249 : t < 40 ? 1859775393 : t < 60 ? -1894007588 : -899497514;
  }
  function _s(x, y) {
    var l = (x & 0xFFFF) + (y & 0xFFFF),
      m = (x >> 16) + (y >> 16) + (l >> 16);
    return m << 16 | l & 0xFFFF;
  }
  function _r(n, c) {
    return n << c | n >>> 32 - c;
  }
  function _c(x, l) {
    x[l >> 5] |= 0x80 << 24 - l % 32;
    x[(l + 64 >> 9 << 4) + 15] = l;
    var w = [80],
      a = 1732584193,
      b = -271733879,
      c = -1732584194,
      d = 271733878,
      e = -1009589776;
    for (var i = 0; i < x.length; i += 16) {
      var o = a,
        p = b,
        q = c,
        r = d,
        s = e;
      for (var j = 0; j < 80; j++) {
        if (j < 16) {
          w[j] = x[i + j];
        } else {
          w[j] = _r(w[j - 3] ^ w[j - 8] ^ w[j - 14] ^ w[j - 16], 1);
        }
        var t = _s(_s(_r(a, 5), _f(j, b, c, d)), _s(_s(e, w[j]), _k(j)));
        e = d;
        d = c;
        c = _r(b, 30);
        b = a;
        a = t;
      }
      a = _s(a, o);
      b = _s(b, p);
      c = _s(c, q);
      d = _s(d, r);
      e = _s(e, s);
    }
    return [a, b, c, d, e];
  }
  function _b(s) {
    var b = [],
      m = (1 << _z) - 1;
    for (var i = 0; i < s.length * _z; i += _z) {
      b[i >> 5] |= (s.charCodeAt(i / 8) & m) << 32 - _z - i % 32;
    }
    return b;
  }
  function _h(k, d) {
    var b = _b(k);
    if (b.length > 16) {
      b = _c(b, k.length * _z);
    }
    var p = [16],
      o = [16];
    for (var i = 0; i < 16; i++) {
      p[i] = b[i] ^ 0x36363636;
      o[i] = b[i] ^ 0x5C5C5C5C;
    }
    var h = _c(p.concat(_b(d)), 512 + d.length * _z);
    return _c(o.concat(h), 512 + 160);
  }
  function _n(b) {
    var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
      s = '';
    for (var i = 0; i < b.length * 4; i += 3) {
      var r = (b[i >> 2] >> 8 * (3 - i % 4) & 0xFF) << 16 | (b[i + 1 >> 2] >> 8 * (3 - (i + 1) % 4) & 0xFF) << 8 | b[i + 2 >> 2] >> 8 * (3 - (i + 2) % 4) & 0xFF;
      for (var j = 0; j < 4; j++) {
        if (i * 8 + j * 6 > b.length * 32) {
          s += _p;
        } else {
          s += t.charAt(r >> 6 * (3 - j) & 0x3F);
        }
      }
    }
    return s;
  }
  function _x(k, d) {
    return _n(_h(k, d));
  }
  return _x(k, d);
}
module.exports = {
  b64_hmac_sha1: b64_hmac_sha1
};

/***/ }),

/***/ 41:
/*!*****************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/uuid.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var uuid = function uuid(format) {
  var s = [];
  var hexDigits = "0123456789abcdef";
  for (var i = 0; i < 36; i++) {
    s[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);
  }
  s[14] = "4";
  s[19] = hexDigits.substr(s[19] & 0x3 | 0x8, 1);
  s[8] = s[13] = s[18] = s[23] = "-";
  var uuid = s.join("");
  if (format) {
    return uuid.split("-").join("");
  }
  return uuid;
};
module.exports = {
  uuid: uuid
};

/***/ }),

/***/ 42:
/*!******************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/voice.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni, wx) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initVoice = initVoice;
exports.onVoiceEnded = onVoiceEnded;
exports.onVoicePlay = onVoicePlay;
exports.pauseVoice = pauseVoice;
exports.playVoice = playVoice;
exports.resumeVoice = resumeVoice;
var _regenerator = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/regenerator */ 30));
var _asyncToGenerator2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 32));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 24));
var _util = __webpack_require__(/*! @/utils/util */ 36);
var _constant = __webpack_require__(/*! @/utils/constant */ 35);
var _tts = _interopRequireDefault(__webpack_require__(/*! @/utils/tts */ 43));
var fs = uni.getFileSystemManager();
var Voice = /*#__PURE__*/function () {
  function Voice(appkey, token) {
    (0, _classCallCheck2.default)(this, Voice);
    this.tts = new _tts.default({
      url: _constant.aliyunWss,
      appkey: appkey,
      token: token
    });
    this.ctx = null;
    this.onEndedCallback = null;
    this.onPlayCallback = null;
    this.initListeners();
  }
  (0, _createClass2.default)(Voice, [{
    key: "initListeners",
    value: function initListeners() {
      var _this = this;
      this.tts.on('meta', function (msg) {
        console.log('客户端收到元信息:', msg);
      });
      this.tts.on('data', function (msg) {
        console.log("\u63A5\u6536\u6570\u636E\u5927\u5C0F:".concat(msg.byteLength));
        if (_this.saveFile) {
          try {
            fs.appendFileSync(_this.saveFile, msg, 'binary');
          } catch (e) {
            console.error(e);
          }
        }
      });
      this.tts.on('completed', /*#__PURE__*/function () {
        var _ref = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(msg) {
          return _regenerator.default.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  console.log('客户端收到完成事件:', msg);
                  _context.next = 3;
                  return (0, _util.sleep)(500);
                case 3:
                  fs.close({
                    fd: _this.saveFd,
                    success: function success() {
                      _this.ctx = wx.createInnerAudioContext();
                      _this.ctx.autoplay = true;
                      _this.ctx.src = _this.saveFile;
                      uni.hideLoading();
                      _this.ctx.onPlay(function () {
                        console.log('开始播放音频...');
                        if (_this.onPlayCallback) {
                          _this.onPlayCallback(); // 播放开始回调
                        }
                      });

                      _this.ctx.onError(function (res) {
                        console.error(res.errMsg, res.errCode);
                        fs.unlink({
                          filePath: _this.saveFile,
                          success: function success() {
                            _this.saveFile = null;
                            _this.saveFd = null;
                          }
                        });
                      });
                      _this.ctx.onEnded(function () {
                        console.log('播放结束');
                        if (_this.onEndedCallback) {
                          _this.onEndedCallback();
                        }
                        fs.unlink({
                          filePath: _this.saveFile,
                          success: function success() {
                            console.log("\u5220\u9664\u6587\u4EF6".concat(_this.saveFile, "\u6210\u529F"));
                            _this.saveFile = null;
                            _this.saveFd = null;
                          },
                          failed: function failed(err) {
                            console.error('删除文件失败: ' + err.errMsg);
                          }
                        });
                      });
                    },
                    fail: function fail(err) {
                      console.error('文件关闭错误: ' + err.errMsg);
                    }
                  });
                case 4:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));
        return function (_x) {
          return _ref.apply(this, arguments);
        };
      }());
      this.tts.on('closed', function () {
        console.log('客户端收到连接关闭事件');
      });
      this.tts.on('failed', function (msg) {
        console.error('客户端收到错误事件:', msg);
      });
    }
  }, {
    key: "play",
    value: function () {
      var _play = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee3(content) {
        var _this2 = this;
        var save, savePath;
        return _regenerator.default.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                uni.showLoading({
                  title: '阿济分析中...',
                  mask: true
                });
                save = (0, _util.formatTime)(new Date()) + '.wav';
                savePath = wx.env.USER_DATA_PATH + '/' + save;
                fs.open({
                  filePath: savePath,
                  flag: 'a+',
                  success: function () {
                    var _success = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(res) {
                      var param;
                      return _regenerator.default.wrap(function _callee2$(_context2) {
                        while (1) {
                          switch (_context2.prev = _context2.next) {
                            case 0:
                              _this2.saveFd = res.fd;
                              _this2.saveFile = savePath;
                              param = _this2.tts.defaultStartParams();
                              param.text = content.replace(/#/g, '');
                              param.voice = 'zhitian_emo';
                              _context2.prev = 5;
                              _context2.next = 8;
                              return _this2.tts.start(param);
                            case 8:
                              _context2.next = 13;
                              break;
                            case 10:
                              _context2.prev = 10;
                              _context2.t0 = _context2["catch"](5);
                              console.error('语音合成启动错误: ' + _context2.t0);
                            case 13:
                            case "end":
                              return _context2.stop();
                          }
                        }
                      }, _callee2, null, [[5, 10]]);
                    }));
                    function success(_x3) {
                      return _success.apply(this, arguments);
                    }
                    return success;
                  }(),
                  fail: function fail(err) {
                    console.error("\u6253\u5F00\u6587\u4EF6".concat(savePath, "\u5931\u8D25:").concat(err.errMsg));
                  }
                });
              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3);
      }));
      function play(_x2) {
        return _play.apply(this, arguments);
      }
      return play;
    }()
  }, {
    key: "onEnded",
    value: function onEnded(callback) {
      this.onEndedCallback = callback;
    }
  }, {
    key: "onPlay",
    value: function onPlay(callback) {
      this.onPlayCallback = callback;
    }
  }, {
    key: "pause",
    value: function pause() {
      if (this.ctx && this.ctx.pause) {
        this.ctx.pause();
        console.log('音频已暂停');
      }
    }
  }, {
    key: "resume",
    value: function resume() {
      if (this.ctx && this.ctx.play) {
        this.ctx.play();
        console.log('音频恢复播放');
      }
    }
  }]);
  return Voice;
}(); // 单例及方法暴露
var voiceInstance = null;
function initVoice(appkey, token) {
  if (!voiceInstance) {
    voiceInstance = new Voice(appkey, token);
  }
  return voiceInstance;
}
function playVoice(content) {
  if (voiceInstance) {
    voiceInstance.play(content);
  } else {
    console.error("Voice 模块尚未初始化，请先调用 initVoice。");
  }
}
function pauseVoice() {
  if (voiceInstance) {
    voiceInstance.pause();
  }
}
function resumeVoice() {
  if (voiceInstance) {
    voiceInstance.resume();
  }
}
function onVoiceEnded(callback) {
  if (voiceInstance) {
    voiceInstance.onEnded(callback);
  }
}
function onVoicePlay(callback) {
  if (voiceInstance) {
    voiceInstance.onPlay(callback);
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),

/***/ 43:
/*!****************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/tts.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
tts.js

Copyright 1999-present Alibaba Group Holding Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/



var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 30);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 32);
var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var NlsClient = __webpack_require__(/*! ./nls */ 44);
var EventBus = __webpack_require__(/*! ./eventbus */ 45);
var SpeechSynthesizer = /*#__PURE__*/function () {
  function SpeechSynthesizer(config) {
    _classCallCheck(this, SpeechSynthesizer);
    this._event = new EventBus();
    this._config = config;
  }
  _createClass(SpeechSynthesizer, [{
    key: "defaultStartParams",
    value: function defaultStartParams(voice) {
      return {
        voice: voice,
        format: "wav",
        sample_rate: 16000,
        volume: 50,
        speech_rate: 0,
        pitch_rate: 0,
        enable_subtitle: false
      };
    }
  }, {
    key: "on",
    value: function on(which, handler) {
      this._event.off(which);
      this._event.on(which, handler);
    }
  }, {
    key: "start",
    value: function () {
      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(param) {
        var _this = this;
        var req;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this._client = new NlsClient(this._config);
                this._taskid = this._client.uuid();
                req = {
                  header: {
                    message_id: this._client.uuid(),
                    task_id: this._taskid,
                    namespace: "SpeechSynthesizer",
                    name: "StartSynthesis",
                    appkey: this._config.appkey
                  },
                  payload: param,
                  context: this._client.defaultContext()
                };
                return _context2.abrupt("return", new Promise( /*#__PURE__*/function () {
                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {
                    return _regeneratorRuntime.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.prev = 0;
                            _context.next = 3;
                            return _this._client.start(
                            //onmessage
                            function (msg, isBinary) {
                              if (!isBinary) {
                                var str = msg.toString();
                                var msgObj = JSON.parse(str);
                                if (msgObj.header.name === "MetaInfo") {
                                  _this._event.emit("meta", str);
                                } else if (msgObj.header.name === "SynthesisCompleted") {
                                  _this._client.shutdown();
                                  _this._client = null;
                                  _this._event.emit("completed", str);
                                  resolve(str);
                                } else if (msgObj.header.name === "TaskFailed") {
                                  _this._client.shutdown();
                                  _this._client = null;
                                  _this._event.emit("TaskFailed", str);
                                  _this._event.emit("failed", str);
                                  reject(str);
                                }
                              } else {
                                _this._event.emit("data", msg);
                              }
                            },
                            //onclose
                            function () {
                              _this._event.emit("closed");
                            });
                          case 3:
                            _this._client.send(JSON.stringify(req), false);
                            _context.next = 9;
                            break;
                          case 6:
                            _context.prev = 6;
                            _context.t0 = _context["catch"](0);
                            reject(_context.t0);
                          case 9:
                          case "end":
                            return _context.stop();
                        }
                      }
                    }, _callee, null, [[0, 6]]);
                  }));
                  return function (_x2, _x3) {
                    return _ref.apply(this, arguments);
                  };
                }()));
              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function start(_x) {
        return _start.apply(this, arguments);
      }
      return start;
    }()
  }, {
    key: "shutdown",
    value: function shutdown() {
      if (this._client == null) {
        return;
      }
      this._client.shutdown();
    }
  }]);
  return SpeechSynthesizer;
}();
module.exports = SpeechSynthesizer;

/***/ }),

/***/ 44:
/*!****************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/nls.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(wx) {/*
nls.js

Copyright 1999-present Alibaba Group Holding Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/


var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var _uuid = __webpack_require__(/*! ./uuid */ 41).uuid;
var NlsClient = /*#__PURE__*/function () {
  function NlsClient(config) {
    _classCallCheck(this, NlsClient);
    if (!config || !config.url || !config.appkey || !config.token) {
      throw new Error("invalid config!");
    }
    this._config = config;
  }
  _createClass(NlsClient, [{
    key: "start",
    value: function start(onmessage, onclose) {
      var _this = this;
      if (typeof onmessage !== 'function') {
        throw new Error("expect function onmessage");
      }
      if (typeof onclose != 'function') {
        throw new Error("expect function onclose");
      }
      this._ws = wx.connectSocket({
        url: this._config.url,
        tcpNoDelay: true,
        header: {
          "X-NLS-Token": this._config.token
        }
      });
      this._ws.onMessage(function (res) {
        if (typeof res.data === "string") {
          onmessage(res.data, false);
        } else {
          onmessage(res.data, true);
        }
      });
      this._ws.onClose(function (code, reason) {
        onclose(code, reason);
      });
      return new Promise(function (resolve, reject) {
        _this._ws.onOpen(function (res) {
          resolve(res);
        });
        _this._ws.onError(function (errMsg) {
          reject(errMsg);
        });
      });
    }
  }, {
    key: "send",
    value: function send(data, isBinary) {
      if (this._ws == null) {
        return;
      }
      this._ws.send({
        data: data
      });
    }
  }, {
    key: "uuid",
    value: function uuid() {
      return _uuid(true);
    }
  }, {
    key: "shutdown",
    value: function shutdown() {
      if (this._ws == null) {
        return;
      }
      this._ws.close();
    }
  }, {
    key: "defaultContext",
    value: function defaultContext() {
      return {
        sdk: {
          name: "nls-wx-sdk",
          version: "0.0.1",
          language: "wxjs"
        }
      };
    }
  }]);
  return NlsClient;
}();
module.exports = NlsClient;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),

/***/ 45:
/*!*********************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/eventbus.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
/*
    from github: https://github.com/littlebaozi/EventEmitter
    author: littlebaozi
    license: unknown
*/
var EventBus = /*#__PURE__*/function () {
  "use strict";

  function EventBus() {
    _classCallCheck(this, EventBus);
  }
  _createClass(EventBus, [{
    key: "on",
    value:
    // 订阅
    function on(event, fn, context) {
      // 判断fn是否是函数
      if (typeof fn != "function") {
        console.error('fn must be a function');
        return;
      }
      // 将event的fn存放在store中
      this._stores = this._stores || {};
      (this._stores[event] = this._stores[event] || []).push({
        cb: fn,
        ctx: context
      });
    }

    // 发布
  }, {
    key: "emit",
    value: function emit(event) {
      this._stores = this._stores || {};
      var store = this._stores[event],
        args;
      // 遍历执行事件
      if (store) {
        store = store.slice(0);
        args = [].slice.call(arguments, 1); //获取传入的参数，https://segmentfault.com/q/1010000005643934

        for (var i = 0, len = store.length; i < len; i++) {
          store[i].cb.apply(store[i].ctx, args);
        }
      }
    }

    // 注销
  }, {
    key: "off",
    value: function off(event, fn) {
      this._stores = this._stores || {};

      // 删除所有
      if (!arguments.length) {
        this._stores = [];
        return;
      }
      var store = this._stores[event];
      if (!store) {
        return;
      }

      // 删除指定event
      if (arguments.length === 1) {
        delete this._stores[event];
        return;
      }

      // 删除指定fn
      for (var i = 0, len = store.length; i < len; i++) {
        if (fn === store[i].cb) {
          store.splice(i, 1); //splice slice
        }
      }
    }
  }]);
  return EventBus;
}();
module.exports = EventBus;

/***/ }),

/***/ 48:
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return normalizeComponent; });
/* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

function normalizeComponent (
  scriptExports,
  render,
  staticRenderFns,
  functionalTemplate,
  injectStyles,
  scopeId,
  moduleIdentifier, /* server only */
  shadowMode, /* vue-cli only */
  components, // fixed by xxxxxx auto components
  renderjs // fixed by xxxxxx renderjs
) {
  // Vue.extend constructor export interop
  var options = typeof scriptExports === 'function'
    ? scriptExports.options
    : scriptExports

  // fixed by xxxxxx auto components
  if (components) {
    if (!options.components) {
      options.components = {}
    }
    var hasOwn = Object.prototype.hasOwnProperty
    for (var name in components) {
      if (hasOwn.call(components, name) && !hasOwn.call(options.components, name)) {
        options.components[name] = components[name]
      }
    }
  }
  // fixed by xxxxxx renderjs
  if (renderjs) {
    if(typeof renderjs.beforeCreate === 'function'){
			renderjs.beforeCreate = [renderjs.beforeCreate]
		}
    (renderjs.beforeCreate || (renderjs.beforeCreate = [])).unshift(function() {
      this[renderjs.__module] = this
    });
    (options.mixins || (options.mixins = [])).push(renderjs)
  }

  // render functions
  if (render) {
    options.render = render
    options.staticRenderFns = staticRenderFns
    options._compiled = true
  }

  // functional template
  if (functionalTemplate) {
    options.functional = true
  }

  // scopedId
  if (scopeId) {
    options._scopeId = 'data-v-' + scopeId
  }

  var hook
  if (moduleIdentifier) { // server build
    hook = function (context) {
      // 2.3 injection
      context =
        context || // cached call
        (this.$vnode && this.$vnode.ssrContext) || // stateful
        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
      // 2.2 with runInNewContext: true
      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
        context = __VUE_SSR_CONTEXT__
      }
      // inject component styles
      if (injectStyles) {
        injectStyles.call(this, context)
      }
      // register component module identifier for async chunk inferrence
      if (context && context._registeredComponents) {
        context._registeredComponents.add(moduleIdentifier)
      }
    }
    // used by ssr in case component is cached and beforeCreate
    // never gets called
    options._ssrRegister = hook
  } else if (injectStyles) {
    hook = shadowMode
      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }
      : injectStyles
  }

  if (hook) {
    if (options.functional) {
      // for template-only hot-reload because in that case the render fn doesn't
      // go through the normalizer
      options._injectStyles = hook
      // register for functioal component in vue file
      var originalRender = options.render
      options.render = function renderWithStyleInjection (h, context) {
        hook.call(context)
        return originalRender(h, context)
      }
    } else {
      // inject component registration as beforeCreate hook
      var existing = options.beforeCreate
      options.beforeCreate = existing
        ? [].concat(existing, hook)
        : [hook]
    }
  }

  return {
    exports: scriptExports,
    options: options
  }
}


/***/ }),

/***/ 49:
/*!****************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/uni.promisify.adaptor.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(uni) {var _typeof = __webpack_require__(/*! @babel/runtime/helpers/typeof */ 13);
uni.addInterceptor({
  returnValue: function returnValue(res) {
    if (!(!!res && (_typeof(res) === "object" || typeof res === "function") && typeof res.then === "function")) {
      return res;
    }
    return new Promise(function (resolve, reject) {
      res.then(function (res) {
        return res[0] ? reject(res[0]) : resolve(res[1]);
      });
    });
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 5:
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles.js */ 6);
var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit.js */ 7);
var unsupportedIterableToArray = __webpack_require__(/*! ./unsupportedIterableToArray.js */ 8);
var nonIterableRest = __webpack_require__(/*! ./nonIterableRest.js */ 10);
function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();
}
module.exports = _slicedToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 6:
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}
module.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 64:
/*!*******************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/upload.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.upload = void 0;
var _constant = __webpack_require__(/*! ./constant */ 35);
var _request = __webpack_require__(/*! ./request */ 34);
var upload = function upload(filePath, type) {
  console.log('上传文件的type', type);
  var storage = JSON.parse(uni.getStorageSync('vuex'));
  var token = storage.token;
  return new Promise(function (resolve, reject) {
    uni.showLoading({
      title: '正在上传...',
      mask: true
    });
    uni.uploadFile({
      url: _constant.baseUrl + '/api/upload/file',
      filePath: filePath,
      name: 'file',
      header: {
        'token': token || ''
      },
      formData: {
        type: type
      },
      success: function success(res) {
        var result = JSON.parse(res.data);
        console.log('上传成功:', JSON.parse(res.data));
        if (result.code === 10067 && (result.data.pic_path || result.data.path)) {
          resolve(result.data.pic_path || result.data.path);
        }
      },
      fail: function fail(err) {
        console.error('上传失败:', err);
      },
      complete: function complete() {
        uni.hideLoading();
      }
    });
  });
};
exports.upload = upload;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 7:
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(r, l) {
  var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
  if (null != t) {
    var e,
      n,
      i,
      u,
      a = [],
      f = !0,
      o = !1;
    try {
      if (i = (t = t.call(r)).next, 0 === l) {
        if (Object(t) !== t) return;
        f = !1;
      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0) {
        ;
      }
    } catch (r) {
      o = !0, n = r;
    } finally {
      try {
        if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
      } finally {
        if (o) throw n;
      }
    }
    return a;
  }
}
module.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 745:
/*!****************************************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/uni_modules/mp-html/components/mp-html/parser.js ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni, wx) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }
/**
 * @fileoverview html 解析器
 */

// 配置
var config = {
  // 信任的标签（保持标签名不变）
  trustTags: makeMap('a,abbr,ad,audio,b,blockquote,br,code,col,colgroup,dd,del,dl,dt,div,em,fieldset,h1,h2,h3,h4,h5,h6,hr,i,img,ins,label,legend,li,ol,p,q,ruby,rt,source,span,strong,sub,sup,table,tbody,td,tfoot,th,thead,tr,title,ul,video'),
  // 块级标签（转为 div，其他的非信任标签转为 span）
  blockTags: makeMap('address,article,aside,body,caption,center,cite,footer,header,html,nav,pre,section'),
  // 要移除的标签
  ignoreTags: makeMap('area,base,canvas,embed,frame,head,iframe,input,link,map,meta,param,rp,script,source,style,textarea,title,track,wbr'),
  // 自闭合的标签
  voidTags: makeMap('area,base,br,col,circle,ellipse,embed,frame,hr,img,input,line,link,meta,param,path,polygon,rect,source,track,use,wbr'),
  // html 实体
  entities: {
    lt: '<',
    gt: '>',
    quot: '"',
    apos: "'",
    ensp: "\u2002",
    emsp: "\u2003",
    nbsp: '\xA0',
    semi: ';',
    ndash: '–',
    mdash: '—',
    middot: '·',
    lsquo: '‘',
    rsquo: '’',
    ldquo: '“',
    rdquo: '”',
    bull: '•',
    hellip: '…',
    larr: '←',
    uarr: '↑',
    rarr: '→',
    darr: '↓'
  },
  // 默认的标签样式
  tagStyle: {
    address: 'font-style:italic',
    big: 'display:inline;font-size:1.2em',
    caption: 'display:table-caption;text-align:center',
    center: 'text-align:center',
    cite: 'font-style:italic',
    dd: 'margin-left:40px',
    mark: 'background-color:yellow',
    pre: 'font-family:monospace;white-space:pre',
    s: 'text-decoration:line-through',
    small: 'display:inline;font-size:0.8em',
    strike: 'text-decoration:line-through',
    u: 'text-decoration:underline'
  },
  // svg 大小写对照表
  svgDict: {
    animatetransform: 'animateTransform',
    lineargradient: 'linearGradient',
    viewbox: 'viewBox',
    attributename: 'attributeName',
    repeatcount: 'repeatCount',
    repeatdur: 'repeatDur',
    foreignobject: 'foreignObject'
  }
};
var tagSelector = {};
var _uni$getSystemInfoSyn = uni.getSystemInfoSync(),
  windowWidth = _uni$getSystemInfoSyn.windowWidth,
  system = _uni$getSystemInfoSyn.system;
var blankChar = makeMap(' ,\r,\n,\t,\f');
var idIndex = 0;

/**
 * @description 创建 map
 * @param {String} str 逗号分隔
 */
function makeMap(str) {
  var map = Object.create(null);
  var list = str.split(',');
  for (var i = list.length; i--;) {
    map[list[i]] = true;
  }
  return map;
}

/**
 * @description 解码 html 实体
 * @param {String} str 要解码的字符串
 * @param {Boolean} amp 要不要解码 &amp;
 * @returns {String} 解码后的字符串
 */
function decodeEntity(str, amp) {
  var i = str.indexOf('&');
  while (i !== -1) {
    var j = str.indexOf(';', i + 3);
    var code = void 0;
    if (j === -1) break;
    if (str[i + 1] === '#') {
      // &#123; 形式的实体
      code = parseInt((str[i + 2] === 'x' ? '0' : '') + str.substring(i + 2, j));
      if (!isNaN(code)) {
        str = str.substr(0, i) + String.fromCharCode(code) + str.substr(j + 1);
      }
    } else {
      // &nbsp; 形式的实体
      code = str.substring(i + 1, j);
      if (config.entities[code] || code === 'amp' && amp) {
        str = str.substr(0, i) + (config.entities[code] || '&') + str.substr(j + 1);
      }
    }
    i = str.indexOf('&', i + 1);
  }
  return str;
}

/**
 * @description 合并多个块级标签，加快长内容渲染
 * @param {Array} nodes 要合并的标签数组
 */
function mergeNodes(nodes) {
  var i = nodes.length - 1;
  for (var j = i; j >= -1; j--) {
    if (j === -1 || nodes[j].c || !nodes[j].name || nodes[j].name !== 'div' && nodes[j].name !== 'p' && nodes[j].name[0] !== 'h' || (nodes[j].attrs.style || '').includes('inline')) {
      if (i - j >= 5) {
        nodes.splice(j + 1, i - j, {
          name: 'div',
          attrs: {},
          children: nodes.slice(j + 1, i + 1)
        });
      }
      i = j - 1;
    }
  }
}

/**
 * @description html 解析器
 * @param {Object} vm 组件实例
 */
function Parser(vm) {
  this.options = vm || {};
  this.tagStyle = Object.assign({}, config.tagStyle, this.options.tagStyle);
  this.imgList = vm.imgList || [];
  this.imgList._unloadimgs = 0;
  this.plugins = vm.plugins || [];
  this.attrs = Object.create(null);
  this.stack = [];
  this.nodes = [];
  this.pre = (this.options.containerStyle || '').includes('white-space') && this.options.containerStyle.includes('pre') ? 2 : 0;
}

/**
 * @description 执行解析
 * @param {String} content 要解析的文本
 */
Parser.prototype.parse = function (content) {
  // 插件处理
  for (var i = this.plugins.length; i--;) {
    if (this.plugins[i].onUpdate) {
      content = this.plugins[i].onUpdate(content, config) || content;
    }
  }
  new Lexer(this).parse(content);
  // 出栈未闭合的标签
  while (this.stack.length) {
    this.popNode();
  }
  if (this.nodes.length > 50) {
    mergeNodes(this.nodes);
  }
  return this.nodes;
};

/**
 * @description 将标签暴露出来（不被 rich-text 包含）
 */
Parser.prototype.expose = function () {
  for (var i = this.stack.length; i--;) {
    var item = this.stack[i];
    if (item.c || item.name === 'a' || item.name === 'video' || item.name === 'audio') return;
    item.c = 1;
  }
};

/**
 * @description 处理插件
 * @param {Object} node 要处理的标签
 * @returns {Boolean} 是否要移除此标签
 */
Parser.prototype.hook = function (node) {
  for (var i = this.plugins.length; i--;) {
    if (this.plugins[i].onParse && this.plugins[i].onParse(node, this) === false) {
      return false;
    }
  }
  return true;
};

/**
 * @description 将链接拼接上主域名
 * @param {String} url 需要拼接的链接
 * @returns {String} 拼接后的链接
 */
Parser.prototype.getUrl = function (url) {
  var domain = this.options.domain;
  if (url[0] === '/') {
    if (url[1] === '/') {
      // // 开头的补充协议名
      url = (domain ? domain.split('://')[0] : 'http') + ':' + url;
    } else if (domain) {
      // 否则补充整个域名
      url = domain + url;
    }
  } else if (!url.includes('data:') && !url.includes('://')) {
    if (domain) {
      url = domain + '/' + url;
    }
  }
  return url;
};

/**
 * @description 解析样式表
 * @param {Object} node 标签
 * @returns {Object}
 */
Parser.prototype.parseStyle = function (node) {
  var attrs = node.attrs;
  var list = (this.tagStyle[node.name] || '').split(';').concat((attrs.style || '').split(';'));
  var styleObj = {};
  var tmp = '';
  if (attrs.id && !this.xml) {
    // 暴露锚点
    if (this.options.useAnchor) {
      this.expose();
    } else if (node.name !== 'img' && node.name !== 'a' && node.name !== 'video' && node.name !== 'audio') {
      attrs.id = undefined;
    }
  }

  // 转换 width 和 height 属性
  if (attrs.width) {
    styleObj.width = parseFloat(attrs.width) + (attrs.width.includes('%') ? '%' : 'px');
    attrs.width = undefined;
  }
  if (attrs.height) {
    styleObj.height = parseFloat(attrs.height) + (attrs.height.includes('%') ? '%' : 'px');
    attrs.height = undefined;
  }
  for (var i = 0, len = list.length; i < len; i++) {
    var info = list[i].split(':');
    if (info.length < 2) continue;
    var key = info.shift().trim().toLowerCase();
    var value = info.join(':').trim();
    if (value[0] === '-' && value.lastIndexOf('-') > 0 || value.includes('safe')) {
      // 兼容性的 css 不压缩
      tmp += ";".concat(key, ":").concat(value);
    } else if (!styleObj[key] || value.includes('import') || !styleObj[key].includes('import')) {
      // 重复的样式进行覆盖
      if (value.includes('url')) {
        // 填充链接
        var j = value.indexOf('(') + 1;
        if (j) {
          while (value[j] === '"' || value[j] === "'" || blankChar[value[j]]) {
            j++;
          }
          value = value.substr(0, j) + this.getUrl(value.substr(j));
        }
      } else if (value.includes('rpx')) {
        // 转换 rpx（rich-text 内部不支持 rpx）
        value = value.replace(/[0-9.]+\s*rpx/g, function ($) {
          return parseFloat($) * windowWidth / 750 + 'px';
        });
      }
      styleObj[key] = value;
    }
  }
  node.attrs.style = tmp;
  return styleObj;
};

/**
 * @description 解析到标签名
 * @param {String} name 标签名
 * @private
 */
Parser.prototype.onTagName = function (name) {
  this.tagName = this.xml ? name : name.toLowerCase();
  if (this.tagName === 'svg') {
    this.xml = (this.xml || 0) + 1; // svg 标签内大小写敏感
    config.ignoreTags.style = undefined; // svg 标签内 style 可用
  }
};

/**
 * @description 解析到属性名
 * @param {String} name 属性名
 * @private
 */
Parser.prototype.onAttrName = function (name) {
  name = this.xml ? name : name.toLowerCase();
  if (name.substr(0, 5) === 'data-') {
    if (name === 'data-src' && !this.attrs.src) {
      // data-src 自动转为 src
      this.attrName = 'src';
    } else if (this.tagName === 'img' || this.tagName === 'a') {
      // a 和 img 标签保留 data- 的属性，可以在 imgtap 和 linktap 事件中使用
      this.attrName = name;
    } else {
      // 剩余的移除以减小大小
      this.attrName = undefined;
    }
  } else {
    this.attrName = name;
    this.attrs[name] = 'T'; // boolean 型属性缺省设置
  }
};

/**
 * @description 解析到属性值
 * @param {String} val 属性值
 * @private
 */
Parser.prototype.onAttrVal = function (val) {
  var name = this.attrName || '';
  if (name === 'style' || name === 'href') {
    // 部分属性进行实体解码
    this.attrs[name] = decodeEntity(val, true);
  } else if (name.includes('src')) {
    // 拼接主域名
    this.attrs[name] = this.getUrl(decodeEntity(val, true));
  } else if (name) {
    this.attrs[name] = val;
  }
};

/**
 * @description 解析到标签开始
 * @param {Boolean} selfClose 是否有自闭合标识 />
 * @private
 */
Parser.prototype.onOpenTag = function (selfClose) {
  // 拼装 node
  var node = Object.create(null);
  node.name = this.tagName;
  node.attrs = this.attrs;
  // 避免因为自动 diff 使得 type 被设置为 null 导致部分内容不显示
  if (this.options.nodes.length) {
    node.type = 'node';
  }
  this.attrs = Object.create(null);
  var attrs = node.attrs;
  var parent = this.stack[this.stack.length - 1];
  var siblings = parent ? parent.children : this.nodes;
  var close = this.xml ? selfClose : config.voidTags[node.name];

  // 替换标签名选择器
  if (tagSelector[node.name]) {
    attrs.class = tagSelector[node.name] + (attrs.class ? ' ' + attrs.class : '');
  }

  // 转换 embed 标签
  if (node.name === 'embed') {
    var src = attrs.src || '';
    // 按照后缀名和 type 将 embed 转为 video 或 audio
    if (src.includes('.mp4') || src.includes('.3gp') || src.includes('.m3u8') || (attrs.type || '').includes('video')) {
      node.name = 'video';
    } else if (src.includes('.mp3') || src.includes('.wav') || src.includes('.aac') || src.includes('.m4a') || (attrs.type || '').includes('audio')) {
      node.name = 'audio';
    }
    if (attrs.autostart) {
      attrs.autoplay = 'T';
    }
    attrs.controls = 'T';
  }

  // 处理音视频
  if (node.name === 'video' || node.name === 'audio') {
    // 设置 id 以便获取 context
    if (node.name === 'video' && !attrs.id) {
      attrs.id = 'v' + idIndex++;
    }
    // 没有设置 controls 也没有设置 autoplay 的自动设置 controls
    if (!attrs.controls && !attrs.autoplay) {
      attrs.controls = 'T';
    }
    // 用数组存储所有可用的 source
    node.src = [];
    if (attrs.src) {
      node.src.push(attrs.src);
      attrs.src = undefined;
    }
    this.expose();
  }

  // 处理自闭合标签
  if (close) {
    if (!this.hook(node) || config.ignoreTags[node.name]) {
      // 通过 base 标签设置主域名
      if (node.name === 'base' && !this.options.domain) {
        this.options.domain = attrs.href;
      } else if (node.name === 'source' && parent && (parent.name === 'video' || parent.name === 'audio') && attrs.src) {
        // 设置 source 标签（仅父节点为 video 或 audio 时有效）
        parent.src.push(attrs.src);
      }
      return;
    }

    // 解析 style
    var styleObj = this.parseStyle(node);

    // 处理图片
    if (node.name === 'img') {
      if (attrs.src) {
        // 标记 webp
        if (attrs.src.includes('webp')) {
          node.webp = 'T';
        }
        // data url 图片如果没有设置 original-src 默认为不可预览的小图片
        if (attrs.src.includes('data:') && this.options.previewImg !== 'all' && !attrs['original-src']) {
          attrs.ignore = 'T';
        }
        if (!attrs.ignore || node.webp || attrs.src.includes('cloud://')) {
          for (var i = this.stack.length; i--;) {
            var item = this.stack[i];
            if (item.name === 'a') {
              node.a = item.attrs;
            }
            if (item.name === 'table' && !node.webp && !attrs.src.includes('cloud://')) {
              if (!styleObj.display || styleObj.display.includes('inline')) {
                node.t = 'inline-block';
              } else {
                node.t = styleObj.display;
              }
              styleObj.display = undefined;
            }
            var style = item.attrs.style || '';
            if (style.includes('flex:') && !style.includes('flex:0') && !style.includes('flex: 0') && (!styleObj.width || parseInt(styleObj.width) > 100)) {
              styleObj.width = '100% !important';
              styleObj.height = '';
              for (var j = i + 1; j < this.stack.length; j++) {
                this.stack[j].attrs.style = (this.stack[j].attrs.style || '').replace('inline-', '');
              }
            } else if (style.includes('flex') && styleObj.width === '100%') {
              for (var _j = i + 1; _j < this.stack.length; _j++) {
                var _style = this.stack[_j].attrs.style || '';
                if (!_style.includes(';width') && !_style.includes(' width') && _style.indexOf('width') !== 0) {
                  styleObj.width = '';
                  break;
                }
              }
            } else if (style.includes('inline-block')) {
              if (styleObj.width && styleObj.width[styleObj.width.length - 1] === '%') {
                item.attrs.style += ';max-width:' + styleObj.width;
                styleObj.width = '';
              } else {
                item.attrs.style += ';max-width:100%';
              }
            }
            item.c = 1;
          }
          attrs.i = this.imgList.length.toString();
          var _src = attrs['original-src'] || attrs.src;
          if (this.imgList.includes(_src)) {
            // 如果有重复的链接则对域名进行随机大小写变换避免预览时错位
            var _i = _src.indexOf('://');
            if (_i !== -1) {
              _i += 3;
              var newSrc = _src.substr(0, _i);
              for (; _i < _src.length; _i++) {
                if (_src[_i] === '/') break;
                newSrc += Math.random() > 0.5 ? _src[_i].toUpperCase() : _src[_i];
              }
              newSrc += _src.substr(_i);
              _src = newSrc;
            }
          }
          this.imgList.push(_src);
          if (!node.t) {
            this.imgList._unloadimgs += 1;
          }
        }
      }
      if (styleObj.display === 'inline') {
        styleObj.display = '';
      }
      if (attrs.ignore) {
        styleObj['max-width'] = styleObj['max-width'] || '100%';
        attrs.style += ';-webkit-touch-callout:none';
      }

      // 设置的宽度超出屏幕，为避免变形，高度转为自动
      if (parseInt(styleObj.width) > windowWidth) {
        styleObj.height = undefined;
      }
      // 记录是否设置了宽高
      if (!isNaN(parseInt(styleObj.width))) {
        node.w = 'T';
      }
      if (!isNaN(parseInt(styleObj.height)) && (!styleObj.height.includes('%') || parent && (parent.attrs.style || '').includes('height'))) {
        node.h = 'T';
      }
      if (node.w && node.h && styleObj['object-fit']) {
        if (styleObj['object-fit'] === 'contain') {
          node.m = 'aspectFit';
        } else if (styleObj['object-fit'] === 'cover') {
          node.m = 'aspectFill';
        }
      }
    } else if (node.name === 'svg') {
      siblings.push(node);
      this.stack.push(node);
      this.popNode();
      return;
    }
    for (var key in styleObj) {
      if (styleObj[key]) {
        attrs.style += ";".concat(key, ":").concat(styleObj[key].replace(' !important', ''));
      }
    }
    attrs.style = attrs.style.substr(1) || undefined;
  } else {
    if ((node.name === 'pre' || (attrs.style || '').includes('white-space') && attrs.style.includes('pre')) && this.pre !== 2) {
      this.pre = node.pre = 1;
    }
    node.children = [];
    this.stack.push(node);
  }

  // 加入节点树
  siblings.push(node);
};

/**
 * @description 解析到标签结束
 * @param {String} name 标签名
 * @private
 */
Parser.prototype.onCloseTag = function (name) {
  // 依次出栈到匹配为止
  name = this.xml ? name : name.toLowerCase();
  var i;
  for (i = this.stack.length; i--;) {
    if (this.stack[i].name === name) break;
  }
  if (i !== -1) {
    while (this.stack.length > i) {
      this.popNode();
    }
  } else if (name === 'p' || name === 'br') {
    var siblings = this.stack.length ? this.stack[this.stack.length - 1].children : this.nodes;
    siblings.push({
      name: name,
      attrs: {
        class: tagSelector[name] || '',
        style: this.tagStyle[name] || ''
      }
    });
  }
};

/**
 * @description 处理标签出栈
 * @private
 */
Parser.prototype.popNode = function () {
  var node = this.stack.pop();
  var attrs = node.attrs;
  var children = node.children;
  var parent = this.stack[this.stack.length - 1];
  var siblings = parent ? parent.children : this.nodes;
  if (!this.hook(node) || config.ignoreTags[node.name]) {
    // 获取标题
    if (node.name === 'title' && children.length && children[0].type === 'text' && this.options.setTitle) {
      uni.setNavigationBarTitle({
        title: children[0].text
      });
    }
    siblings.pop();
    return;
  }
  if (node.pre && this.pre !== 2) {
    // 是否合并空白符标识
    this.pre = node.pre = undefined;
    for (var i = this.stack.length; i--;) {
      if (this.stack[i].pre) {
        this.pre = 1;
      }
    }
  }
  var styleObj = {};

  // 转换 svg
  if (node.name === 'svg') {
    if (this.xml > 1) {
      // 多层 svg 嵌套
      this.xml--;
      return;
    }
    var src = '';
    var style = attrs.style;
    attrs.style = '';
    attrs.xmlns = 'http://www.w3.org/2000/svg';
    (function traversal(node) {
      if (node.type === 'text') {
        src += node.text;
        return;
      }
      var name = config.svgDict[node.name] || node.name;
      if (name === 'foreignObject') {
        var _iterator = _createForOfIteratorHelper(node.children || []),
          _step;
        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var child = _step.value;
            if (child.attrs && !child.attrs.xmlns) {
              child.attrs.xmlns = 'http://www.w3.org/1999/xhtml';
              break;
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }
      src += '<' + name;
      for (var item in node.attrs) {
        var val = node.attrs[item];
        if (val) {
          src += " ".concat(config.svgDict[item] || item, "=\"").concat(val.replace(/"/g, ''), "\"");
        }
      }
      if (!node.children) {
        src += '/>';
      } else {
        src += '>';
        for (var _i2 = 0; _i2 < node.children.length; _i2++) {
          traversal(node.children[_i2]);
        }
        src += '</' + name + '>';
      }
    })(node);
    node.name = 'img';
    node.attrs = {
      src: 'data:image/svg+xml;utf8,' + src.replace(/#/g, '%23'),
      style: style,
      ignore: 'T'
    };
    node.children = undefined;
    this.xml = false;
    config.ignoreTags.style = true;
    return;
  }

  // 转换 align 属性
  if (attrs.align) {
    if (node.name === 'table') {
      if (attrs.align === 'center') {
        styleObj['margin-inline-start'] = styleObj['margin-inline-end'] = 'auto';
      } else {
        styleObj.float = attrs.align;
      }
    } else {
      styleObj['text-align'] = attrs.align;
    }
    attrs.align = undefined;
  }

  // 转换 dir 属性
  if (attrs.dir) {
    styleObj.direction = attrs.dir;
    attrs.dir = undefined;
  }

  // 转换 font 标签的属性
  if (node.name === 'font') {
    if (attrs.color) {
      styleObj.color = attrs.color;
      attrs.color = undefined;
    }
    if (attrs.face) {
      styleObj['font-family'] = attrs.face;
      attrs.face = undefined;
    }
    if (attrs.size) {
      var size = parseInt(attrs.size);
      if (!isNaN(size)) {
        if (size < 1) {
          size = 1;
        } else if (size > 7) {
          size = 7;
        }
        styleObj['font-size'] = ['x-small', 'small', 'medium', 'large', 'x-large', 'xx-large', 'xxx-large'][size - 1];
      }
      attrs.size = undefined;
    }
  }

  // 一些编辑器的自带 class
  if ((attrs.class || '').includes('align-center')) {
    styleObj['text-align'] = 'center';
  }
  Object.assign(styleObj, this.parseStyle(node));
  if (node.name !== 'table' && parseInt(styleObj.width) > windowWidth) {
    styleObj['max-width'] = '100%';
    styleObj['box-sizing'] = 'border-box';
  }
  if (config.blockTags[node.name]) {
    node.name = 'div';
  } else if (!config.trustTags[node.name] && !this.xml) {
    // 未知标签转为 span，避免无法显示
    node.name = 'span';
  }
  if (node.name === 'a' || node.name === 'ad') {
    this.expose();
  } else if (node.name === 'video') {
    if ((styleObj.height || '').includes('auto')) {
      styleObj.height = undefined;
    }
  } else if ((node.name === 'ul' || node.name === 'ol') && node.c) {
    // 列表处理
    var types = {
      a: 'lower-alpha',
      A: 'upper-alpha',
      i: 'lower-roman',
      I: 'upper-roman'
    };
    if (types[attrs.type]) {
      attrs.style += ';list-style-type:' + types[attrs.type];
      attrs.type = undefined;
    }
    for (var _i3 = children.length; _i3--;) {
      if (children[_i3].name === 'li') {
        children[_i3].c = 1;
      }
    }
  } else if (node.name === 'table') {
    // 表格处理
    // cellpadding、cellspacing、border 这几个常用表格属性需要通过转换实现
    var padding = parseFloat(attrs.cellpadding);
    var spacing = parseFloat(attrs.cellspacing);
    var border = parseFloat(attrs.border);
    var bordercolor = styleObj['border-color'];
    var borderstyle = styleObj['border-style'];
    if (node.c) {
      // padding 和 spacing 默认 2
      if (isNaN(padding)) {
        padding = 2;
      }
      if (isNaN(spacing)) {
        spacing = 2;
      }
    }
    if (border) {
      attrs.style += ";border:".concat(border, "px ").concat(borderstyle || 'solid', " ").concat(bordercolor || 'gray');
    }
    if (node.flag && node.c) {
      // 有 colspan 或 rowspan 且含有链接的表格通过 grid 布局实现
      styleObj.display = 'grid';
      if (styleObj['border-collapse'] === 'collapse') {
        styleObj['border-collapse'] = undefined;
        spacing = 0;
      }
      if (spacing) {
        styleObj['grid-gap'] = spacing + 'px';
        styleObj.padding = spacing + 'px';
      } else if (border) {
        // 无间隔的情况下避免边框重叠
        attrs.style += ';border-left:0;border-top:0';
      }
      var width = []; // 表格的列宽
      var trList = []; // tr 列表
      var cells = []; // 保存新的单元格
      var map = {}; // 被合并单元格占用的格子

      (function traversal(nodes) {
        for (var _i4 = 0; _i4 < nodes.length; _i4++) {
          if (nodes[_i4].name === 'tr') {
            trList.push(nodes[_i4]);
          } else if (nodes[_i4].name === 'colgroup') {
            var colI = 1;
            var _iterator2 = _createForOfIteratorHelper(nodes[_i4].children || []),
              _step2;
            try {
              for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
                var col = _step2.value;
                if (col.name === 'col') {
                  var _style2 = col.attrs.style || '';
                  var start = _style2.indexOf('width') ? _style2.indexOf(';width') : 0;
                  // 提取出宽度
                  if (start !== -1) {
                    var end = _style2.indexOf(';', start + 6);
                    if (end === -1) {
                      end = _style2.length;
                    }
                    width[colI] = _style2.substring(start ? start + 7 : 6, end);
                  }
                  colI += 1;
                }
              }
            } catch (err) {
              _iterator2.e(err);
            } finally {
              _iterator2.f();
            }
          } else {
            traversal(nodes[_i4].children || []);
          }
        }
      })(children);
      for (var row = 1; row <= trList.length; row++) {
        var col = 1;
        for (var j = 0; j < trList[row - 1].children.length; j++) {
          var td = trList[row - 1].children[j];
          if (td.name === 'td' || td.name === 'th') {
            // 这个格子被上面的单元格占用，则列号++
            while (map[row + '.' + col]) {
              col++;
            }
            var _style3 = td.attrs.style || '';
            var start = _style3.indexOf('width') ? _style3.indexOf(';width') : 0;
            // 提取出 td 的宽度
            if (start !== -1) {
              var end = _style3.indexOf(';', start + 6);
              if (end === -1) {
                end = _style3.length;
              }
              if (!td.attrs.colspan) {
                width[col] = _style3.substring(start ? start + 7 : 6, end);
              }
              _style3 = _style3.substr(0, start) + _style3.substr(end);
            }
            // 设置竖直对齐
            _style3 += ';display:flex';
            start = _style3.indexOf('vertical-align');
            if (start !== -1) {
              var val = _style3.substr(start + 15, 10);
              if (val.includes('middle')) {
                _style3 += ';align-items:center';
              } else if (val.includes('bottom')) {
                _style3 += ';align-items:flex-end';
              }
            } else {
              _style3 += ';align-items:center';
            }
            // 设置水平对齐
            start = _style3.indexOf('text-align');
            if (start !== -1) {
              var _val = _style3.substr(start + 11, 10);
              if (_val.includes('center')) {
                _style3 += ';justify-content: center';
              } else if (_val.includes('right')) {
                _style3 += ';justify-content: right';
              }
            }
            _style3 = (border ? ";border:".concat(border, "px ").concat(borderstyle || 'solid', " ").concat(bordercolor || 'gray') + (spacing ? '' : ';border-right:0;border-bottom:0') : '') + (padding ? ";padding:".concat(padding, "px") : '') + ';' + _style3;
            // 处理列合并
            if (td.attrs.colspan) {
              _style3 += ";grid-column-start:".concat(col, ";grid-column-end:").concat(col + parseInt(td.attrs.colspan));
              if (!td.attrs.rowspan) {
                _style3 += ";grid-row-start:".concat(row, ";grid-row-end:").concat(row + 1);
              }
              col += parseInt(td.attrs.colspan) - 1;
            }
            // 处理行合并
            if (td.attrs.rowspan) {
              _style3 += ";grid-row-start:".concat(row, ";grid-row-end:").concat(row + parseInt(td.attrs.rowspan));
              if (!td.attrs.colspan) {
                _style3 += ";grid-column-start:".concat(col, ";grid-column-end:").concat(col + 1);
              }
              // 记录下方单元格被占用
              for (var rowspan = 1; rowspan < td.attrs.rowspan; rowspan++) {
                for (var colspan = 0; colspan < (td.attrs.colspan || 1); colspan++) {
                  map[row + rowspan + '.' + (col - colspan)] = 1;
                }
              }
            }
            if (_style3) {
              td.attrs.style = _style3;
            }
            cells.push(td);
            col++;
          }
        }
        if (row === 1) {
          var temp = '';
          for (var _i5 = 1; _i5 < col; _i5++) {
            temp += (width[_i5] ? width[_i5] : 'auto') + ' ';
          }
          styleObj['grid-template-columns'] = temp;
        }
      }
      node.children = cells;
    } else {
      // 没有使用合并单元格的表格通过 table 布局实现
      if (node.c) {
        styleObj.display = 'table';
      }
      if (!isNaN(spacing)) {
        styleObj['border-spacing'] = spacing + 'px';
      }
      if (border || padding) {
        // 遍历
        (function traversal(nodes) {
          for (var _i6 = 0; _i6 < nodes.length; _i6++) {
            var _td = nodes[_i6];
            if (_td.name === 'th' || _td.name === 'td') {
              if (border) {
                _td.attrs.style = "border:".concat(border, "px ").concat(borderstyle || 'solid', " ").concat(bordercolor || 'gray', ";").concat(_td.attrs.style || '');
              }
              if (padding) {
                _td.attrs.style = "padding:".concat(padding, "px;").concat(_td.attrs.style || '');
              }
            } else if (_td.children) {
              traversal(_td.children);
            }
          }
        })(children);
      }
    }
    // 给表格添加一个单独的横向滚动层
    if (this.options.scrollTable && !(attrs.style || '').includes('inline')) {
      var table = Object.assign({}, node);
      node.name = 'div';
      node.attrs = {
        style: 'overflow:auto'
      };
      node.children = [table];
      attrs = table.attrs;
    }
  } else if ((node.name === 'tbody' || node.name === 'tr') && node.flag && node.c) {
    node.flag = undefined;
    (function traversal(nodes) {
      for (var _i7 = 0; _i7 < nodes.length; _i7++) {
        if (nodes[_i7].name === 'td') {
          // 颜色样式设置给单元格避免丢失
          for (var _i8 = 0, _arr = ['color', 'background', 'background-color']; _i8 < _arr.length; _i8++) {
            var _style4 = _arr[_i8];
            if (styleObj[_style4]) {
              nodes[_i7].attrs.style = _style4 + ':' + styleObj[_style4] + ';' + (nodes[_i7].attrs.style || '');
            }
          }
        } else {
          traversal(nodes[_i7].children || []);
        }
      }
    })(children);
  } else if ((node.name === 'td' || node.name === 'th') && (attrs.colspan || attrs.rowspan)) {
    for (var _i9 = this.stack.length; _i9--;) {
      if (this.stack[_i9].name === 'table' || this.stack[_i9].name === 'tbody' || this.stack[_i9].name === 'tr') {
        this.stack[_i9].flag = 1; // 指示含有合并单元格
      }
    }
  } else if (node.name === 'ruby') {
    // 转换 ruby
    node.name = 'span';
    for (var _i10 = 0; _i10 < children.length - 1; _i10++) {
      if (children[_i10].type === 'text' && children[_i10 + 1].name === 'rt') {
        children[_i10] = {
          name: 'div',
          attrs: {
            style: 'display:inline-block;text-align:center'
          },
          children: [{
            name: 'div',
            attrs: {
              style: 'font-size:50%;' + (children[_i10 + 1].attrs.style || '')
            },
            children: children[_i10 + 1].children
          }, children[_i10]]
        };
        children.splice(_i10 + 1, 1);
      }
    }
  } else if (node.c) {
    (function traversal(node) {
      node.c = 2;
      for (var _i11 = node.children.length; _i11--;) {
        var child = node.children[_i11];
        if (!child.c || child.name === 'table') {
          node.c = 1;
        }
      }
    })(node);
  }
  if ((styleObj.display || '').includes('flex') && !node.c) {
    for (var _i12 = children.length; _i12--;) {
      var item = children[_i12];
      if (item.f) {
        item.attrs.style = (item.attrs.style || '') + item.f;
        item.f = undefined;
      }
    }
  }
  // flex 布局时部分样式需要提取到 rich-text 外层
  var flex = parent && ((parent.attrs.style || '').includes('flex') || (parent.attrs.style || '').includes('grid'))

  // 检查基础库版本 virtualHost 是否可用
  && !(node.c && wx.getNFCAdapter); // eslint-disable-line

  if (flex) {
    node.f = ';max-width:100%';
  }
  if (children.length >= 50 && node.c && !(styleObj.display || '').includes('flex')) {
    mergeNodes(children);
  }
  for (var key in styleObj) {
    if (styleObj[key]) {
      var _val2 = ";".concat(key, ":").concat(styleObj[key].replace(' !important', ''));
      if (flex && (key.includes('flex') && key !== 'flex-direction' || key === 'align-self' || key.includes('grid') || styleObj[key][0] === '-' || key.includes('width') && _val2.includes('%'))) {
        node.f += _val2;
        if (key === 'width') {
          attrs.style += ';width:100%';
        }
      } else {
        attrs.style += _val2;
      }
    }
  }
  attrs.style = attrs.style.substr(1) || undefined;
};

/**
 * @description 解析到文本
 * @param {String} text 文本内容
 */
Parser.prototype.onText = function (text) {
  if (!this.pre) {
    // 合并空白符
    var trim = '';
    var flag;
    for (var i = 0, len = text.length; i < len; i++) {
      if (!blankChar[text[i]]) {
        trim += text[i];
      } else {
        if (trim[trim.length - 1] !== ' ') {
          trim += ' ';
        }
        if (text[i] === '\n' && !flag) {
          flag = true;
        }
      }
    }
    // 去除含有换行符的空串
    if (trim === ' ') {
      if (flag) return;
    }
    text = trim;
  }
  var node = Object.create(null);
  node.type = 'text';
  node.text = decodeEntity(text);
  if (this.hook(node)) {
    if (this.options.selectable === 'force' && system.includes('iOS') && !uni.canIUse('rich-text.user-select')) {
      this.expose();
    }
    var siblings = this.stack.length ? this.stack[this.stack.length - 1].children : this.nodes;
    siblings.push(node);
  }
};

/**
 * @description html 词法分析器
 * @param {Object} handler 高层处理器
 */
function Lexer(handler) {
  this.handler = handler;
}

/**
 * @description 执行解析
 * @param {String} content 要解析的文本
 */
Lexer.prototype.parse = function (content) {
  this.content = content || '';
  this.i = 0; // 标记解析位置
  this.start = 0; // 标记一个单词的开始位置
  this.state = this.text; // 当前状态
  for (var len = this.content.length; this.i !== -1 && this.i < len;) {
    this.state();
  }
};

/**
 * @description 检查标签是否闭合
 * @param {String} method 如果闭合要进行的操作
 * @returns {Boolean} 是否闭合
 * @private
 */
Lexer.prototype.checkClose = function (method) {
  var selfClose = this.content[this.i] === '/';
  if (this.content[this.i] === '>' || selfClose && this.content[this.i + 1] === '>') {
    if (method) {
      this.handler[method](this.content.substring(this.start, this.i));
    }
    this.i += selfClose ? 2 : 1;
    this.start = this.i;
    this.handler.onOpenTag(selfClose);
    if (this.handler.tagName === 'script') {
      this.i = this.content.indexOf('</', this.i);
      if (this.i !== -1) {
        this.i += 2;
        this.start = this.i;
      }
      this.state = this.endTag;
    } else {
      this.state = this.text;
    }
    return true;
  }
  return false;
};

/**
 * @description 文本状态
 * @private
 */
Lexer.prototype.text = function () {
  this.i = this.content.indexOf('<', this.i); // 查找最近的标签
  if (this.i === -1) {
    // 没有标签了
    if (this.start < this.content.length) {
      this.handler.onText(this.content.substring(this.start, this.content.length));
    }
    return;
  }
  var c = this.content[this.i + 1];
  if (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z') {
    // 标签开头
    if (this.start !== this.i) {
      this.handler.onText(this.content.substring(this.start, this.i));
    }
    this.start = ++this.i;
    this.state = this.tagName;
  } else if (c === '/' || c === '!' || c === '?') {
    if (this.start !== this.i) {
      this.handler.onText(this.content.substring(this.start, this.i));
    }
    var next = this.content[this.i + 2];
    if (c === '/' && (next >= 'a' && next <= 'z' || next >= 'A' && next <= 'Z')) {
      // 标签结尾
      this.i += 2;
      this.start = this.i;
      this.state = this.endTag;
      return;
    }
    // 处理注释
    var end = '-->';
    if (c !== '!' || this.content[this.i + 2] !== '-' || this.content[this.i + 3] !== '-') {
      end = '>';
    }
    this.i = this.content.indexOf(end, this.i);
    if (this.i !== -1) {
      this.i += end.length;
      this.start = this.i;
    }
  } else {
    this.i++;
  }
};

/**
 * @description 标签名状态
 * @private
 */
Lexer.prototype.tagName = function () {
  if (blankChar[this.content[this.i]]) {
    // 解析到标签名
    this.handler.onTagName(this.content.substring(this.start, this.i));
    while (blankChar[this.content[++this.i]]) {
      ;
    }
    if (this.i < this.content.length && !this.checkClose()) {
      this.start = this.i;
      this.state = this.attrName;
    }
  } else if (!this.checkClose('onTagName')) {
    this.i++;
  }
};

/**
 * @description 属性名状态
 * @private
 */
Lexer.prototype.attrName = function () {
  var c = this.content[this.i];
  if (blankChar[c] || c === '=') {
    // 解析到属性名
    this.handler.onAttrName(this.content.substring(this.start, this.i));
    var needVal = c === '=';
    var len = this.content.length;
    while (++this.i < len) {
      c = this.content[this.i];
      if (!blankChar[c]) {
        if (this.checkClose()) return;
        if (needVal) {
          // 等号后遇到第一个非空字符
          this.start = this.i;
          this.state = this.attrVal;
          return;
        }
        if (this.content[this.i] === '=') {
          needVal = true;
        } else {
          this.start = this.i;
          this.state = this.attrName;
          return;
        }
      }
    }
  } else if (!this.checkClose('onAttrName')) {
    this.i++;
  }
};

/**
 * @description 属性值状态
 * @private
 */
Lexer.prototype.attrVal = function () {
  var c = this.content[this.i];
  var len = this.content.length;
  if (c === '"' || c === "'") {
    // 有冒号的属性
    this.start = ++this.i;
    this.i = this.content.indexOf(c, this.i);
    if (this.i === -1) return;
    this.handler.onAttrVal(this.content.substring(this.start, this.i));
  } else {
    // 没有冒号的属性
    for (; this.i < len; this.i++) {
      if (blankChar[this.content[this.i]]) {
        this.handler.onAttrVal(this.content.substring(this.start, this.i));
        break;
      } else if (this.checkClose('onAttrVal')) return;
    }
  }
  while (blankChar[this.content[++this.i]]) {
    ;
  }
  if (this.i < len && !this.checkClose()) {
    this.start = this.i;
    this.state = this.attrName;
  }
};

/**
 * @description 结束标签状态
 * @returns {String} 结束的标签名
 * @private
 */
Lexer.prototype.endTag = function () {
  var c = this.content[this.i];
  if (blankChar[c] || c === '>' || c === '/') {
    this.handler.onCloseTag(this.content.substring(this.start, this.i));
    if (c !== '>') {
      this.i = this.content.indexOf('>', this.i);
      if (this.i === -1) return;
    }
    this.start = ++this.i;
    this.state = this.text;
  } else {
    this.i++;
  }
};
var _default = Parser;
exports.default = _default;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"], __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),

/***/ 746:
/*!************************************************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/uni_modules/mp-html/components/mp-html/markdown/index.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _marked = _interopRequireDefault(__webpack_require__(/*! ./marked.min */ 747));
/**
 * @fileoverview markdown 插件
 * Include marked (https://github.com/markedjs/marked)
 * Include github-markdown-css (https://github.com/sindresorhus/github-markdown-css)
 */

var index = 0;
function Markdown(vm) {
  this.vm = vm;
  vm._ids = {};
}
Markdown.prototype.onUpdate = function (content) {
  if (this.vm.markdown) {
    return (0, _marked.default)(content);
  }
};
Markdown.prototype.onParse = function (node, vm) {
  if (vm.options.markdown) {
    // 中文 id 需要转换，否则无法跳转
    if (vm.options.useAnchor && node.attrs && /[\u4e00-\u9fa5]/.test(node.attrs.id)) {
      var id = 't' + index++;
      this.vm._ids[node.attrs.id] = id;
      node.attrs.id = id;
    }
    if (node.name === 'p' || node.name === 'table' || node.name === 'tr' || node.name === 'th' || node.name === 'td' || node.name === 'blockquote' || node.name === 'pre' || node.name === 'code') {
      node.attrs.class = "md-".concat(node.name, " ").concat(node.attrs.class || '');
    }
  }
};
var _default = Markdown;
exports.default = _default;

/***/ }),

/***/ 747:
/*!*****************************************************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/uni_modules/mp-html/components/mp-html/markdown/marked.min.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
/*!
 * marked - a markdown parser
 * Copyright (c) 2011-2020, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/markedjs/marked
 */
function t() {
  "use strict";

  function i(e, t) {
    for (var n = 0; n < t.length; n++) {
      var r = t[n];
      r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);
    }
  }
  function s(e, t) {
    (null == t || t > e.length) && (t = e.length);
    for (var n = 0, r = new Array(t); n < t; n++) {
      r[n] = e[n];
    }
    return r;
  }
  function p(e, t) {
    var n;
    if ("undefined" != typeof Symbol && null != e[Symbol.iterator]) return (n = e[Symbol.iterator]()).next.bind(n);
    if (Array.isArray(e) || (n = function (e, t) {
      if (e) {
        if ("string" == typeof e) return s(e, t);
        var n = Object.prototype.toString.call(e).slice(8, -1);
        return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? s(e, t) : void 0;
      }
    }(e)) || t && e && "number" == typeof e.length) {
      n && (e = n);
      var r = 0;
      return function () {
        return r >= e.length ? {
          done: !0
        } : {
          done: !1,
          value: e[r++]
        };
      };
    }
    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }
  function n(e) {
    return c[e];
  }
  var e,
    t = (function (t) {
      function e() {
        return {
          baseUrl: null,
          breaks: !1,
          gfm: !0,
          headerIds: !0,
          headerPrefix: "",
          highlight: null,
          langPrefix: "language-",
          mangle: !0,
          pedantic: !1,
          renderer: null,
          sanitize: !1,
          sanitizer: null,
          silent: !1,
          smartLists: !1,
          smartypants: !1,
          tokenizer: null,
          walkTokens: null,
          xhtml: !1
        };
      }
      t.exports = {
        defaults: e(),
        getDefaults: e,
        changeDefaults: function changeDefaults(e) {
          t.exports.defaults = e;
        }
      };
    }(e = {
      exports: {}
    }), e.exports),
    r = (t.defaults, t.getDefaults, t.changeDefaults, /[&<>"']/),
    l = /[&<>"']/g,
    a = /[<>"']|&(?!#?\w+;)/,
    o = /[<>"']|&(?!#?\w+;)/g,
    c = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': "&quot;",
      "'": "&#39;"
    };
  var u = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi;
  function h(e) {
    return e.replace(u, function (e, t) {
      return "colon" === (t = t.toLowerCase()) ? ":" : "#" === t.charAt(0) ? "x" === t.charAt(1) ? String.fromCharCode(parseInt(t.substring(2), 16)) : String.fromCharCode(+t.substring(1)) : "";
    });
  }
  var g = /(^|[^\[])\^/g;
  var f = /[^\w:]/g,
    d = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;
  var k = {},
    b = /^[^:]+:\/*[^/]*$/,
    m = /^([^:]+:)[\s\S]*$/,
    x = /^([^:]+:\/*[^/]*)[\s\S]*$/;
  function w(e, t) {
    k[" " + e] || (b.test(e) ? k[" " + e] = e + "/" : k[" " + e] = v(e, "/", !0));
    var n = -1 === (e = k[" " + e]).indexOf(":");
    return "//" === t.substring(0, 2) ? n ? t : e.replace(m, "$1") + t : "/" === t.charAt(0) ? n ? t : e.replace(x, "$1") + t : e + t;
  }
  function v(e, t, n) {
    var r = e.length;
    if (0 === r) return "";
    for (var i = 0; i < r;) {
      var s = e.charAt(r - i - 1);
      if (s !== t || n) {
        if (s === t || !n) break;
        i++;
      } else i++;
    }
    return e.substr(0, r - i);
  }
  var _ = function _(e, t) {
      if (t) {
        if (r.test(e)) return e.replace(l, n);
      } else if (a.test(e)) return e.replace(o, n);
      return e;
    },
    y = h,
    z = function z(n, e) {
      n = n.source || n, e = e || "";
      var r = {
        replace: function replace(e, t) {
          return t = (t = t.source || t).replace(g, "$1"), n = n.replace(e, t), r;
        },
        getRegex: function getRegex() {
          return new RegExp(n, e);
        }
      };
      return r;
    },
    S = function S(e, t, n) {
      if (e) {
        var r;
        try {
          r = decodeURIComponent(h(n)).replace(f, "").toLowerCase();
        } catch (e) {
          return null;
        }
        if (0 === r.indexOf("javascript:") || 0 === r.indexOf("vbscript:") || 0 === r.indexOf("data:")) return null;
      }
      t && !d.test(n) && (n = w(t, n));
      try {
        n = encodeURI(n).replace(/%25/g, "%");
      } catch (e) {
        return null;
      }
      return n;
    },
    $ = {
      exec: function exec() {}
    },
    A = function A(e) {
      for (var t, n, r = 1; r < arguments.length; r++) {
        for (n in t = arguments[r]) {
          Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
        }
      }
      return e;
    },
    R = function R(e, t) {
      var n = e.replace(/\|/g, function (e, t, n) {
          for (var r = !1, i = t; 0 <= --i && "\\" === n[i];) {
            r = !r;
          }
          return r ? "|" : " |";
        }).split(/ \|/),
        r = 0;
      if (n.length > t) n.splice(t);else for (; n.length < t;) {
        n.push("");
      }
      for (; r < n.length; r++) {
        n[r] = n[r].trim().replace(/\\\|/g, "|");
      }
      return n;
    },
    T = function T(e, t) {
      if (-1 === e.indexOf(t[1])) return -1;
      for (var n = e.length, r = 0, i = 0; i < n; i++) {
        if ("\\" === e[i]) i++;else if (e[i] === t[0]) r++;else if (e[i] === t[1] && --r < 0) return i;
      }
      return -1;
    },
    I = function I(e) {
      e && e.sanitize && !e.silent && console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options");
    },
    Z = function Z(e, t) {
      if (t < 1) return "";
      for (var n = ""; 1 < t;) {
        1 & t && (n += e), t >>= 1, e += e;
      }
      return n + e;
    },
    q = t.defaults,
    O = v,
    C = R,
    U = _,
    j = T;
  function E(e, t, n) {
    var r = t.href,
      i = t.title ? U(t.title) : null,
      t = e[1].replace(/\\([\[\]])/g, "$1");
    return "!" !== e[0].charAt(0) ? {
      type: "link",
      raw: n,
      href: r,
      title: i,
      text: t
    } : {
      type: "image",
      raw: n,
      href: r,
      title: i,
      text: U(t)
    };
  }
  var D = function () {
      function e(e) {
        this.options = e || q;
      }
      var t = e.prototype;
      return t.space = function (e) {
        e = this.rules.block.newline.exec(e);
        if (e) return 1 < e[0].length ? {
          type: "space",
          raw: e[0]
        } : {
          raw: "\n"
        };
      }, t.code = function (e, t) {
        e = this.rules.block.code.exec(e);
        if (e) {
          t = t[t.length - 1];
          if (t && "paragraph" === t.type) return {
            raw: e[0],
            text: e[0].trimRight()
          };
          t = e[0].replace(/^ {4}/gm, "");
          return {
            type: "code",
            raw: e[0],
            codeBlockStyle: "indented",
            text: this.options.pedantic ? t : O(t, "\n")
          };
        }
      }, t.fences = function (e) {
        var t = this.rules.block.fences.exec(e);
        if (t) {
          var n = t[0],
            e = function (e, t) {
              if (null === (e = e.match(/^(\s+)(?:```)/))) return t;
              var n = e[1];
              return t.split("\n").map(function (e) {
                var t = e.match(/^\s+/);
                return null !== t && t[0].length >= n.length ? e.slice(n.length) : e;
              }).join("\n");
            }(n, t[3] || "");
          return {
            type: "code",
            raw: n,
            lang: t[2] && t[2].trim(),
            text: e
          };
        }
      }, t.heading = function (e) {
        e = this.rules.block.heading.exec(e);
        if (e) return {
          type: "heading",
          raw: e[0],
          depth: e[1].length,
          text: e[2]
        };
      }, t.nptable = function (e) {
        e = this.rules.block.nptable.exec(e);
        if (e) {
          var t = {
            type: "table",
            header: C(e[1].replace(/^ *| *\| *$/g, "")),
            align: e[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
            cells: e[3] ? e[3].replace(/\n$/, "").split("\n") : [],
            raw: e[0]
          };
          if (t.header.length === t.align.length) {
            for (var n = t.align.length, r = 0; r < n; r++) {
              /^ *-+: *$/.test(t.align[r]) ? t.align[r] = "right" : /^ *:-+: *$/.test(t.align[r]) ? t.align[r] = "center" : /^ *:-+ *$/.test(t.align[r]) ? t.align[r] = "left" : t.align[r] = null;
            }
            for (n = t.cells.length, r = 0; r < n; r++) {
              t.cells[r] = C(t.cells[r], t.header.length);
            }
            return t;
          }
        }
      }, t.hr = function (e) {
        e = this.rules.block.hr.exec(e);
        if (e) return {
          type: "hr",
          raw: e[0]
        };
      }, t.blockquote = function (e) {
        var t = this.rules.block.blockquote.exec(e);
        if (t) {
          e = t[0].replace(/^ *> ?/gm, "");
          return {
            type: "blockquote",
            raw: t[0],
            text: e
          };
        }
      }, t.list = function (e) {
        e = this.rules.block.list.exec(e);
        if (e) {
          for (var t, n, r, i, s, l = e[0], a = e[2], o = 1 < a.length, c = {
              type: "list",
              raw: l,
              ordered: o,
              start: o ? +a.slice(0, -1) : "",
              loose: !1,
              items: []
            }, u = e[0].match(this.rules.block.item), p = !1, h = u.length, g = this.rules.block.listItemStart.exec(u[0]), f = 0; f < h; f++) {
            if (l = t = u[f], f !== h - 1) {
              if ((r = this.rules.block.listItemStart.exec(u[f + 1]))[1].length > g[0].length || 3 < r[1].length) {
                u.splice(f, 2, u[f] + "\n" + u[f + 1]), f--, h--;
                continue;
              }
              (!this.options.pedantic || this.options.smartLists ? r[2][r[2].length - 1] !== a[a.length - 1] : o == (1 === r[2].length)) && (n = u.slice(f + 1).join("\n"), c.raw = c.raw.substring(0, c.raw.length - n.length), f = h - 1), g = r;
            }
            r = t.length, ~(t = t.replace(/^ *([*+-]|\d+[.)]) ?/, "")).indexOf("\n ") && (r -= t.length, t = this.options.pedantic ? t.replace(/^ {1,4}/gm, "") : t.replace(new RegExp("^ {1," + r + "}", "gm"), "")), r = p || /\n\n(?!\s*$)/.test(t), f !== h - 1 && (p = "\n" === t.charAt(t.length - 1), r = r || p), r && (c.loose = !0), this.options.gfm && (s = void 0, (i = /^\[[ xX]\] /.test(t)) && (s = " " !== t[1], t = t.replace(/^\[[ xX]\] +/, ""))), c.items.push({
              type: "list_item",
              raw: l,
              task: i,
              checked: s,
              loose: r,
              text: t
            });
          }
          return c;
        }
      }, t.html = function (e) {
        e = this.rules.block.html.exec(e);
        if (e) return {
          type: this.options.sanitize ? "paragraph" : "html",
          raw: e[0],
          pre: !this.options.sanitizer && ("pre" === e[1] || "script" === e[1] || "style" === e[1]),
          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(e[0]) : U(e[0]) : e[0]
        };
      }, t.def = function (e) {
        e = this.rules.block.def.exec(e);
        if (e) return e[3] && (e[3] = e[3].substring(1, e[3].length - 1)), {
          tag: e[1].toLowerCase().replace(/\s+/g, " "),
          raw: e[0],
          href: e[2],
          title: e[3]
        };
      }, t.table = function (e) {
        e = this.rules.block.table.exec(e);
        if (e) {
          var t = {
            type: "table",
            header: C(e[1].replace(/^ *| *\| *$/g, "")),
            align: e[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
            cells: e[3] ? e[3].replace(/\n$/, "").split("\n") : []
          };
          if (t.header.length === t.align.length) {
            t.raw = e[0];
            for (var n = t.align.length, r = 0; r < n; r++) {
              /^ *-+: *$/.test(t.align[r]) ? t.align[r] = "right" : /^ *:-+: *$/.test(t.align[r]) ? t.align[r] = "center" : /^ *:-+ *$/.test(t.align[r]) ? t.align[r] = "left" : t.align[r] = null;
            }
            for (n = t.cells.length, r = 0; r < n; r++) {
              t.cells[r] = C(t.cells[r].replace(/^ *\| *| *\| *$/g, ""), t.header.length);
            }
            return t;
          }
        }
      }, t.lheading = function (e) {
        e = this.rules.block.lheading.exec(e);
        if (e) return {
          type: "heading",
          raw: e[0],
          depth: "=" === e[2].charAt(0) ? 1 : 2,
          text: e[1]
        };
      }, t.paragraph = function (e) {
        e = this.rules.block.paragraph.exec(e);
        if (e) return {
          type: "paragraph",
          raw: e[0],
          text: "\n" === e[1].charAt(e[1].length - 1) ? e[1].slice(0, -1) : e[1]
        };
      }, t.text = function (e, t) {
        e = this.rules.block.text.exec(e);
        if (e) {
          t = t[t.length - 1];
          return t && "text" === t.type ? {
            raw: e[0],
            text: e[0]
          } : {
            type: "text",
            raw: e[0],
            text: e[0]
          };
        }
      }, t.escape = function (e) {
        e = this.rules.inline.escape.exec(e);
        if (e) return {
          type: "escape",
          raw: e[0],
          text: U(e[1])
        };
      }, t.tag = function (e, t, n) {
        e = this.rules.inline.tag.exec(e);
        if (e) return !t && /^<a /i.test(e[0]) ? t = !0 : t && /^<\/a>/i.test(e[0]) && (t = !1), !n && /^<(pre|code|kbd|script)(\s|>)/i.test(e[0]) ? n = !0 : n && /^<\/(pre|code|kbd|script)(\s|>)/i.test(e[0]) && (n = !1), {
          type: this.options.sanitize ? "text" : "html",
          raw: e[0],
          inLink: t,
          inRawBlock: n,
          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(e[0]) : U(e[0]) : e[0]
        };
      }, t.link = function (e) {
        var t = this.rules.inline.link.exec(e);
        if (t) {
          e = j(t[2], "()");
          -1 < e && (r = (0 === t[0].indexOf("!") ? 5 : 4) + t[1].length + e, t[2] = t[2].substring(0, e), t[0] = t[0].substring(0, r).trim(), t[3] = "");
          var n,
            e = t[2],
            r = "";
          return r = this.options.pedantic ? (n = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(e), n ? (e = n[1], n[3]) : "") : t[3] ? t[3].slice(1, -1) : "", E(t, {
            href: (e = e.trim().replace(/^<([\s\S]*)>$/, "$1")) && e.replace(this.rules.inline._escapes, "$1"),
            title: r && r.replace(this.rules.inline._escapes, "$1")
          }, t[0]);
        }
      }, t.reflink = function (e, t) {
        if ((n = this.rules.inline.reflink.exec(e)) || (n = this.rules.inline.nolink.exec(e))) {
          e = (n[2] || n[1]).replace(/\s+/g, " ");
          if ((e = t[e.toLowerCase()]) && e.href) return E(n, e, n[0]);
          var n = n[0].charAt(0);
          return {
            type: "text",
            raw: n,
            text: n
          };
        }
      }, t.strong = function (e, t, n) {
        void 0 === n && (n = "");
        var r = this.rules.inline.strong.start.exec(e);
        if (r && (!r[1] || r[1] && ("" === n || this.rules.inline.punctuation.exec(n)))) {
          t = t.slice(-1 * e.length);
          var i,
            s = "**" === r[0] ? this.rules.inline.strong.endAst : this.rules.inline.strong.endUnd;
          for (s.lastIndex = 0; null != (r = s.exec(t));) {
            if (i = this.rules.inline.strong.middle.exec(t.slice(0, r.index + 3))) return {
              type: "strong",
              raw: e.slice(0, i[0].length),
              text: e.slice(2, i[0].length - 2)
            };
          }
        }
      }, t.em = function (e, t, n) {
        void 0 === n && (n = "");
        var r = this.rules.inline.em.start.exec(e);
        if (r && (!r[1] || r[1] && ("" === n || this.rules.inline.punctuation.exec(n)))) {
          t = t.slice(-1 * e.length);
          var i,
            s = "*" === r[0] ? this.rules.inline.em.endAst : this.rules.inline.em.endUnd;
          for (s.lastIndex = 0; null != (r = s.exec(t));) {
            if (i = this.rules.inline.em.middle.exec(t.slice(0, r.index + 2))) return {
              type: "em",
              raw: e.slice(0, i[0].length),
              text: e.slice(1, i[0].length - 1)
            };
          }
        }
      }, t.codespan = function (e) {
        var t = this.rules.inline.code.exec(e);
        if (t) {
          var n = t[2].replace(/\n/g, " "),
            r = /[^ ]/.test(n),
            e = n.startsWith(" ") && n.endsWith(" ");
          return r && e && (n = n.substring(1, n.length - 1)), n = U(n, !0), {
            type: "codespan",
            raw: t[0],
            text: n
          };
        }
      }, t.br = function (e) {
        e = this.rules.inline.br.exec(e);
        if (e) return {
          type: "br",
          raw: e[0]
        };
      }, t.del = function (e) {
        e = this.rules.inline.del.exec(e);
        if (e) return {
          type: "del",
          raw: e[0],
          text: e[2]
        };
      }, t.autolink = function (e, t) {
        e = this.rules.inline.autolink.exec(e);
        if (e) {
          var n,
            t = "@" === e[2] ? "mailto:" + (n = U(this.options.mangle ? t(e[1]) : e[1])) : n = U(e[1]);
          return {
            type: "link",
            raw: e[0],
            text: n,
            href: t,
            tokens: [{
              type: "text",
              raw: n,
              text: n
            }]
          };
        }
      }, t.url = function (e, t) {
        var n, r, i, s;
        if (n = this.rules.inline.url.exec(e)) {
          if ("@" === n[2]) i = "mailto:" + (r = U(this.options.mangle ? t(n[0]) : n[0]));else {
            for (; s = n[0], n[0] = this.rules.inline._backpedal.exec(n[0])[0], s !== n[0];) {
              ;
            }
            r = U(n[0]), i = "www." === n[1] ? "http://" + r : r;
          }
          return {
            type: "link",
            raw: n[0],
            text: r,
            href: i,
            tokens: [{
              type: "text",
              raw: r,
              text: r
            }]
          };
        }
      }, t.inlineText = function (e, t, n) {
        e = this.rules.inline.text.exec(e);
        if (e) {
          n = t ? this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(e[0]) : U(e[0]) : e[0] : U(this.options.smartypants ? n(e[0]) : e[0]);
          return {
            type: "text",
            raw: e[0],
            text: n
          };
        }
      }, e;
    }(),
    R = $,
    T = z,
    $ = A,
    z = {
      newline: /^\n+/,
      code: /^( {4}[^\n]+\n*)+/,
      fences: /^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?:\n+|$)|$)/,
      hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,
      heading: /^ {0,3}(#{1,6}) +([^\n]*?)(?: +#+)? *(?:\n+|$)/,
      blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
      list: /^( {0,3})(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?! {0,3}bull )\n*|\s*$)/,
      html: "^ {0,3}(?:<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$)|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$))",
      def: /^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,
      nptable: R,
      table: R,
      lheading: /^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,
      _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\n]+)*)/,
      text: /^[^\n]+/,
      _label: /(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,
      _title: /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/
    };
  z.def = T(z.def).replace("label", z._label).replace("title", z._title).getRegex(), z.bullet = /(?:[*+-]|\d{1,9}[.)])/, z.item = /^( *)(bull) ?[^\n]*(?:\n(?! *bull ?)[^\n]*)*/, z.item = T(z.item, "gm").replace(/bull/g, z.bullet).getRegex(), z.listItemStart = T(/^( *)(bull)/).replace("bull", z.bullet).getRegex(), z.list = T(z.list).replace(/bull/g, z.bullet).replace("hr", "\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def", "\\n+(?=" + z.def.source + ")").getRegex(), z._tag = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul", z._comment = /<!--(?!-?>)[\s\S]*?(?:-->|$)/, z.html = T(z.html, "i").replace("comment", z._comment).replace("tag", z._tag).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(), z.paragraph = T(z._paragraph).replace("hr", z.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag", z._tag).getRegex(), z.blockquote = T(z.blockquote).replace("paragraph", z.paragraph).getRegex(), z.normal = $({}, z), z.gfm = $({}, z.normal, {
    nptable: "^ *([^|\\n ].*\\|.*)\\n {0,3}([-:]+ *\\|[-| :]*)(?:\\n((?:(?!\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)",
    table: "^ *\\|(.+)\\n {0,3}\\|?( *[-:]+[-| :]*)(?:\\n *((?:(?!\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"
  }), z.gfm.nptable = T(z.gfm.nptable).replace("hr", z.hr).replace("heading", " {0,3}#{1,6} ").replace("blockquote", " {0,3}>").replace("code", " {4}[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag", z._tag).getRegex(), z.gfm.table = T(z.gfm.table).replace("hr", z.hr).replace("heading", " {0,3}#{1,6} ").replace("blockquote", " {0,3}>").replace("code", " {4}[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag", z._tag).getRegex(), z.pedantic = $({}, z.normal, {
    html: T("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment", z._comment).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
    def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
    heading: /^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,
    fences: R,
    paragraph: T(z.normal._paragraph).replace("hr", z.hr).replace("heading", " *#{1,6} *[^\n]").replace("lheading", z.lheading).replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").getRegex()
  });
  R = {
    escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
    autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
    url: R,
    tag: "^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",
    link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
    reflink: /^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,
    nolink: /^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,
    reflinkSearch: "reflink|nolink(?!\\()",
    strong: {
      start: /^(?:(\*\*(?=[*punctuation]))|\*\*)(?![\s])|__/,
      middle: /^\*\*(?:(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)|\*(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)*?\*)+?\*\*$|^__(?![\s])((?:(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)*?_)+?)__$/,
      endAst: /[^punctuation\s]\*\*(?!\*)|[punctuation]\*\*(?!\*)(?:(?=[punctuation_\s]|$))/,
      endUnd: /[^\s]__(?!_)(?:(?=[punctuation*\s])|$)/
    },
    em: {
      start: /^(?:(\*(?=[punctuation]))|\*)(?![*\s])|_/,
      middle: /^\*(?:(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)|\*(?:(?!overlapSkip)(?:[^*]|\\\*)|overlapSkip)*?\*)+?\*$|^_(?![_\s])(?:(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)|_(?:(?!overlapSkip)(?:[^_]|\\_)|overlapSkip)*?_)+?_$/,
      endAst: /[^punctuation\s]\*(?!\*)|[punctuation]\*(?!\*)(?:(?=[punctuation_\s]|$))/,
      endUnd: /[^\s]_(?!_)(?:(?=[punctuation*\s])|$)/
    },
    code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
    br: /^( {2,}|\\)\n(?!\s*$)/,
    del: R,
    text: /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*]|\b_|$)|[^ ](?= {2,}\n)))/,
    punctuation: /^([\s*punctuation])/,
    _punctuation: "!\"#$%&'()+\\-.,/:;<=>?@\\[\\]`^{|}~"
  };
  R.punctuation = T(R.punctuation).replace(/punctuation/g, R._punctuation).getRegex(), R._blockSkip = "\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>", R._overlapSkip = "__[^_]*?__|\\*\\*\\[^\\*\\]*?\\*\\*", R._comment = T(z._comment).replace("(?:--\x3e|$)", "--\x3e").getRegex(), R.em.start = T(R.em.start).replace(/punctuation/g, R._punctuation).getRegex(), R.em.middle = T(R.em.middle).replace(/punctuation/g, R._punctuation).replace(/overlapSkip/g, R._overlapSkip).getRegex(), R.em.endAst = T(R.em.endAst, "g").replace(/punctuation/g, R._punctuation).getRegex(), R.em.endUnd = T(R.em.endUnd, "g").replace(/punctuation/g, R._punctuation).getRegex(), R.strong.start = T(R.strong.start).replace(/punctuation/g, R._punctuation).getRegex(), R.strong.middle = T(R.strong.middle).replace(/punctuation/g, R._punctuation).replace(/overlapSkip/g, R._overlapSkip).getRegex(), R.strong.endAst = T(R.strong.endAst, "g").replace(/punctuation/g, R._punctuation).getRegex(), R.strong.endUnd = T(R.strong.endUnd, "g").replace(/punctuation/g, R._punctuation).getRegex(), R.blockSkip = T(R._blockSkip, "g").getRegex(), R.overlapSkip = T(R._overlapSkip, "g").getRegex(), R._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g, R._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/, R._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/, R.autolink = T(R.autolink).replace("scheme", R._scheme).replace("email", R._email).getRegex(), R._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/, R.tag = T(R.tag).replace("comment", R._comment).replace("attribute", R._attribute).getRegex(), R._label = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/, R._href = /<(?:\\[<>]?|[^\s<>\\])*>|[^\s\x00-\x1f]*/, R._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/, R.link = T(R.link).replace("label", R._label).replace("href", R._href).replace("title", R._title).getRegex(), R.reflink = T(R.reflink).replace("label", R._label).getRegex(), R.reflinkSearch = T(R.reflinkSearch, "g").replace("reflink", R.reflink).replace("nolink", R.nolink).getRegex(), R.normal = $({}, R), R.pedantic = $({}, R.normal, {
    strong: {
      start: /^__|\*\*/,
      middle: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
      endAst: /\*\*(?!\*)/g,
      endUnd: /__(?!_)/g
    },
    em: {
      start: /^_|\*/,
      middle: /^()\*(?=\S)([\s\S]*?\S)\*(?!\*)|^_(?=\S)([\s\S]*?\S)_(?!_)/,
      endAst: /\*(?!\*)/g,
      endUnd: /_(?!_)/g
    },
    link: T(/^!?\[(label)\]\((.*?)\)/).replace("label", R._label).getRegex(),
    reflink: T(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", R._label).getRegex()
  }), R.gfm = $({}, R.normal, {
    escape: T(R.escape).replace("])", "~|])").getRegex(),
    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
    url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
    _backpedal: /(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,
    del: /^(~~?)(?=[^\s~])([\s\S]*?[^\s~])\1(?=[^~]|$)/,
    text: /^([`~]+|[^`~])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*~]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))/
  }), R.gfm.url = T(R.gfm.url, "i").replace("email", R.gfm._extended_email).getRegex(), R.breaks = $({}, R.gfm, {
    br: T(R.br).replace("{2,}", "*").getRegex(),
    text: T(R.gfm.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex()
  });
  var R = {
      block: z,
      inline: R
    },
    P = t.defaults,
    L = R.block,
    N = R.inline,
    B = Z;
  function F(e) {
    return e.replace(/---/g, "—").replace(/--/g, "–").replace(/(^|[-\u2014/(\[{"\s])'/g, "$1‘").replace(/'/g, "’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g, "$1“").replace(/"/g, "”").replace(/\.{3}/g, "…");
  }
  function M(e) {
    for (var t, n = "", r = e.length, i = 0; i < r; i++) {
      t = e.charCodeAt(i), .5 < Math.random() && (t = "x" + t.toString(16)), n += "&#" + t + ";";
    }
    return n;
  }
  var W = function () {
      function n(e) {
        this.tokens = [], this.tokens.links = Object.create(null), this.options = e || P, this.options.tokenizer = this.options.tokenizer || new D(), this.tokenizer = this.options.tokenizer, this.tokenizer.options = this.options;
        e = {
          block: L.normal,
          inline: N.normal
        };
        this.options.pedantic ? (e.block = L.pedantic, e.inline = N.pedantic) : this.options.gfm && (e.block = L.gfm, this.options.breaks ? e.inline = N.breaks : e.inline = N.gfm), this.tokenizer.rules = e;
      }
      n.lex = function (e, t) {
        return new n(t).lex(e);
      }, n.lexInline = function (e, t) {
        return new n(t).inlineTokens(e);
      };
      var e,
        t,
        r = n.prototype;
      return r.lex = function (e) {
        return e = e.replace(/\r\n|\r/g, "\n").replace(/\t/g, "    "), this.blockTokens(e, this.tokens, !0), this.inline(this.tokens), this.tokens;
      }, r.blockTokens = function (e, t, n) {
        var r, i, s, l;
        for (void 0 === t && (t = []), void 0 === n && (n = !0), e = e.replace(/^ +$/gm, ""); e;) {
          if (r = this.tokenizer.space(e)) e = e.substring(r.raw.length), r.type && t.push(r);else if (r = this.tokenizer.code(e, t)) e = e.substring(r.raw.length), r.type ? t.push(r) : ((l = t[t.length - 1]).raw += "\n" + r.raw, l.text += "\n" + r.text);else if (r = this.tokenizer.fences(e)) e = e.substring(r.raw.length), t.push(r);else if (r = this.tokenizer.heading(e)) e = e.substring(r.raw.length), t.push(r);else if (r = this.tokenizer.nptable(e)) e = e.substring(r.raw.length), t.push(r);else if (r = this.tokenizer.hr(e)) e = e.substring(r.raw.length), t.push(r);else if (r = this.tokenizer.blockquote(e)) e = e.substring(r.raw.length), r.tokens = this.blockTokens(r.text, [], n), t.push(r);else if (r = this.tokenizer.list(e)) {
            for (e = e.substring(r.raw.length), s = r.items.length, i = 0; i < s; i++) {
              r.items[i].tokens = this.blockTokens(r.items[i].text, [], !1);
            }
            t.push(r);
          } else if (r = this.tokenizer.html(e)) e = e.substring(r.raw.length), t.push(r);else if (n && (r = this.tokenizer.def(e))) e = e.substring(r.raw.length), this.tokens.links[r.tag] || (this.tokens.links[r.tag] = {
            href: r.href,
            title: r.title
          });else if (r = this.tokenizer.table(e)) e = e.substring(r.raw.length), t.push(r);else if (r = this.tokenizer.lheading(e)) e = e.substring(r.raw.length), t.push(r);else if (n && (r = this.tokenizer.paragraph(e))) e = e.substring(r.raw.length), t.push(r);else if (r = this.tokenizer.text(e, t)) e = e.substring(r.raw.length), r.type ? t.push(r) : ((l = t[t.length - 1]).raw += "\n" + r.raw, l.text += "\n" + r.text);else if (e) {
            var a = "Infinite loop on byte: " + e.charCodeAt(0);
            if (this.options.silent) {
              console.error(a);
              break;
            }
            throw new Error(a);
          }
        }
        return t;
      }, r.inline = function (e) {
        for (var t, n, r, i, s, l = e.length, a = 0; a < l; a++) {
          switch ((s = e[a]).type) {
            case "paragraph":
            case "text":
            case "heading":
              s.tokens = [], this.inlineTokens(s.text, s.tokens);
              break;
            case "table":
              for (s.tokens = {
                header: [],
                cells: []
              }, r = s.header.length, t = 0; t < r; t++) {
                s.tokens.header[t] = [], this.inlineTokens(s.header[t], s.tokens.header[t]);
              }
              for (r = s.cells.length, t = 0; t < r; t++) {
                for (i = s.cells[t], s.tokens.cells[t] = [], n = 0; n < i.length; n++) {
                  s.tokens.cells[t][n] = [], this.inlineTokens(i[n], s.tokens.cells[t][n]);
                }
              }
              break;
            case "blockquote":
              this.inline(s.tokens);
              break;
            case "list":
              for (r = s.items.length, t = 0; t < r; t++) {
                this.inline(s.items[t].tokens);
              }
          }
        }
        return e;
      }, r.inlineTokens = function (e, t, n, r) {
        var i;
        void 0 === t && (t = []), void 0 === n && (n = !1), void 0 === r && (r = !1);
        var s,
          l,
          a,
          o = e;
        if (this.tokens.links) {
          var c = Object.keys(this.tokens.links);
          if (0 < c.length) for (; null != (s = this.tokenizer.rules.inline.reflinkSearch.exec(o));) {
            c.includes(s[0].slice(s[0].lastIndexOf("[") + 1, -1)) && (o = o.slice(0, s.index) + "[" + B("a", s[0].length - 2) + "]" + o.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex));
          }
        }
        for (; null != (s = this.tokenizer.rules.inline.blockSkip.exec(o));) {
          o = o.slice(0, s.index) + "[" + B("a", s[0].length - 2) + "]" + o.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);
        }
        for (; e;) {
          if (l || (a = ""), l = !1, i = this.tokenizer.escape(e)) e = e.substring(i.raw.length), t.push(i);else if (i = this.tokenizer.tag(e, n, r)) e = e.substring(i.raw.length), n = i.inLink, r = i.inRawBlock, t.push(i);else if (i = this.tokenizer.link(e)) e = e.substring(i.raw.length), "link" === i.type && (i.tokens = this.inlineTokens(i.text, [], !0, r)), t.push(i);else if (i = this.tokenizer.reflink(e, this.tokens.links)) e = e.substring(i.raw.length), "link" === i.type && (i.tokens = this.inlineTokens(i.text, [], !0, r)), t.push(i);else if (i = this.tokenizer.strong(e, o, a)) e = e.substring(i.raw.length), i.tokens = this.inlineTokens(i.text, [], n, r), t.push(i);else if (i = this.tokenizer.em(e, o, a)) e = e.substring(i.raw.length), i.tokens = this.inlineTokens(i.text, [], n, r), t.push(i);else if (i = this.tokenizer.codespan(e)) e = e.substring(i.raw.length), t.push(i);else if (i = this.tokenizer.br(e)) e = e.substring(i.raw.length), t.push(i);else if (i = this.tokenizer.del(e)) e = e.substring(i.raw.length), i.tokens = this.inlineTokens(i.text, [], n, r), t.push(i);else if (i = this.tokenizer.autolink(e, M)) e = e.substring(i.raw.length), t.push(i);else if (n || !(i = this.tokenizer.url(e, M))) {
            if (i = this.tokenizer.inlineText(e, r, F)) e = e.substring(i.raw.length), a = i.raw.slice(-1), l = !0, t.push(i);else if (e) {
              var u = "Infinite loop on byte: " + e.charCodeAt(0);
              if (this.options.silent) {
                console.error(u);
                break;
              }
              throw new Error(u);
            }
          } else e = e.substring(i.raw.length), t.push(i);
        }
        return t;
      }, e = n, t = [{
        key: "rules",
        get: function get() {
          return {
            block: L,
            inline: N
          };
        }
      }], (r = null) && i(e.prototype, r), t && i(e, t), n;
    }(),
    X = t.defaults,
    G = S,
    V = _,
    H = function () {
      function e(e) {
        this.options = e || X;
      }
      var t = e.prototype;
      return t.code = function (e, t, n) {
        var r = (t || "").match(/\S*/)[0];
        return !this.options.highlight || null != (t = this.options.highlight(e, r)) && t !== e && (n = !0, e = t), r ? '<pre><code class="' + this.options.langPrefix + V(r, !0) + '">' + (n ? e : V(e, !0)) + "</code></pre>\n" : "<pre><code>" + (n ? e : V(e, !0)) + "</code></pre>\n";
      }, t.blockquote = function (e) {
        return "<blockquote>\n" + e + "</blockquote>\n";
      }, t.html = function (e) {
        return e;
      }, t.heading = function (e, t, n, r) {
        return this.options.headerIds ? "<h" + t + ' id="' + this.options.headerPrefix + r.slug(n) + '">' + e + "</h" + t + ">\n" : "<h" + t + ">" + e + "</h" + t + ">\n";
      }, t.hr = function () {
        return this.options.xhtml ? "<hr/>\n" : "<hr>\n";
      }, t.list = function (e, t, n) {
        var r = t ? "ol" : "ul";
        return "<" + r + (t && 1 !== n ? ' start="' + n + '"' : "") + ">\n" + e + "</" + r + ">\n";
      }, t.listitem = function (e) {
        return "<li>" + e + "</li>\n";
      }, t.checkbox = function (e) {
        return "<input " + (e ? 'checked="" ' : "") + 'disabled="" type="checkbox"' + (this.options.xhtml ? " /" : "") + "> ";
      }, t.paragraph = function (e) {
        return "<p>" + e + "</p>\n";
      }, t.table = function (e, t) {
        return "<table>\n<thead>\n" + e + "</thead>\n" + (t = t && "<tbody>" + t + "</tbody>") + "</table>\n";
      }, t.tablerow = function (e) {
        return "<tr>\n" + e + "</tr>\n";
      }, t.tablecell = function (e, t) {
        var n = t.header ? "th" : "td";
        return (t.align ? "<" + n + ' align="' + t.align + '">' : "<" + n + ">") + e + "</" + n + ">\n";
      }, t.strong = function (e) {
        return "<strong>" + e + "</strong>";
      }, t.em = function (e) {
        return "<em>" + e + "</em>";
      }, t.codespan = function (e) {
        return "<code>" + e + "</code>";
      }, t.br = function () {
        return this.options.xhtml ? "<br/>" : "<br>";
      }, t.del = function (e) {
        return "<del>" + e + "</del>";
      }, t.link = function (e, t, n) {
        if (null === (e = G(this.options.sanitize, this.options.baseUrl, e))) return n;
        e = '<a href="' + V(e) + '"';
        return t && (e += ' title="' + t + '"'), e += ">" + n + "</a>";
      }, t.image = function (e, t, n) {
        if (null === (e = G(this.options.sanitize, this.options.baseUrl, e))) return n;
        n = '<img src="' + e + '" alt="' + n + '"';
        return t && (n += ' title="' + t + '"'), n += this.options.xhtml ? "/>" : ">";
      }, t.text = function (e) {
        return e;
      }, e;
    }(),
    J = function () {
      function e() {}
      var t = e.prototype;
      return t.strong = function (e) {
        return e;
      }, t.em = function (e) {
        return e;
      }, t.codespan = function (e) {
        return e;
      }, t.del = function (e) {
        return e;
      }, t.html = function (e) {
        return e;
      }, t.text = function (e) {
        return e;
      }, t.link = function (e, t, n) {
        return "" + n;
      }, t.image = function (e, t, n) {
        return "" + n;
      }, t.br = function () {
        return "";
      }, e;
    }(),
    K = function () {
      function e() {
        this.seen = {};
      }
      var t = e.prototype;
      return t.serialize = function (e) {
        return e.toLowerCase().trim().replace(/<[!\/a-z].*?>/gi, "").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, "").replace(/\s/g, "-");
      }, t.getNextSafeSlug = function (e, t) {
        var n = e,
          r = 0;
        if (this.seen.hasOwnProperty(n)) for (r = this.seen[e]; n = e + "-" + ++r, this.seen.hasOwnProperty(n);) {
          ;
        }
        return t || (this.seen[e] = r, this.seen[n] = 0), n;
      }, t.slug = function (e, t) {
        void 0 === t && (t = {});
        var n = this.serialize(e);
        return this.getNextSafeSlug(n, t.dryrun);
      }, e;
    }(),
    Q = t.defaults,
    Y = y,
    ee = function () {
      function n(e) {
        this.options = e || Q, this.options.renderer = this.options.renderer || new H(), this.renderer = this.options.renderer, this.renderer.options = this.options, this.textRenderer = new J(), this.slugger = new K();
      }
      n.parse = function (e, t) {
        return new n(t).parse(e);
      }, n.parseInline = function (e, t) {
        return new n(t).parseInline(e);
      };
      var e = n.prototype;
      return e.parse = function (e, t) {
        void 0 === t && (t = !0);
        for (var n, r, i, s, l, a, o, c, u, p, h, g, f, d, k, b = "", m = e.length, x = 0; x < m; x++) {
          switch ((c = e[x]).type) {
            case "space":
              continue;
            case "hr":
              b += this.renderer.hr();
              continue;
            case "heading":
              b += this.renderer.heading(this.parseInline(c.tokens), c.depth, Y(this.parseInline(c.tokens, this.textRenderer)), this.slugger);
              continue;
            case "code":
              b += this.renderer.code(c.text, c.lang, c.escaped);
              continue;
            case "table":
              for (a = u = "", i = c.header.length, n = 0; n < i; n++) {
                a += this.renderer.tablecell(this.parseInline(c.tokens.header[n]), {
                  header: !0,
                  align: c.align[n]
                });
              }
              for (u += this.renderer.tablerow(a), o = "", i = c.cells.length, n = 0; n < i; n++) {
                for (a = "", s = (l = c.tokens.cells[n]).length, r = 0; r < s; r++) {
                  a += this.renderer.tablecell(this.parseInline(l[r]), {
                    header: !1,
                    align: c.align[r]
                  });
                }
                o += this.renderer.tablerow(a);
              }
              b += this.renderer.table(u, o);
              continue;
            case "blockquote":
              o = this.parse(c.tokens), b += this.renderer.blockquote(o);
              continue;
            case "list":
              for (u = c.ordered, w = c.start, p = c.loose, i = c.items.length, o = "", n = 0; n < i; n++) {
                f = (g = c.items[n]).checked, d = g.task, h = "", g.task && (k = this.renderer.checkbox(f), p ? 0 < g.tokens.length && "text" === g.tokens[0].type ? (g.tokens[0].text = k + " " + g.tokens[0].text, g.tokens[0].tokens && 0 < g.tokens[0].tokens.length && "text" === g.tokens[0].tokens[0].type && (g.tokens[0].tokens[0].text = k + " " + g.tokens[0].tokens[0].text)) : g.tokens.unshift({
                  type: "text",
                  text: k
                }) : h += k), h += this.parse(g.tokens, p), o += this.renderer.listitem(h, d, f);
              }
              b += this.renderer.list(o, u, w);
              continue;
            case "html":
              b += this.renderer.html(c.text);
              continue;
            case "paragraph":
              b += this.renderer.paragraph(this.parseInline(c.tokens));
              continue;
            case "text":
              for (o = c.tokens ? this.parseInline(c.tokens) : c.text; x + 1 < m && "text" === e[x + 1].type;) {
                o += "\n" + ((c = e[++x]).tokens ? this.parseInline(c.tokens) : c.text);
              }
              b += t ? this.renderer.paragraph(o) : o;
              continue;
            default:
              var w = 'Token with "' + c.type + '" type was not found.';
              if (this.options.silent) return void console.error(w);
              throw new Error(w);
          }
        }
        return b;
      }, e.parseInline = function (e, t) {
        t = t || this.renderer;
        for (var n, r = "", i = e.length, s = 0; s < i; s++) {
          switch ((n = e[s]).type) {
            case "escape":
              r += t.text(n.text);
              break;
            case "html":
              r += t.html(n.text);
              break;
            case "link":
              r += t.link(n.href, n.title, this.parseInline(n.tokens, t));
              break;
            case "image":
              r += t.image(n.href, n.title, n.text);
              break;
            case "strong":
              r += t.strong(this.parseInline(n.tokens, t));
              break;
            case "em":
              r += t.em(this.parseInline(n.tokens, t));
              break;
            case "codespan":
              r += t.codespan(n.text);
              break;
            case "br":
              r += t.br();
              break;
            case "del":
              r += t.del(this.parseInline(n.tokens, t));
              break;
            case "text":
              r += t.text(n.text);
              break;
            default:
              var l = 'Token with "' + n.type + '" type was not found.';
              if (this.options.silent) return void console.error(l);
              throw new Error(l);
          }
        }
        return r;
      }, n;
    }(),
    te = A,
    ne = I,
    re = _,
    _ = t.getDefaults,
    ie = t.changeDefaults,
    t = t.defaults;
  function se(e, n, r) {
    if (null == e) throw new Error("marked(): input parameter is undefined or null");
    if ("string" != typeof e) throw new Error("marked(): input parameter is of type " + Object.prototype.toString.call(e) + ", string expected");
    if ("function" == typeof n && (r = n, n = null), n = te({}, se.defaults, n || {}), ne(n), r) {
      var i,
        s = n.highlight;
      try {
        i = W.lex(e, n);
      } catch (e) {
        return r(e);
      }
      var l = function l(t) {
        var e;
        if (!t) try {
          e = ee.parse(i, n);
        } catch (e) {
          t = e;
        }
        return n.highlight = s, t ? r(t) : r(null, e);
      };
      if (!s || s.length < 3) return l();
      if (delete n.highlight, !i.length) return l();
      var a = 0;
      return se.walkTokens(i, function (n) {
        "code" === n.type && (a++, setTimeout(function () {
          s(n.text, n.lang, function (e, t) {
            return e ? l(e) : (null != t && t !== n.text && (n.text = t, n.escaped = !0), void (0 === --a && l()));
          });
        }, 0));
      }), void (0 === a && l());
    }
    try {
      var t = W.lex(e, n);
      return n.walkTokens && se.walkTokens(t, n.walkTokens), ee.parse(t, n);
    } catch (e) {
      if (e.message += "\nPlease report this to https://github.com/markedjs/marked.", n.silent) return "<p>An error occurred:</p><pre>" + re(e.message + "", !0) + "</pre>";
      throw e;
    }
  }
  return se.options = se.setOptions = function (e) {
    return te(se.defaults, e), ie(se.defaults), se;
  }, se.getDefaults = _, se.defaults = t, se.use = function (a) {
    var t,
      n = te({}, a);
    a.renderer && function () {
      var e,
        l = se.defaults.renderer || new H();
      for (e in a.renderer) {
        !function (i) {
          var s = l[i];
          l[i] = function () {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) {
              t[n] = arguments[n];
            }
            var r = a.renderer[i].apply(l, t);
            return !1 === r && (r = s.apply(l, t)), r;
          };
        }(e);
      }
      n.renderer = l;
    }(), a.tokenizer && function () {
      var e,
        l = se.defaults.tokenizer || new D();
      for (e in a.tokenizer) {
        !function (i) {
          var s = l[i];
          l[i] = function () {
            for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) {
              t[n] = arguments[n];
            }
            var r = a.tokenizer[i].apply(l, t);
            return !1 === r && (r = s.apply(l, t)), r;
          };
        }(e);
      }
      n.tokenizer = l;
    }(), a.walkTokens && (t = se.defaults.walkTokens, n.walkTokens = function (e) {
      a.walkTokens(e), t && t(e);
    }), se.setOptions(n);
  }, se.walkTokens = function (e, t) {
    for (var n, r = p(e); !(n = r()).done;) {
      var i = n.value;
      switch (t(i), i.type) {
        case "table":
          for (var s = p(i.tokens.header); !(l = s()).done;) {
            var l = l.value;
            se.walkTokens(l, t);
          }
          for (var a, o = p(i.tokens.cells); !(a = o()).done;) {
            for (var c = p(a.value); !(u = c()).done;) {
              var u = u.value;
              se.walkTokens(u, t);
            }
          }
          break;
        case "list":
          se.walkTokens(i.items, t);
          break;
        default:
          i.tokens && se.walkTokens(i.tokens, t);
      }
    }
  }, se.parseInline = function (e, t) {
    if (null == e) throw new Error("marked.parseInline(): input parameter is undefined or null");
    if ("string" != typeof e) throw new Error("marked.parseInline(): input parameter is of type " + Object.prototype.toString.call(e) + ", string expected");
    t = te({}, se.defaults, t || {}), ne(t);
    try {
      var n = W.lexInline(e, t);
      return t.walkTokens && se.walkTokens(n, t.walkTokens), ee.parseInline(n, t);
    } catch (e) {
      if (e.message += "\nPlease report this to https://github.com/markedjs/marked.", t.silent) return "<p>An error occurred:</p><pre>" + re(e.message + "", !0) + "</pre>";
      throw e;
    }
  }, se.Parser = ee, se.parser = ee.parse, se.Renderer = H, se.TextRenderer = J, se.Lexer = W, se.lexer = W.lex, se.Tokenizer = D, se.Slugger = K, se.parse = se;
}
;
var _default = t();
exports.default = _default;

/***/ }),

/***/ 748:
/*!*************************************************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/uni_modules/mp-html/components/mp-html/highlight/index.js ***!
  \*************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _prism = _interopRequireDefault(__webpack_require__(/*! ./prism.min */ 749));
var _config = _interopRequireDefault(__webpack_require__(/*! ./config */ 750));
var _parser = _interopRequireDefault(__webpack_require__(/*! ../parser */ 745));
/**
 * @fileoverview highlight 插件
 * Include prismjs (https://prismjs.com)
 */

function Highlight(vm) {
  this.vm = vm;
}
Highlight.prototype.onParse = function (node, vm) {
  if (node.name === 'pre') {
    if (vm.options.editable) {
      node.attrs.class = (node.attrs.class || '') + ' hl-pre';
      return;
    }
    var i;
    for (i = node.children.length; i--;) {
      if (node.children[i].name === 'code') break;
    }
    if (i === -1) return;
    var code = node.children[i];
    var className = code.attrs.class + ' ' + node.attrs.class;
    i = className.indexOf('language-');
    if (i === -1) {
      i = className.indexOf('lang-');
      if (i === -1) {
        className = 'language-text';
        i = 9;
      } else {
        i += 5;
      }
    } else {
      i += 9;
    }
    var j;
    for (j = i; j < className.length; j++) {
      if (className[j] === ' ') break;
    }
    var lang = className.substring(i, j);
    if (code.children.length) {
      var text = this.vm.getText(code.children).replace(/&amp;/g, '&');
      if (!text) return;
      if (node.c) {
        node.c = undefined;
      }
      if (_prism.default.languages[lang]) {
        code.children = new _parser.default(this.vm).parse(
        // 加一层 pre 保留空白符
        '<pre>' + _prism.default.highlight(text, _prism.default.languages[lang], lang).replace(/token /g, 'hl-') + '</pre>')[0].children;
      }
      node.attrs.class = 'hl-pre';
      code.attrs.class = 'hl-code';
      if (_config.default.showLanguageName) {
        node.children.push({
          name: 'div',
          attrs: {
            class: 'hl-language',
            style: 'user-select:none'
          },
          children: [{
            type: 'text',
            text: lang
          }]
        });
      }
      if (_config.default.copyByLongPress) {
        node.attrs.style += (node.attrs.style || '') + ';user-select:none';
        node.attrs['data-content'] = text;
        vm.expose();
      }
      if (_config.default.showLineNumber) {
        var line = text.split('\n').length;
        var children = [];
        for (var k = line; k--;) {
          children.push({
            name: 'span',
            attrs: {
              class: 'span'
            }
          });
        }
        node.children.push({
          name: 'span',
          attrs: {
            class: 'line-numbers-rows'
          },
          children: children
        });
      }
    }
  }
};
var _default = Highlight;
exports.default = _default;

/***/ }),

/***/ 749:
/*!*****************************************************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/uni_modules/mp-html/components/mp-html/highlight/prism.min.js ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
/*! PrismJS 1.22.0
https://prismjs.com/download.html#themes=prism-tomorrow&languages=markup+css+clike+javascript */
var _self = "undefined" != typeof window ? window : "undefined" != typeof WorkerGlobalScope && self instanceof WorkerGlobalScope ? self : {},
  Prism = function (u) {
    var c = /\blang(?:uage)?-([\w-]+)\b/i,
      n = 0,
      M = {
        manual: u.Prism && u.Prism.manual,
        disableWorkerMessageHandler: u.Prism && u.Prism.disableWorkerMessageHandler,
        util: {
          encode: function e(n) {
            return n instanceof W ? new W(n.type, e(n.content), n.alias) : Array.isArray(n) ? n.map(e) : n.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/\u00a0/g, " ");
          },
          type: function type(e) {
            return Object.prototype.toString.call(e).slice(8, -1);
          },
          objId: function objId(e) {
            return e.__id || Object.defineProperty(e, "__id", {
              value: ++n
            }), e.__id;
          },
          clone: function t(e, r) {
            var a, n;
            switch (r = r || {}, M.util.type(e)) {
              case "Object":
                if (n = M.util.objId(e), r[n]) return r[n];
                for (var i in a = {}, r[n] = a, e) {
                  e.hasOwnProperty(i) && (a[i] = t(e[i], r));
                }
                return a;
              case "Array":
                return n = M.util.objId(e), r[n] ? r[n] : (a = [], r[n] = a, e.forEach(function (e, n) {
                  a[n] = t(e, r);
                }), a);
              default:
                return e;
            }
          },
          getLanguage: function getLanguage(e) {
            for (; e && !c.test(e.className);) {
              e = e.parentElement;
            }
            return e ? (e.className.match(c) || [, "none"])[1].toLowerCase() : "none";
          },
          currentScript: function currentScript() {
            if ("undefined" == typeof document) return null;
            if ("currentScript" in document) return document.currentScript;
            try {
              throw new Error();
            } catch (e) {
              var n = (/at [^(\r\n]*\((.*):.+:.+\)$/i.exec(e.stack) || [])[1];
              if (n) {
                var t = document.getElementsByTagName("script");
                for (var r in t) {
                  if (t[r].src == n) return t[r];
                }
              }
              return null;
            }
          },
          isActive: function isActive(e, n, t) {
            for (var r = "no-" + n; e;) {
              var a = e.classList;
              if (a.contains(n)) return !0;
              if (a.contains(r)) return !1;
              e = e.parentElement;
            }
            return !!t;
          }
        },
        languages: {
          extend: function extend(e, n) {
            var t = M.util.clone(M.languages[e]);
            for (var r in n) {
              t[r] = n[r];
            }
            return t;
          },
          insertBefore: function insertBefore(t, e, n, r) {
            var a = (r = r || M.languages)[t],
              i = {};
            for (var l in a) {
              if (a.hasOwnProperty(l)) {
                if (l == e) for (var o in n) {
                  n.hasOwnProperty(o) && (i[o] = n[o]);
                }
                n.hasOwnProperty(l) || (i[l] = a[l]);
              }
            }
            var s = r[t];
            return r[t] = i, M.languages.DFS(M.languages, function (e, n) {
              n === s && e != t && (this[e] = i);
            }), i;
          },
          DFS: function e(n, t, r, a) {
            a = a || {};
            var i = M.util.objId;
            for (var l in n) {
              if (n.hasOwnProperty(l)) {
                t.call(n, l, n[l], r || l);
                var o = n[l],
                  s = M.util.type(o);
                "Object" !== s || a[i(o)] ? "Array" !== s || a[i(o)] || (a[i(o)] = !0, e(o, t, l, a)) : (a[i(o)] = !0, e(o, t, null, a));
              }
            }
          }
        },
        plugins: {},
        highlightAll: function highlightAll(e, n) {
          M.highlightAllUnder(document, e, n);
        },
        highlightAllUnder: function highlightAllUnder(e, n, t) {
          var r = {
            callback: t,
            container: e,
            selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
          };
          M.hooks.run("before-highlightall", r), r.elements = Array.prototype.slice.apply(r.container.querySelectorAll(r.selector)), M.hooks.run("before-all-elements-highlight", r);
          for (var a, i = 0; a = r.elements[i++];) {
            M.highlightElement(a, !0 === n, r.callback);
          }
        },
        highlightElement: function highlightElement(e, n, t) {
          var r = M.util.getLanguage(e),
            a = M.languages[r];
          e.className = e.className.replace(c, "").replace(/\s+/g, " ") + " language-" + r;
          var i = e.parentElement;
          i && "pre" === i.nodeName.toLowerCase() && (i.className = i.className.replace(c, "").replace(/\s+/g, " ") + " language-" + r);
          var l = {
            element: e,
            language: r,
            grammar: a,
            code: e.textContent
          };
          function o(e) {
            l.highlightedCode = e, M.hooks.run("before-insert", l), l.element.innerHTML = l.highlightedCode, M.hooks.run("after-highlight", l), M.hooks.run("complete", l), t && t.call(l.element);
          }
          if (M.hooks.run("before-sanity-check", l), !l.code) return M.hooks.run("complete", l), void (t && t.call(l.element));
          if (M.hooks.run("before-highlight", l), l.grammar) {
            if (n && u.Worker) {
              var s = new Worker(M.filename);
              s.onmessage = function (e) {
                o(e.data);
              }, s.postMessage(JSON.stringify({
                language: l.language,
                code: l.code,
                immediateClose: !0
              }));
            } else o(M.highlight(l.code, l.grammar, l.language));
          } else o(M.util.encode(l.code));
        },
        highlight: function highlight(e, n, t) {
          var r = {
            code: e,
            grammar: n,
            language: t
          };
          return M.hooks.run("before-tokenize", r), r.tokens = M.tokenize(r.code, r.grammar), M.hooks.run("after-tokenize", r), W.stringify(M.util.encode(r.tokens), r.language);
        },
        tokenize: function tokenize(e, n) {
          var t = n.rest;
          if (t) {
            for (var r in t) {
              n[r] = t[r];
            }
            delete n.rest;
          }
          var a = new i();
          return I(a, a.head, e), function e(n, t, r, a, i, l) {
            for (var o in r) {
              if (r.hasOwnProperty(o) && r[o]) {
                var s = r[o];
                s = Array.isArray(s) ? s : [s];
                for (var u = 0; u < s.length; ++u) {
                  if (l && l.cause == o + "," + u) return;
                  var c = s[u],
                    g = c.inside,
                    f = !!c.lookbehind,
                    h = !!c.greedy,
                    d = 0,
                    v = c.alias;
                  if (h && !c.pattern.global) {
                    var p = c.pattern.toString().match(/[imsuy]*$/)[0];
                    c.pattern = RegExp(c.pattern.source, p + "g");
                  }
                  for (var m = c.pattern || c, y = a.next, k = i; y !== t.tail && !(l && k >= l.reach); k += y.value.length, y = y.next) {
                    var b = y.value;
                    if (t.length > n.length) return;
                    if (!(b instanceof W)) {
                      var x = 1;
                      if (h && y != t.tail.prev) {
                        m.lastIndex = k;
                        var w = m.exec(n);
                        if (!w) break;
                        var A = w.index + (f && w[1] ? w[1].length : 0),
                          P = w.index + w[0].length,
                          S = k;
                        for (S += y.value.length; S <= A;) {
                          y = y.next, S += y.value.length;
                        }
                        if (S -= y.value.length, k = S, y.value instanceof W) continue;
                        for (var E = y; E !== t.tail && (S < P || "string" == typeof E.value); E = E.next) {
                          x++, S += E.value.length;
                        }
                        x--, b = n.slice(k, S), w.index -= k;
                      } else {
                        m.lastIndex = 0;
                        var w = m.exec(b);
                      }
                      if (w) {
                        f && (d = w[1] ? w[1].length : 0);
                        var A = w.index + d,
                          O = w[0].slice(d),
                          P = A + O.length,
                          L = b.slice(0, A),
                          N = b.slice(P),
                          j = k + b.length;
                        l && j > l.reach && (l.reach = j);
                        var C = y.prev;
                        L && (C = I(t, C, L), k += L.length), z(t, C, x);
                        var _ = new W(o, g ? M.tokenize(O, g) : O, v, O);
                        y = I(t, C, _), N && I(t, y, N), 1 < x && e(n, t, r, y.prev, k, {
                          cause: o + "," + u,
                          reach: j
                        });
                      }
                    }
                  }
                }
              }
            }
          }(e, a, n, a.head, 0), function (e) {
            var n = [],
              t = e.head.next;
            for (; t !== e.tail;) {
              n.push(t.value), t = t.next;
            }
            return n;
          }(a);
        },
        hooks: {
          all: {},
          add: function add(e, n) {
            var t = M.hooks.all;
            t[e] = t[e] || [], t[e].push(n);
          },
          run: function run(e, n) {
            var t = M.hooks.all[e];
            if (t && t.length) for (var r, a = 0; r = t[a++];) {
              r(n);
            }
          }
        },
        Token: W
      };
    function W(e, n, t, r) {
      this.type = e, this.content = n, this.alias = t, this.length = 0 | (r || "").length;
    }
    function i() {
      var e = {
          value: null,
          prev: null,
          next: null
        },
        n = {
          value: null,
          prev: e,
          next: null
        };
      e.next = n, this.head = e, this.tail = n, this.length = 0;
    }
    function I(e, n, t) {
      var r = n.next,
        a = {
          value: t,
          prev: n,
          next: r
        };
      return n.next = a, r.prev = a, e.length++, a;
    }
    function z(e, n, t) {
      for (var r = n.next, a = 0; a < t && r !== e.tail; a++) {
        r = r.next;
      }
      (n.next = r).prev = n, e.length -= a;
    }
    if (u.Prism = M, W.stringify = function n(e, t) {
      if ("string" == typeof e) return e;
      if (Array.isArray(e)) {
        var r = "";
        return e.forEach(function (e) {
          r += n(e, t);
        }), r;
      }
      var a = {
          type: e.type,
          content: n(e.content, t),
          tag: "span",
          classes: ["token", e.type],
          attributes: {},
          language: t
        },
        i = e.alias;
      i && (Array.isArray(i) ? Array.prototype.push.apply(a.classes, i) : a.classes.push(i)), M.hooks.run("wrap", a);
      var l = "";
      for (var o in a.attributes) {
        l += " " + o + '="' + (a.attributes[o] || "").replace(/"/g, "&quot;") + '"';
      }
      return "<" + a.tag + ' class="' + a.classes.join(" ") + '"' + l + ">" + a.content + "</" + a.tag + ">";
    }, !u.document) return u.addEventListener && (M.disableWorkerMessageHandler || u.addEventListener("message", function (e) {
      var n = JSON.parse(e.data),
        t = n.language,
        r = n.code,
        a = n.immediateClose;
      u.postMessage(M.highlight(r, M.languages[t], t)), a && u.close();
    }, !1)), M;
    var e = M.util.currentScript();
    function t() {
      M.manual || M.highlightAll();
    }
    if (e && (M.filename = e.src, e.hasAttribute("data-manual") && (M.manual = !0)), !M.manual) {
      var r = document.readyState;
      "loading" === r || "interactive" === r && e && e.defer ? document.addEventListener("DOMContentLoaded", t) : window.requestAnimationFrame ? window.requestAnimationFrame(t) : window.setTimeout(t, 16);
    }
    return M;
  }(_self);
var _default = Prism;
exports.default = _default;
"undefined" != typeof global && (global.Prism = Prism);
Prism.languages.markup = {
  comment: /<!--[\s\S]*?-->/,
  prolog: /<\?[\s\S]+?\?>/,
  doctype: {
    pattern: /<!DOCTYPE(?:[^>"'[\]]|"[^"]*"|'[^']*')+(?:\[(?:[^<"'\]]|"[^"]*"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\]\s*)?>/i,
    greedy: !0,
    inside: {
      "internal-subset": {
        pattern: /(\[)[\s\S]+(?=\]>$)/,
        lookbehind: !0,
        greedy: !0,
        inside: null
      },
      string: {
        pattern: /"[^"]*"|'[^']*'/,
        greedy: !0
      },
      punctuation: /^<!|>$|[[\]]/,
      "doctype-tag": /^DOCTYPE/,
      name: /[^\s<>'"]+/
    }
  },
  cdata: /<!\[CDATA\[[\s\S]*?]]>/i,
  tag: {
    pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s(?:\s*[^\s>\/=]+(?:\s*=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+(?=[\s>]))|(?=[\s/>])))+)?\s*\/?>/,
    greedy: !0,
    inside: {
      tag: {
        pattern: /^<\/?[^\s>\/]+/,
        inside: {
          punctuation: /^<\/?/,
          namespace: /^[^\s>\/:]+:/
        }
      },
      "attr-value": {
        pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
        inside: {
          punctuation: [{
            pattern: /^=/,
            alias: "attr-equals"
          }, /"|'/]
        }
      },
      punctuation: /\/?>/,
      "attr-name": {
        pattern: /[^\s>\/]+/,
        inside: {
          namespace: /^[^\s>\/:]+:/
        }
      }
    }
  },
  entity: [{
    pattern: /&[\da-z]{1,8};/i,
    alias: "named-entity"
  }, /&#x?[\da-f]{1,8};/i]
}, Prism.languages.markup.tag.inside["attr-value"].inside.entity = Prism.languages.markup.entity, Prism.languages.markup.doctype.inside["internal-subset"].inside = Prism.languages.markup, Prism.hooks.add("wrap", function (a) {
  "entity" === a.type && (a.attributes.title = a.content.replace(/&amp;/, "&"));
}), Object.defineProperty(Prism.languages.markup.tag, "addInlined", {
  value: function value(a, e) {
    var s = {};
    s["language-" + e] = {
      pattern: /(^<!\[CDATA\[)[\s\S]+?(?=\]\]>$)/i,
      lookbehind: !0,
      inside: Prism.languages[e]
    }, s.cdata = /^<!\[CDATA\[|\]\]>$/i;
    var n = {
      "included-cdata": {
        pattern: /<!\[CDATA\[[\s\S]*?\]\]>/i,
        inside: s
      }
    };
    n["language-" + e] = {
      pattern: /[\s\S]+/,
      inside: Prism.languages[e]
    };
    var t = {};
    t[a] = {
      pattern: RegExp("(<__[^]*?>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[^])*?(?=</__>)".replace(/__/g, function () {
        return a;
      }), "i"),
      lookbehind: !0,
      greedy: !0,
      inside: n
    }, Prism.languages.insertBefore("markup", "cdata", t);
  }
}), Prism.languages.html = Prism.languages.markup, Prism.languages.mathml = Prism.languages.markup, Prism.languages.svg = Prism.languages.markup, Prism.languages.xml = Prism.languages.extend("markup", {}), Prism.languages.ssml = Prism.languages.xml, Prism.languages.atom = Prism.languages.xml, Prism.languages.rss = Prism.languages.xml;
!function (e) {
  var t = /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/;
  e.languages.css = {
    comment: /\/\*[\s\S]*?\*\//,
    atrule: {
      pattern: /@[\w-]+[\s\S]*?(?:;|(?=\s*\{))/,
      inside: {
        rule: /^@[\w-]+/,
        "selector-function-argument": {
          pattern: /(\bselector\s*\((?!\s*\))\s*)(?:[^()]|\((?:[^()]|\([^()]*\))*\))+?(?=\s*\))/,
          lookbehind: !0,
          alias: "selector"
        },
        keyword: {
          pattern: /(^|[^\w-])(?:and|not|only|or)(?![\w-])/,
          lookbehind: !0
        }
      }
    },
    url: {
      pattern: RegExp("\\burl\\((?:" + t.source + "|(?:[^\\\\\r\n()\"']|\\\\[^])*)\\)", "i"),
      greedy: !0,
      inside: {
        function: /^url/i,
        punctuation: /^\(|\)$/,
        string: {
          pattern: RegExp("^" + t.source + "$"),
          alias: "url"
        }
      }
    },
    selector: RegExp("[^{}\\s](?:[^{};\"']|" + t.source + ")*?(?=\\s*\\{)"),
    string: {
      pattern: t,
      greedy: !0
    },
    property: /[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,
    important: /!important\b/i,
    function: /[-a-z0-9]+(?=\()/i,
    punctuation: /[(){};:,]/
  }, e.languages.css.atrule.inside.rest = e.languages.css;
  var s = e.languages.markup;
  s && (s.tag.addInlined("style", "css"), e.languages.insertBefore("inside", "attr-value", {
    "style-attr": {
      pattern: /(^|["'\s])style\s*=\s*(?:"[^"]*"|'[^']*')/i,
      lookbehind: !0,
      inside: {
        "attr-value": {
          pattern: /=\s*(?:"[^"]*"|'[^']*'|[^\s'">=]+)/,
          inside: {
            style: {
              pattern: /(["'])[\s\S]+(?=["']$)/,
              lookbehind: !0,
              alias: "language-css",
              inside: e.languages.css
            },
            punctuation: [{
              pattern: /^=/,
              alias: "attr-equals"
            }, /"|'/]
          }
        },
        "attr-name": /^style/i
      }
    }
  }, s.tag));
}(Prism);
Prism.languages.clike = {
  comment: [{
    pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
    lookbehind: !0
  }, {
    pattern: /(^|[^\\:])\/\/.*/,
    lookbehind: !0,
    greedy: !0
  }],
  string: {
    pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
    greedy: !0
  },
  "class-name": {
    pattern: /(\b(?:class|interface|extends|implements|trait|instanceof|new)\s+|\bcatch\s+\()[\w.\\]+/i,
    lookbehind: !0,
    inside: {
      punctuation: /[.\\]/
    }
  },
  keyword: /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
  boolean: /\b(?:true|false)\b/,
  function: /\w+(?=\()/,
  number: /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,
  operator: /[<>]=?|[!=]=?=?|--?|\+\+?|&&?|\|\|?|[?*/~^%]/,
  punctuation: /[{}[\];(),.:]/
};
Prism.languages.javascript = Prism.languages.extend("clike", {
  "class-name": [Prism.languages.clike["class-name"], {
    pattern: /(^|[^$\w\xA0-\uFFFF])[_$A-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\.(?:prototype|constructor))/,
    lookbehind: !0
  }],
  keyword: [{
    pattern: /((?:^|})\s*)(?:catch|finally)\b/,
    lookbehind: !0
  }, {
    pattern: /(^|[^.]|\.\.\.\s*)\b(?:as|async(?=\s*(?:function\b|\(|[$\w\xA0-\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|for|from|function|(?:get|set)(?=\s*[\[$\w\xA0-\uFFFF])|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\b/,
    lookbehind: !0
  }],
  number: /\b(?:(?:0[xX](?:[\dA-Fa-f](?:_[\dA-Fa-f])?)+|0[bB](?:[01](?:_[01])?)+|0[oO](?:[0-7](?:_[0-7])?)+)n?|(?:\d(?:_\d)?)+n|NaN|Infinity)\b|(?:\b(?:\d(?:_\d)?)+\.?(?:\d(?:_\d)?)*|\B\.(?:\d(?:_\d)?)+)(?:[Ee][+-]?(?:\d(?:_\d)?)+)?/,
  function: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*(?:\.\s*(?:apply|bind|call)\s*)?\()/,
  operator: /--|\+\+|\*\*=?|=>|&&=?|\|\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\.{3}|\?\?=?|\?\.?|[~:]/
}), Prism.languages.javascript["class-name"][0].pattern = /(\b(?:class|interface|extends|implements|instanceof|new)\s+)[\w.\\]+/, Prism.languages.insertBefore("javascript", "keyword", {
  regex: {
    pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s]|\b(?:return|yield))\s*)\/(?:\[(?:[^\]\\\r\n]|\\.)*]|\\.|[^/\\\[\r\n])+\/[gimyus]{0,6}(?=(?:\s|\/\*(?:[^*]|\*(?!\/))*\*\/)*(?:$|[\r\n,.;:})\]]|\/\/))/,
    lookbehind: !0,
    greedy: !0,
    inside: {
      "regex-source": {
        pattern: /^(\/)[\s\S]+(?=\/[a-z]*$)/,
        lookbehind: !0,
        alias: "language-regex",
        inside: Prism.languages.regex
      },
      "regex-flags": /[a-z]+$/,
      "regex-delimiter": /^\/|\/$/
    }
  },
  "function-variable": {
    pattern: /#?[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*[=:]\s*(?:async\s*)?(?:\bfunction\b|(?:\((?:[^()]|\([^()]*\))*\)|[_$a-zA-Z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/,
    alias: "function"
  },
  parameter: [{
    pattern: /(function(?:\s+[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)?\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\))/,
    lookbehind: !0,
    inside: Prism.languages.javascript
  }, {
    pattern: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=>)/i,
    inside: Prism.languages.javascript
  }, {
    pattern: /(\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*=>)/,
    lookbehind: !0,
    inside: Prism.languages.javascript
  }, {
    pattern: /((?:\b|\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\w\xA0-\uFFFF]))(?:[_$A-Za-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*\s*)\(\s*|\]\s*\(\s*)(?!\s)(?:[^()]|\([^()]*\))+?(?=\s*\)\s*\{)/,
    lookbehind: !0,
    inside: Prism.languages.javascript
  }],
  constant: /\b[A-Z](?:[A-Z_]|\dx?)*\b/
}), Prism.languages.insertBefore("javascript", "string", {
  "template-string": {
    pattern: /`(?:\\[\s\S]|\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}|(?!\${)[^\\`])*`/,
    greedy: !0,
    inside: {
      "template-punctuation": {
        pattern: /^`|`$/,
        alias: "string"
      },
      interpolation: {
        pattern: /((?:^|[^\\])(?:\\{2})*)\${(?:[^{}]|{(?:[^{}]|{[^}]*})*})+}/,
        lookbehind: !0,
        inside: {
          "interpolation-punctuation": {
            pattern: /^\${|}$/,
            alias: "punctuation"
          },
          rest: Prism.languages.javascript
        }
      },
      string: /[\s\S]+/
    }
  }
}), Prism.languages.markup && Prism.languages.markup.tag.addInlined("script", "javascript"), Prism.languages.js = Prism.languages.javascript;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../../../../../../../Applications/HBuilderX.app/Contents/HBuilderX/plugins/uniapp-cli/node_modules/webpack/buildin/global.js */ 3)))

/***/ }),

/***/ 750:
/*!**************************************************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/uni_modules/mp-html/components/mp-html/highlight/config.js ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _default = {
  copyByLongPress: false,
  // 是否需要长按代码块时显示复制代码内容菜单
  showLanguageName: false,
  // 是否在代码块右上角显示语言的名称
  showLineNumber: false // 是否显示行号
};
exports.default = _default;

/***/ }),

/***/ 758:
/*!***************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/utils/st.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(wx) {/*
st.js

Copyright 1999-present Alibaba Group Holding Ltd.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/



var _regeneratorRuntime = __webpack_require__(/*! @babel/runtime/regenerator */ 30);
var _asyncToGenerator = __webpack_require__(/*! @babel/runtime/helpers/asyncToGenerator */ 32);
var _classCallCheck = __webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23);
var _createClass = __webpack_require__(/*! @babel/runtime/helpers/createClass */ 24);
var NlsClient = __webpack_require__(/*! ./nls */ 44);
var EventBus = __webpack_require__(/*! ./eventbus */ 45);
var SpeechTranscription = /*#__PURE__*/function () {
  function SpeechTranscription(config) {
    _classCallCheck(this, SpeechTranscription);
    this._event = new EventBus();
    this._config = config;
  }
  _createClass(SpeechTranscription, [{
    key: "defaultStartParams",
    value: function defaultStartParams() {
      return {
        format: "pcm",
        sample_rate: 16000,
        enable_intermediate_result: true,
        enable_punctuation_prediction: true,
        enable_inverse_text_normalization: true
      };
    }
  }, {
    key: "on",
    value: function on(which, handler) {
      this._event.off(which);
      this._event.on(which, handler);
    }
  }, {
    key: "start",
    value: function () {
      var _start = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(param) {
        var _this = this;
        var req;
        return _regeneratorRuntime.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this._client = new NlsClient(this._config);
                this._taskid = this._client.uuid();
                req = {
                  header: {
                    message_id: this._client.uuid(),
                    task_id: this._taskid,
                    namespace: "SpeechTranscriber",
                    name: "StartTranscription",
                    appkey: this._config.appkey
                  },
                  payload: param,
                  context: this._client.defaultContext()
                };
                return _context2.abrupt("return", new Promise( /*#__PURE__*/function () {
                  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {
                    return _regeneratorRuntime.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            _context.prev = 0;
                            _context.next = 3;
                            return _this._client.start(
                            //onmessage
                            function (msg, isBinary) {
                              if (!isBinary) {
                                var str = msg.toString();
                                var msgObj = JSON.parse(str);
                                if (msgObj.header.name === "TranscriptionStarted") {
                                  _this._event.emit("started", str);
                                  resolve(str);
                                } else if (msgObj.header.name === "TranscriptionResultChanged") {
                                  _this._event.emit("changed", str);
                                } else if (msgObj.header.name === "TranscriptionCompleted") {
                                  _this._event.emit("TranscriptionCompleted", str);
                                } else if (msgObj.header.name === "SentenceBegin") {
                                  _this._event.emit("begin", str);
                                } else if (msgObj.header.name === "SentenceEnd") {
                                  _this._event.emit("end", str);
                                } else if (msgObj.header.name === "TaskFailed") {
                                  _this._client.shutdown();
                                  _this._client = null;
                                  _this._event.emit("TaskFailed", str);
                                  _this._event.emit("failed", str);
                                }
                              }
                            },
                            //onclose
                            function () {
                              _this._event.emit("closed");
                            });
                          case 3:
                            _this._client.send(JSON.stringify(req), false);
                            _context.next = 9;
                            break;
                          case 6:
                            _context.prev = 6;
                            _context.t0 = _context["catch"](0);
                            reject(_context.t0);
                          case 9:
                          case "end":
                            return _context.stop();
                        }
                      }
                    }, _callee, null, [[0, 6]]);
                  }));
                  return function (_x2, _x3) {
                    return _ref.apply(this, arguments);
                  };
                }()));
              case 4:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));
      function start(_x) {
        return _start.apply(this, arguments);
      }
      return start;
    }()
  }, {
    key: "close",
    value: function () {
      var _close = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(param) {
        var _this2 = this;
        var req;
        return _regeneratorRuntime.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (!(this._client == null)) {
                  _context3.next = 2;
                  break;
                }
                return _context3.abrupt("return", new Promise(function (resolve, reject) {
                  wx.nextTick(function () {
                    reject("client is null");
                  });
                }));
              case 2:
                req = {
                  header: {
                    message_id: this._client.uuid(),
                    task_id: this._taskid,
                    namespace: "SpeechTranscriber",
                    name: "StopTranscription",
                    appkey: this._config.appkey
                  },
                  payload: param,
                  context: this._client.defaultContext()
                };
                return _context3.abrupt("return", new Promise(function (resolve, reject) {
                  _this2._event.off("TranscriptionCompleted");
                  _this2._event.on("TranscriptionCompleted", function (msg) {
                    if (_this2._client) {
                      _this2._client.shutdown();
                      _this2._client = null;
                    }
                    _this2._event.emit("completed", msg);
                    resolve(msg);
                  });
                  _this2._event.off("TaskFailed");
                  _this2._event.on("TaskFailed", function (msg) {
                    reject(msg);
                  });
                  _this2._client.send(JSON.stringify(req), false);
                }));
              case 4:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));
      function close(_x4) {
        return _close.apply(this, arguments);
      }
      return close;
    }()
  }, {
    key: "ctrl",
    value: function ctrl(param) {
      if (this._client == null) {
        throw new Error("client is null");
      }
      var req = {
        header: {
          message_id: this._client.uuid(),
          task_id: this._taskid,
          namespace: "SpeechTranscriber",
          name: "ControlTranscription",
          appkey: this._config.appkey
        },
        payload: param,
        context: this._client.defaultContext()
      };
      this._client.send(JSON.stringify(req), false);
    }
  }, {
    key: "shutdown",
    value: function shutdown() {
      if (this._client == null) {
        return;
      }
      this._client.shutdown();
    }
  }, {
    key: "sendAudio",
    value: function sendAudio(data) {
      if (this._client == null) {
        return false;
      }
      this._client.send(data, true);
      return true;
    }
  }]);
  return SpeechTranscription;
}();
module.exports = SpeechTranscription;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/wx.js */ 1)["default"]))

/***/ }),

/***/ 766:
/*!*********************************************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/uni_modules/lime-echart/components/l-echart/canvas.js ***!
  \*********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Canvas = void 0;
exports.dispatch = dispatch;
exports.setCanvasCreator = setCanvasCreator;
var _toConsumableArray2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ 18));
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 24));
var _utils = __webpack_require__(/*! ./utils */ 767);
var cacheChart = {};
var fontSizeReg = /([\d\.]+)px/;
var EventEmit = /*#__PURE__*/function () {
  function EventEmit() {
    (0, _classCallCheck2.default)(this, EventEmit);
    this.__events = {};
  }
  (0, _createClass2.default)(EventEmit, [{
    key: "on",
    value: function on(type, listener) {
      if (!type || !listener) {
        return;
      }
      var events = this.__events[type] || [];
      events.push(listener);
      this.__events[type] = events;
    }
  }, {
    key: "emit",
    value: function emit(type, e) {
      var _this = this;
      if (type.constructor === Object) {
        e = type;
        type = e && e.type;
      }
      if (!type) {
        return;
      }
      var events = this.__events[type];
      if (!events || !events.length) {
        return;
      }
      events.forEach(function (listener) {
        listener.call(_this, e);
      });
    }
  }, {
    key: "off",
    value: function off(type, listener) {
      var __events = this.__events;
      var events = __events[type];
      if (!events || !events.length) {
        return;
      }
      if (!listener) {
        delete __events[type];
        return;
      }
      for (var i = 0, len = events.length; i < len; i++) {
        if (events[i] === listener) {
          events.splice(i, 1);
          i--;
        }
      }
    }
  }]);
  return EventEmit;
}();
var Image = /*#__PURE__*/function () {
  function Image() {
    (0, _classCallCheck2.default)(this, Image);
    this.currentSrc = null;
    this.naturalHeight = 0;
    this.naturalWidth = 0;
    this.width = 0;
    this.height = 0;
    this.tagName = 'IMG';
  }
  (0, _createClass2.default)(Image, [{
    key: "src",
    get: function get() {
      return this.currentSrc;
    },
    set: function set(src) {
      var _this2 = this;
      this.currentSrc = src;
      uni.getImageInfo({
        src: src,
        success: function success(res) {
          _this2.naturalWidth = _this2.width = res.width;
          _this2.naturalHeight = _this2.height = res.height;
          _this2.onload();
        },
        fail: function fail() {
          _this2.onerror();
        }
      });
    }
  }]);
  return Image;
}();
var OffscreenCanvas = /*#__PURE__*/function () {
  function OffscreenCanvas(ctx, com, canvasId) {
    (0, _classCallCheck2.default)(this, OffscreenCanvas);
    this.tagName = 'canvas';
    this.com = com;
    this.canvasId = canvasId;
    this.ctx = ctx;
  }
  (0, _createClass2.default)(OffscreenCanvas, [{
    key: "width",
    get: function get() {
      return this.com.offscreenWidth || 0;
    },
    set: function set(w) {
      this.com.offscreenWidth = w;
    }
  }, {
    key: "height",
    get: function get() {
      return this.com.offscreenHeight || 0;
    },
    set: function set(h) {
      this.com.offscreenHeight = h;
    }
  }, {
    key: "getContext",
    value: function getContext(type) {
      return this.ctx;
    }
  }, {
    key: "getImageData",
    value: function getImageData() {
      var _this3 = this;
      return new Promise(function (resolve, reject) {
        _this3.com.$nextTick(function () {
          uni.canvasGetImageData({
            x: 0,
            y: 0,
            width: _this3.com.offscreenWidth,
            height: _this3.com.offscreenHeight,
            canvasId: _this3.canvasId,
            success: function success(res) {
              resolve(res);
            },
            fail: function fail(err) {
              reject(err);
            }
          }, _this3.com);
        });
      });
    }
  }]);
  return OffscreenCanvas;
}();
var Canvas = /*#__PURE__*/function () {
  function Canvas(ctx, com, isNew) {
    var canvasNode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    (0, _classCallCheck2.default)(this, Canvas);
    cacheChart[com.canvasId] = {
      ctx: ctx
    };
    this.canvasId = com.canvasId;
    this.chart = null;
    this.isNew = isNew;
    this.tagName = 'canvas';
    this.canvasNode = canvasNode;
    this.com = com;
    if (!isNew) {
      this._initStyle(ctx);
    }
    this._initEvent();
    this._ee = new EventEmit();
  }
  (0, _createClass2.default)(Canvas, [{
    key: "getContext",
    value: function getContext(type) {
      if (type === '2d') {
        return this.ctx;
      }
    }
  }, {
    key: "setAttribute",
    value: function setAttribute(key, value) {
      if (key === 'aria-label') {
        this.com['ariaLabel'] = value;
      }
    }
  }, {
    key: "setChart",
    value: function setChart(chart) {
      this.chart = chart;
    }
  }, {
    key: "createOffscreenCanvas",
    value: function createOffscreenCanvas(param) {
      if (!this.children) {
        this.com.isOffscreenCanvas = true;
        this.com.offscreenWidth = param.width || 300;
        this.com.offscreenHeight = param.height || 300;
        var com = this.com;
        var canvasId = this.com.offscreenCanvasId;
        var context = uni.createCanvasContext(canvasId, this.com);
        this._initStyle(context);
        this.children = new OffscreenCanvas(context, com, canvasId);
      }
      return this.children;
    }
  }, {
    key: "appendChild",
    value: function appendChild(child) {
      console.log('child', child);
    }
  }, {
    key: "dispatchEvent",
    value: function dispatchEvent(type, e) {
      if ((0, _typeof2.default)(type) == 'object') {
        this._ee.emit(type.type, type);
      } else {
        this._ee.emit(type, e);
      }
      return true;
    }
  }, {
    key: "attachEvent",
    value: function attachEvent() {}
  }, {
    key: "detachEvent",
    value: function detachEvent() {}
  }, {
    key: "addEventListener",
    value: function addEventListener(type, listener) {
      this._ee.on(type, listener);
    }
  }, {
    key: "removeEventListener",
    value: function removeEventListener(type, listener) {
      this._ee.off(type, listener);
    }
  }, {
    key: "_initCanvas",
    value: function _initCanvas(zrender, ctx) {
      // zrender.util.getContext = function() {
      // 	return ctx;
      // };
      // zrender.util.$override('measureText', function(text, font) {
      // 	ctx.font = font || '12px sans-serif';
      // 	return ctx.measureText(text, font);
      // });
    }
  }, {
    key: "_initStyle",
    value: function _initStyle(ctx, child) {
      var styles = ['fillStyle', 'strokeStyle', 'fontSize', 'globalAlpha', 'opacity', 'textAlign', 'textBaseline', 'shadow', 'lineWidth', 'lineCap', 'lineJoin', 'lineDash', 'miterLimit'];
      var colorReg = /#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])\b/g;
      styles.forEach(function (style) {
        Object.defineProperty(ctx, style, {
          set: function set(value) {
            if (style === 'opacity') {
              ctx.setGlobalAlpha(value);
              return;
            }
            if (style !== 'fillStyle' && style !== 'strokeStyle' || value !== 'none' && value !== null) {
              ctx['set' + style.charAt(0).toUpperCase() + style.slice(1)](value);
            }
          }
        });
      });
      if (!this.isNew && !child) {
        ctx.uniDrawImage = ctx.drawImage;
        ctx.drawImage = function () {
          for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {
            a[_key] = arguments[_key];
          }
          a[0] = a[0].src;
          ctx.uniDrawImage.apply(ctx, a);
        };
      }
      if (!ctx.createRadialGradient) {
        ctx.createRadialGradient = function () {
          return ctx.createCircularGradient.apply(ctx, (0, _toConsumableArray2.default)(Array.prototype.slice.call(arguments).slice(-3)));
        };
      }
      // 字节不支持
      if (!ctx.strokeText) {
        ctx.strokeText = function () {
          ctx.fillText.apply(ctx, arguments);
        };
      }

      // 钉钉不支持 , 鸿蒙是异步
      if (!ctx.measureText || (0, _utils.getDeviceInfo)().osName == 'harmonyos') {
        ctx._measureText = ctx.measureText;
        var strLen = function strLen(str) {
          var len = 0;
          for (var i = 0; i < str.length; i++) {
            if (str.charCodeAt(i) > 0 && str.charCodeAt(i) < 128) {
              len++;
            } else {
              len += 2;
            }
          }
          return len;
        };
        ctx.measureText = function (text, font) {
          var _ctx$state;
          var fontSize = (ctx === null || ctx === void 0 ? void 0 : (_ctx$state = ctx.state) === null || _ctx$state === void 0 ? void 0 : _ctx$state.fontSize) || 12;
          if (font) {
            fontSize = parseInt(font.match(/([\d\.]+)px/)[1]);
          }
          fontSize /= 2;
          var isBold = fontSize >= 16;
          var widthFactor = isBold ? 1.3 : 1;
          // ctx._measureText(text, (res) => {})
          return {
            width: strLen(text) * fontSize * widthFactor
          };
        };
      }
    }
  }, {
    key: "_initEvent",
    value: function _initEvent(e) {
      var _this4 = this;
      this.event = {};
      var eventNames = [{
        wxName: 'touchStart',
        ecName: 'mousedown'
      }, {
        wxName: 'touchMove',
        ecName: 'mousemove'
      }, {
        wxName: 'touchEnd',
        ecName: 'mouseup'
      }, {
        wxName: 'touchEnd',
        ecName: 'click'
      }];
      eventNames.forEach(function (name) {
        _this4.event[name.wxName] = function (e) {
          var touch = e.touches[0];
          _this4.chart.getZr().handler.dispatch(name.ecName, {
            zrX: name.wxName === 'tap' ? touch.clientX : touch.x,
            zrY: name.wxName === 'tap' ? touch.clientY : touch.y
          });
        };
      });
    }
  }, {
    key: "width",
    get: function get() {
      return this.canvasNode.width || 0;
    },
    set: function set(w) {
      this.canvasNode.width = w;
    }
  }, {
    key: "height",
    get: function get() {
      return this.canvasNode.height || 0;
    },
    set: function set(h) {
      this.canvasNode.height = h;
    }
  }, {
    key: "ctx",
    get: function get() {
      return cacheChart[this.canvasId]['ctx'] || null;
    }
  }, {
    key: "chart",
    get: function get() {
      return cacheChart[this.canvasId]['chart'] || null;
    },
    set: function set(chart) {
      cacheChart[this.canvasId]['chart'] = chart;
    }
  }]);
  return Canvas;
}();
exports.Canvas = Canvas;
function dispatch(name, _ref) {
  var x = _ref.x,
    y = _ref.y,
    wheelDelta = _ref.wheelDelta;
  this.dispatch(name, {
    zrX: x,
    zrY: y,
    zrDelta: wheelDelta,
    preventDefault: function preventDefault() {},
    stopPropagation: function stopPropagation() {}
  });
}
function setCanvasCreator(echarts, _ref2) {
  var canvas = _ref2.canvas,
    node = _ref2.node;
  if (echarts && !echarts.registerPreprocessor) {
    return console.warn('echarts 版本不对或未传入echarts，vue3请使用esm格式');
  }
  echarts.registerPreprocessor(function (option) {
    if (option && option.series) {
      if (option.series.length > 0) {
        option.series.forEach(function (series) {
          series.progressive = 0;
        });
      } else if ((0, _typeof2.default)(option.series) === 'object') {
        option.series.progressive = 0;
      }
    }
  });
  function loadImage(src, onload, onerror) {
    var img = null;
    if (node && node.createImage) {
      img = node.createImage();
      img.onload = onload.bind(img);
      img.onerror = onerror.bind(img);
      img.src = src;
      return img;
    } else {
      img = new Image();
      img.onload = onload.bind(img);
      img.onerror = onerror.bind(img);
      img.src = src;
      return img;
    }
  }
  if (echarts.setPlatformAPI) {
    echarts.setPlatformAPI({
      loadImage: canvas.setChart ? loadImage : null,
      createCanvas: function createCanvas() {
        var key = 'createOffscreenCanvas';
        return uni.canIUse(key) && uni[key] ? uni[key]({
          type: '2d'
        }) : canvas;
      }
    });
  } else if (echarts.setCanvasCreator) {
    echarts.setCanvasCreator(function () {
      return canvas;
    });
  }
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 767:
/*!********************************************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/uni_modules/lime-echart/components/l-echart/utils.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.canIUseCanvas2d = canIUseCanvas2d;
exports.compareVersion = compareVersion;
exports.convertTouchesToArray = convertTouchesToArray;
exports.devicePixelRatio = void 0;
exports.getAppBaseInfo = getAppBaseInfo;
exports.getDeviceInfo = getDeviceInfo;
exports.getRect = getRect;
exports.getWindowInfo = getWindowInfo;
exports.sleep = sleep;
exports.wrapTouch = wrapTouch;
var _typeof2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/typeof */ 13));
// @ts-nocheck
/**
 * 获取设备基础信息
 *
 * @see [uni.getDeviceInfo](https://uniapp.dcloud.net.cn/api/system/getDeviceInfo.html)
 */
function getDeviceInfo() {
  if (uni.getDeviceInfo || uni.canIUse('getDeviceInfo')) {
    return uni.getDeviceInfo();
  } else {
    return uni.getSystemInfoSync();
  }
}

/**
 * 获取窗口信息
 *
 * @see [uni.getWindowInfo](https://uniapp.dcloud.net.cn/api/system/getWindowInfo.html)
 */
function getWindowInfo() {
  if (uni.getWindowInfo || uni.canIUse('getWindowInfo')) {
    return uni.getWindowInfo();
  } else {
    return uni.getSystemInfoSync();
  }
}

/**
 * 获取APP基础信息
 *
 * @see [uni.getAppBaseInfo](https://uniapp.dcloud.net.cn/api/system/getAppBaseInfo.html)
 */
function getAppBaseInfo() {
  if (uni.getAppBaseInfo || uni.canIUse('getAppBaseInfo')) {
    return uni.getAppBaseInfo();
  } else {
    return uni.getSystemInfoSync();
  }
}

// 计算版本
function compareVersion(v1, v2) {
  v1 = v1.split('.');
  v2 = v2.split('.');
  var len = Math.max(v1.length, v2.length);
  while (v1.length < len) {
    v1.push('0');
  }
  while (v2.length < len) {
    v2.push('0');
  }
  for (var i = 0; i < len; i++) {
    var num1 = parseInt(v1[i], 10);
    var num2 = parseInt(v2[i], 10);
    if (num1 > num2) {
      return 1;
    } else if (num1 < num2) {
      return -1;
    }
  }
  return 0;
}
// const systemInfo = uni.getSystemInfoSync();

function gte(version) {
  // 截止 2023-03-22 mac pc小程序不支持 canvas 2d
  // let {
  // 	SDKVersion,
  // 	platform
  // } = systemInfo;
  var _getDeviceInfo = getDeviceInfo(),
    platform = _getDeviceInfo.platform;
  var _getAppBaseInfo = getAppBaseInfo(),
    SDKVersion = _getAppBaseInfo.SDKVersion;
  return platform !== 'mac' && compareVersion(SDKVersion, version) >= 0;
  return compareVersion(SDKVersion, version) >= 0;
}
function canIUseCanvas2d() {
  return gte('2.9.0');
  return false;
}
function convertTouchesToArray(touches) {
  // 如果 touches 是一个数组，则直接返回它
  if (Array.isArray(touches)) {
    return touches;
  }
  // 如果touches是一个对象，则转换为数组
  if ((0, _typeof2.default)(touches) === 'object' && touches !== null) {
    return Object.values(touches);
  }
  // 对于其他类型，直接返回它
  return touches;
}
function wrapTouch(event) {
  event.touches = convertTouchesToArray(event.touches);
  for (var i = 0; i < event.touches.length; ++i) {
    var touch = event.touches[i];
    touch.offsetX = touch.x;
    touch.offsetY = touch.y;
  }
  return event;
}
// export const devicePixelRatio = uni.getSystemInfoSync().pixelRatio
var devicePixelRatio = getWindowInfo().pixelRatio;
exports.devicePixelRatio = devicePixelRatio;
function sleep(time) {
  return new Promise(function (resolve) {
    setTimeout(function () {
      resolve(true);
    }, time);
  });
}
function getRect(selector, context, node) {
  return new Promise(function (resolve, reject) {
    var dom = uni.createSelectorQuery().in(context).select(selector);
    var result = function result(rect) {
      if (rect) {
        resolve(rect);
      } else {
        reject();
      }
    };
    if (!node) {
      dom.boundingClientRect(result).exec();
    } else {
      dom.fields({
        node: true,
        size: true,
        rect: true
      }, result).exec();
    }
  });
}
;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 8:
/*!***************************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js ***!
  \***************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayLikeToArray = __webpack_require__(/*! ./arrayLikeToArray.js */ 9);
function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);
}
module.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ }),

/***/ 817:
/*!***************************************************************************************************************************!*\
  !*** /Users/zhulin/Documents/HBuilderProjects/AI/uni_modules/uni-transition/components/uni-transition/createAnimation.js ***!
  \***************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(uni) {

var _interopRequireDefault = __webpack_require__(/*! @babel/runtime/helpers/interopRequireDefault */ 4);
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createAnimation = createAnimation;
var _defineProperty2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/defineProperty */ 11));
var _classCallCheck2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/classCallCheck */ 23));
var _createClass2 = _interopRequireDefault(__webpack_require__(/*! @babel/runtime/helpers/createClass */ 24));
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
// const defaultOption = {
// 	duration: 300,
// 	timingFunction: 'linear',
// 	delay: 0,
// 	transformOrigin: '50% 50% 0'
// }
var MPAnimation = /*#__PURE__*/function () {
  function MPAnimation(options, _this) {
    (0, _classCallCheck2.default)(this, MPAnimation);
    this.options = options;
    // 在iOS10+QQ小程序平台下，传给原生的对象一定是个普通对象而不是Proxy对象，否则会报parameter should be Object instead of ProxyObject的错误
    this.animation = uni.createAnimation(_objectSpread({}, options));
    this.currentStepAnimates = {};
    this.next = 0;
    this.$ = _this;
  }
  (0, _createClass2.default)(MPAnimation, [{
    key: "_nvuePushAnimates",
    value: function _nvuePushAnimates(type, args) {
      var aniObj = this.currentStepAnimates[this.next];
      var styles = {};
      if (!aniObj) {
        styles = {
          styles: {},
          config: {}
        };
      } else {
        styles = aniObj;
      }
      if (animateTypes1.includes(type)) {
        if (!styles.styles.transform) {
          styles.styles.transform = '';
        }
        var unit = '';
        if (type === 'rotate') {
          unit = 'deg';
        }
        styles.styles.transform += "".concat(type, "(").concat(args + unit, ") ");
      } else {
        styles.styles[type] = "".concat(args);
      }
      this.currentStepAnimates[this.next] = styles;
    }
  }, {
    key: "_animateRun",
    value: function _animateRun() {
      var styles = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var ref = this.$.$refs['ani'].ref;
      if (!ref) return;
      return new Promise(function (resolve, reject) {
        nvueAnimation.transition(ref, _objectSpread({
          styles: styles
        }, config), function (res) {
          resolve();
        });
      });
    }
  }, {
    key: "_nvueNextAnimate",
    value: function _nvueNextAnimate(animates) {
      var _this2 = this;
      var step = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var fn = arguments.length > 2 ? arguments[2] : undefined;
      var obj = animates[step];
      if (obj) {
        var styles = obj.styles,
          config = obj.config;
        this._animateRun(styles, config).then(function () {
          step += 1;
          _this2._nvueNextAnimate(animates, step, fn);
        });
      } else {
        this.currentStepAnimates = {};
        typeof fn === 'function' && fn();
        this.isEnd = true;
      }
    }
  }, {
    key: "step",
    value: function step() {
      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      this.animation.step(config);
      return this;
    }
  }, {
    key: "run",
    value: function run(fn) {
      this.$.animationData = this.animation.export();
      this.$.timer = setTimeout(function () {
        typeof fn === 'function' && fn();
      }, this.$.durationTime);
    }
  }]);
  return MPAnimation;
}();
var animateTypes1 = ['matrix', 'matrix3d', 'rotate', 'rotate3d', 'rotateX', 'rotateY', 'rotateZ', 'scale', 'scale3d', 'scaleX', 'scaleY', 'scaleZ', 'skew', 'skewX', 'skewY', 'translate', 'translate3d', 'translateX', 'translateY', 'translateZ'];
var animateTypes2 = ['opacity', 'backgroundColor'];
var animateTypes3 = ['width', 'height', 'left', 'right', 'top', 'bottom'];
animateTypes1.concat(animateTypes2, animateTypes3).forEach(function (type) {
  MPAnimation.prototype[type] = function () {
    var _this$animation;
    (_this$animation = this.animation)[type].apply(_this$animation, arguments);
    return this;
  };
});
function createAnimation(option, _this) {
  if (!_this) return;
  clearTimeout(_this.timer);
  return new MPAnimation(option, _this);
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./node_modules/@dcloudio/uni-mp-weixin/dist/index.js */ 2)["default"]))

/***/ }),

/***/ 9:
/*!*****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayLikeToArray.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;
  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }
  return arr2;
}
module.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports["default"] = module.exports;

/***/ })

}]);
//# sourceMappingURL=../../.sourcemap/mp-weixin/common/vendor.js.map